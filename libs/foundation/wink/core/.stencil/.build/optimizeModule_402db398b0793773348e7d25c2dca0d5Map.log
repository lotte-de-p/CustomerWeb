{"version":3,"names":["BREAKPOINTS","SM","MD","LG","HEADER_BREAKPOINTS","BREAKPOINT_TYPES","DEFAULT","HEADER","MediaQueryDetector","mediaQueryMatch","size","minOrMax","breakpointType","breakpoints","pixels","window","matchMedia","matches","isFromSm","isFromMd","isFromLg","isUntilSm","isUntilMd","isUntilLg","isFromMdHeader","isUntilMdHeader"],"sources":["../core/src/assets/shared/scripts/media-query-detector.ts"],"sourcesContent":["export const BREAKPOINTS = {\n  SM: 576,\n  MD: 769,\n  LG: 1192,\n} as const;\ntype Breakpoint = keyof typeof BREAKPOINTS;\n\nexport const HEADER_BREAKPOINTS = {\n  MD: 1024,\n} as const;\ntype HeaderBreakpoint = keyof typeof HEADER_BREAKPOINTS;\n\nexport const BREAKPOINT_TYPES = {\n  DEFAULT: BREAKPOINTS,\n  HEADER: HEADER_BREAKPOINTS,\n} as const;\ntype BreakpointType = keyof typeof BREAKPOINT_TYPES;\n\nexport class MediaQueryDetector {\n  private static mediaQueryMatch(\n    size: Breakpoint | HeaderBreakpoint,\n    minOrMax: 'min' | 'max',\n    breakpointType: BreakpointType = 'DEFAULT'\n  ): boolean {\n    const breakpoints = BREAKPOINT_TYPES[breakpointType];\n    const pixels = minOrMax === 'min' ? breakpoints[size] : breakpoints[size] - 1;\n    return window.matchMedia(`(${minOrMax}-width: ${pixels}px)`).matches;\n  }\n\n  static get isFromSm(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('SM', 'min');\n  }\n\n  static get isFromMd(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'min');\n  }\n\n  static get isFromLg(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('LG', 'min');\n  }\n\n  static get isUntilSm(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('SM', 'max');\n  }\n\n  static get isUntilMd(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'max');\n  }\n\n  static get isUntilLg(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('LG', 'max');\n  }\n\n  static get isFromMdHeader(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'min', 'HEADER');\n  }\n\n  static get isUntilMdHeader(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'max', 'HEADER');\n  }\n}\n"],"mappings":"AAAO,MAAMA,EAAc,CACzBC,GAAI,IACJC,GAAI,IACJC,GAAI,MAIC,MAAMC,EAAqB,CAChCF,GAAI,MAIC,MAAMG,EAAmB,CAC9BC,QAASN,EACTO,OAAQH,G,MAIGI,EACH,sBAAOC,CACbC,EACAC,EACAC,EAAiC,WAEjC,MAAMC,EAAcR,EAAiBO,GACrC,MAAME,EAASH,IAAa,MAAQE,EAAYH,GAAQG,EAAYH,GAAQ,EAC5E,OAAOK,OAAOC,WAAW,IAAIL,YAAmBG,QAAaG,O,CAG/D,mBAAWC,GACT,OAAOV,EAAmBC,gBAAgB,KAAM,M,CAGlD,mBAAWU,GACT,OAAOX,EAAmBC,gBAAgB,KAAM,M,CAGlD,mBAAWW,GACT,OAAOZ,EAAmBC,gBAAgB,KAAM,M,CAGlD,oBAAWY,GACT,OAAOb,EAAmBC,gBAAgB,KAAM,M,CAGlD,oBAAWa,GACT,OAAOd,EAAmBC,gBAAgB,KAAM,M,CAGlD,oBAAWc,GACT,OAAOf,EAAmBC,gBAAgB,KAAM,M,CAGlD,yBAAWe,GACT,OAAOhB,EAAmBC,gBAAgB,KAAM,MAAO,S,CAGzD,0BAAWgB,GACT,OAAOjB,EAAmBC,gBAAgB,KAAM,MAAO,S"}