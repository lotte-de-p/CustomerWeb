{"version":3,"names":["toasterBaseCss","WinkToasterBaseStyle0","toasterTelenetCss","WinkToasterTelenetStyle0","Toaster","winkCreateToast","toast","this","toasts","render","h","Host","key","map","appearance","TOAST_TYPES","actionable","text","duration","href","target","linkText"],"sources":["../core/src/components/toaster/styles/brands/toaster.base.scss?tag=wink-toaster&mode=base","../core/src/components/toaster/styles/brands/toaster.telenet.scss?tag=wink-toaster&mode=telenet","../core/src/components/toaster/toaster.tsx"],"sourcesContent":["@import '../vars/vars.base';\n@import '../toaster.default';\n","@import '../vars/vars.telenet';\n@import '../toaster.default';\n","import { Component, h, Host, Method, State } from '@stencil/core';\nimport { ToastElement } from './models/toaster.types';\nimport { TOAST_TYPES } from './_sub-comps/toast/models/toast.types';\n\n@Component({\n  tag: 'wink-toaster',\n  styleUrls: {\n    telenet: 'styles/brands/toaster.telenet.scss',\n    base: 'styles/brands/toaster.base.scss',\n  },\n  shadow: false,\n})\nexport class Toaster {\n  @State() toasts: ToastElement[] = [];\n\n  @Method()\n  async winkCreateToast(toast: ToastElement) {\n    this.toasts = [...this.toasts, toast];\n  }\n\n  render() {\n    return (\n      <Host aria-live=\"polite\" aria-atomic=\"true\">\n        {this.toasts.map((toast) => (\n          <wink-toast\n            appearance={toast.appearance || TOAST_TYPES.actionable}\n            text={toast.text || ''}\n            duration={toast.duration || 6000}\n            href={toast.href || '#'}\n            target={toast.target || '_self'}\n            linkText={toast.linkText || 'link'}\n            is-open></wink-toast>\n        ))}\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":"sFAAA,MAAMA,EAAiB,6uBACvB,MAAAC,EAAeD,ECDf,MAAME,EAAoB,6uBAC1B,MAAAC,EAAeD,E,MCWFE,EAAO,M,qCACgB,E,CAGlC,qBAAMC,CAAgBC,GACpBC,KAAKC,OAAS,IAAID,KAAKC,OAAQF,E,CAGjC,MAAAG,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,uDAAW,SAAQ,cAAa,QAClCL,KAAKC,OAAOK,KAAKP,GAChBI,EAAA,cACEI,WAAYR,EAAMQ,YAAcC,EAAYC,WAC5CC,KAAMX,EAAMW,MAAQ,GACpBC,SAAUZ,EAAMY,UAAY,IAC5BC,KAAMb,EAAMa,MAAQ,IACpBC,OAAQd,EAAMc,QAAU,QACxBC,SAAUf,EAAMe,UAAY,OAAM,mBAGtCX,EAAA,QAAAE,IAAA,6C"}