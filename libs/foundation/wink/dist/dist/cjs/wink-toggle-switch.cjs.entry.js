'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-d9c52d86.js');
const utils = require('./utils-6a0947a7.js');

const TOGGLE_ALIGNMENT = {
    nextTo: 'nextToEachOther',
    spaceBetween: 'spaceBetween',
};

const toggleSwitchBaseCss = ".sr-only.sc-wink-toggle-switch-base{position:absolute;width:0.1rem;height:0.1rem;padding:0;margin:-0.1rem;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.sr-only.sc-wink-toggle-switch-base{position:absolute;width:0.1rem;height:0.1rem;padding:0;margin:-0.1rem;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.sc-wink-toggle-switch-base-h{display:flex;align-items:center}.toggle-switch--spacebetween.sc-wink-toggle-switch-base-h{justify-content:space-between}.sc-wink-toggle-switch-base-h .toggle-switch--label.sc-wink-toggle-switch-base{display:inline-block;font-size:1.6rem;line-height:2.4rem;margin:0 calc(var(--semantic-spacing-xs) * 1rem) 0 0;cursor:pointer;padding:0;height:100%;color:var(--semantic-color-text-default)}.sc-wink-toggle-switch-base-h .toggle-switch--wrapper.sc-wink-toggle-switch-base{position:relative}.sc-wink-toggle-switch-base-h input[type=checkbox].sc-wink-toggle-switch-base{height:0;width:0}.sc-wink-toggle-switch-base-h label.sc-wink-toggle-switch-base{cursor:pointer;text-indent:-999.9rem;width:5.2rem;height:3.2rem;background:var(--semantic-color-background-form-default-default);display:block;border-radius:2rem;position:relative;margin-top:-1.4rem}.sc-wink-toggle-switch-base-h label.sc-wink-toggle-switch-base:before{content:\"\";position:absolute;top:-0.4rem;left:-0.4rem;width:6rem;height:4rem;cursor:pointer}.sc-wink-toggle-switch-base-h label.sc-wink-toggle-switch-base:after{content:\"\";position:absolute;top:0.4rem;left:0.4rem;width:2.4rem;height:2.4rem;background:var(--semantic-color-background-surface-highlight-8);border-radius:9rem;transition:0.3s}.sc-wink-toggle-switch-base-h .toggle-switch--icon.sc-wink-toggle-switch-base:hover~label.sc-wink-toggle-switch-base,.sc-wink-toggle-switch-base-h label.sc-wink-toggle-switch-base:hover{background:var(--semantic-color-background-form-default-hovered)}.sc-wink-toggle-switch-base-h .toggle-switch--icon.sc-wink-toggle-switch-base:hover{cursor:pointer}.sc-wink-toggle-switch-base-h .toggle-switch--icon.sc-wink-toggle-switch-base:hover~label.sc-wink-toggle-switch-base:after,.sc-wink-toggle-switch-base-h label.sc-wink-toggle-switch-base:hover:after{box-shadow:0 0 0 0.8rem var(--semantic-color-background-surface-subtle-hovered)}.sc-wink-toggle-switch-base-h input[type=checkbox].sc-wink-toggle-switch-base:focus~label.sc-wink-toggle-switch-base{outline:0.2rem solid var(--semantic-color-border-focus);outline-offset:0.2rem}.sc-wink-toggle-switch-base-h input.sc-wink-toggle-switch-base:checked~label.sc-wink-toggle-switch-base{background:var(--semantic-color-background-form-selected-selected)}.sc-wink-toggle-switch-base-h input.sc-wink-toggle-switch-base:checked~.toggle-switch--icon.sc-wink-toggle-switch-base:hover~label.sc-wink-toggle-switch-base,.sc-wink-toggle-switch-base-h input.sc-wink-toggle-switch-base:checked~label.sc-wink-toggle-switch-base:hover{background:var(--semantic-color-background-surface-action-hover)}.sc-wink-toggle-switch-base-h input.sc-wink-toggle-switch-base:checked~.toggle-switch--icon.sc-wink-toggle-switch-base:hover~label.sc-wink-toggle-switch-base:after,.sc-wink-toggle-switch-base-h input.sc-wink-toggle-switch-base:checked~label.sc-wink-toggle-switch-base:after{left:calc(100% - 0.5rem);transform:translateX(-100%)}.sc-wink-toggle-switch-base-h .toggle-switch--icon.sc-wink-toggle-switch-base:active~label.sc-wink-toggle-switch-base:after,.sc-wink-toggle-switch-base-h label.sc-wink-toggle-switch-base:active:after{width:2.6rem}.sc-wink-toggle-switch-base-h .toggle-switch--icon.sc-wink-toggle-switch-base wink-icon.sc-wink-toggle-switch-base{--wink-icon-color:var(--semantic-color-icon-on-action);position:absolute;border-radius:100%;z-index:3;top:0.75rem;transition:0.2s all}.sc-wink-toggle-switch-base-h .toggle-switch--icon.sc-wink-toggle-switch-base wink-icon.sc-wink-toggle-switch-base:nth-child(1){left:0.75rem;opacity:1}.sc-wink-toggle-switch-base-h .toggle-switch--icon.sc-wink-toggle-switch-base wink-icon.sc-wink-toggle-switch-base:nth-child(2){left:0.75rem;opacity:0}.sc-wink-toggle-switch-base-h input.sc-wink-toggle-switch-base:checked~.toggle-switch--icon.sc-wink-toggle-switch-base wink-icon.sc-wink-toggle-switch-base{z-index:3;transition:0.2s all}.sc-wink-toggle-switch-base-h input.sc-wink-toggle-switch-base:checked~.toggle-switch--icon.sc-wink-toggle-switch-base wink-icon.sc-wink-toggle-switch-base:nth-child(1){opacity:0;left:2.7rem}.sc-wink-toggle-switch-base-h input.sc-wink-toggle-switch-base:checked~.toggle-switch--icon.sc-wink-toggle-switch-base wink-icon.sc-wink-toggle-switch-base:nth-child(2){opacity:1;left:2.7rem}.sc-wink-toggle-switch-base-h input[type=checkbox].sc-wink-toggle-switch-base:disabled,.sc-wink-toggle-switch-base-h input[type=checkbox].sc-wink-toggle-switch-base:disabled~*.sc-wink-toggle-switch-base,.sc-wink-toggle-switch-base-h input[type=checkbox].sc-wink-toggle-switch-base:disabled~label.sc-wink-toggle-switch-base:before,.sc-wink-toggle-switch-base-h .toggle-switch--label--disabled.sc-wink-toggle-switch-base{opacity:calc(var(--semantic-opacity-disabled) / 10);cursor:not-allowed}";
const WinkToggleSwitchBaseStyle0 = toggleSwitchBaseCss;

const toggleSwitchTelenetCss = ".sr-only.sc-wink-toggle-switch-telenet{position:absolute;width:0.1rem;height:0.1rem;padding:0;margin:-0.1rem;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.sr-only.sc-wink-toggle-switch-telenet{position:absolute;width:0.1rem;height:0.1rem;padding:0;margin:-0.1rem;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.sc-wink-toggle-switch-telenet-h{display:flex;align-items:center}.toggle-switch--spacebetween.sc-wink-toggle-switch-telenet-h{justify-content:space-between}.sc-wink-toggle-switch-telenet-h .toggle-switch--label.sc-wink-toggle-switch-telenet{display:inline-block;font-size:1.6rem;line-height:2.4rem;margin:0 calc(var(--semantic-spacing-xs) * 1rem) 0 0;cursor:pointer;padding:0;height:100%;color:var(--semantic-color-text-default)}.sc-wink-toggle-switch-telenet-h .toggle-switch--wrapper.sc-wink-toggle-switch-telenet{position:relative}.sc-wink-toggle-switch-telenet-h input[type=checkbox].sc-wink-toggle-switch-telenet{height:0;width:0}.sc-wink-toggle-switch-telenet-h label.sc-wink-toggle-switch-telenet{cursor:pointer;text-indent:-999.9rem;width:5.2rem;height:3.2rem;background:var(--semantic-color-background-form-default-default);display:block;border-radius:2rem;position:relative;margin-top:-1.4rem}.sc-wink-toggle-switch-telenet-h label.sc-wink-toggle-switch-telenet:before{content:\"\";position:absolute;top:-0.4rem;left:-0.4rem;width:6rem;height:4rem;cursor:pointer}.sc-wink-toggle-switch-telenet-h label.sc-wink-toggle-switch-telenet:after{content:\"\";position:absolute;top:0.4rem;left:0.4rem;width:2.4rem;height:2.4rem;background:var(--semantic-color-background-surface-highlight-8);border-radius:9rem;transition:0.3s}.sc-wink-toggle-switch-telenet-h .toggle-switch--icon.sc-wink-toggle-switch-telenet:hover~label.sc-wink-toggle-switch-telenet,.sc-wink-toggle-switch-telenet-h label.sc-wink-toggle-switch-telenet:hover{background:var(--semantic-color-background-form-default-hovered)}.sc-wink-toggle-switch-telenet-h .toggle-switch--icon.sc-wink-toggle-switch-telenet:hover{cursor:pointer}.sc-wink-toggle-switch-telenet-h .toggle-switch--icon.sc-wink-toggle-switch-telenet:hover~label.sc-wink-toggle-switch-telenet:after,.sc-wink-toggle-switch-telenet-h label.sc-wink-toggle-switch-telenet:hover:after{box-shadow:0 0 0 0.8rem var(--semantic-color-background-surface-subtle-hovered)}.sc-wink-toggle-switch-telenet-h input[type=checkbox].sc-wink-toggle-switch-telenet:focus~label.sc-wink-toggle-switch-telenet{outline:0.2rem solid var(--semantic-color-border-focus);outline-offset:0.2rem}.sc-wink-toggle-switch-telenet-h input.sc-wink-toggle-switch-telenet:checked~label.sc-wink-toggle-switch-telenet{background:var(--semantic-color-background-form-selected-selected)}.sc-wink-toggle-switch-telenet-h input.sc-wink-toggle-switch-telenet:checked~.toggle-switch--icon.sc-wink-toggle-switch-telenet:hover~label.sc-wink-toggle-switch-telenet,.sc-wink-toggle-switch-telenet-h input.sc-wink-toggle-switch-telenet:checked~label.sc-wink-toggle-switch-telenet:hover{background:var(--semantic-color-background-surface-action-hover)}.sc-wink-toggle-switch-telenet-h input.sc-wink-toggle-switch-telenet:checked~.toggle-switch--icon.sc-wink-toggle-switch-telenet:hover~label.sc-wink-toggle-switch-telenet:after,.sc-wink-toggle-switch-telenet-h input.sc-wink-toggle-switch-telenet:checked~label.sc-wink-toggle-switch-telenet:after{left:calc(100% - 0.5rem);transform:translateX(-100%)}.sc-wink-toggle-switch-telenet-h .toggle-switch--icon.sc-wink-toggle-switch-telenet:active~label.sc-wink-toggle-switch-telenet:after,.sc-wink-toggle-switch-telenet-h label.sc-wink-toggle-switch-telenet:active:after{width:2.6rem}.sc-wink-toggle-switch-telenet-h .toggle-switch--icon.sc-wink-toggle-switch-telenet wink-icon.sc-wink-toggle-switch-telenet{--wink-icon-color:var(--semantic-color-icon-on-action);position:absolute;border-radius:100%;z-index:3;top:0.75rem;transition:0.2s all}.sc-wink-toggle-switch-telenet-h .toggle-switch--icon.sc-wink-toggle-switch-telenet wink-icon.sc-wink-toggle-switch-telenet:nth-child(1){left:0.75rem;opacity:1}.sc-wink-toggle-switch-telenet-h .toggle-switch--icon.sc-wink-toggle-switch-telenet wink-icon.sc-wink-toggle-switch-telenet:nth-child(2){left:0.75rem;opacity:0}.sc-wink-toggle-switch-telenet-h input.sc-wink-toggle-switch-telenet:checked~.toggle-switch--icon.sc-wink-toggle-switch-telenet wink-icon.sc-wink-toggle-switch-telenet{z-index:3;transition:0.2s all}.sc-wink-toggle-switch-telenet-h input.sc-wink-toggle-switch-telenet:checked~.toggle-switch--icon.sc-wink-toggle-switch-telenet wink-icon.sc-wink-toggle-switch-telenet:nth-child(1){opacity:0;left:2.7rem}.sc-wink-toggle-switch-telenet-h input.sc-wink-toggle-switch-telenet:checked~.toggle-switch--icon.sc-wink-toggle-switch-telenet wink-icon.sc-wink-toggle-switch-telenet:nth-child(2){opacity:1;left:2.7rem}.sc-wink-toggle-switch-telenet-h input[type=checkbox].sc-wink-toggle-switch-telenet:disabled,.sc-wink-toggle-switch-telenet-h input[type=checkbox].sc-wink-toggle-switch-telenet:disabled~*.sc-wink-toggle-switch-telenet,.sc-wink-toggle-switch-telenet-h input[type=checkbox].sc-wink-toggle-switch-telenet:disabled~label.sc-wink-toggle-switch-telenet:before,.sc-wink-toggle-switch-telenet-h .toggle-switch--label--disabled.sc-wink-toggle-switch-telenet{opacity:calc(var(--semantic-opacity-disabled) / 10);cursor:not-allowed}";
const WinkToggleSwitchTelenetStyle0 = toggleSwitchTelenetCss;

const ToggleSwitch = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.label = '';
        this.toggleSwitchId = '';
        this.toggleSwitchName = '';
        this.alignment = TOGGLE_ALIGNMENT.nextTo;
        this.checked = false;
        this.disabled = false;
    }
    internals;
    get host() { return index.getElement(this); }
    labelOnClick = (_e) => {
        this.host?.querySelector('input')?.click();
    };
    handleKeyDown = (e) => {
        if (e.key === 'Enter') {
            this.host?.querySelector('input')?.click();
        }
    };
    componentDidRender() {
        this.toggleSwitchId = this.toggleSwitchId?.length > 0 ? this.toggleSwitchId : utils.UUId();
    }
    render() {
        return (index.h(index.Host, { key: '8eaea9a526d5fdf88d0092a41a0f2fc4b9eda781', class: `toggle-switch--${this.alignment.toLocaleLowerCase()}` }, index.h("p", { key: '084c14e951c16357ebc1f0fcb2fecce3165d04f4', class: `toggle-switch--label ${this.disabled ? 'toggle-switch--label--disabled' : ''}`, onClick: this.labelOnClick }, this.label), index.h("div", { key: 'd87e7f3b068bd4de018c6a3f0e1d71506b2e2ef1', class: "toggle-switch--wrapper" }, index.h("input", { key: '1dd4399c93b27989bb9026ef77aafeec24c7ab4f', type: "checkbox", id: this.toggleSwitchId, name: this.toggleSwitchName, onKeyDown: this.handleKeyDown, checked: this.checked, disabled: this.disabled }), index.h("div", { key: 'ff20ff19eadf7a72d54ed16e90134ac9a62b1470', class: "toggle-switch--icon", onClick: this.labelOnClick }, index.h("wink-icon", { key: '212f45f616c9ad346a34cedea77d5a5eaf231e03', icon: "cross-small", size: "sm" }), index.h("wink-icon", { key: '0d9658f2535b5a93fe3ddab1ec965a8e38be3247', icon: "tick-small", size: "sm" })), index.h("label", { key: '6ad1b044f672973f09102beba9055785490ee363', htmlFor: this.toggleSwitchId }))));
    }
};
ToggleSwitch.style = {
    base: WinkToggleSwitchBaseStyle0,
    telenet: WinkToggleSwitchTelenetStyle0
};

exports.wink_toggle_switch = ToggleSwitch;

//# sourceMappingURL=wink-toggle-switch.cjs.entry.js.map