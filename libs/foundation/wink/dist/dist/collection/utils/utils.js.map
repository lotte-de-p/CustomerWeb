{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../../../src/utils/utils.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,EAAE,IAAI,MAAM,EAAE,MAAM,MAAM,CAAC;AAEpC,MAAM,UAAU,OAAO,CAAC,KAAU;IAChC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACrC,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;SAAM,CAAC;QACN,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACnF,OAAO,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;AACH,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,KAAa;IAC3C,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC/C,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,GAAuB;IACpD,OAAO,GAAG,EAAE,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;AACnC,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;AAEnC,MAAM,UAAU,gBAAgB,CAC9B,QAA6B,EAC7B,QAAgB,EAChB,eAAyB,EAAE,EAC3B,aAAqB,EAAE;IAEvB,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACrD,GAAG,CAAC,GAAG,CAAC,GAAG;YACT,GAAG,QAAQ,CAAC,GAAG,CAAC;YAChB,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxD,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SAChE,CAAC;QACF,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAED,MAAM,UAAU,0BAA0B,CAAC,MAAmC;IAC5E,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;AACtC,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,YAAqC;IAClE,OAAO,YAAY,EAAE,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;AACvG,CAAC","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nexport function stArray(param: any) {\n  const isArray = Array.isArray(param);\n  if (isArray) {\n    return param;\n  } else {\n    const paramTostring = param.replace('{', '').replace('}', '').replace(\"', '\", ',');\n    return paramTostring.split(',');\n  }\n}\n\nexport function convertCssClass(param: string) {\n  return param.toLowerCase().replace(' ', '-');\n}\n\nexport function sanitizeString(str: string | undefined): string | undefined {\n  return str?.toLowerCase().trim();\n}\n\nexport const UUId = () => uuidv4();\n\nexport function getStoryArgTypes(\n  argTypes: Record<string, any>,\n  category: string,\n  disabledKeys: string[] = [],\n  basedOnArg: string = ''\n): Record<string, any> {\n  return Object.keys(argTypes || {}).reduce((acc, key) => {\n    acc[key] = {\n      ...argTypes[key],\n      table: { category, disable: disabledKeys.includes(key) },\n      ...(basedOnArg ? { if: { arg: basedOnArg, value: true } } : {}),\n    };\n    return acc;\n  }, {});\n}\n\nexport function getValuesAsArrayFromObject(object: { [key: string]: string[] }): string[] {\n  return Object.values(object).flat();\n}\n\nexport function resetIdsInTest(htmlFromTest: HTMLElement | undefined) {\n  return htmlFromTest?.outerHTML.replace(/id=\".*?\"/g, 'id=\"\"').replace(/htmlfor=\".*?\"/g, 'htmlfor=\"\"');\n}\n"]}