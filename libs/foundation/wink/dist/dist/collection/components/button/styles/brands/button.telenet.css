/*
* Layout mixins
*/
/* ==========================================================================
1. breakpoint
========================================================================== */
.sr-only {
  position: absolute;
  width: 0.1rem;
  height: 0.1rem;
  padding: 0;
  margin: -0.1rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/*
* Layout mixins
*/
/* ==========================================================================
1. breakpoint
========================================================================== */
.sr-only {
  position: absolute;
  width: 0.1rem;
  height: 0.1rem;
  padding: 0;
  margin: -0.1rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

:host {
  display: inline-block;
}
:host .button,
:host a.button,
:host button.button,
:host input.button {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
          user-select: none;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  text-decoration: none;
  text-align: center;
  white-space: nowrap;
  box-sizing: border-box;
  border: 0 solid transparent;
  --wink-icon-button-padding: var(--semantic-spacing-sm);
  --wink-icon-button-padding-sm: var(--semantic-spacing-xs);
}
:host .button:hover,
:host a.button:hover,
:host button.button:hover,
:host input.button:hover {
  cursor: pointer;
  text-decoration: none;
}
:host .button:focus,
:host a.button:focus,
:host button.button:focus,
:host input.button:focus {
  text-decoration: none;
}
:host .button wink-icon,
:host .button ::part(icon),
:host a.button wink-icon,
:host a.button ::part(icon),
:host button.button wink-icon,
:host button.button ::part(icon),
:host input.button wink-icon,
:host input.button ::part(icon) {
  font-weight: normal;
  line-height: unset;
  padding: 0;
}
:host .button.primary,
:host a.button.primary,
:host button.button.primary,
:host input.button.primary {
  color: var(--semantic-color-text-on-action);
  background-color: var(--semantic-color-background-surface-action-default);
  padding: calc(var(--semantic-spacing-sm) * 1rem) calc(var(--semantic-spacing-lg) * 1rem);
  border-radius: calc(var(--semantic-radius-sm) * 1rem);
}
:host .button.primary ::part(icon),
:host a.button.primary ::part(icon),
:host button.button.primary ::part(icon),
:host input.button.primary ::part(icon) {
  color: var(--semantic-color-icon-on-brand);
}
:host .button.primary:hover,
:host a.button.primary:hover,
:host button.button.primary:hover,
:host input.button.primary:hover {
  color: var(--semantic-color-text-on-action);
  background-color: var(--semantic-color-background-surface-action-hover);
}
:host .button.primary:active,
:host a.button.primary:active,
:host button.button.primary:active,
:host input.button.primary:active {
  color: var(--semantic-color-text-on-action);
  background-color: var(--semantic-color-background-surface-action-active);
}
:host .button.primary:focus, :host .button.primary:focus-visible,
:host a.button.primary:focus,
:host a.button.primary:focus-visible,
:host button.button.primary:focus,
:host button.button.primary:focus-visible,
:host input.button.primary:focus,
:host input.button.primary:focus-visible {
  outline-offset: 0.1rem;
  outline: 0.2rem solid var(--semantic-color-border-focus);
  border-radius: 0.1rem;
}
:host .button.secondary,
:host a.button.secondary,
:host button.button.secondary,
:host input.button.secondary {
  color: var(--semantic-color-text-default);
  background-color: transparent;
  padding: calc(var(--semantic-spacing-sm) * 1rem) calc(var(--semantic-spacing-lg) * 1rem);
  border-radius: calc(var(--semantic-radius-sm) * 1rem);
  box-shadow: inset 0 0 0 0.2rem var(--semantic-color-border-button-default);
}
:host .button.secondary ::part(icon) i,
:host a.button.secondary ::part(icon) i,
:host button.button.secondary ::part(icon) i,
:host input.button.secondary ::part(icon) i {
  color: var(--semantic-color-icon-default);
}
:host .button.secondary:hover,
:host a.button.secondary:hover,
:host button.button.secondary:hover,
:host input.button.secondary:hover {
  color: var(--semantic-color-text-default);
  background-color: transparent;
  box-shadow: inset 0 0 0 0.3rem var(--semantic-color-border-highlight);
}
:host .button.secondary:active,
:host a.button.secondary:active,
:host button.button.secondary:active,
:host input.button.secondary:active {
  color: var(--semantic-color-text-default);
  background-color: transparent;
  box-shadow: inset 0 0 0 0.1rem var(--semantic-color-border-highlight);
}
:host .button.secondary:focus, :host .button.secondary:focus-visible,
:host a.button.secondary:focus,
:host a.button.secondary:focus-visible,
:host button.button.secondary:focus,
:host button.button.secondary:focus-visible,
:host input.button.secondary:focus,
:host input.button.secondary:focus-visible {
  outline-offset: 0.1rem;
  outline: 0.2rem solid var(--semantic-color-border-focus);
  border-radius: 0.1rem;
}
@media only screen and (min-width: 74.5em) {
  :host .button,
  :host a.button,
  :host button.button,
  :host input.button {
    --wink-icon-button-padding: 1.4;
    --wink-icon-button-padding-sm: 1;
  }
}
:host .button.tertiary,
:host a.button.tertiary,
:host button.button.tertiary,
:host input.button.tertiary {
  position: relative;
  left: 0;
  color: var(--semantic-color-text-default);
  background-color: transparent;
  padding: 0 0 calc(var(--semantic-spacing-3xs) * 1rem);
  border-radius: calc(var(--semantic-radius-sm) * 1rem);
}
:host .button.tertiary ::part(icon) i,
:host a.button.tertiary ::part(icon) i,
:host button.button.tertiary ::part(icon) i,
:host input.button.tertiary ::part(icon) i {
  color: var(--semantic-color-icon-default);
}
:host .button.tertiary::before, :host .button.tertiary::after,
:host a.button.tertiary::before,
:host a.button.tertiary::after,
:host button.button.tertiary::before,
:host button.button.tertiary::after,
:host input.button.tertiary::before,
:host input.button.tertiary::after {
  content: " ";
  display: inline-block;
  height: 0.2rem;
  position: absolute;
  left: 0;
  bottom: 0;
}
:host .button.tertiary::before,
:host a.button.tertiary::before,
:host button.button.tertiary::before,
:host input.button.tertiary::before {
  background-color: var(--semantic-color-border-button-underline);
  width: 100%;
}
:host .button.tertiary::after,
:host a.button.tertiary::after,
:host button.button.tertiary::after,
:host input.button.tertiary::after {
  background-color: var(--semantic-color-border-highlight);
  width: 0%;
  transition: all 500ms cubic-bezier(0.23, 1, 0.32, 1);
}
:host .button.tertiary.icon-left::before, :host .button.tertiary.icon-left::after,
:host a.button.tertiary.icon-left::before,
:host a.button.tertiary.icon-left::after,
:host button.button.tertiary.icon-left::before,
:host button.button.tertiary.icon-left::after,
:host input.button.tertiary.icon-left::before,
:host input.button.tertiary.icon-left::after {
  left: 3.2rem;
}
:host .button.tertiary.icon-right::before, :host .button.tertiary.icon-left::before,
:host a.button.tertiary.icon-right::before,
:host a.button.tertiary.icon-left::before,
:host button.button.tertiary.icon-right::before,
:host button.button.tertiary.icon-left::before,
:host input.button.tertiary.icon-right::before,
:host input.button.tertiary.icon-left::before {
  width: calc(100% - 3.2rem);
}
:host .button.tertiary:hover::after,
:host a.button.tertiary:hover::after,
:host button.button.tertiary:hover::after,
:host input.button.tertiary:hover::after {
  width: 100%;
}
:host .button.tertiary:hover.icon-right::after, :host .button.tertiary:hover.icon-left::after,
:host a.button.tertiary:hover.icon-right::after,
:host a.button.tertiary:hover.icon-left::after,
:host button.button.tertiary:hover.icon-right::after,
:host button.button.tertiary:hover.icon-left::after,
:host input.button.tertiary:hover.icon-right::after,
:host input.button.tertiary:hover.icon-left::after {
  width: calc(100% - 3.2rem);
}
:host .button.tertiary:active,
:host a.button.tertiary:active,
:host button.button.tertiary:active,
:host input.button.tertiary:active {
  color: var(--semantic-color-text-subtlest);
}
:host .button.tertiary:active::after,
:host a.button.tertiary:active::after,
:host button.button.tertiary:active::after,
:host input.button.tertiary:active::after {
  background-color: var(--semantic-color-text-subtlest);
}
:host .button.tertiary:active ::part(icon),
:host a.button.tertiary:active ::part(icon),
:host button.button.tertiary:active ::part(icon),
:host input.button.tertiary:active ::part(icon) {
  color: var(--semantic-color-text-subtlest);
}
:host .button.tertiary:focus, :host .button.tertiary:focus-visible,
:host a.button.tertiary:focus,
:host a.button.tertiary:focus-visible,
:host button.button.tertiary:focus,
:host button.button.tertiary:focus-visible,
:host input.button.tertiary:focus,
:host input.button.tertiary:focus-visible {
  outline-offset: 0.1rem;
  outline: 0.2rem solid var(--semantic-color-border-focus);
  border-radius: 0.1rem;
}
:host .button.icon-button,
:host a.button.icon-button,
:host button.button.icon-button,
:host input.button.icon-button {
  padding: calc(var(--wink-icon-button-padding) * 1rem);
}
:host .button.icon-button.tertiary::before, :host .button.icon-button.tertiary:hover::after,
:host a.button.icon-button.tertiary::before,
:host a.button.icon-button.tertiary:hover::after,
:host button.button.icon-button.tertiary::before,
:host button.button.icon-button.tertiary:hover::after,
:host input.button.icon-button.tertiary::before,
:host input.button.icon-button.tertiary:hover::after {
  width: 0;
}
:host .button.icon-button.tertiary:hover ::part(icon)::before,
:host a.button.icon-button.tertiary:hover ::part(icon)::before,
:host button.button.icon-button.tertiary:hover ::part(icon)::before,
:host input.button.icon-button.tertiary:hover ::part(icon)::before {
  position: relative;
  top: -0.1rem;
}
:host .button.size-sm.primary,
:host a.button.size-sm.primary,
:host button.button.size-sm.primary,
:host input.button.size-sm.primary {
  padding: calc(var(--semantic-spacing-2xs) * 1rem) calc(var(--semantic-spacing-sm) * 1rem);
}
:host .button.size-sm.secondary,
:host a.button.size-sm.secondary,
:host button.button.size-sm.secondary,
:host input.button.size-sm.secondary {
  padding: calc(var(--semantic-spacing-2xs) * 1rem) calc(var(--semantic-spacing-sm) * 1rem);
}
:host .button.size-sm.tertiary.icon-left::before, :host .button.size-sm.tertiary.icon-left::after,
:host a.button.size-sm.tertiary.icon-left::before,
:host a.button.size-sm.tertiary.icon-left::after,
:host button.button.size-sm.tertiary.icon-left::before,
:host button.button.size-sm.tertiary.icon-left::after,
:host input.button.size-sm.tertiary.icon-left::before,
:host input.button.size-sm.tertiary.icon-left::after {
  left: 2.8rem;
}
:host .button.size-sm.tertiary.icon-right::before, :host .button.size-sm.tertiary.icon-left::before,
:host a.button.size-sm.tertiary.icon-right::before,
:host a.button.size-sm.tertiary.icon-left::before,
:host button.button.size-sm.tertiary.icon-right::before,
:host button.button.size-sm.tertiary.icon-left::before,
:host input.button.size-sm.tertiary.icon-right::before,
:host input.button.size-sm.tertiary.icon-left::before {
  width: calc(100% - 2.8rem);
}
:host .button.size-sm.tertiary.icon-button::before,
:host a.button.size-sm.tertiary.icon-button::before,
:host button.button.size-sm.tertiary.icon-button::before,
:host input.button.size-sm.tertiary.icon-button::before {
  width: 0;
}
:host .button.size-sm.tertiary:hover.icon-right.size-sm::after, :host .button.size-sm.tertiary:hover.icon-left.size-sm::after,
:host a.button.size-sm.tertiary:hover.icon-right.size-sm::after,
:host a.button.size-sm.tertiary:hover.icon-left.size-sm::after,
:host button.button.size-sm.tertiary:hover.icon-right.size-sm::after,
:host button.button.size-sm.tertiary:hover.icon-left.size-sm::after,
:host input.button.size-sm.tertiary:hover.icon-right.size-sm::after,
:host input.button.size-sm.tertiary:hover.icon-left.size-sm::after {
  width: calc(100% - 2.8rem);
}
:host .button.size-sm.tertiary:hover.icon-button.size-sm::after,
:host a.button.size-sm.tertiary:hover.icon-button.size-sm::after,
:host button.button.size-sm.tertiary:hover.icon-button.size-sm::after,
:host input.button.size-sm.tertiary:hover.icon-button.size-sm::after {
  width: 0;
}
:host .button.size-sm.icon-button,
:host a.button.size-sm.icon-button,
:host button.button.size-sm.icon-button,
:host input.button.size-sm.icon-button {
  padding: calc(var(--wink-icon-button-padding-sm) * 1rem);
}
:host .button.size-sm.icon-button ::part(icon)::before,
:host a.button.size-sm.icon-button ::part(icon)::before,
:host button.button.size-sm.icon-button ::part(icon)::before,
:host input.button.size-sm.icon-button ::part(icon)::before {
  position: relative;
  top: -0.2rem;
}
:host .button.size-sm.icon-button.tertiary:hover ::part(icon)::before,
:host a.button.size-sm.icon-button.tertiary:hover ::part(icon)::before,
:host button.button.size-sm.icon-button.tertiary:hover ::part(icon)::before,
:host input.button.size-sm.icon-button.tertiary:hover ::part(icon)::before {
  top: -0.5rem;
}
:host .button.state-disable, :host .button:disabled,
:host a.button.state-disable,
:host a.button:disabled,
:host button.button.state-disable,
:host button.button:disabled,
:host input.button.state-disable,
:host input.button:disabled {
  opacity: 0.4;
  pointer-events: none;
}
:host .button.state-loading,
:host a.button.state-loading,
:host button.button.state-loading,
:host input.button.state-loading {
  display: flex;
  align-items: center;
  gap: calc(var(--semantic-spacing-xs) * 1rem);
  pointer-events: none;
  opacity: 0.4;
}
:host .button.state-loading .animation,
:host a.button.state-loading .animation,
:host button.button.state-loading .animation,
:host input.button.state-loading .animation {
  height: calc(var(--semantic-icon-md) * 1rem);
  width: calc(var(--semantic-icon-md) * 1rem);
}
:host .button.state-loading.size-sm .animation,
:host a.button.state-loading.size-sm .animation,
:host button.button.state-loading.size-sm .animation,
:host input.button.state-loading.size-sm .animation {
  height: calc(var(--semantic-icon-sm) * 1rem);
  width: calc(var(--semantic-icon-sm) * 1rem);
}
:host .button.state-loading.tertiary::before, :host .button.state-loading.tertiary::after,
:host a.button.state-loading.tertiary::before,
:host a.button.state-loading.tertiary::after,
:host button.button.state-loading.tertiary::before,
:host button.button.state-loading.tertiary::after,
:host input.button.state-loading.tertiary::before,
:host input.button.state-loading.tertiary::after {
  content: unset;
}
:host .button.icon-left, :host .button.icon-right,
:host a.button.icon-left,
:host a.button.icon-right,
:host button.button.icon-left,
:host button.button.icon-right,
:host input.button.icon-left,
:host input.button.icon-right {
  display: flex;
  align-items: center;
  gap: calc(var(--semantic-spacing-xs) * 1rem);
}
:host .button.icon-left wink-icon, :host .button.icon-right wink-icon,
:host a.button.icon-left wink-icon,
:host a.button.icon-right wink-icon,
:host button.button.icon-left wink-icon,
:host button.button.icon-right wink-icon,
:host input.button.icon-left wink-icon,
:host input.button.icon-right wink-icon {
  align-self: start;
}
:host .button.icon-right,
:host a.button.icon-right,
:host button.button.icon-right,
:host input.button.icon-right {
  flex-direction: row-reverse;
}

:host([status=loading]) {
  cursor: not-allowed;
}

:host([status=disable]) {
  cursor: not-allowed;
}

:host([width=full]) {
  display: block;
  width: 100%;
}
:host([width=full]) .button {
  width: 100%;
}

:host .button,
:host a.button,
:host button.button,
:host input.button {
  font-family: TelenetAlbra-Regular, Helvetica, Verdana, Arial, sans-serif;
  font-size: 1.6rem;
  line-height: 2.4rem;
  font-weight: 400;
}
@media only screen and (min-width: 48.0625em) {
  :host .button,
  :host a.button,
  :host button.button,
  :host input.button {
    font-size: 1.6rem;
    line-height: 2.4rem;
  }
}
@media only screen and (min-width: 74.5em) {
  :host .button,
  :host a.button,
  :host button.button,
  :host input.button {
    font-size: 1.8rem;
    line-height: 2.8rem;
  }
}
:host .button.primary,
:host a.button.primary,
:host button.button.primary,
:host input.button.primary {
  font-weight: 700;
  font-family: TelenetAlbra-Bold, "Helvetica Neue", Helvetica, Arial, sans-serif;
}
:host .button.secondary,
:host a.button.secondary,
:host button.button.secondary,
:host input.button.secondary {
  font-weight: 600;
  font-family: TelenetAlbra-Semi, "Helvetica Neue", Helvetica, Arial, sans-serif;
}
:host .button.tertiary,
:host a.button.tertiary,
:host button.button.tertiary,
:host input.button.tertiary {
  font-weight: 500;
}
:host .button.size-sm,
:host a.button.size-sm,
:host button.button.size-sm,
:host input.button.size-sm {
  font-size: var(--wink-button--sm-fs, 1.4rem);
  line-height: var(--wink-button--sm-lh, 2rem);
}
@media only screen and (min-width: 74.5em) {
  :host .button.size-sm,
  :host a.button.size-sm,
  :host button.button.size-sm,
  :host input.button.size-sm {
    --wink-button--sm-fs: 1.6rem;
    --wink-button--sm-lh: 2.4rem;
  }
}
:host .button.size-sm.primary,
:host a.button.size-sm.primary,
:host button.button.size-sm.primary,
:host input.button.size-sm.primary {
  font-weight: 700;
  font-family: TelenetAlbra-Bold, "Helvetica Neue", Helvetica, Arial, sans-serif;
}
:host .button.size-sm.secondary,
:host a.button.size-sm.secondary,
:host button.button.size-sm.secondary,
:host input.button.size-sm.secondary {
  font-weight: 600;
  font-family: TelenetAlbra-Semi, "Helvetica Neue", Helvetica, Arial, sans-serif;
}
:host .button.size-sm.tertiary,
:host a.button.size-sm.tertiary,
:host button.button.size-sm.tertiary,
:host input.button.size-sm.tertiary {
  font-weight: 500;
}