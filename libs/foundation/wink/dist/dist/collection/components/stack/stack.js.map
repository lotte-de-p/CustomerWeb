{"version":3,"file":"stack.js","sourceRoot":"","sources":["../../../../../../../../src/components/stack/stack.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAY,WAAW,EAAQ,MAAM,sBAAsB,CAAC;AAUnE,MAAM,OAAO,KAAK;;mBACI,EAAE,OAAO,EAAE,EAAE,EAAE;mBACf,EAAE,OAAO,EAAE,WAAW,CAAC,EAAE,EAAE;;;;;;IAM9B,eAAe,GAAG,GAAa,EAAE;QAChD,OAAO;YACL,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC;YACzC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC;YACzC,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,WAAW,CAAC;YAC1D,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;YAChE,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,YAAY,CAAC;YACxD,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,CAAC;SACjD,CAAC;IACJ,CAAC,CAAC;IAEM,mBAAmB,CAAC,OAAe,EAAE,IAAqB;QAChE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAChB,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,OAAO;YACL,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;YACzE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC;YAClE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC;SACnE,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE;YACjC,8DAAQ,CACH,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Host, Prop } from '@stencil/core';\nimport { CssClass, STACK_SIZES, Size } from './models/stack.types';\n\n@Component({\n  tag: 'wink-stack',\n  styleUrls: {\n    telenet: 'styles/brands/stack.telenet.scss',\n    base: 'styles/brands/stack.base.scss',\n  },\n  shadow: true,\n})\nexport class Stack {\n  @Prop() col: Size = { default: 12 };\n  @Prop() gap: Size = { default: STACK_SIZES.xs };\n  @Prop() direction?: Size;\n  @Prop() justifyContent?: Size;\n  @Prop() alignItems?: Size;\n  @Prop() wrap?: Size;\n\n  private readonly getStackClasses = (): CssClass => {\n    return {\n      ...this.getClassesByPostfix('col', 'col'),\n      ...this.getClassesByPostfix('gap', 'gap'),\n      ...this.getClassesByPostfix('flex-direction', 'direction'),\n      ...this.getClassesByPostfix('justify-content', 'justifyContent'),\n      ...this.getClassesByPostfix('align-items', 'alignItems'),\n      ...this.getClassesByPostfix('flex-wrap', 'wrap'),\n    };\n  };\n\n  private getClassesByPostfix(postFix: string, prop: string | number): CssClass {\n    if (!this[prop]) {\n      return {};\n    }\n    return {\n      ...(this[prop].default && { [`${postFix}-${this[prop].default}`]: true }),\n      ...(this[prop].sm && { [`${postFix}-${this[prop].sm}-sm`]: true }),\n      ...(this[prop].md && { [`${postFix}-${this[prop].md}-md`]: true }),\n    };\n  }\n\n  render() {\n    return (\n      <Host class={this.getStackClasses()}>\n        <slot />\n      </Host>\n    );\n  }\n}\n"]}