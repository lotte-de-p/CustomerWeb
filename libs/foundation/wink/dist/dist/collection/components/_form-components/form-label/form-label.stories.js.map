{"version":3,"file":"form-label.stories.js","sourceRoot":"","sources":["../../../../../../../../../src/components/_form-components/form-label/form-label.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AAEjE,eAAe;IACb,KAAK,EAAE,4BAA4B;IACnC,SAAS,EAAE,WAAW;IACtB,UAAU,EAAE;QACV,MAAM,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;KAC5B;IACD,IAAI,EAAE,CAAC,QAAQ,CAAC;IAChB,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC;YAC5C,WAAW,EAAE,gFAAgF;SAC9F;QACD,KAAK,EAAE;YACL,OAAO,EAAE,MAAM;YACf,WAAW,EACT,8HAA8H;SACjI;QACD,MAAM,EAAE;YACN,OAAO,EAAE,MAAM;YACf,WAAW,EACT,sLAAsL;SACzL;QACD,YAAY,EAAE;YACZ,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,2DAA2D;SACzE;QACD,YAAY,EAAE;YACZ,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,yFAAyF;YACtG,EAAE,EAAE,EAAE,GAAG,EAAE,cAAc,EAAE,EAAE,EAAE,IAAI,EAAE;SACtC;KACF;IAED,IAAI,EAAE;QACJ,SAAS,EAAE,oBAAoB,CAAC,YAAY;QAC5C,KAAK,EAAE,kBAAkB;QACzB,MAAM,EAAE,wBAAwB;QAChC,YAAY,EAAE,KAAK;QACnB,YAAY,EAAE,WAAW;KAC1B;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CACf,IAAI,CAAA;eACO,IAAI,CAAC,KAAK,IAAI,OAAO;gBACpB,IAAI,CAAC,MAAM,IAAI,OAAO;mBACnB,IAAI,CAAC,SAAS;wBACT,IAAI,CAAC,YAAY;sBACnB,IAAI,CAAC,YAAY;uBAChB;CACd,CAAC;AAEV,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC","sourcesContent":["import { Meta } from '@storybook/web-components';\nimport { html, nothing } from 'lit-html';\nimport { BADGES } from '../../../models';\nimport { FORM_LABEL_RENDITION } from './models/form-label.types';\n\nexport default {\n  title: 'FORM COMPONENTS/Form label',\n  component: 'FormLabel',\n  parameters: {\n    badges: [BADGES.inProgress],\n  },\n  tags: ['hidden'],\n  argTypes: {\n    rendition: {\n      control: 'inline-radio',\n      options: Object.values(FORM_LABEL_RENDITION),\n      description: 'The rendition property determines the visual representation of the form-label.',\n    },\n    label: {\n      control: 'text',\n      description:\n        'The label property specifies the label text displayed alongside a component, providing context or instructions for the user.',\n    },\n    helper: {\n      control: 'text',\n      description:\n        'The helper property provides additional assistance or information related to a component. The helper text displayed below the label, offering guidance or clarification to the user.',\n    },\n    showOptional: {\n      control: 'boolean',\n      description: 'Whether to show the optional label if its desired or not.',\n    },\n    optionalText: {\n      control: 'text',\n      description: 'Here you can change the text of the optional label. This will be used for translations.',\n      if: { arg: 'showOptional', eq: true },\n    },\n  },\n\n  args: {\n    rendition: FORM_LABEL_RENDITION.subComponent,\n    label: 'Dit is een label',\n    helper: 'Dit is een helper text',\n    showOptional: false,\n    optionalText: 'Optioneel',\n  },\n  render: (args) =>\n    html` <wink-form-label\n      label=\"${args.label || nothing}\"\n      helper=\"${args.helper || nothing}\"\n      rendition=\"${args.rendition}\"\n      ?show-optional=\"${args.showOptional}\"\n      optional-text=${args.optionalText}>\n    </wink-form-label>`,\n} as Meta;\n\nexport const Default = {};\n"]}