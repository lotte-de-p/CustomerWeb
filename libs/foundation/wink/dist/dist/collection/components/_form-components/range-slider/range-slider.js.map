{"version":3,"file":"range-slider.js","sourceRoot":"","sources":["../../../../../../../../../src/components/_form-components/range-slider/range-slider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AttachInternals, Component, h, Method, Prop, State } from '@stencil/core';\nimport { SliderType, SLIDER_TYPES, SliderDirections, SLIDER_DIRECTIONS } from './models/range-slider.types';\n\n@Component({\n  tag: 'wink-range-slider',\n  styleUrls: {\n    telenet: 'styles/brands/range-slider.telenet.scss',\n    base: 'styles/brands/range-slider.base.scss',\n  },\n  scoped: true,\n})\nexport class RangeSlider {\n  @AttachInternals() internals!: ElementInternals;\n\n  @Prop() sliderId = '';\n  @Prop() label = '';\n  @Prop() helper = '';\n  @Prop() minValue = 0;\n  @Prop() maxValue = 100;\n  @Prop() step = 1;\n  @Prop() showValues = false;\n  @Prop() showInput = false;\n  @Prop() errorMessage = '';\n  @Prop() sliderType: SliderType = SLIDER_TYPES.range;\n  @Prop({ mutable: true, reflect: true }) bottomValue = 0;\n  @Prop({ mutable: true, reflect: true }) value = 100;\n\n  @State() topValueError?: string;\n  @State() bottomValueError?: string;\n\n  @Method()\n  async showFromValue() {\n    return this.bottomValue;\n  }\n\n  @Method()\n  async showToValue() {\n    return this.value;\n  }\n\n  @Method()\n  async getDragValue() {\n    return this.value;\n  }\n\n  componentWillRender() {\n    this.checkForErrors();\n  }\n\n  private handleValueChanged(event: CustomEvent<string>, slider: SliderDirections) {\n    const value = parseFloat(event.detail);\n    this.updateValue(value, slider);\n  }\n\n  private handleValueSlider(event: Event, slider: SliderDirections) {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement) {\n      const value = parseFloat(inputElement.value);\n      this.updateValue(value, slider);\n    }\n  }\n\n  private updateValue(value: number, slider: SliderDirections) {\n    if (slider === SLIDER_DIRECTIONS.from) {\n      this.bottomValue = value;\n    }\n\n    if (slider === SLIDER_DIRECTIONS.to) {\n      this.value = value;\n    }\n\n    if (value < this.minValue) {\n      slider === SLIDER_DIRECTIONS.from ? (this.bottomValue = this.minValue) : (this.value = this.minValue);\n    }\n\n    if (value > this.maxValue) {\n      this.value = this.maxValue;\n    }\n\n    if (this.bottomValue > this.value) {\n      this.invertValues();\n    }\n  }\n\n  private invertValues() {\n    const tempValue = this.bottomValue;\n    this.bottomValue = this.value;\n    this.value = tempValue;\n  }\n\n  private calculateTooltipPosition(value: number) {\n    const newValue = Number(((value - this.minValue) * 100) / (this.maxValue - this.minValue));\n    const newPosition = 10 - newValue * 0.2;\n\n    if (newValue < 0) {\n      return '3%';\n    }\n\n    if (newValue > 100) {\n      return '97%';\n    }\n\n    return `calc(${newValue}% + (${newPosition}px))`;\n  }\n\n  private calculateBackground() {\n    const lowTopValue = this.minValue || 0;\n    const highTopValue = this.maxValue || 100;\n    const lowValue = this.bottomValue || lowTopValue;\n    const highValue = this.value || highTopValue;\n\n    const sliderLength = highTopValue - lowTopValue;\n    const toPercentage = Math.round((((highValue - lowTopValue) / sliderLength) * 100) / this.step) * this.step;\n\n    if (this.sliderType === SLIDER_TYPES.single) {\n      return `linear-gradient(to right, var(--semantic-color-background-surface-action-default) ${toPercentage}%, var(--semantic-color-background-surface-bold-hovered) ${toPercentage}%)`;\n    }\n\n    const fromPercentage = Math.round((((lowValue - lowTopValue) / sliderLength) * 100) / this.step) * this.step;\n    return `linear-gradient(to right, var(--semantic-color-background-surface-bold-hovered) ${fromPercentage}% , var(--semantic-color-background-surface-action-default) ${fromPercentage}% , var(--semantic-color-background-surface-action-default) ${toPercentage}%, var(--semantic-color-background-surface-bold-hovered) ${toPercentage}%)`;\n  }\n\n  private renderSpecific() {\n    const fromValueProps = this.bottomValueError ? { error: this.bottomValueError } : {};\n    const toValueProps =\n      this.topValueError && this.sliderType === SLIDER_TYPES.range ? { error: this.topValueError } : {};\n\n    return (\n      <div class=\"slider-specific\">\n        {this.sliderType === SLIDER_TYPES.range && (\n          <wink-input\n            class=\"slider-specific-from\"\n            type=\"number\"\n            inputId={this.sliderId + 'from-value'}\n            name=\"fromValue\"\n            label=\"From\"\n            value={this.bottomValue.toString()}\n            min-value={this.minValue}\n            max-value={this.maxValue}\n            step={this.step}\n            isRequired\n            {...fromValueProps}\n            onValueChanged={(event) => this.handleValueChanged(event, SLIDER_DIRECTIONS.from)}></wink-input>\n        )}\n        <wink-input\n          class=\"slider-specific-to\"\n          type=\"number\"\n          inputId={this.sliderId + 'to-value'}\n          name=\"toValue\"\n          label={this.sliderType === SLIDER_TYPES.range ? 'To' : ''}\n          value={this.value.toString()}\n          min-value={this.minValue}\n          max-value={this.maxValue}\n          step={this.step}\n          isRequired\n          {...toValueProps}\n          onValueChanged={(event) => this.handleValueChanged(event, SLIDER_DIRECTIONS.to)}></wink-input>\n      </div>\n    );\n  }\n\n  private checkForErrors() {\n    if ((!this.bottomValue && this.bottomValue !== 0) || this.bottomValue % this.step !== 0) {\n      this.bottomValueError = this.errorMessage;\n    } else {\n      this.bottomValueError = undefined;\n    }\n    if ((!this.value && this.value !== 0) || this.value % this.step !== 0) {\n      this.topValueError = this.errorMessage;\n    } else {\n      this.topValueError = undefined;\n    }\n  }\n\n  render() {\n    return (\n      <label class={`slider-container slider-container-${this.sliderType}`}>\n        <wink-form-label label={this.label} helper={this.helper}></wink-form-label>\n        <div class=\"slider-wrapper\">\n          {this.showValues && <span>{this.minValue}</span>}\n          <div class=\"slider-controls\">\n            <div class={`slider-tooltip-wrapper ${!this.showInput ? 'slider-tooltip-shown' : ''}`}>\n              {this.sliderType === SLIDER_TYPES.range && (\n                <div style={{ left: this.calculateTooltipPosition(this.bottomValue) }} class=\"slider-tooltip\">\n                  {this.bottomValue}\n                </div>\n              )}\n              <div style={{ left: this.calculateTooltipPosition(this.value) }} class=\"slider-tooltip\">\n                {this.value}\n              </div>\n            </div>\n            <div style={{ background: this.calculateBackground() }} class=\"slider-track\"></div>\n            {this.sliderType === SLIDER_TYPES.range && (\n              <input\n                class=\"slider slider-from\"\n                type=\"range\"\n                value={this.bottomValue}\n                min={this.minValue}\n                max={this.maxValue}\n                step={this.step}\n                onInput={(event: Event) => this.handleValueSlider(event, SLIDER_DIRECTIONS.from)}\n              />\n            )}\n            <input\n              class=\"slider slider-to\"\n              type=\"range\"\n              value={this.value}\n              min={this.minValue}\n              max={this.maxValue}\n              step={this.step}\n              onInput={(event: Event) => this.handleValueSlider(event, SLIDER_DIRECTIONS.to)}\n            />\n          </div>\n          {this.showValues && <span>{this.maxValue}</span>}\n          {this.sliderType === SLIDER_TYPES.single && this.showInput && this.renderSpecific()}\n        </div>\n        {this.sliderType === SLIDER_TYPES.range && this.showInput && this.renderSpecific()}\n        {this.topValueError && this.sliderType === SLIDER_TYPES.single && (\n          <wink-validation-message message={this.topValueError} type=\"error\" />\n        )}\n      </label>\n    );\n  }\n}\n"]}