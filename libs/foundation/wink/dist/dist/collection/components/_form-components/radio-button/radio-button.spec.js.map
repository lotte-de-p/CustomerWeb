{"version":3,"file":"radio-button.spec.js","sourceRoot":"","sources":["../../../../../../../../../src/components/_form-components/radio-button/radio-button.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE;QACzE,MAAM,IAAI,GAAG,IAAI,WAAW,EAAE,CAAC;QAE/B,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE,8DAA8D;SACrE,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;GAO/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE,wFAAwF;SAC/F,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;GAO/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE,sEAAsE;SAC7E,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;GAO/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { RadioButton } from './radio-button';\n\ndescribe('wink-radio-button', () => {\n  it('should should create an instance of RadioButton class component', () => {\n    const comp = new RadioButton();\n\n    expect(comp).toBeInstanceOf(RadioButton);\n  });\n\n  it('should render the element wink-radio-button', async () => {\n    const page = await newSpecPage({\n      components: [RadioButton],\n      html: `<wink-radio-button label=\"Radio button\"></wink-radio-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-radio-button label=\"Radio button\">\n      <label>\n         <input type=\"radio\" value=\"Radio button\">\n          <wink-form-label helper=\"\" label=\"Radio button\" rendition=\"subComponent\"/>\n       </label>\n    </wink-radio-button>\n  `);\n  });\n\n  it('should render the element wink-radio-button with helper text', async () => {\n    const page = await newSpecPage({\n      components: [RadioButton],\n      html: `<wink-radio-button label=\"Radio button\" helper=\"I'm helping here\"></wink-radio-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-radio-button label=\"Radio button\" helper=\"I'm helping here\">\n    <label>\n      <input type=\"radio\" value=\"Radio button\">\n      <wink-form-label helper=\"I'm helping here\" label=\"Radio button\"  rendition=\"subComponent\"/>\n    </label>\n    </wink-radio-button>\n  `);\n  });\n\n  it('should render the checked element wink-radio-button', async () => {\n    const page = await newSpecPage({\n      components: [RadioButton],\n      html: `<wink-radio-button checked label=\"Radio button\"></wink-radio-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-radio-button checked label=\"Radio button\">\n      <label>\n         <input type=\"radio\" value=\"Radio button\" checked>\n          <wink-form-label helper=\"\" label=\"Radio button\" rendition=\"subComponent\"/>\n       </label>\n    </wink-radio-button>\n  `);\n  });\n});\n"]}