{"version":3,"file":"range-slider.stories.js","sourceRoot":"","sources":["../../../../../../../../../src/components/_form-components/range-slider/range-slider.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Meta } from '@storybook/web-components';\nimport { html, nothing } from 'lit-html';\nimport { BADGES } from '../../../models';\nimport { STORY_CATEGORIES } from '../../../models/categories.types';\nimport { SLIDER_TYPES } from './models/range-slider.types';\n\nexport default {\n  title: 'FORM COMPONENTS/Range slider',\n  component: 'RangeSlider',\n  parameters: {\n    badges: [BADGES.ready],\n    html: {\n      transform: (code: string) => {\n        return code\n          .replace(/(?<=<wink-range-slider[^>]*>).*?(?=<\\/wink-range-slider>)/gs, '')\n          .replace(/<style\\b[^<]*(?:(?!<\\/style>)<[^<]*)*<\\/style>/gi, '')\n          .replace(/class=\"[^\"]*\"/gi, '')\n          .replace(/brand=\"[^\"]*\"/gi, '')\n          .replace(/(<wink-range-slider[^>]*)(?:(?:class|brand)=\"[^\"]*\")*([^>]*>)/gi, '$1$2');\n      },\n    },\n  },\n  argTypes: {\n    sliderId: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The sliderId property assigns a unique identifier to the input field, facilitating accessibility and functionality.',\n      type: { name: 'string', required: true },\n    },\n    label: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The label property specifies the label text displayed alongside the slider, providing context or instructions for the user.',\n      type: { name: 'string', required: true },\n    },\n    helper: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The helper property provides additional assistance or information related to the radio-button in the form of helper text displayed below the label, offering guidance or clarification to the user.',\n      type: { name: 'string', required: true },\n    },\n    minValue: {\n      control: {\n        type: 'number',\n        min: 0,\n        max: 10000,\n        step: 1,\n      },\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description: 'the minValue property specifies the minimum value of the slider.',\n    },\n    maxValue: {\n      control: {\n        type: 'number',\n        min: 0,\n        max: 10000,\n        step: 1,\n      },\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description: 'the maxValue property specifies the maximum value of the slider.',\n    },\n    bottomValue: {\n      control: {\n        type: 'number',\n        min: 0,\n        max: 10000,\n        step: 1,\n      },\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description: 'the bottomValue property specifies the lower value of the range slider.',\n      if: { arg: 'sliderType', eq: SLIDER_TYPES.range },\n    },\n    value: {\n      control: {\n        type: 'number',\n        min: 0,\n        max: 10000,\n        step: 1,\n      },\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'the value property specifies the value of the slider or in the case of the range slider, it sets the highest one.',\n    },\n    step: {\n      control: {\n        type: 'number',\n        min: 1,\n        max: 200,\n        step: 1,\n      },\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description: 'the step property specifies the step size of the slider.',\n    },\n    showInput: {\n      control: 'boolean',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description: 'The showInput property, when set to true, will add an input field to the slider to set the value.',\n    },\n    showValues: {\n      control: 'boolean',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description: 'The showValues property, when set to true, will add the value of the slider next to them.',\n    },\n    sliderType: {\n      control: 'inline-radio',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      options: [SLIDER_TYPES.range, SLIDER_TYPES.single],\n      description: 'The sliderType property selects between the range slider and the single slider.',\n      type: { name: 'string', required: true },\n    },\n    errorMessage: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description: 'The errorMessage property specifies the error message to display when the slider value is invalid.',\n    },\n  },\n  args: {\n    sliderType: SLIDER_TYPES.range,\n    label: 'Range Slider',\n    helper: 'Slider met min en max waardes',\n    bottomValue: 30,\n    value: 70,\n    minValue: 0,\n    maxValue: 100,\n    step: 1,\n    showValues: true,\n    showInput: true,\n    errorMessage: 'Geef een geldige waarde in',\n    sliderId: 'range-slider',\n  },\n  render: (args) =>\n    html` <style>\n        wink-range-slider {\n          display: block;\n          max-width: 400px;\n        }\n      </style>\n      <wink-range-slider\n        slider-type=\"${args.sliderType}\"\n        label=${args.label || nothing}\n        helper=${args.helper || nothing}\n        bottom-value=\"${args.sliderType === SLIDER_TYPES.range ? args.bottomValue : nothing}\"\n        value=${args.value}\n        ?show-input=\"${args.showInput}\"\n        ?show-values=\"${args.showValues}\"\n        min-value=\"${args.minValue}\"\n        max-value=\"${args.maxValue}\"\n        step=${args.step || nothing}\n        error-message=${args.errorMessage || nothing}\n        slider-id=${args.sliderId}>\n      </wink-range-slider>`,\n} as Meta;\n\nexport const Default = {};\n\nexport const Single = {\n  args: {\n    sliderType: SLIDER_TYPES.single,\n    label: 'Single Slider',\n    helper: 'Slider met min en max waardes',\n    bottomValue: 30,\n    value: 70,\n    minValue: 0,\n    maxValue: 100,\n    step: 1,\n    showValues: true,\n    showInput: true,\n    errorMessage: 'Geef een geldige waarde in',\n    sliderId: 'single-slider',\n  },\n};\n"]}