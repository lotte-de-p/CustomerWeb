{"version":3,"file":"toggle-switch.js","sourceRoot":"","sources":["../../../../../../../../../src/components/_form-components/toggle-switch/toggle-switch.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACnF,OAAO,EAAmB,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AACjF,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAC;AAS5C,MAAM,OAAO,YAAY;;qBAKP,EAAE;8BACO,EAAE;gCACA,EAAE;yBACQ,gBAAgB,CAAC,MAAM;uBACzB,KAAK;wBACrB,KAAK;;IATL,SAAS,CAAoB;IAErC,IAAI,CAA+B;IAS7B,YAAY,GAAG,CAAC,EAAS,EAAE,EAAE;QAC5C,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC;IAC7C,CAAC,CAAC;IAEe,aAAa,GAAG,CAAC,CAAkB,EAAE,EAAE;QACtD,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;YACtB,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC;QAC7C,CAAC;IACH,CAAC,CAAC;IAEF,kBAAkB;QAChB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACvF,CAAC;IACD,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAE,kBAAkB,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,EAAE;YACjE,0DACE,KAAK,EAAE,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAAC,EAAE,EAAE,EACtF,OAAO,EAAE,IAAI,CAAC,YAAY,IACzB,IAAI,CAAC,KAAK,CACT;YACJ,4DAAK,KAAK,EAAC,wBAAwB;gBACjC,8DACE,IAAI,EAAC,UAAU,EACf,EAAE,EAAE,IAAI,CAAC,cAAc,EACvB,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAC3B,SAAS,EAAE,IAAI,CAAC,aAAa,EAC7B,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACvB;gBACF,4DAAK,KAAK,EAAC,qBAAqB,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY;oBACzD,kEAAW,IAAI,EAAC,aAAa,EAAC,IAAI,EAAC,IAAI,GAAG;oBAC1C,kEAAW,IAAI,EAAC,YAAY,EAAC,IAAI,EAAC,IAAI,GAAG,CACrC;gBACN,8DAAO,OAAO,EAAE,IAAI,CAAC,cAAc,GAAU,CACzC,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { AttachInternals, Component, Element, h, Host, Prop } from '@stencil/core';\nimport { toggleAlignment, TOGGLE_ALIGNMENT } from './models/toggle-switch.types';\nimport { UUId } from '../../../utils/utils';\n@Component({\n  tag: 'wink-toggle-switch',\n  styleUrls: {\n    telenet: 'styles/brands/toggle-switch.telenet.scss',\n    base: 'styles/brands/toggle-switch.base.scss',\n  },\n  scoped: true,\n})\nexport class ToggleSwitch {\n  @AttachInternals() internals!: ElementInternals;\n\n  @Element() host!: HTMLWinkToggleSwitchElement;\n\n  @Prop() label = '';\n  @Prop() toggleSwitchId = '';\n  @Prop() toggleSwitchName = '';\n  @Prop() alignment: toggleAlignment = TOGGLE_ALIGNMENT.nextTo;\n  @Prop({ reflect: true }) checked = false;\n  @Prop() disabled = false;\n\n  private readonly labelOnClick = (_e: Event) => {\n    this.host?.querySelector('input')?.click();\n  };\n\n  private readonly handleKeyDown = (e: { key: string }) => {\n    if (e.key === 'Enter') {\n      this.host?.querySelector('input')?.click();\n    }\n  };\n\n  componentDidRender() {\n    this.toggleSwitchId = this.toggleSwitchId?.length > 0 ? this.toggleSwitchId : UUId();\n  }\n  render() {\n    return (\n      <Host class={`toggle-switch--${this.alignment.toLocaleLowerCase()}`}>\n        <p\n          class={`toggle-switch--label ${this.disabled ? 'toggle-switch--label--disabled' : ''}`}\n          onClick={this.labelOnClick}>\n          {this.label}\n        </p>\n        <div class=\"toggle-switch--wrapper\">\n          <input\n            type=\"checkbox\"\n            id={this.toggleSwitchId}\n            name={this.toggleSwitchName}\n            onKeyDown={this.handleKeyDown}\n            checked={this.checked}\n            disabled={this.disabled}\n          />\n          <div class=\"toggle-switch--icon\" onClick={this.labelOnClick}>\n            <wink-icon icon=\"cross-small\" size=\"sm\" />\n            <wink-icon icon=\"tick-small\" size=\"sm\" />\n          </div>\n          <label htmlFor={this.toggleSwitchId}></label>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}