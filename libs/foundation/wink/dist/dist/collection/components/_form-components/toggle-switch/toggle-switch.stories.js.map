{"version":3,"file":"toggle-switch.stories.js","sourceRoot":"","sources":["../../../../../../../../../src/components/_form-components/toggle-switch/toggle-switch.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAEhE,eAAe;IACb,KAAK,EAAE,+BAA+B;IACtC,SAAS,EAAE,cAAc;IACzB,UAAU,EAAE;QACV,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;KACvB;IACD,QAAQ,EAAE;QACR,SAAS,EAAE;YACT,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC;YACxC,WAAW,EACT,4GAA4G;SAC/G;QACD,KAAK,EAAE;YACL,WAAW,EACT,iIAAiI;SACpI;QACD,OAAO,EAAE;YACP,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,4FAA4F;SAC1G;QACD,QAAQ,EAAE;YACR,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,oEAAoE;SAClF;QACD,cAAc,EAAE;YACd,OAAO,EAAE,MAAM;YACf,WAAW,EACT,6HAA6H;YAC/H,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;SACzC;QACD,gBAAgB,EAAE;YAChB,OAAO,EAAE,MAAM;YACf,WAAW,EACT,+LAA+L;YACjM,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;SACzC;KACF;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,8BAA8B;QACrC,SAAS,EAAE,gBAAgB,CAAC,MAAM;QAElC,QAAQ,EAAE,KAAK;QACf,OAAO,EAAE,KAAK;QACd,cAAc,EAAE,iBAAiB;QACjC,gBAAgB,EAAE,iBAAiB;KACpC;IACD,MAAM,EAAE,CAAC,IAAS,EAAE,EAAE,CACpB,IAAI,CAAA;0BACkB,IAAI,CAAC,cAAc,IAAI,OAAO;4BAC5B,IAAI,CAAC,gBAAgB;eAClC,IAAI,CAAC,KAAK,IAAI,OAAO;mBACjB,IAAI,CAAC,SAAS;kBACf,IAAI,CAAC,OAAO,IAAI,OAAO;mBACtB,IAAI,CAAC,QAAQ,IAAI,OAAO;0BACjB;CACjB,CAAC;AAEV,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC","sourcesContent":["import { Meta } from '@storybook/web-components';\nimport { html, nothing } from 'lit-html';\nimport { BADGES } from '../../../models';\nimport { TOGGLE_ALIGNMENT } from './models/toggle-switch.types';\n\nexport default {\n  title: 'FORM COMPONENTS/Toggle switch',\n  component: 'ToggleSwitch',\n  parameters: {\n    badges: [BADGES.ready],\n  },\n  argTypes: {\n    alignment: {\n      control: 'inline-radio',\n      options: Object.values(TOGGLE_ALIGNMENT),\n      description:\n        'See if the label needs to be next to the toggle button or with space between based on the container width.',\n    },\n    label: {\n      description:\n        'The label property specifies the label text displayed before the toggle-switch, providing context or instructions for the user.',\n    },\n    checked: {\n      control: 'boolean',\n      description: 'The checked property, when set the radio programmatically, marks the check-box as checked.',\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'The disabled property set if the toggle switch should be disabled.',\n    },\n    toggleSwitchId: {\n      control: 'text',\n      description:\n        'The toggleSwitchId property assigns a unique identifier to the toggle switch, facilitating accessibility and functionality.',\n      type: { name: 'string', required: true },\n    },\n    toggleSwitchName: {\n      control: 'text',\n      description:\n        'The toggleSwitchName property assigns a name to the toggle switch, which is submitted with the form data when the form is submitted, Also it is facilitating accessibility and functionality.',\n      type: { name: 'string', required: true },\n    },\n  },\n  args: {\n    label: 'Strikt noodzakelijke cookies',\n    alignment: TOGGLE_ALIGNMENT.nextTo,\n\n    disabled: false,\n    checked: false,\n    toggleSwitchId: 'toggle-switch-1',\n    toggleSwitchName: 'toggle-switch-1',\n  },\n  render: (args: any) =>\n    html`<wink-toggle-switch\n      toggle-switch-id=\"${args.toggleSwitchId || nothing}\"\n      toggle-switch-name=\"${args.toggleSwitchName}\"\n      label=\"${args.label || nothing}\"\n      alignment=\"${args.alignment}\"\n      ?checked=\"${args.checked || nothing}}\"\n      ?disabled=\"${args.disabled || nothing}\">\n    </wink-toggle-switch>`,\n} as Meta;\n\nexport const Default = {};\n"]}