{"version":3,"file":"sheet.spec.js","sourceRoot":"","sources":["../../../../../../../../src/components/sheet/sheet.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;QACnE,MAAM,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;QAEzB,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE;;;;;;;;;;;oBAWQ;SACf,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;GAyB/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAqCQ;SACf,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;GAyB/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,8CAA8C;SACrD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;GAa/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4EAA4E,EAAE,KAAK,IAAI,EAAE;QAC1F,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,4CAA4C;SACnD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;GAa/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { Sheet } from './sheet';\n\ndescribe('wink-sheet', () => {\n  it('should should create an instance of Sheet class component', () => {\n    const comp = new Sheet();\n\n    expect(comp).toBeInstanceOf(Sheet);\n  });\n\n  it('should render the element wink-sheet', async () => {\n    const page = await newSpecPage({\n      components: [Sheet],\n      html: `<wink-sheet>\n              <wink-title html-tag=\"h2\" text=\"Slimme wifi-pods\" spacing-y=\"default\"></wink-title>\n              <div slot=\"footer\">\n                <wink-button\n                  text=\"Read More\"\n                  element=\"button\"\n                  type=\"button\"\n                  appearance=\"secondary\"\n                  size=\"md\"\n                  width=\"full\"></wink-button>\n              </div>\n      </wink-sheet>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-sheet>\n      <mock:shadow-root>\n        <dialog aria-live=\"assertive\" class=\"sheet sheet-margin-bottom\">\n            <wink-button appearance=\"tertiary\" class=\"sheet-icon sheet-icon-close\" icon=\"cross\" icon-button-aria-label=\"Sluiten\" icon-position=\"center\" size=\"md\"></wink-button>\n            <div class=\"sheet-content\">\n              <div class=\"sheet-content-scroll\">\n                <slot></slot>\n              </div>\n              <div class=\"sheet-footer\">\n                <slot name=\"footer\"></slot>\n              </div>\n            </div>\n          </dialog>      \n        </mock:shadow-root>\n      <wink-title html-tag=\"h2\" text=\"Slimme wifi-pods\" spacing-y=\"default\"></wink-title>\n      <div slot=\"footer\">\n        <wink-button\n          text=\"Read More\"\n          element=\"button\"\n          type=\"button\"\n          appearance=\"secondary\"\n          size=\"md\"\n          width=\"full\"></wink-button>\n    </wink-sheet>\n  `);\n  });\n\n  it('should render the element wink-sheet with multipage', async () => {\n    const page = await newSpecPage({\n      components: [Sheet],\n      html: `<wink-sheet is-multipage>\n          <div slot=\"page-first\">\n            <wink-title html-tag=\"h2\" text=\"Slimme wifi-pods\" spacing-y=\"default\"></wink-title>   \n              </div>\n              <div slot=\"page-second\">\n                <wink-title\n                  html-tag=\"h2\"\n                  text=\"Telenet slimme wifi om je wifi-signaal te versterken\"\n                  spacing-y=\"default\"></wink-title>\n              </div>\n              <wink-button\n                slot=\"footer\"\n                text=\"Read More\"\n                class=\"wink-button-forward\"\n                element=\"button\"\n                type=\"button\"\n                appearance=\"secondary\"\n                size=\"md\"\n                width=\"full\"></wink-button>\n              <wink-button\n                slot=\"footer-second\"\n                class=\"wink-button-back\"\n                text=\"Cancel\"\n                element=\"button\"\n                type=\"button\"\n                appearance=\"secondary\"\n                size=\"md\"\n                width=\"full\"></wink-button>\n              <wink-button\n                class=\"wink-button-close\"\n                slot=\"footer-second\"\n                text=\"Confirm\"\n                element=\"button\"\n                type=\"button\"\n                appearance=\"primary\"\n                size=\"md\"\n                width=\"full\"></wink-button>\n      </wink-sheet>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-sheet is-multipage=\"\">\n      <mock:shadow-root>\n        <dialog aria-live=\"assertive\" class=\"sheet sheet-margin-bottom\">\n          <wink-button appearance=\"tertiary\" class=\"sheet-icon sheet-icon-close\" icon=\"cross\" icon-button-aria-label=\"Sluiten\" icon-position=\"center\" size=\"md\"></wink-button>\n           <div class=\"sheet-content\">\n             <div class=\"sheet-content-scroll\">\n               <slot></slot>\n             </div>\n            <div class=\"sheet-footer\">\n              <slot name=\"footer\"></slot>\n            </div>\n           </div>\n         </dialog>\n      </mock:shadow-root>\n         <div slot=\"page-first\">\n         <wink-title html-tag=\"h2\" spacing-y=\"default\" text=\"Slimme wifi-pods\"></wink-title>\n       </div>\n       <div slot=\"page-second\">\n         <wink-title html-tag=\"h2\" spacing-y=\"default\" text=\"Telenet slimme wifi om je wifi-signaal te versterken\"></wink-title>\n       </div>\n       <wink-button appearance=\"secondary\" class=\"wink-button-forward\" element=\"button\" size=\"md\" slot=\"footer\" text=\"Read More\" type=\"button\" width=\"full\"></wink-button>\n       <wink-button appearance=\"secondary\" class=\"wink-button-back\" element=\"button\" size=\"md\" slot=\"footer-second\" text=\"Cancel\" type=\"button\" width=\"full\"></wink-button>\n       <wink-button appearance=\"primary\" class=\"wink-button-close\" element=\"button\" size=\"md\" slot=\"footer-second\" text=\"Confirm\" type=\"button\" width=\"full\"></wink-button>\n    </wink-sheet>\n  `);\n  });\n\n  it('should render the element wink-sheet not visible', async () => {\n    const page = await newSpecPage({\n      components: [Sheet],\n      html: `<wink-sheet is-visible=\"false\"></wink-sheet>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-sheet is-visible=\"false\">\n      <mock:shadow-root>\n        <dialog aria-live=\"assertive\" class=\"sheet\">\n          <wink-button appearance=\"tertiary\" class=\"sheet-icon sheet-icon-close\" icon=\"cross\" icon-button-aria-label=\"Sluiten\" icon-position=\"center\" size=\"md\"></wink-button>\n            <div class=\"sheet-content\">\n            <div class=\"sheet-content-scroll\">\n              <slot></slot>\n            </div>\n          </div>\n        </dialog>\n      </mock:shadow-root>\n    </wink-sheet>\n  `);\n  });\n\n  it('should render the element wink-sheet with class darker if dashboard is set', async () => {\n    const page = await newSpecPage({\n      components: [Sheet],\n      html: `<wink-sheet dashboard=\"true\"></wink-sheet>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-sheet dashboard=\"true\">\n      <mock:shadow-root>\n        <dialog aria-live=\"assertive\" class=\"sheet sheet-darker\">\n          <wink-button appearance=\"tertiary\" class=\"sheet-icon sheet-icon-close\" icon=\"cross\" icon-button-aria-label=\"Sluiten\" icon-position=\"center\" size=\"md\"></wink-button>\n            <div class=\"sheet-content\">\n            <div class=\"sheet-content-scroll\">\n              <slot></slot>\n            </div>\n          </div>\n        </dialog>\n      </mock:shadow-root>\n    </wink-sheet>\n  `);\n  });\n});\n"]}