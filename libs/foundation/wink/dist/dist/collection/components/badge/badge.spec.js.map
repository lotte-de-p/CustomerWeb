{"version":3,"file":"badge.spec.js","sourceRoot":"","sources":["../../../../../../../../src/components/badge/badge.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,2BAA2B;SAClC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;KAK7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wFAAwF,EAAE,KAAK,IAAI,EAAE;QACtG,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,uCAAuC;SAC9C,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;KAM7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gFAAgF,EAAE,KAAK,IAAI,EAAE;QAC9F,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,yDAAyD;SAChE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;KAK7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { Badge } from './badge';\n\ndescribe('wink-badge', () => {\n  it('should render the wink-badge element ', async () => {\n    const page = await newSpecPage({\n      components: [Badge],\n      html: `<wink-badge></wink-badge>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <wink-badge>\n        <mock:shadow-root>\n        </mock:shadow-root>\n      </wink-badge>\n    `);\n  });\n\n  it('should change the text in the badge if the text prop on the wink-badge element  is set', async () => {\n    const page = await newSpecPage({\n      components: [Badge],\n      html: `<wink-badge text=\"test\"></wink-badge>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <wink-badge text=\"test\">\n        <mock:shadow-root>\n          test\n        </mock:shadow-root>\n      </wink-badge>\n    `);\n  });\n\n  it('should not change the structure of the shadow-dom if background or size is set', async () => {\n    const page = await newSpecPage({\n      components: [Badge],\n      html: `<wink-badge background=\"yellow\" size=\"sm\"></wink-badge>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <wink-badge background=\"yellow\" size=\"sm\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n      </wink-badge>\n    `);\n  });\n});\n"]}