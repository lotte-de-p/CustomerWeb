{"version":3,"file":"global-header.spec.js","sourceRoot":"","sources":["../../../../../../../../src/components/global-header/global-header.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,2CAA2C;SAClD,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;KAK7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACtE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE;;;;;;;;;;;;;;;;;sCAiB0B;SACjC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2D7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE;;;;;sCAK0B;SACjC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAkC7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE;;;;;sCAK0B;SACjC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiC7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { GlobalHeader } from './global-header';\n\ndescribe('wink-global-header', () => {\n  it('should render element with no sections', async () => {\n    const page = await newSpecPage({\n      components: [GlobalHeader],\n      html: `<wink-global-header></wink-global-header>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <wink-global-header class=\"compact\">\n        <mock:shadow-root>\n        </mock:shadow-root>\n      </wink-global-header>\n    `);\n  });\n\n  it('should render element with top and bottom row sections', async () => {\n    const page = await newSpecPage({\n      components: [GlobalHeader],\n      html: `<wink-global-header>\n                  <div slot=\"brand\"></div>\n                  <div slot='customer-orientation'></div>\n                  <div slot='intent-bar'></div>\n                  <div slot='customer-zone'></div>\n                  <div slot='language'></div>\n                  <div slot='main-navigation'></div>\n                  <div slot='search'></div>\n                  <div slot='call-to-action'></div>\n                  <div slot=\"mobile-brand\"></div>\n                  <div slot='mobile-customer-orientation'></div>\n                  <div slot='mobile-intent-bar'></div>\n                  <div slot='mobile-customer-zone'></div>\n                  <div slot='mobile-language'></div>\n                  <div slot='mobile-main-navigation'></div>\n                  <div slot='mobile-search'></div>\n                  <div slot='mobile-call-to-action'></div>\n                </wink-global-header>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <wink-global-header>\n         <mock:shadow-root>\n           <div class='top-row'>\n              <slot name='customer-orientation'></slot>\n              <slot name='intent-bar'></slot>\n              <slot name='customer-zone'></slot>\n              <slot name=\"language\"></slot>\n           </div>\n           <div class=\"bottom-row\">\n              <slot name=\"brand\"></slot>\n              <slot name=\"main-navigation\"></slot>\n              <slot name=\"search\"></slot>\n              <slot name=\"call-to-action\"></slot>\n           </div>\n           <div class=\"mobile-row\">\n              <slot name=\"mobile-brand\"></slot>\n              <div class=\"mobile-row-right\">\n                  <slot name=\"mobile-customer-zone\"></slot>\n                  <slot name=\"mobile-search\"></slot>\n                  <div class=\"mobile-hamburger\">\n                      <input type=\"checkbox\" class=\"mobile-hamburger-button\">\n                      <wink-icon class=\"mobile-hamburger-button open\" appearance=\"transparent\" icon=\"hamburger-menu\" size=\"md\"></wink-icon>\n                      <wink-icon class=\"mobile-hamburger-button close\" appearance=\"secondary\" icon=\"cross\" size=\"md\"></wink-icon>\n                      <div class=\"mobile-fly-out\">\n                          <div class=\"mobile-fly-out-top\">\n                             <div class=\"mobile-fly-out-top-main\">\n                               <slot name=\"mobile-main-navigation\"></slot>\n                               <slot name=\"mobile-call-to-action\"></slot>\n                               <slot name=\"mobile-intent-bar\"></slot>\n                             </div>\n                             <div class=\"mobile-fly-out-top-sub-nav\"></div>\n                          </div>\n                          <div class=\"mobile-fly-out-bottom\">\n                              <slot name=\"mobile-customer-orientation\"></slot>\n                              <slot name=\"mobile-language\"></slot>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n           </div>\n         </mock:shadow-root>\n          <div slot='brand'></div>\n          <div slot='customer-orientation'></div>\n          <div slot='intent-bar'></div>\n          <div slot='customer-zone'></div>\n          <div slot='language'></div>\n          <div slot='main-navigation'></div>\n          <div slot='search'></div>\n          <div slot='call-to-action'></div>\n          <div slot='mobile-brand'></div>\n          <div slot='mobile-customer-orientation'></div>\n          <div slot='mobile-intent-bar'></div>\n          <div slot='mobile-customer-zone'></div>\n          <div slot='mobile-language'></div>\n          <div slot='mobile-main-navigation'></div>\n          <div slot='mobile-search'></div>\n          <div slot='mobile-call-to-action'></div>\n      </wink-global-header>\n    `);\n  });\n\n  it('should render element with top row sections', async () => {\n    const page = await newSpecPage({\n      components: [GlobalHeader],\n      html: `<wink-global-header>\n                  <div slot='brand'></div>\n                  <div slot='customer-orientation'></div>\n                  <div slot='mobile-brand'></div>\n                  <div slot='mobile-customer-orientation'></div>\n                </wink-global-header>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <wink-global-header>\n         <mock:shadow-root>\n           <div class='top-row'>\n            <slot name='customer-orientation'></slot>\n           </div>\n           <div class='bottom-row'>\n            <slot name='brand'></slot>\n           </div>\n           <div class=\"mobile-row\">\n              <slot name=\"mobile-brand\"></slot>\n              <div class=\"mobile-row-right\">\n                  <div class=\"mobile-hamburger\">\n                      <input type=\"checkbox\" class=\"mobile-hamburger-button\">\n                      <wink-icon class=\"mobile-hamburger-button open\" appearance=\"transparent\" icon=\"hamburger-menu\" size=\"md\"></wink-icon>\n                      <wink-icon class=\"mobile-hamburger-button close\" appearance=\"secondary\" icon=\"cross\" size=\"md\"></wink-icon>\n                      <div class=\"mobile-fly-out\">\n                           <div class=\"mobile-fly-out-top\">\n                            <div class=\"mobile-fly-out-top-main\"></div>\n                            <div class=\"mobile-fly-out-top-sub-nav\"></div>\n                          </div>\n                          <div class=\"mobile-fly-out-bottom\">\n                              <slot name=\"mobile-customer-orientation\"></slot>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n           </div>\n         </mock:shadow-root>\n          <div slot='brand'></div>\n          <div slot='customer-orientation'></div>\n          <div slot='mobile-brand'></div>\n          <div slot='mobile-customer-orientation'></div>\n      </wink-global-header>\n    `);\n  });\n\n  it('should render element with bottom row sections', async () => {\n    const page = await newSpecPage({\n      components: [GlobalHeader],\n      html: `<wink-global-header>\n                  <div slot='brand'></div>\n                  <div slot='main-navigation'></div>\n                  <div slot='mobile-brand'></div>\n                  <div slot='mobile-main-navigation'></div>\n                </wink-global-header>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <wink-global-header class=\"compact\">\n         <mock:shadow-root>\n           <div class='bottom-row'>\n            <slot name=\"brand\"></slot>\n            <slot name=\"main-navigation\"></slot>\n           </div>\n           <div class=\"mobile-row\">\n              <slot name=\"mobile-brand\"></slot>\n              <div class=\"mobile-row-right\">\n                  <div class=\"mobile-hamburger\">\n                      <input type=\"checkbox\" class=\"mobile-hamburger-button\">\n                      <wink-icon class=\"mobile-hamburger-button open\" appearance=\"transparent\" icon=\"hamburger-menu\" size=\"md\"></wink-icon>\n                      <wink-icon class=\"mobile-hamburger-button close\" appearance=\"secondary\" icon=\"cross\" size=\"md\"></wink-icon>\n                      <div class=\"mobile-fly-out\">\n                          <div class=\"mobile-fly-out-top\">\n                               <div class=\"mobile-fly-out-top-main\">\n                                 <slot name=\"mobile-main-navigation\"></slot>\n                               </div>\n                               <div class=\"mobile-fly-out-top-sub-nav\"></div>\n                          </div>\n                          <div class=\"mobile-fly-out-bottom\">\n                          </div>\n                      </div>\n                  </div>\n              </div>\n           </div>\n         </mock:shadow-root>\n          <div slot='brand'></div>\n          <div slot='main-navigation'></div>\n          <div slot='mobile-brand'></div>\n          <div slot='mobile-main-navigation'></div>\n      </wink-global-header>\n    `);\n  });\n});\n"]}