{"version":3,"file":"paragraph.stories.js","sourceRoot":"","sources":["../../../../../../../../src/components/paragraph/paragraph.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAChC,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AACnD,OAAO,EAAE,qBAAqB,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAElF,eAAe;IACb,KAAK,EAAE,sBAAsB;IAC7B,SAAS,EAAE,WAAW;IACtB,UAAU,EAAE;QACV,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;KACvB;IACD,QAAQ,EAAE;QACR,UAAU,EAAE;YACV,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC;YAC7C,WAAW,EACT,qLAAqL;YACvL,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,qBAAqB,CAAC,IAAI,EAAE;aACtD;SACF;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC;YACvC,WAAW,EACT,iKAAiK;YACnK,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,eAAe,CAAC,OAAO,EAAE;aACnD;SACF;QACD,IAAI,EAAE;YACJ,WAAW,EACT,gHAAgH;SACnH;KACF;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,wHAAwH;QAC9H,IAAI,EAAE,eAAe,CAAC,OAAO;QAC7B,UAAU,EAAE,qBAAqB,CAAC,IAAI;KACvC;IAED,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CACf,IAAI,CAAA,0BAA0B,IAAI,CAAC,IAAI,iBAAiB,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,IAAI,mBAAmB;CACnG,CAAC;AAEV,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC;AAE1B,MAAM,CAAC,MAAM,OAAO,GAAG;IACrB,IAAI,EAAE;QACJ,IAAI,EAAE,eAAe,CAAC,IAAI;QAC1B,UAAU,EAAE,qBAAqB,CAAC,OAAO;KAC1C;CACF,CAAC","sourcesContent":["import { Meta } from '@storybook/web-components';\nimport { html } from 'lit-html';\nimport { BADGES } from '../../models/badges.types';\nimport { PARAGRAPH_APPEARANCES, PARAGRAPH_SIZES } from './models/paragraph.types';\n\nexport default {\n  title: 'COMPONENTS/Paragraph',\n  component: 'Paragraph',\n  parameters: {\n    badges: [BADGES.ready],\n  },\n  argTypes: {\n    appearance: {\n      control: 'inline-radio',\n      options: Object.values(PARAGRAPH_APPEARANCES),\n      description:\n        'The appearance property determines the style or formatting of the text in the paragraph, allowing options like \"body\" for regular text or \"caption\" for smaller supplementary text.',\n      table: {\n        defaultValue: { summary: PARAGRAPH_APPEARANCES.body },\n      },\n    },\n    size: {\n      control: 'inline-radio',\n      options: Object.values(PARAGRAPH_SIZES),\n      description:\n        'The size property allows selecting from options like \"regular\", \"small\", \"large\", or \"bold\" to control the text size and weight within the paragraph component.',\n      table: {\n        defaultValue: { summary: PARAGRAPH_SIZES.regular },\n      },\n    },\n    slot: {\n      description:\n        'The slot property serves as a placeholder allowing users to add custom content within the paragraph component.',\n    },\n  },\n  args: {\n    slot: 'Onze klanten zijn onze prioriteit. We zetten ons in om de beste service te bieden en de klanttevredenheid te verhogen.',\n    size: PARAGRAPH_SIZES.regular,\n    appearance: PARAGRAPH_APPEARANCES.body,\n  },\n\n  render: (args) =>\n    html` <wink-paragraph size=\"${args.size}\" appearance=\"${args.appearance}\">${args.slot}</wink-paragraph>`,\n} as Meta;\n\nexport const Default = {};\n\nexport const caption = {\n  args: {\n    size: PARAGRAPH_SIZES.bold,\n    appearance: PARAGRAPH_APPEARANCES.caption,\n  },\n};\n"]}