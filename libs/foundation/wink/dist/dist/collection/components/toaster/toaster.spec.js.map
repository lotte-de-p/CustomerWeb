{"version":3,"file":"toaster.spec.js","sourceRoot":"","sources":["../../../../../../../../src/components/toaster/toaster.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;QACrE,MAAM,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;QAE3B,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,EAAE;;;;;;;;;sBASU;SACjB,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;GAI/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { Toaster } from './toaster';\n\ndescribe('wink-toaster', () => {\n  it('should should create an instance of Toaster class component', () => {\n    const comp = new Toaster();\n\n    expect(comp).toBeInstanceOf(Toaster);\n  });\n\n  it('should render the element wink-toaster with a child', async () => {\n    const page = await newSpecPage({\n      components: [Toaster],\n      html: `<wink-toaster>\n      <wink-toast\n        isOpen=\"true\"\n        appearance=\"negative\"\n        text=\"Toast feedback\"\n        href=\"#\"\n        link-text=\"Link\"\n        duration=\"0\"\n      ></wink-toast>\n      </wink-toaster>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-toaster aria-atomic=\"true\" aria-live=\"polite\">\n      <wink-toast duration=\"0\" href=\"#\" isopen=\"true\" link-text=\"Link\" text=\"Toast feedback\" appearance=\"negative\"></wink-toast>\n    </wink-toaster>\n  `);\n  });\n});\n"]}