{"version":3,"file":"link.spec.js","sourceRoot":"","sources":["../../../../../../../../src/components/link/link.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC9B,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAExB,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;QAClF,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAExB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAEhC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yEAAyE,EAAE,GAAG,EAAE;QACjF,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAExB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAEhC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sEAAsE,EAAE,GAAG,EAAE;QAC9E,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAExB,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;QAElC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,IAAI,EAAE,yBAAyB;SAChC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,8CAA8C,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,IAAI,EAAE,uCAAuC;SAC9C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;qBASb,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,IAAI,EAAE,gHAAgH;SACvH,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;OAW3B,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { Link } from './link';\nimport { newSpecPage } from '@stencil/core/testing';\n\ndescribe('wink-link', () => {\n  it('Should create an instance of Link comp', () => {\n    const comp = new Link();\n\n    expect(comp).toBeInstanceOf(Link);\n  });\n\n  it('should assign value false to hasBackdrop when icon appearance is default', () => {\n    const comp = new Link();\n\n    comp.iconAppearance = 'default';\n\n    expect(comp['hasBackdrop']()).toBe(false);\n  });\n\n  it('should assign value true to hasBackdrop when icon appearance is primary', () => {\n    const comp = new Link();\n\n    comp.iconAppearance = 'primary';\n\n    expect(comp['hasBackdrop']()).toBe(true);\n  });\n\n  it('should assign value true to hasBackdrop when appearance is secondary', () => {\n    const comp = new Link();\n\n    comp.iconAppearance = 'secondary';\n\n    expect(comp['hasBackdrop']()).toBe(true);\n  });\n\n  it('Should render wink-link component', async () => {\n    const page = await newSpecPage({\n      components: [Link],\n      html: `<wink-link></wink-link>`,\n    });\n    expect(page.root).toEqualLightHtml(`<wink-link appearance=\"default\"></wink-link>`);\n  });\n\n  it('Should render wink-link component with default icon', async () => {\n    const page = await newSpecPage({\n      components: [Link],\n      html: `<wink-link icon=\"search\"></wink-link>`,\n    });\n\n    expect(page.root).toEqualHtml(`<wink-link appearance=\"default\" icon=\"search\">\n      <mock:shadow-root>\n      <a class=\"font-inherit link link-with-icon link-with-icon-left\" href=\"\" target=\"_self\">\n         <slot name=\"link-icon\"></slot>\n         <div id=\"link-content\">\n            <slot></slot>\n         </div>\n         </a>\n        </mock:shadow-root>\n        </wink-link>`);\n  });\n\n  it('should render dropdown link correctly', async () => {\n    const page = await newSpecPage({\n      components: [Link],\n      html: `<wink-link appearance=\"dropdown-menu-link\" icon=\"user\" icon-appearance=\"secondary\" icon-size=\"sm\"></wink-link>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-link appearance=\"dropdown-menu-link\" icon=\"user\" icon-appearance=\"secondary\" icon-size=\"sm\">\n        <mock:shadow-root>\n        <a class=\"dropdown-menu-link font-inherit link link-with-icon link-with-icon-left link-with-icon-backdrop\" href=\"\" target=\"_self\">\n        <slot name=\"link-icon\"></slot>\n         <div id=\"link-content\">\n            <slot></slot>\n         </div>\n          </a>\n        </mock:shadow-root>\n      </wink-link>\n      `);\n  });\n});\n"]}