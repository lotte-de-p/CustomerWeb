{"version":3,"file":"image.stories.js","sourceRoot":"","sources":["../../../../../../../../src/components/image/image.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACrD,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AAEnD,eAAe;IACb,KAAK,EAAE,kBAAkB;IACzB,SAAS,EAAE,KAAK;IAChB,UAAU,EAAE;QACV,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;KACvB;IACD,QAAQ,EAAE;QACR,UAAU,EAAE;YACV,WAAW,EAAE,gGAAgG;YAC7G,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI;aACf;SACF;QACD,GAAG,EAAE;YACH,WAAW,EACT,oJAAoJ;SACvJ;QACD,SAAS,EAAE;YACT,WAAW,EACT,sJAAsJ;SACzJ;QACD,SAAS,EAAE;YACT,WAAW,EACT,sJAAsJ;SACzJ;QACD,OAAO,EAAE;YACP,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;YACrC,WAAW,EACT,kNAAkN;SACrN;KACF;IACD,IAAI,EAAE;QACJ,UAAU,EAAE,sDAAsD;QAClE,SAAS,EAAE,qDAAqD;QAChE,SAAS,EAAE,qDAAqD;QAChE,GAAG,EAAE,4CAA4C;QACjD,OAAO,EAAE,aAAa,CAAC,IAAI;KAC5B;IAED,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;qBAEH,IAAI,CAAC,UAAU,IAAI,OAAO;oBAC3B,IAAI,CAAC,SAAS,IAAI,OAAO;oBACzB,IAAI,CAAC,SAAS,IAAI,OAAO;aAChC,IAAI,CAAC,GAAG,IAAI,OAAO;iBACf,IAAI,CAAC,OAAO;;GAE1B;CACM,CAAC;AAEV,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC;AAE1B,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,IAAI,EAAE;QACJ,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,EAAE;KACd;CACF,CAAC","sourcesContent":["import type { Meta } from '@storybook/web-components';\nimport { html, nothing } from 'lit-html';\nimport { LOADING_TYPES } from './models/image.types';\nimport { BADGES } from '../../models/badges.types';\n\nexport default {\n  title: 'COMPONENTS/Image',\n  component: 'Img',\n  parameters: {\n    badges: [BADGES.ready],\n  },\n  argTypes: {\n    srcDesktop: {\n      description: 'The srcDesktop property specifies the source URL or path of the desktop image to be displayed.',\n      type: {\n        name: 'string',\n        required: true,\n      },\n    },\n    alt: {\n      description:\n        'The alt property provides alternative text for an image, describing its content or function for accessibility purposes within the image component.',\n    },\n    srcTablet: {\n      description:\n        'The srcTablet property specifies the source URL or path of the image specifically intended for display on tablet devices within the image component.',\n    },\n    srcMobile: {\n      description:\n        'The srcMobile property specifies the source URL or path of the image specifically intended for display on mobile devices within the image component.',\n    },\n    loading: {\n      control: 'inline-radio',\n      options: Object.values(LOADING_TYPES),\n      description:\n        'The loading property determines how the image component loads its content, providing options like \"eager\" for immediate loading or \"lazy\" for deferred loading based on user interaction or viewport visibility.',\n    },\n  },\n  args: {\n    srcDesktop: '/assets/shared/img/place-holders/testimg-desktop.jpg',\n    srcTablet: '/assets/shared/img/place-holders/testimg-tablet.jpg',\n    srcMobile: '/assets/shared/img/place-holders/testimg-mobile.jpg',\n    alt: 'Please describe picture for screen-readers',\n    loading: LOADING_TYPES.lazy,\n  },\n\n  render: (args) => html`\n    <wink-img\n      src-desktop=\"${args.srcDesktop || nothing}\"\n      src-tablet=\"${args.srcTablet || nothing}\"\n      src-mobile=\"${args.srcMobile || nothing}}\"\n      alt=\"${args.alt || nothing}}\"\n      loading=\"${args.loading}\">\n    </wink-img>\n  `,\n} as Meta;\n\nexport const Default = {};\n\nexport const OnlyDesktop = {\n  args: {\n    srcTablet: '',\n    srcMobile: '',\n  },\n};\n"]}