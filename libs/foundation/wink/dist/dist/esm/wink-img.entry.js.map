{"file":"wink-img.entry.js","mappings":";;;AAAO,MAAM,aAAa,GAAG;IAC3B,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,OAAO;CACN;;ACHV,MAAM,YAAY,GAAG,oNAAoN,CAAC;AAC1O,0BAAe,YAAY;;ACD3B,MAAM,eAAe,GAAG,oNAAoN,CAAC;AAC7O,6BAAe,eAAe;;MCWjB,KAAK;;;0BACsB,EAAE;;;;uBAIT,aAAa,CAAC,IAAI;;IAEjD,MAAM;QACJ,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,YAAY,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACxG,QACE,EAAC,IAAI,uDACF,IAAI,CAAC,UAAU,IACd,mBACG,IAAI,CAAC,SAAS,IAAI,cAAQ,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,MAAM,GAAI,EAC/E,IAAI,CAAC,SAAS,IAAI,cAAQ,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,MAAM,GAAI,EAChF,WAAK,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,GAAI,CAC1D,KAEV,+BAAsB,CACvB,CACI,EACP;KACH;;;;;;;;;","names":[],"sources":["../core/src/components/image/models/image.types.tsx","../core/src/components/image/styles/brands/image.base.scss?tag=wink-img&mode=base&encapsulation=shadow","../core/src/components/image/styles/brands/image.telenet.scss?tag=wink-img&mode=telenet&encapsulation=shadow","../core/src/components/image/image.tsx"],"sourcesContent":["export const LOADING_TYPES = {\n  lazy: 'lazy',\n  eager: 'eager',\n} as const;\nexport type LoadingType = (typeof LOADING_TYPES)[keyof typeof LOADING_TYPES];\n","@import '../vars/vars.base';\n@import '../image.default';\n","@import '../vars/vars.telenet';\n@import '../image.default';\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { LOADING_TYPES, LoadingType } from './models/image.types';\nimport { BREAKPOINTS } from '../../models/breakpoints.types';\n\n@Component({\n  tag: 'wink-img',\n  styleUrls: {\n    telenet: 'styles/brands/image.telenet.scss',\n    base: 'styles/brands/image.base.scss',\n  },\n  shadow: true,\n})\nexport class Image {\n  @Prop({ reflect: true }) srcDesktop = '';\n  @Prop() srcTablet?: string;\n  @Prop() srcMobile?: string;\n  @Prop() alt?: string;\n  @Prop() loading: LoadingType = LOADING_TYPES.lazy;\n\n  render() {\n    const altText = this.srcDesktop?.length > 0 && this.alt ? this.alt : `Image of ${window.location.host}`;\n    return (\n      <Host>\n        {this.srcDesktop ? (\n          <picture>\n            {this.srcMobile && <source srcSet={this.srcMobile} media={BREAKPOINTS.mobile} />}\n            {this.srcTablet && <source srcSet={this.srcTablet} media={BREAKPOINTS.tablet} />}\n            <img src={this.srcDesktop} alt={altText} loading={this.loading} />\n          </picture>\n        ) : (\n          <p>Please set src </p>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}