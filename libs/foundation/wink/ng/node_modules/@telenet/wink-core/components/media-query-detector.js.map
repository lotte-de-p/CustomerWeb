{"file":"media-query-detector.js","mappings":"AAAO,MAAM,WAAW,GAAG;IACzB,EAAE,EAAE,GAAG;IACP,EAAE,EAAE,GAAG;IACP,EAAE,EAAE,IAAI;CACA,CAAC;AAGJ,MAAM,kBAAkB,GAAG;IAChC,EAAE,EAAE,IAAI;CACA,CAAC;AAGJ,MAAM,gBAAgB,GAAG;IAC9B,OAAO,EAAE,WAAW;IACpB,MAAM,EAAE,kBAAkB;CAClB,CAAC;MAGE,kBAAkB;IACrB,OAAO,eAAe,CAC5B,IAAmC,EACnC,QAAuB,EACvB,iBAAiC,SAAS;QAE1C,MAAM,WAAW,GAAG,gBAAgB,CAAC,cAAc,CAAC,CAAC;QACrD,MAAM,MAAM,GAAG,QAAQ,KAAK,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9E,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,QAAQ,WAAW,MAAM,KAAK,CAAC,CAAC,OAAO,CAAC;KACtE;IAED,WAAW,QAAQ;QACjB,OAAO,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACxD;IAED,WAAW,QAAQ;QACjB,OAAO,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACxD;IAED,WAAW,QAAQ;QACjB,OAAO,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACxD;IAED,WAAW,SAAS;QAClB,OAAO,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACxD;IAED,WAAW,SAAS;QAClB,OAAO,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACxD;IAED,WAAW,SAAS;QAClB,OAAO,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACxD;IAED,WAAW,cAAc;QACvB,OAAO,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;KAClE;IAED,WAAW,eAAe;QACxB,OAAO,kBAAkB,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;KAClE;;;;;","names":[],"sources":["../core/src/assets/shared/scripts/media-query-detector.ts"],"sourcesContent":["export const BREAKPOINTS = {\n  SM: 576,\n  MD: 769,\n  LG: 1192,\n} as const;\ntype Breakpoint = keyof typeof BREAKPOINTS;\n\nexport const HEADER_BREAKPOINTS = {\n  MD: 1024,\n} as const;\ntype HeaderBreakpoint = keyof typeof HEADER_BREAKPOINTS;\n\nexport const BREAKPOINT_TYPES = {\n  DEFAULT: BREAKPOINTS,\n  HEADER: HEADER_BREAKPOINTS,\n} as const;\ntype BreakpointType = keyof typeof BREAKPOINT_TYPES;\n\nexport class MediaQueryDetector {\n  private static mediaQueryMatch(\n    size: Breakpoint | HeaderBreakpoint,\n    minOrMax: 'min' | 'max',\n    breakpointType: BreakpointType = 'DEFAULT'\n  ): boolean {\n    const breakpoints = BREAKPOINT_TYPES[breakpointType];\n    const pixels = minOrMax === 'min' ? breakpoints[size] : breakpoints[size] - 1;\n    return window.matchMedia(`(${minOrMax}-width: ${pixels}px)`).matches;\n  }\n\n  static get isFromSm(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('SM', 'min');\n  }\n\n  static get isFromMd(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'min');\n  }\n\n  static get isFromLg(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('LG', 'min');\n  }\n\n  static get isUntilSm(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('SM', 'max');\n  }\n\n  static get isUntilMd(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'max');\n  }\n\n  static get isUntilLg(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('LG', 'max');\n  }\n\n  static get isFromMdHeader(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'min', 'HEADER');\n  }\n\n  static get isUntilMdHeader(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'max', 'HEADER');\n  }\n}\n"],"version":3}