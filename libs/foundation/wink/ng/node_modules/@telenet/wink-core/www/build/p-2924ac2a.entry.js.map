{"version":3,"names":["STACK_SIZES","SIZES","xs","sm","md","lg","none","stackBaseCss","WinkStackBaseStyle0","stackTelenetCss","WinkStackTelenetStyle0","Stack","default","getStackClasses","this","getClassesByPostfix","postFix","prop","render","h","Host","key","class"],"sources":["../core/src/components/stack/models/stack.types.ts","../core/src/components/stack/styles/brands/stack.base.scss?tag=wink-stack&mode=base&encapsulation=shadow","../core/src/components/stack/styles/brands/stack.telenet.scss?tag=wink-stack&mode=telenet&encapsulation=shadow","../core/src/components/stack/stack.tsx"],"sourcesContent":["import { SIZES } from '../../../models/sizes.types';\nimport { AlignItems, FlexDirection, JustifyContent, Wrap } from '../../../models/flex.types';\n\nexport type CssClass = { [className: string]: boolean };\n\nexport const STACK_SIZES = {\n  '3xs': SIZES['3xs'],\n  '2xs': SIZES['2xs'],\n  xs: SIZES.xs,\n  sm: SIZES.sm,\n  md: SIZES.md,\n  lg: SIZES.lg,\n  none: SIZES.none,\n} as const;\nexport type StackSize = (typeof STACK_SIZES)[keyof typeof STACK_SIZES];\n\nexport type Size = {\n  default?: StackSize | FlexDirection | JustifyContent | AlignItems | Wrap | number;\n  sm?: StackSize | FlexDirection | JustifyContent | AlignItems | Wrap | number;\n  md?: StackSize | FlexDirection | JustifyContent | AlignItems | Wrap | number;\n};\n","@import '../vars/vars.base';\n@import '../stack.default';\n","@import '../vars/vars.telenet';\n@import '../stack.default';\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { CssClass, STACK_SIZES, Size } from './models/stack.types';\n\n@Component({\n  tag: 'wink-stack',\n  styleUrls: {\n    telenet: 'styles/brands/stack.telenet.scss',\n    base: 'styles/brands/stack.base.scss',\n  },\n  shadow: true,\n})\nexport class Stack {\n  @Prop() col: Size = { default: 12 };\n  @Prop() gap: Size = { default: STACK_SIZES.xs };\n  @Prop() direction?: Size;\n  @Prop() justifyContent?: Size;\n  @Prop() alignItems?: Size;\n  @Prop() wrap?: Size;\n\n  private readonly getStackClasses = (): CssClass => {\n    return {\n      ...this.getClassesByPostfix('col', 'col'),\n      ...this.getClassesByPostfix('gap', 'gap'),\n      ...this.getClassesByPostfix('flex-direction', 'direction'),\n      ...this.getClassesByPostfix('justify-content', 'justifyContent'),\n      ...this.getClassesByPostfix('align-items', 'alignItems'),\n      ...this.getClassesByPostfix('flex-wrap', 'wrap'),\n    };\n  };\n\n  private getClassesByPostfix(postFix: string, prop: string | number): CssClass {\n    if (!this[prop]) {\n      return {};\n    }\n    return {\n      ...(this[prop].default && { [`${postFix}-${this[prop].default}`]: true }),\n      ...(this[prop].sm && { [`${postFix}-${this[prop].sm}-sm`]: true }),\n      ...(this[prop].md && { [`${postFix}-${this[prop].md}-md`]: true }),\n    };\n  }\n\n  render() {\n    return (\n      <Host class={this.getStackClasses()}>\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"sFAKO,MAAMA,EAAc,CACzB,MAAOC,EAAM,OACb,MAAOA,EAAM,OACbC,GAAID,EAAMC,GACVC,GAAIF,EAAME,GACVC,GAAIH,EAAMG,GACVC,GAAIJ,EAAMI,GACVC,KAAML,EAAMK,MCZd,MAAMC,EAAe,izFACrB,MAAAC,EAAeD,ECDf,MAAME,EAAkB,izFACxB,MAAAC,EAAeD,E,MCUFE,EAAK,M,kCACI,CAAEC,QAAS,I,SACX,CAAEA,QAASZ,EAAYE,I,qGAM1BW,gBAAkB,KAC1B,IACFC,KAAKC,oBAAoB,MAAO,UAChCD,KAAKC,oBAAoB,MAAO,UAChCD,KAAKC,oBAAoB,iBAAkB,gBAC3CD,KAAKC,oBAAoB,kBAAmB,qBAC5CD,KAAKC,oBAAoB,cAAe,iBACxCD,KAAKC,oBAAoB,YAAa,UAIrC,mBAAAA,CAAoBC,EAAiBC,GAC3C,IAAKH,KAAKG,GAAO,CACf,MAAO,E,CAET,MAAO,IACDH,KAAKG,GAAML,SAAW,CAAE,CAAC,GAAGI,KAAWF,KAAKG,GAAML,WAAY,SAC9DE,KAAKG,GAAMd,IAAM,CAAE,CAAC,GAAGa,KAAWF,KAAKG,GAAMd,SAAU,SACvDW,KAAKG,GAAMb,IAAM,CAAE,CAAC,GAAGY,KAAWF,KAAKG,GAAMb,SAAU,M,CAI/D,MAAAc,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAOR,KAAKD,mBAChBM,EAAA,QAAAE,IAAA,6C"}