{"version":3,"names":["flyoutBaseCss","WinkFlyoutBaseStyle0","flyoutTelenetCss","WinkFlyoutTelenetStyle0","Flyout","undefined","flyoutBackLinkClicked","handleMainNavigationItemClicked","event","this","activeId","detail","index","backLabel","name","isFlyoutOpen","flyoutId","eventType","shouldFetchFocusableElements","getAllFocusableElements","resetFocusableElements","focusOnElement","focusableElements","length","MediaQueryDetector","isFromMdHeader","host","getAttribute","includes","focusedElementTracker","focus","focusableQuery","querySelectorAll","forEach","list","shadowRoot","item","push","querySelector","handleKeyDown","e","code","shiftKey","closeFlyout","resetFlyout","preventDefault","emit","handleFlyoutMouseLeave","isUntilMdHeader","render","h","Host","key","id","tabindex","onMouseLeave","bind","open","class","onClick","appearance","icon","size","href","slot","exportparts","Array","from","map","_"],"sources":["../core/src/components/global-header/_sub-comps/flyout/styles/brands/flyout.base.scss?tag=wink-flyout&mode=base&encapsulation=shadow","../core/src/components/global-header/_sub-comps/flyout/styles/brands/flyout.telenet.scss?tag=wink-flyout&mode=telenet&encapsulation=shadow","../core/src/components/global-header/_sub-comps/flyout/flyout.tsx"],"sourcesContent":["@import '../vars/vars.base';\n@import '../flyout.default';\n","@import '../vars/vars.telenet';\n@import '../flyout.default';\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { MediaQueryDetector } from '../../../../assets/shared/scripts/media-query-detector';\nimport { mainNavEventEmitterDetails } from '../main-navigation/models/main-navigation.types';\n\n@Component({\n  tag: 'wink-flyout',\n  styleUrls: {\n    telenet: 'styles/brands/flyout.telenet.scss',\n    base: 'styles/brands/flyout.base.scss',\n  },\n  shadow: true,\n})\nexport class Flyout implements ComponentInterface {\n  @Element() host!: HTMLWinkFlyoutElement;\n\n  @Prop() flyoutId: number | undefined = undefined;\n\n  @State() activeId: number | undefined = undefined;\n  @State() backLabel: string | undefined = undefined;\n  @State() isFlyoutOpen = false;\n  @State() focusableElements: any[] = [];\n  @State() focusedElementTracker = 0;\n\n  @Event() flyoutBackLinkClicked: EventEmitter<{ eventType: 'mouse' | 'keyboard' }> | undefined;\n\n  @Listen('mainNavigationItemClicked', { target: 'document' })\n  handleMainNavigationItemClicked(event: CustomEvent<mainNavEventEmitterDetails>) {\n    this.activeId = event.detail.index;\n    this.backLabel = event.detail.name;\n    this.isFlyoutOpen = this.flyoutId === this.activeId;\n\n    if (event.detail.eventType === 'mouse') {\n      return;\n    }\n\n    if (this.shouldFetchFocusableElements()) {\n      this.getAllFocusableElements();\n    } else {\n      this.resetFocusableElements();\n    }\n\n    this.focusOnElement();\n  }\n\n  private shouldFetchFocusableElements() {\n    return (\n      !this.focusableElements.length &&\n      MediaQueryDetector.isFromMdHeader &&\n      this.isFlyoutOpen &&\n      !this.host.getAttribute('slot')?.includes('mobile')\n    );\n  }\n\n  private resetFocusableElements() {\n    this.focusableElements = [];\n    this.focusedElementTracker = 0;\n  }\n\n  private focusOnElement() {\n    if (this.focusableElements.length) {\n      this.focusableElements[this.focusedElementTracker].focus();\n    }\n  }\n\n  private getAllFocusableElements() {\n    const focusableQuery = 'a, button, [tabindex]:not([tabindex=\"-1\"])';\n\n    this.host.querySelectorAll('wink-navigation-list')?.forEach((list: any) => {\n      list.shadowRoot.querySelectorAll('wink-navigation-list-item').forEach((item: any) => {\n        this.focusableElements.push(item.shadowRoot.querySelector(focusableQuery));\n      });\n    });\n  }\n\n  @Listen('keydown', {})\n  handleKeyDown(e: KeyboardEvent) {\n    const { code, shiftKey } = e;\n    const { length } = this.focusableElements;\n\n    if (code === 'Escape') {\n      this.closeFlyout();\n      this.resetFlyout();\n    }\n\n    if (code === 'ArrowDown' || code === 'ArrowUp' || code === 'Tab') {\n      e.preventDefault();\n      this.focusedElementTracker += code === 'ArrowDown' || (code === 'Tab' && !shiftKey) ? 1 : -1;\n      this.focusedElementTracker = (this.focusedElementTracker + length) % length;\n      (this.focusableElements[this.focusedElementTracker] as HTMLElement).focus();\n    }\n  }\n\n  private resetFlyout() {\n    this.activeId = undefined;\n    this.isFlyoutOpen = false;\n    this.focusableElements = [];\n    this.focusedElementTracker = 0;\n  }\n\n  private closeFlyout() {\n    this.resetFlyout();\n    this.flyoutBackLinkClicked?.emit({ eventType: 'keyboard' });\n  }\n\n  private handleFlyoutMouseLeave() {\n    if (MediaQueryDetector.isUntilMdHeader) {\n      return;\n    }\n\n    this.resetFlyout();\n    this.flyoutBackLinkClicked?.emit({ eventType: 'mouse' });\n  }\n\n  render() {\n    return (\n      <Host\n        id={`flyout-${this.flyoutId}`}\n        tabindex=\"-1\"\n        aria-label={this.flyoutId === this.activeId ? this.backLabel : ' '}\n        onMouseLeave={this.handleFlyoutMouseLeave.bind(this)}\n        {...{ open: this.isFlyoutOpen }}>\n        <div class=\"container\">\n          <div class=\"content\">\n            <wink-link\n              onClick={this.closeFlyout.bind(this)}\n              appearance=\"menu-back\"\n              icon=\"arrow-left\"\n              size=\"caption-bold\"\n              icon-position=\"left\"\n              icon-appearance=\"default\"\n              is-disabled=\"false\"\n              href=\"#\">\n              <wink-icon\n                slot=\"link-icon\"\n                appearance=\"default\"\n                icon=\"arrow-left\"\n                size=\"md\"\n                exportparts=\"icon, icon-arrow-left\"\n              />\n              {this.backLabel}\n            </wink-link>\n\n            {Array.from({ length: 4 }).map((_, index) => (\n              <slot name={`col-${index + 1}`} />\n            ))}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"oGAAA,MAAMA,EAAgB,21CACtB,MAAAC,EAAeD,ECDf,MAAME,EAAmB,21CACzB,MAAAC,EAAeD,E,MCsBFE,EAAM,M,oGAGsBC,U,cAECA,U,eACCA,U,kBACjB,M,uBACY,G,2BACH,C,2BAExBC,sBAGT,+BAAAC,CAAgCC,GAC9BC,KAAKC,SAAWF,EAAMG,OAAOC,MAC7BH,KAAKI,UAAYL,EAAMG,OAAOG,KAC9BL,KAAKM,aAAeN,KAAKO,WAAaP,KAAKC,SAE3C,GAAIF,EAAMG,OAAOM,YAAc,QAAS,CACtC,M,CAGF,GAAIR,KAAKS,+BAAgC,CACvCT,KAAKU,yB,KACA,CACLV,KAAKW,wB,CAGPX,KAAKY,gB,CAGC,4BAAAH,GACN,OACGT,KAAKa,kBAAkBC,QACxBC,EAAmBC,gBACnBhB,KAAKM,eACJN,KAAKiB,KAAKC,aAAa,SAASC,SAAS,S,CAItC,sBAAAR,GACNX,KAAKa,kBAAoB,GACzBb,KAAKoB,sBAAwB,C,CAGvB,cAAAR,GACN,GAAIZ,KAAKa,kBAAkBC,OAAQ,CACjCd,KAAKa,kBAAkBb,KAAKoB,uBAAuBC,O,EAI/C,uBAAAX,GACN,MAAMY,EAAiB,6CAEvBtB,KAAKiB,KAAKM,iBAAiB,yBAAyBC,SAASC,IAC3DA,EAAKC,WAAWH,iBAAiB,6BAA6BC,SAASG,IACrE3B,KAAKa,kBAAkBe,KAAKD,EAAKD,WAAWG,cAAcP,GAAgB,GAC1E,G,CAKN,aAAAQ,CAAcC,GACZ,MAAMC,KAAEA,EAAIC,SAAEA,GAAaF,EAC3B,MAAMjB,OAAEA,GAAWd,KAAKa,kBAExB,GAAImB,IAAS,SAAU,CACrBhC,KAAKkC,cACLlC,KAAKmC,a,CAGP,GAAIH,IAAS,aAAeA,IAAS,WAAaA,IAAS,MAAO,CAChED,EAAEK,iBACFpC,KAAKoB,uBAAyBY,IAAS,aAAgBA,IAAS,QAAUC,EAAY,GAAK,EAC3FjC,KAAKoB,uBAAyBpB,KAAKoB,sBAAwBN,GAAUA,EACpEd,KAAKa,kBAAkBb,KAAKoB,uBAAuCC,O,EAIhE,WAAAc,GACNnC,KAAKC,SAAWL,UAChBI,KAAKM,aAAe,MACpBN,KAAKa,kBAAoB,GACzBb,KAAKoB,sBAAwB,C,CAGvB,WAAAc,GACNlC,KAAKmC,cACLnC,KAAKH,uBAAuBwC,KAAK,CAAE7B,UAAW,Y,CAGxC,sBAAA8B,GACN,GAAIvB,EAAmBwB,gBAAiB,CACtC,M,CAGFvC,KAAKmC,cACLnC,KAAKH,uBAAuBwC,KAAK,CAAE7B,UAAW,S,CAGhD,MAAAgC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CACHC,GAAI,UAAU5C,KAAKO,WACnBsC,SAAS,KAAI,aACD7C,KAAKO,WAAaP,KAAKC,SAAWD,KAAKI,UAAY,IAC/D0C,aAAc9C,KAAKsC,uBAAuBS,KAAK/C,MACzCgD,KAAMhD,KAAKM,cACjBmC,EAAA,OAAAE,IAAA,2CAAKM,MAAM,aACTR,EAAA,OAAAE,IAAA,2CAAKM,MAAM,WACTR,EAAA,aAAAE,IAAA,2CACEO,QAASlD,KAAKkC,YAAYa,KAAK/C,MAC/BmD,WAAW,YACXC,KAAK,aACLC,KAAK,eAAc,gBACL,OAAM,kBACJ,UAAS,cACb,QACZC,KAAK,KACLb,EAAA,aAAAE,IAAA,2CACEY,KAAK,YACLJ,WAAW,UACXC,KAAK,aACLC,KAAK,KACLG,YAAY,0BAEbxD,KAAKI,WAGPqD,MAAMC,KAAK,CAAE5C,OAAQ,IAAK6C,KAAI,CAACC,EAAGzD,IACjCsC,EAAA,QAAMpC,KAAM,OAAOF,EAAQ,U"}