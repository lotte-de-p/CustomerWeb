{"version":3,"names":["radioButtonBaseCss","WinkRadioButtonBaseStyle0","radioButtonTelenetCss","WinkRadioButtonTelenetStyle0","RadioButton","internals","handleKeyDown","e","key","this","host","querySelector","click","render","h","type","id","radioButtonId","name","value","label","checked","disabled","error","onKeyDown","helper","rendition","FORM_LABEL_RENDITION","subComponent"],"sources":["../core/src/components/_form-components/radio-button/styles/brands/radio-button.base.scss?tag=wink-radio-button&mode=base&encapsulation=scoped","../core/src/components/_form-components/radio-button/styles/brands/radio-button.telenet.scss?tag=wink-radio-button&mode=telenet&encapsulation=scoped","../core/src/components/_form-components/radio-button/radio-button.tsx"],"sourcesContent":["@import '../vars/vars.base';\n@import '../radio-button.default';\n","@import '../vars/vars.telenet';\n@import '../radio-button.default';\n","import { AttachInternals, Component, Element, h, Prop } from '@stencil/core';\nimport { FORM_LABEL_RENDITION } from '../form-label/models/form-label.types';\n\n@Component({\n  tag: 'wink-radio-button',\n  styleUrls: {\n    telenet: 'styles/brands/radio-button.telenet.scss',\n    base: 'styles/brands/radio-button.base.scss',\n  },\n  scoped: true,\n})\nexport class RadioButton {\n  @AttachInternals() internals!: ElementInternals;\n\n  @Element() host!: HTMLWinkRadioButtonElement;\n\n  @Prop() label = '';\n  @Prop() helper = '';\n  @Prop() radioButtonId = '';\n  @Prop() name = '';\n  @Prop({ reflect: true }) checked = false;\n  @Prop() disabled = false;\n  @Prop() error = false;\n\n  private readonly handleKeyDown = (e: { key: string }) => {\n    if (e.key === 'Enter') {\n      this.host?.querySelector('input')?.click();\n    }\n  };\n\n  render() {\n    return (\n      <label>\n        <input\n          type=\"radio\"\n          id={this.radioButtonId}\n          name={this.name}\n          value={this.label}\n          checked={this.checked}\n          disabled={this.disabled}\n          aria-invalid={this.error}\n          onKeyDown={this.handleKeyDown}\n        />\n        <wink-form-label label={this.label} helper={this.helper} rendition={FORM_LABEL_RENDITION.subComponent} />\n      </label>\n    );\n  }\n}\n"],"mappings":"sFAAA,MAAMA,EAAqB,qgIAC3B,MAAAC,EAAeD,ECDf,MAAME,EAAwB,6qIAC9B,MAAAC,EAAeD,E,MCUFE,EAAW,M,oCAKN,G,YACC,G,mBACO,G,UACT,G,aACoB,M,cAChB,M,WACH,K,CAVGC,U,0BAYFC,cAAiBC,IAChC,GAAIA,EAAEC,MAAQ,QAAS,CACrBC,KAAKC,MAAMC,cAAc,UAAUC,O,GAIvC,MAAAC,GACE,OACEC,EAAA,SAAAN,IAAA,4CACEM,EAAA,SAAAN,IAAA,2CACEO,KAAK,QACLC,GAAIP,KAAKQ,cACTC,KAAMT,KAAKS,KACXC,MAAOV,KAAKW,MACZC,QAASZ,KAAKY,QACdC,SAAUb,KAAKa,SAAQ,eACTb,KAAKc,MACnBC,UAAWf,KAAKH,gBAElBQ,EAAA,mBAAAN,IAAA,2CAAiBY,MAAOX,KAAKW,MAAOK,OAAQhB,KAAKgB,OAAQC,UAAWC,EAAqBC,e"}