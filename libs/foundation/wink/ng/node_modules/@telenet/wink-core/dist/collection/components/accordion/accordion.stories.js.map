{"version":3,"file":"accordion.stories.js","sourceRoot":"","sources":["../../../../../../../../src/components/accordion/accordion.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AACtC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,0BAA0B,EAAE,MAAM,mBAAmB,CAAC;AAC/D,OAAO,EAAE,mBAAmB,EAAE,MAAM,0CAA0C,CAAC;AAE/E,eAAe;IACb,KAAK,EAAE,sBAAsB;IAC7B,SAAS,EAAE,WAAW;IACtB,UAAU,EAAE;QACV,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;KACvB;IACD,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,iGAAiG;YAC9G,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;SACzC;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAE,CAAC,EAAE,EAAE,GAAG,0BAA0B,CAAC,mBAAmB,CAAC,CAAC;YACjE,WAAW,EAAE,wFAAwF;SACtG;QACD,UAAU,EAAE;YACV,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,8FAA8F;SAC5G;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,MAAM;YACf,WAAW,EACT,gHAAgH;SACnH;KACF;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,EAAE;QACR,OAAO,EAAE,0BAA0B;QACnC,IAAI,EAAE,8YAA8Y;QACpZ,UAAU,EAAE,KAAK;KAClB;IACD,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;QACf,MAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC/B,MAAM,QAAQ,GAAG,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAChE,OAAO,IAAI,CAAA;;gBAEC,IAAI,CAAC,IAAI,IAAI,OAAO;mBACjB,IAAI,CAAC,OAAO,IAAI,OAAO;uBACnB,IAAI,CAAC,UAAU,IAAI,OAAO;UACvC,QAAQ,CAAC,IAAI,CAAC,UAAU;;KAE7B,CAAC;IACJ,CAAC;CACM,CAAC;AAEV,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC","sourcesContent":["import type { Meta } from '@storybook/web-components';\nimport { BADGES } from '../../models';\nimport { html, nothing } from 'lit-html';\nimport { getValuesAsArrayFromObject } from '../../utils/utils';\nimport { ICONS_NAMES_GROUPED } from '../../assets/shared/data/icons-name.data';\n\nexport default {\n  title: 'COMPONENTS/Accordion',\n  component: 'accordion',\n  parameters: {\n    badges: [BADGES.ready],\n  },\n  argTypes: {\n    heading: {\n      name: 'heading',\n      control: 'text',\n      description: 'The heading property specifies the text content displayed as the title of an accordion section.',\n      type: { name: 'string', required: true },\n    },\n    icon: {\n      name: 'icon',\n      control: 'select',\n      options: ['', ...getValuesAsArrayFromObject(ICONS_NAMES_GROUPED)],\n      description: 'The icon property defines the icon displayed before the title in an accordion section.',\n    },\n    isExpanded: {\n      name: 'isExpanded',\n      control: 'boolean',\n      description: 'The isExpanded property, when set to true, indicates that the accordion section is expanded.',\n    },\n    slot: {\n      name: 'slot',\n      control: 'text',\n      description:\n        'The slot property serves as a placeholder allowing users to add custom content within the accordion component.',\n    },\n  },\n  args: {\n    icon: '',\n    heading: 'Installatie en activatie',\n    slot: '<p>Gratis (zelf) installeren: Indien je in aanmerking komt voor een Self Starter-installatie, kan je jouw vaste Telenet-diensten gratis zelf installeren. Kan op het registratieadres geen Self Starter-installatie geboekt worden, dan kom je in aanmerking voor een gratis Comfort-installatie t.w.v. â‚¬85. Een technieker zal dan op het woonadres van de klant de Telenet-diensten komen installeren.</p>',\n    isExpanded: false,\n  },\n  render: (args) => {\n    const parser = new DOMParser();\n    const safeHtml = parser.parseFromString(args.slot, 'text/html');\n    return html`\n      <wink-accordion\n        icon=\"${args.icon || nothing}\"\n        heading=\"${args.heading || nothing}\"\n        is-expanded=\"${args.isExpanded || nothing}\">\n        ${safeHtml.body.firstChild}\n      </wink-accordion>\n    `;\n  },\n} as Meta;\n\nexport const Default = {};\n"]}