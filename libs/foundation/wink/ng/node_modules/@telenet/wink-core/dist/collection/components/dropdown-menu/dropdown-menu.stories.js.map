{"version":3,"file":"dropdown-menu.stories.js","sourceRoot":"","sources":["../../../../../../../../src/components/dropdown-menu/dropdown-menu.stories.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAC9D,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAEtC,eAAe;IACb,KAAK,EAAE,0BAA0B;IACjC,SAAS,EAAE,cAAc;IACzB,UAAU,EAAE;QACV,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;KACvB;IACD,QAAQ,EAAE;QACR,YAAY,EAAE;YACZ,WAAW,EACT,uKAAuK;YACzK,KAAK,EAAE,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE;SAChD;QACD,UAAU,EAAE;YACV,WAAW,EACT,qJAAqJ;YACvJ,KAAK,EAAE,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;SAC5C;QACD,OAAO,EAAE;YACP,WAAW,EACT,uJAAuJ;YACzJ,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;SACzC;QACD,YAAY,EAAE;YACZ,OAAO,EAAE,QAAQ;YACjB,WAAW,EACT,uKAAuK;YACzK,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC;YACtC,KAAK,EAAE,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;SAC7C;QACD,MAAM,EAAE;YACN,OAAO,EAAE,SAAS;YAClB,WAAW,EAAE,wDAAwD;YACrE,KAAK,EAAE,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;SAC5C;KACF;IACD,IAAI,EAAE;QACJ,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,SAAS;QAClB,MAAM,EAAE,IAAI;QACZ,YAAY,EAAE,SAAS;QACvB,YAAY,EAAE,cAAc,CAAC,OAAO;KACrC;IAED,MAAM,EAAE,CAAC,IAAS,EAAE,EAAE;QACpB,MAAM,UAAU,GAAG,IAAI,CAAA,oEAAoE,CAAC;QAC5F,OAAO,IAAI,CAAA;sBACO,IAAI,CAAC,UAAU,IAAI,OAAO;iBAC/B,IAAI,CAAC,OAAO,IAAI,OAAO;uBACjB,IAAI,CAAC,YAAY,IAAI,OAAO;qBAC9B,IAAI,CAAC,YAAY,IAAI,OAAO;QACzC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BA4BX,CAAC;IACzB,CAAC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC;AAC1B,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,IAAI,EAAE;QACJ,OAAO,EAAE,IAAI;QACb,YAAY,EAAE,IAAI;KACnB;IACD,MAAM,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAA;uCACU,IAAI,CAAC,UAAU,cAAc,IAAI,CAAC,OAAO,oBAAoB,IAAI,CAAC,YAAY;;;;;GAKlH;CACF,CAAC","sourcesContent":["import { html, nothing } from 'lit-html';\nimport { DROPDOWN_ALIGN } from './models/dropdown-menu.types';\nimport { BADGES } from '../../models';\n\nexport default {\n  title: 'COMPONENTS/Dropdown menu',\n  component: 'DropdownMenu',\n  parameters: {\n    badges: [BADGES.ready],\n  },\n  argTypes: {\n    itemSelected: {\n      description:\n        \"The itemSelected property specifies the currently selected or highlighted item in the menu, enabling visual differentiation or interaction with the user's selection.\",\n      table: { defaultValue: { summary: 'account' } },\n    },\n    isExpanded: {\n      description:\n        'The isExpanded property, when set to true, indicates that the dropdown menu component is in an expanded state, displaying its contents to the user.',\n      table: { defaultValue: { summary: false } },\n    },\n    heading: {\n      description:\n        'The heading property specifies the title or label displayed for the menu, providing context or instruction to users regarding its content or purpose.',\n      type: { name: 'string', required: true },\n    },\n    listPosition: {\n      control: 'select',\n      description:\n        'The listPosition property allows aligning the items within the menu either to the left or to the right along the cross-axis, ensuring proper layout and presentation.',\n      options: Object.values(DROPDOWN_ALIGN),\n      table: { defaultValue: { summary: 'left' } },\n    },\n    avatar: {\n      control: 'boolean',\n      description: 'Add a wink-avatar to the slot to show the wink avatar.',\n      table: { defaultValue: { summary: false } },\n    },\n  },\n  args: {\n    isExpanded: false,\n    heading: 'Account',\n    avatar: true,\n    itemSelected: 'Account',\n    listPosition: DROPDOWN_ALIGN.topLeft,\n  },\n\n  render: (args: any) => {\n    const avatarHtml = html`<wink-avatar size=\"sm\" slot=\"dropdown-menu--avatar\"></wink-avatar>`;\n    return html`<wink-dropdown-menu\n      ?is-expanded=\"${args.isExpanded || nothing}\"\n      heading=\"${args.heading || nothing}\"\n      item-selected=\"${args.itemSelected || nothing}\"\n      align-items=\"${args.listPosition || nothing}\">\n      ${args.avatar ? avatarHtml : ''}\n      <wink-link\n        appearance=\"dropdown-menu-link\"\n        size=\"inherit\"\n        icon-position=\"left\"\n        icon-appearance=\"secondary\"\n        is-disabled=\"false\"\n        href=\"/\"\n        ><wink-icon slot=\"link-icon\" appearance=\"secondary\" icon=\"user\" size=\"sm\"></wink-icon>Account</wink-link\n      >\n      <wink-link\n        appearance=\"dropdown-menu-link\"\n        size=\"inherit\"\n        icon-position=\"left\"\n        icon-appearance=\"secondary\"\n        is-disabled=\"false\"\n        href=\"/\"\n        ><wink-icon slot=\"link-icon\" appearance=\"secondary\" icon=\"stack\" size=\"sm\"></wink-icon>Products</wink-link\n      >\n      <wink-link\n        appearance=\"dropdown-menu-link\"\n        size=\"inherit\"\n        icon-position=\"left\"\n        icon-appearance=\"secondary\"\n        is-disabled=\"false\"\n        href=\"#\"\n        ><wink-icon slot=\"link-icon\" appearance=\"secondary\" icon=\"bill\" size=\"sm\"></wink-icon>Billy</wink-link\n      >\n    </wink-dropdown-menu>`;\n  },\n};\n\nexport const Default = {};\nexport const LanguageDropdown = {\n  args: {\n    heading: 'NL',\n    itemSelected: 'NL',\n  },\n  render: (args: any) => html`\n    <wink-dropdown-menu is-expanded=\"${args.isExpanded}\" heading=\"${args.heading}\" item-selected=\"${args.itemSelected}\">\n      <wink-link appearance=\"dropdown-menu-link\">NL</wink-link>\n      <wink-link appearance=\"dropdown-menu-link\">FR</wink-link>\n      <wink-link appearance=\"dropdown-menu-link\">EN</wink-link>\n    </wink-dropdown-menu>\n  `,\n};\n"]}