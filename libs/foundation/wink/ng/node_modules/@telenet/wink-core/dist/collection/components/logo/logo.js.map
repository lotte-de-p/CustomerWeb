{"version":3,"file":"logo.js","sourceRoot":"","sources":["../../../../../../../../src/components/logo/logo.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,gCAAgC,CAAC;AAE7D,OAAO,EAAE,OAAO,EAAU,MAAM,4BAA4B,CAAC;AAU7D,MAAM,OAAO,IAAI;;mBACD,EAAE;oBACD,EAAE;sBACQ,OAAO,CAAC,IAAI;0BACF,gBAAgB;;IAE3C,aAAa;QACnB,OAAO,KAAK,CAAC,IAAI,CAAC,UAAW,CAAC,CAAC,SAAS,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,UAAW,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IAChG,CAAC;IAEO,YAAY;QAClB,OAAO,KAAK,CAAC,IAAI,CAAC,UAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,UAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9F,CAAC;IACO,OAAO;QACb,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,0BAA0B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,UAAW,CAAC,CAAC,KAAK,CAAC,CAAC;IACjG,CAAC;IAEgB,eAAe,GAAG,CAAC,UAAkB,EAAE,SAA6B,EAAE,GAAW,EAAE,EAAE;QACpG,OAAO,CACL;YACG,SAAS,IAAI,cAAQ,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,MAAM,GAAI;YACtE,WAAK,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,GAAI,CAC1B,CACX,CAAC;IACJ,CAAC,CAAC;IAEF,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,uDACF,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CACtB,SAAG,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,IACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAC9E,CACL,CAAC,CAAC,CAAC,CACF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAChF,CACI,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Host, Prop, getAssetPath } from '@stencil/core';\nimport { logos } from './data/logo.data';\nimport { BREAKPOINTS } from '../../models/breakpoints.types';\nimport { logoVariant } from './models/logo.types';\nimport { TARGETS, Target } from '../../models/targets.types';\n\n@Component({\n  tag: 'wink-logo',\n  styleUrls: {\n    telenet: 'styles/brands/logo.telenet.scss',\n    base: 'styles/brands/logo.base.scss',\n  },\n  shadow: true,\n})\nexport class Logo {\n  @Prop() alt = '';\n  @Prop() href = '';\n  @Prop() target: Target = TARGETS.self;\n  @Prop() appearance?: logoVariant = 'telenet-yellow';\n\n  private getSrcDesktop() {\n    return logos[this.appearance!]['desktop'] && getAssetPath(logos[this.appearance!]['desktop']);\n  }\n\n  private getSrcMobile() {\n    return logos[this.appearance!]['mobile'] && getAssetPath(logos[this.appearance!]['mobile']);\n  }\n  private altText() {\n    return (this.alt !== 'Inspect element to check' && this.alt) || logos[this.appearance!]['alt'];\n  }\n\n  private readonly renderLogoImage = (srcDesktop: string, srcMobile: string | undefined, alt: string) => {\n    return (\n      <picture>\n        {srcMobile && <source srcSet={srcMobile} media={BREAKPOINTS.mobile} />}\n        <img src={srcDesktop} alt={alt} />\n      </picture>\n    );\n  };\n\n  render() {\n    return (\n      <Host>\n        {this.href.length > 0 ? (\n          <a href={this.href} target={this.target}>\n            {this.renderLogoImage(this.getSrcDesktop(), this.getSrcMobile(), this.altText())}\n          </a>\n        ) : (\n          this.renderLogoImage(this.getSrcDesktop(), this.getSrcMobile(), this.altText())\n        )}\n      </Host>\n    );\n  }\n}\n"]}