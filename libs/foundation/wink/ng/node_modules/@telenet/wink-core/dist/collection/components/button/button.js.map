{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../../../../../src/components/button/button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAU,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAC7D,OAAO,EACL,kBAAkB,EAClB,eAAe,EACf,qBAAqB,EACrB,YAAY,EACZ,eAAe,EACf,aAAa,EAQb,KAAK,GACN,MAAM,uBAAuB,CAAC;AAU/B,MAAM,OAAO,MAAM;;;;uBAGgB,eAAe,CAAC,MAAM;0BAChB,kBAAkB,CAAC,SAAS;oBACxC,YAAY,CAAC,EAAE;qBACb,aAAa,CAAC,IAAI;sBACjB,eAAe,CAAC,IAAI;;sBAEzB,OAAO,CAAC,IAAI;oBACV,KAAK,CAAC,MAAM;;;4BAGsB,qBAAqB,CAAC,IAAI;;IAEtE,OAAO,GAAG,GAAG,EAAE;QAC9B,IAAI,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,OAAO,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;QACD,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC;IAEe,SAAS,GAAG,CAC3B,sBAAgB,KAAK,EAAC,WAAW,EAAC,GAAG,EAAC,wCAAwC,EAAC,QAAQ,SAAkB,CAC1G,CAAC;IAEM,UAAU;QAChB,OAAO;YACL,MAAM,EAAE,IAAI;YACZ,CAAC,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,KAAK,QAAQ;YACnD,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,IAAI;YAC5B,CAAC,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,EAAE;YACpD,CAAC,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW;YAC/D,CAAC,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,KAAK,MAAM;YAChD,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE;SACrD,CAAC;IACJ,CAAC;IAEO,aAAa;QACnB,OAAO;YACL,GAAG,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;YAChD,GAAG,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;YAChD,GAAG,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;YACpD,GAAG,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;YAC1D,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,IAAI,IAAI,CAAC,OAAO,KAAK,GAAG;YAC1F,GAAG,CAAC,IAAI,CAAC,OAAO,KAAK,QAAQ,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;YACpD,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,CAAC;YAC9F,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB;SAC/D,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,OAAO,EAAE,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,KAAK,CAAC;QAClD,CAAC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAO,WAAW,EAAE,IAAI,CAAC,IAAI,IAAI,cAAc,IAAI,CAAC,IAAI,EAAE;YAC7D,EAAC,IAAI,CAAC,OAAO,qDAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,KAAM,IAAI,CAAC,aAAa,EAAE;gBAC7D,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,CACrE,iBAAW,UAAU,EAAC,SAAS,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,GAAc,CAC/E;gBACA,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS;gBAEzD,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,CAC9B,CACV,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Host, Prop } from '@stencil/core';\nimport { Target, TARGETS } from '../../models/targets.types';\nimport {\n  BUTTON_APPEARANCES,\n  BUTTON_ELEMENTS,\n  BUTTON_ICON_POSITIONS,\n  BUTTON_SIZES,\n  BUTTON_STATUSES,\n  BUTTON_WIDTHS,\n  ButtonAppearance,\n  ButtonElement,\n  ButtonIconPosition,\n  ButtonSize,\n  ButtonState,\n  ButtonType,\n  ButtonWidth,\n  TYPES,\n} from './models/button.types';\n\n@Component({\n  tag: 'wink-button',\n  styleUrls: {\n    telenet: 'styles/brands/button.telenet.scss',\n    base: 'styles/brands/button.base.scss',\n  },\n  shadow: true,\n})\nexport class Button {\n  @Prop() text?: string;\n  @Prop() loadingText?: string;\n  @Prop() element: ButtonElement = BUTTON_ELEMENTS.button;\n  @Prop() appearance: ButtonAppearance = BUTTON_APPEARANCES.secondary;\n  @Prop() size: ButtonSize = BUTTON_SIZES.md;\n  @Prop() width: ButtonWidth = BUTTON_WIDTHS.none;\n  @Prop() status: ButtonState = BUTTON_STATUSES.none;\n  @Prop() href?: string;\n  @Prop() target: Target = TARGETS.self;\n  @Prop() type: ButtonType = TYPES.button;\n  @Prop() icon?: string;\n  @Prop() iconButtonAriaLabel?: string;\n  @Prop({ mutable: true }) iconPosition?: ButtonIconPosition = BUTTON_ICON_POSITIONS.left;\n\n  private readonly getText = () => {\n    if (this.status === BUTTON_STATUSES.loading) {\n      return this.loadingText;\n    }\n    return this.text;\n  };\n\n  private readonly loaderSVG = (\n    <wink-animation class=\"animation\" src=\"/assets/shared/animations/spinner.json\" autoplay></wink-animation>\n  );\n\n  private getClasses(): { [key: string]: boolean } {\n    return {\n      button: true,\n      [`type-${this.element}`]: this.element !== 'button',\n      [`${this.appearance}`]: true,\n      [`size-${this.size}`]: this.size !== BUTTON_SIZES.md,\n      [`icon-${this.iconPosition}`]: typeof this.icon !== 'undefined',\n      [`state-${this.status}`]: this.status !== 'none',\n      ['icon-button']: !this.getText() && this.icon !== '',\n    };\n  }\n\n  private getAttributes() {\n    return {\n      ...(this.element !== 'a' && { type: this.type }),\n      ...(this.element === 'a' && { href: this.href }),\n      ...(this.element === 'a' && { target: this.target }),\n      ...(this.element === 'input' && { value: this.getText() }),\n      disabled: (this.status === 'disable' || this.status === 'loading') && this.element !== 'a',\n      ...(this.element !== 'button' && { role: 'button' }),\n      ...((this.status === 'disable' || this.status === 'loading') && { ['aria-disabled']: 'true' }),\n      'aria-label': this.text ? this.text : this.iconButtonAriaLabel,\n    };\n  }\n\n  componentDidRender() {\n    if (this.status === BUTTON_STATUSES.loading) {\n      this.iconPosition = BUTTON_ICON_POSITIONS.right;\n    }\n  }\n\n  render() {\n    return (\n      <Host {...{ exportparts: this.icon && `icon, icon-${this.icon}` }}>\n        <this.element class={this.getClasses()} {...this.getAttributes()}>\n          {this.icon && this.status !== 'loading' && this.element !== 'input' && (\n            <wink-icon appearance=\"default\" icon={this.icon} size={this.size}></wink-icon>\n          )}\n          {this.status === BUTTON_STATUSES.loading && this.loaderSVG}\n\n          {this.element !== 'input' && this.getText()}\n        </this.element>\n      </Host>\n    );\n  }\n}\n"]}