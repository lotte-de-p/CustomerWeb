{"version":3,"file":"accordion.js","sourceRoot":"","sources":["../../../../../../../../src/components/accordion/accordion.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AAUvD,MAAM,OAAO,SAAS;;uBACF,EAAE;oBACL,EAAE;0BACoC,KAAK;;IAE1D,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACrF,CAAC;IAEO,kBAAkB,CAAkB;IAE5C,IAAY,qBAAqB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEgB,aAAa,GAAG,GAAS,EAAE;QAC1C,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC,CAAC;IAEe,oBAAoB,GAAG,GAAG,EAAE;QAC3C,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC,CAAC;IAEe,kBAAkB,GAAG,GAAG,EAAE;QACzC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC,CAAC;IAEF,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,EAAE,EAAC,WAAW,EAAC,KAAK,EAAC,WAAW;gBACnC,4DAAK,IAAI,EAAC,SAAS,gBAAY,GAAG;oBAChC,+DACE,KAAK,EAAC,mBAAmB,EACzB,OAAO,EAAE,IAAI,CAAC,aAAa,EAC3B,IAAI,EAAC,QAAQ,mBACE,GAAG,IAAI,CAAC,UAAU,EAAE,mBACpB,WAAW,IAAI,CAAC,qBAAqB,EAAE,EACtD,EAAE,EAAC,cAAc;wBACjB,4DAAK,KAAK,EAAC,iBAAiB;4BACzB,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,iBAAW,UAAU,EAAC,SAAS,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,EAAE,GAAc;4BACjG,IAAI,CAAC,OAAO,CACT;wBACN,kEACE,KAAK,EAAC,gBAAgB,EACtB,UAAU,EAAC,SAAS,EACpB,IAAI,EAAC,cAAc,EACnB,IAAI,EAAE,UAAU,CAAC,EAAE,GAAc,CAC5B,CACL;gBAEN,4DACE,EAAE,EAAE,WAAW,IAAI,CAAC,qBAAqB,EAAE,EAC3C,KAAK,EAAC,iBAAiB,EACvB,IAAI,EAAC,QAAQ,qBACG,cAAc,iBACjB,GAAG,IAAI,CAAC,UAAU,EAAE,EACjC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAU,EACxB,eAAe,EAAE,IAAI,CAAC,kBAAkB,EACxC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB;oBAC5C,4DACE,EAAE,EAAC,SAAS,EACZ,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,EACxC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,GAAG,EAAoB,CAAC;wBAC7D,8DAAQ,CACJ,CACF,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Host, Prop } from '@stencil/core';\nimport { ICON_SIZES } from '../icon/models/icon.types';\n\n@Component({\n  tag: 'wink-accordion',\n  styleUrls: {\n    telenet: 'styles/brands/accordion.telenet.scss',\n    base: 'styles/brands/accordion.base.scss',\n  },\n  shadow: true,\n})\nexport class Accordion {\n  @Prop() heading = '';\n  @Prop() icon = '';\n  @Prop({ reflect: true, mutable: true }) isExpanded = false;\n\n  componentDidLoad(): void {\n    if (!this.isExpanded) this.activeContentPanel.style.setProperty('display', 'none');\n  }\n\n  private activeContentPanel!: HTMLDivElement;\n\n  private get dynamicIdBasedOnTitle() {\n    return this.heading.replace(/\\s/g, '-').substring(0, 7);\n  }\n\n  private readonly onButtonClick = (): void => {\n    this.isExpanded = !this.isExpanded;\n  };\n\n  private readonly panelTransitionStart = () => {\n    if (this.isExpanded) {\n      this.activeContentPanel.style.removeProperty('display');\n    }\n  };\n\n  private readonly panelTransitionEnd = () => {\n    if (!this.isExpanded) {\n      this.activeContentPanel.style.setProperty('display', 'none');\n    }\n  };\n\n  render() {\n    return (\n      <Host>\n        <div id=\"accordion\" class=\"accordion\">\n          <div role=\"heading\" aria-level=\"5\">\n            <button\n              class=\"accordion-trigger\"\n              onClick={this.onButtonClick}\n              type=\"button\"\n              aria-expanded={`${this.isExpanded}`}\n              aria-controls={`section-${this.dynamicIdBasedOnTitle}`}\n              id=\"accordion1id\">\n              <div class=\"accordion-title\">\n                {!!this.icon && <wink-icon appearance=\"default\" icon={this.icon} size={ICON_SIZES.md}></wink-icon>}\n                {this.heading}\n              </div>\n              <wink-icon\n                class=\"accordion-icon\"\n                appearance=\"default\"\n                icon=\"chevron-down\"\n                size={ICON_SIZES.md}></wink-icon>\n            </button>\n          </div>\n\n          <div\n            id={`section-${this.dynamicIdBasedOnTitle}`}\n            class=\"accordion-panel\"\n            role=\"region\"\n            aria-labelledby=\"accordion1id\"\n            aria-hidden={`${this.isExpanded}`}\n            hidden={!this.isExpanded}\n            onTransitionEnd={this.panelTransitionEnd}\n            onTransitionStart={this.panelTransitionStart}>\n            <div\n              id=\"content\"\n              class={`${this.icon ? 'with-icon' : ''}`}\n              ref={(el) => (this.activeContentPanel = el as HTMLDivElement)}>\n              <slot />\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}