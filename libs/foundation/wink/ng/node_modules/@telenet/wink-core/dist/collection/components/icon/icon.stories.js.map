{"version":3,"file":"icon.stories.js","sourceRoot":"","sources":["../../../../../../../../src/components/icon/icon.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit-html';\nimport { ICON_SIZES, ICON_TYPES } from './models/icon.types';\nimport { BADGES } from '../../models/badges.types';\nimport { ICONS_NAMES_GROUPED } from '../../assets/shared/data/icons-name.data';\nimport { Meta } from '@storybook/web-components';\nimport { getValuesAsArrayFromObject } from '../../utils/utils';\n\nconst ALL_ICONS_CATEGORY_NAME = 'all-icons';\nconst ALL_ICONS_CATEGORIES = [ALL_ICONS_CATEGORY_NAME, ...Object.keys(ICONS_NAMES_GROUPED)];\n\nconst categoriesArgTypes = ALL_ICONS_CATEGORIES.reduce(\n  (acc, cat) => ({\n    ...acc,\n    [cat]: {\n      name: 'icon',\n      control: 'select',\n      options:\n        cat === ALL_ICONS_CATEGORY_NAME ? getValuesAsArrayFromObject(ICONS_NAMES_GROUPED) : ICONS_NAMES_GROUPED[cat],\n      description: `Available icons for ${cat} category`,\n      table: {\n        defaultValue: { summary: cat === ALL_ICONS_CATEGORY_NAME ? 'bell' : ICONS_NAMES_GROUPED[cat][0] },\n      },\n      if: { arg: 'category', eq: cat },\n    },\n  }),\n  {}\n);\n\nconst categoriesArgs = ALL_ICONS_CATEGORIES.reduce((acc, cat) => {\n  return {\n    ...acc,\n    [cat]: cat === ALL_ICONS_CATEGORY_NAME ? 'bell' : ICONS_NAMES_GROUPED[cat][0],\n  };\n}, {});\n\nexport default {\n  title: 'COMPONENTS/Icon',\n  component: 'Icon',\n  parameters: {\n    badges: [BADGES.ready],\n  },\n  argTypes: {\n    appearance: {\n      control: 'select',\n      options: Object.values(ICON_TYPES),\n      description:\n        'The appearance property defines its visual style, with options like \"default\", \"primary\", \"secondary\", or \"transparent\".',\n      table: {\n        defaultValue: { summary: ICON_TYPES.default },\n      },\n    },\n    category: {\n      name: 'category of icons',\n      control: 'select',\n      options: ALL_ICONS_CATEGORIES,\n      description: 'The category of icons to make easier to find the desired icon',\n      table: {\n        defaultValue: { summary: ALL_ICONS_CATEGORY_NAME },\n      },\n    },\n    size: {\n      control: 'inline-radio',\n      options: Object.values(ICON_SIZES),\n      description:\n        'The size property determines its visual dimensions, offering options such as \"sm\", \"md\", \"lg\", and \"xl\" for controlling its size.',\n      table: {\n        defaultValue: { summary: ICON_SIZES.md },\n      },\n    },\n    ...categoriesArgTypes,\n  },\n  args: {\n    category: ALL_ICONS_CATEGORY_NAME,\n    ...categoriesArgs,\n    appearance: ICON_TYPES.default,\n    size: ICON_SIZES.md,\n  },\n\n  render: (args: any) =>\n    html` <wink-icon icon=\"${args[args.category]}\" appearance=\"${args.appearance}\" size=\"${args.size}\"></wink-icon>`,\n} as Meta;\n\nexport const Default = {};\n\nexport const WithBackdrop = {\n  args: {\n    appearance: ICON_TYPES.primary,\n  },\n};\n"]}