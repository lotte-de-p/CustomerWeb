{"version":3,"names":["PRICING_TYPES","text","patch","subtle","LANGUAGES","nl","fr","en","PRICING_ALIGN","left","POSITIONS_HORIZONTAL","center","right","pricingBaseCss","WinkPricingBaseStyle0","pricingTelenetCss","WinkPricingTelenetStyle0","Pricing","pricingChild","price","lang","wrapperClassName","currencyAfter","langDecimalPoint","inputPrice","replace","integerPart","split","fractionalPart","formatPriceHtml","h","class","includes","alignmentClass","alignment","this","componentWillRender","appearance","render","Host","key","type","startingFrom","priceStrikethrough","annotation","frequency","duration"],"sources":["../core/src/components/pricing/models/pricing.types.tsx","../core/src/components/pricing/styles/brands/pricing.base.scss?tag=wink-pricing&mode=base&encapsulation=shadow","../core/src/components/pricing/styles/brands/pricing.telenet.scss?tag=wink-pricing&mode=telenet&encapsulation=shadow","../core/src/components/pricing/pricing.tsx"],"sourcesContent":["import { POSITIONS_HORIZONTAL } from '../../../models/positions.types';\n\nexport const PRICING_TYPES = {\n  text: 'text',\n  patch: 'patch',\n  subtle: 'subtle text',\n} as const;\nexport type PricingType = (typeof PRICING_TYPES)[keyof typeof PRICING_TYPES];\n\nexport const LANGUAGES = {\n  nl: 'NL',\n  fr: 'FR',\n  en: 'EN',\n} as const;\nexport type Language = (typeof LANGUAGES)[keyof typeof LANGUAGES];\n\nexport const PRICING_ALIGN = {\n  left: POSITIONS_HORIZONTAL.left,\n  center: POSITIONS_HORIZONTAL.center,\n  right: POSITIONS_HORIZONTAL.right,\n} as const;\nexport type PricingAlign = (typeof PRICING_ALIGN)[keyof typeof PRICING_ALIGN];\n","@import '../vars/vars.base';\n@import '../pricing.default';\n:host([brand='base']) {\n  font-family: AkagiProBook;\n}\n:host([brand='base'][theme='telenet-dark']),\n:host([brand='base'][theme='base-dark']) {\n  --pricing--starting-from: #a9a9a9;\n  --pricing--promo-price: #a9a9a9;\n  --price-frequency-color: #ffffff;\n  --price-price-value-color: #ffffff;\n  --price-end-color: #a9a9a9;\n}\n\n:host([brand='base'][theme='telenet-dark'][appearance='patch']),\n:host([brand='base'][theme='base-dark'][appearance='patch']) {\n  --pricing-host-background: #ffffff;\n  --pricing--starting-from: #111111;\n  --pricing--promo-price: #111111;\n  --price-frequency-color: #111111;\n  --price-price-value-color: #111111;\n  --price-end-color: #111111;\n}\n:host([brand='base'][theme='telenet-light'][appearance='subtle text']),\n:host([brand='base'][theme='base-light'][appearance='subtle text']),\n:host([brand='base'][theme='telenet-dark'][appearance='subtle text']),\n:host([brand='base'][theme='base-dark'][appearance='subtle text']) {\n  --price--price-value--desktop--fs: 1.8rem;\n  --price--price-value--desktop--lh: 1.8rem;\n  --pricing--price-value-wrapper--ff: AkagiProBold;\n}\n","@import '../vars/vars.telenet';\n@import '../pricing.default';\n\n:host([brand='telenet'][appearance='patch']) {\n  @include telenet-backdrop-mask;\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { PRICING_ALIGN, LANGUAGES, PRICING_TYPES, PricingAlign, Language, PricingType } from './models/pricing.types';\n\n@Component({\n  tag: 'wink-pricing',\n  styleUrls: {\n    telenet: 'styles/brands/pricing.telenet.scss',\n    base: 'styles/brands/pricing.base.scss',\n  },\n  shadow: true,\n})\nexport class Pricing {\n  @Prop() price = '';\n  @Prop() priceStrikethrough?: string = '';\n  @Prop() startingFrom?: string = '';\n  @Prop() frequency?: string = '';\n  @Prop() duration?: string = '';\n  @Prop() appearance: PricingType = PRICING_TYPES.text;\n  @Prop() annotation: Language = LANGUAGES.nl;\n  @Prop({ mutable: true }) alignment: PricingAlign = PRICING_ALIGN.left;\n\n  private readonly pricingChild = (price: string, lang: Language, wrapperClassName: string) => {\n    const currencyAfter = lang === LANGUAGES.fr ? 'currency-after' : '';\n    const langDecimalPoint = lang !== LANGUAGES.en ? ',' : '.';\n    const inputPrice = price.replace(',', '.');\n    const integerPart = inputPrice.split('.')[0];\n    const fractionalPart = inputPrice.split('.')[1] !== '00' ? inputPrice.split('.')[1] : '';\n\n    let formatPriceHtml = (\n      <div class={`${wrapperClassName} ${currencyAfter}`}>\n        <i class=\"price__price-currency\">€</i>\n        <span class=\"price__price-value\">{price}</span>\n      </div>\n    );\n    if (inputPrice.includes('.')) {\n      formatPriceHtml = (\n        <div class={`${wrapperClassName} ${currencyAfter}`}>\n          <i class=\"price__price-currency\">€</i>\n          <span class=\"price__price-value\">\n            {integerPart}\n            {fractionalPart && <span class=\"price__price-decimal\">{langDecimalPoint + fractionalPart}</span>}\n          </span>\n        </div>\n      );\n    }\n    return formatPriceHtml;\n  };\n\n  private readonly alignmentClass = (alignment: PricingAlign) => {\n    return this.alignment !== PRICING_ALIGN.left ? `price-align__${alignment}` : '';\n  };\n\n  componentWillRender(): void {\n    if (this.appearance === PRICING_TYPES.patch) {\n      this.alignment = PRICING_ALIGN.center;\n    }\n  }\n\n  render() {\n    return (\n      <Host type=\"product price\">\n        {(this.startingFrom || this.priceStrikethrough) && (\n          <div class={`pricing__header ${this.alignmentClass(this.alignment)}`}>\n            {this.startingFrom && <div class=\"pricing__starting-from\">{this.startingFrom} </div>}\n            {this.priceStrikethrough &&\n              this.pricingChild(this.priceStrikethrough, this.annotation, 'pricing__promo-price ')}\n          </div>\n        )}\n\n        {(this.price || this.frequency) && (\n          <div class={`pricing__current-price-wrapper ${this.alignmentClass(this.alignment)}`}>\n            {this.pricingChild(this.price, this.annotation, 'pricing__price-value-wrapper')}\n            {this.frequency && <div class=\"pricing__price-frequency\">{this.frequency}</div>}\n          </div>\n        )}\n\n        {this.duration && (\n          <div class={`pricing__footer ${this.alignmentClass(this.alignment)}`}>\n            <div class=\"pricing__price-promo-duration\">{this.duration}</div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"sFAEO,MAAMA,EAAgB,CAC3BC,KAAM,OACNC,MAAO,QACPC,OAAQ,eAIH,MAAMC,EAAY,CACvBC,GAAI,KACJC,GAAI,KACJC,GAAI,MAIC,MAAMC,EAAgB,CAC3BC,KAAMC,EAAqBD,KAC3BE,OAAQD,EAAqBC,OAC7BC,MAAOF,EAAqBE,OCnB9B,MAAMC,EAAiB,y4MACvB,MAAAC,EAAeD,ECDf,MAAME,EAAoB,gzMAC1B,MAAAC,EAAeD,E,MCUFE,EAAO,M,oCACF,G,wBACsB,G,kBACN,G,eACH,G,cACD,G,gBACMjB,EAAcC,K,gBACjBG,EAAUC,G,eACUG,EAAcC,I,CAEhDS,aAAe,CAACC,EAAeC,EAAgBC,KAC9D,MAAMC,EAAgBF,IAAShB,EAAUE,GAAK,iBAAmB,GACjE,MAAMiB,EAAmBH,IAAShB,EAAUG,GAAK,IAAM,IACvD,MAAMiB,EAAaL,EAAMM,QAAQ,IAAK,KACtC,MAAMC,EAAcF,EAAWG,MAAM,KAAK,GAC1C,MAAMC,EAAiBJ,EAAWG,MAAM,KAAK,KAAO,KAAOH,EAAWG,MAAM,KAAK,GAAK,GAEtF,IAAIE,EACFC,EAAA,OAAKC,MAAO,GAAGV,KAAoBC,KACjCQ,EAAA,KAAGC,MAAM,yBAAuB,KAChCD,EAAA,QAAMC,MAAM,sBAAsBZ,IAGtC,GAAIK,EAAWQ,SAAS,KAAM,CAC5BH,EACEC,EAAA,OAAKC,MAAO,GAAGV,KAAoBC,KACjCQ,EAAA,KAAGC,MAAM,yBAAuB,KAChCD,EAAA,QAAMC,MAAM,sBACTL,EACAE,GAAkBE,EAAA,QAAMC,MAAM,wBAAwBR,EAAmBK,I,CAKlF,OAAOC,CAAe,EAGPI,eAAkBC,GAC1BC,KAAKD,YAAc1B,EAAcC,KAAO,gBAAgByB,IAAc,GAG/E,mBAAAE,GACE,GAAID,KAAKE,aAAerC,EAAcE,MAAO,CAC3CiC,KAAKD,UAAY1B,EAAcG,M,EAInC,MAAA2B,GACE,OACER,EAACS,EAAI,CAAAC,IAAA,2CAACC,KAAK,kBACPN,KAAKO,cAAgBP,KAAKQ,qBAC1Bb,EAAA,OAAKC,MAAO,mBAAmBI,KAAKF,eAAeE,KAAKD,cACrDC,KAAKO,cAAgBZ,EAAA,OAAKC,MAAM,0BAA0BI,KAAKO,aAAY,KAC3EP,KAAKQ,oBACJR,KAAKjB,aAAaiB,KAAKQ,mBAAoBR,KAAKS,WAAY,2BAIhET,KAAKhB,OAASgB,KAAKU,YACnBf,EAAA,OAAKC,MAAO,kCAAkCI,KAAKF,eAAeE,KAAKD,cACpEC,KAAKjB,aAAaiB,KAAKhB,MAAOgB,KAAKS,WAAY,gCAC/CT,KAAKU,WAAaf,EAAA,OAAKC,MAAM,4BAA4BI,KAAKU,YAIlEV,KAAKW,UACJhB,EAAA,OAAKC,MAAO,mBAAmBI,KAAKF,eAAeE,KAAKD,cACtDJ,EAAA,OAAKC,MAAM,iCAAiCI,KAAKW,W"}