{"version":3,"file":"input.stories.js","sourceRoot":"","sources":["../../../../../../../../src/components/input/input.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { Meta } from '@storybook/web-components';\nimport { html, nothing } from 'lit-html';\nimport { ICONS_NAMES } from '../../assets/shared/data/icons-name.data';\nimport { INPUT_TYPES, INPUT_ENTERKEYHINTS, INPUT_AUTOCOMPLETES, INPUT_MODES, INPUT_SIZES } from './models/input.types';\nimport { STORY_CATEGORIES } from '../../models/categories.types';\n\nexport default {\n  title: 'COMPONENTS/Input',\n  component: 'Input',\n\n  argTypes: {\n    value: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The value property sets the initial value of the input field, allowing pre-filling of the input with existing data or default values.',\n    },\n    placeholder: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The placeholder property provides a temporary hint or example text displayed in the input field, guiding users on what to input without permanently setting the value.',\n      type: { name: 'string', required: true },\n    },\n    label: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The label property specifies the label text displayed alongside the input field, providing context or instructions for the user.',\n    },\n    helper: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The helper property provides additional assistance or information related to the input field in the form of helper text displayed below the label, offering guidance or clarification to the user.',\n    },\n    inputId: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The inputId property assigns a unique identifier to the input field, facilitating accessibility and functionality.',\n      type: { name: 'string', required: true },\n    },\n    name: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The name property assigns a name to the input field, which is submitted with the form data when the form is submitted.',\n      type: { name: 'string', required: true },\n    },\n    type: {\n      control: 'select',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      options: Object.values(INPUT_TYPES),\n      description:\n        'The type property defines the type of input field, such as \"text\", \"email\", \"password\", etc., determining the format and validation rules for the entered data.',\n      type: { name: 'string', required: true },\n    },\n    inputModeOption: {\n      control: 'select',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      options: ['', ...Object.values(INPUT_MODES)],\n      description:\n        'The inputModeOption property allows specifying the input mode for the input field, which can control the keyboard layout or behavior on mobile devices, such as \"text\", \"numeric\", \"tel\", etc.',\n    },\n    autocomplete: {\n      control: 'select',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      options: ['', ...Object.values(INPUT_AUTOCOMPLETES)],\n      description:\n        \"The autocomplete property enables browser autofill functionality for the input field, suggesting previously entered values or data based on the input's name and context.\",\n    },\n    enterkeyhintOption: {\n      control: 'select',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      options: ['', ...Object.values(INPUT_ENTERKEYHINTS)],\n      description:\n        'The enterkeyhintOption property specifies the expected action for the \"Enter\" key on mobile devices.',\n    },\n    isReadonly: {\n      control: 'boolean',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      description:\n        'The isReadonly property, when set to true, makes the input field read-only, preventing users from editing its contents.',\n    },\n    isRequired: {\n      control: 'boolean',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The isRequired property, when set to true, marks the input field as mandatory, requiring users to provide a value before submitting the form.',\n    },\n    isDisabled: {\n      control: 'boolean',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      description:\n        'The isDisabled property, when set to true, disables the input field, preventing users from interacting with it or submitting data.',\n    },\n    isAutofocused: {\n      control: 'boolean',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      description:\n        'The isAutofocused property, when set to true, automatically focuses the input field when the page loads, allowing users to start typing without manually selecting the field.',\n    },\n\n    error: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      description:\n        'The error property provides an error message to be displayed when error is set to true, informing the user about the nature of the error in the input field.',\n    },\n\n    prefixValue: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      description:\n        \"The prefixValue property adds a prefix or a fixed value before the user's input in the input field.\",\n    },\n    postfixValue: {\n      control: 'text',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      description:\n        \"The postfixValue property adds a suffix or a fixed value after the user's input in the input field.\",\n    },\n\n    iconLeft: {\n      control: 'select',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      options: ['', ...ICONS_NAMES],\n      description:\n        'The iconLeft property specifies the name of the icon used in the left icon button of the input field.',\n    },\n    iconRight: {\n      control: 'select',\n      table: { category: STORY_CATEGORIES.cpAdvanced },\n      options: ['', ...ICONS_NAMES],\n      description:\n        'The iconRight property specifies the name of the icon used in the right icon button of the input field.',\n    },\n    size: {\n      control: 'inline-radio',\n      table: { category: STORY_CATEGORIES.cpBasic },\n      options: Object.values(INPUT_SIZES),\n      description: 'The size property determines the visual dimensions of the search field.',\n    },\n  },\n  parameters: {},\n  args: {\n    value: 'default value',\n    placeholder: 'placeholder',\n    label: 'Label',\n    helper: 'Helper text',\n    inputId: 'input-id',\n    name: 'input name',\n    type: INPUT_TYPES.text,\n    inputModeOption: '',\n    autocomplete: '',\n    enterkeyhintOption: '',\n    isReadonly: false,\n    isDisabled: false,\n    isRequired: false,\n    isAutofocused: false,\n    error: '',\n    prefixValue: '',\n    postfixValue: '',\n    iconRight: '',\n    size: INPUT_SIZES.md,\n  },\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  render: (args) =>\n    html` <wink-input\n      type=\"${args.type || nothing}\"\n      value=\"${args.value || nothing}\"\n      placeholder=\"${args.placeholder || nothing}\"\n      label=\"${args.label || nothing}\"\n      helper=\"${args.helper || nothing}\"\n      input-id=\"${args.inputId || nothing}\"\n      name=\"${args.name || nothing}\"\n      is-required=\"${args.isRequired || nothing}\"\n      input-mode-option=\"${args.inputModeOption || nothing}\"\n      autocomplete=\"${args.autocomplete || nothing}\"\n      enterkeyhint-option=\"${args.enterkeyhintOption || nothing}\"\n      is-readonly=\"${args.isReadonly || nothing}\"\n      is-disabled=\"${args.isDisabled || nothing}\"\n      error=\"${args.error || nothing}\"\n      is-autofocused=\"${args.isAutofocused || nothing}\"\n      prefix-value=\"${args.prefixValue || nothing}\"\n      postfix-value=\"${args.postfixValue || nothing}\"\n      icon-left=\"${args.iconLeft || nothing}\"\n      icon-right=\"${args.iconRight || nothing}\"></wink-input>`,\n} as Meta;\n\nexport const Basic = {\n  args: {},\n  parameters: {\n    controls: {\n      exclude: [\n        'autocomplete',\n        'enterkeyhintOption',\n        'error',\n        'iconRight',\n        'iconLeft',\n        'inputModeOption',\n        'isAutofocused',\n        'isReadonly',\n        'postfixValue',\n        'prefixValue',\n        'size',\n      ],\n    },\n  },\n};\nexport const Full = {\n  args: {},\n  parameters: {\n    controls: {\n      exclude: ['size'],\n    },\n  },\n};\n\nexport const Email = {\n  args: {\n    value: '',\n    placeholder: 'example@telenet.be',\n    label: 'Fill in your email',\n    inputId: 'inputId',\n    enterkeyhintOption: 'select',\n    isReadonly: false,\n    isAutofocused: false,\n    error: false,\n    type: 'text',\n    inputModeOption: INPUT_MODES.email,\n    isRequired: false,\n  },\n  parameters: {\n    controls: {\n      exclude: ['autocomplete', 'inputModeOption', 'postfixValue', 'prefixValue', 'prefixValue', 'size', 'value'],\n    },\n  },\n};\n\nexport const Numerical = {\n  args: {\n    value: 'Default input',\n    placeholder: '123456',\n    label: 'label Numerical',\n    inputId: 'inputId',\n    enterkeyhintOption: 'select',\n    isReadonly: false,\n    isAutofocused: false,\n    error: false,\n    type: 'number',\n    inputModType: INPUT_MODES.numeric,\n    isRequired: false,\n  },\n  parameters: {\n    controls: {\n      exclude: ['autocomplete', 'inputModeOption', 'postfixValue', 'prefixValue', 'size', 'type', 'value'],\n    },\n  },\n};\n\nexport const password = {\n  args: {\n    value: 'Password',\n    placeholder: 'password',\n    label: 'password',\n    inputId: 'inputId',\n    type: 'password',\n    isRequired: false,\n    autocomplete: 'new-password',\n    iconRight: 'eye',\n    inputModeOption: INPUT_MODES.text,\n  },\n  parameters: {\n    controls: {\n      exclude: ['inputModeOption', 'iconLeft', 'iconRight', 'isReadonly', 'postfixValue', 'prefixValue', 'size'],\n    },\n  },\n};\n\nexport const Text = {\n  args: {\n    value: 'text',\n    placeholder: 'text',\n    label: 'text',\n    inputId: 'inputId',\n    type: 'text',\n    enterkeyhintOption: '',\n    inputModeOption: INPUT_MODES.text,\n    isReadonly: false,\n    isAutofocused: false,\n    isRequired: false,\n  },\n  parameters: {\n    controls: {\n      exclude: ['autocomplete', 'inputModeOption', 'postfixValue', 'prefixValue', 'size'],\n    },\n  },\n};\n\nexport const Telephone = {\n  args: {\n    value: 'number',\n    placeholder: '015/33.45.67',\n    label: 'Telephone',\n    inputId: 'inputId',\n    type: 'number',\n    enterkeyhintOption: '',\n    inputModeOption: INPUT_MODES.tel,\n    isReadonly: false,\n    isAutofocused: false,\n    isRequired: false,\n  },\n  parameters: {\n    controls: {\n      exclude: ['autocomplete', 'inputModeOption', 'postfixValue', 'prefixValue', 'size'],\n    },\n  },\n};\n\nexport const Search = {\n  parameters: {\n    controls: {\n      exclude: [\n        'type',\n        'isDisabled',\n        'isRequired',\n        'helper',\n        'inputModeOption',\n        'prefixValue',\n        'postfixValue',\n        'autocomplete',\n        'enterkeyhintOption',\n        'isReadonly',\n        'error',\n        'iconLeft',\n        'iconRight',\n        'label',\n        'isAutofocused',\n      ],\n    },\n  },\n  render: (args: any) =>\n    html`<wink-input\n      appearance=\"search\"\n      size=\"${args.size || nothing}\"\n      icon-left=\"search\"\n      icon-right=\"backspace\"\n      input-mode-option=\"text\"\n      type=\"text\"\n      value=\"${args.value || nothing}\"\n      placeholder=\"${args.placeholder || nothing}\"\n      input-id=${args.searchId || nothing}\n      name=\"${args.name || nothing}\"></wink-input> `,\n};\n"]}