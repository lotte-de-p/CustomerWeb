{"version":3,"file":"toast.js","sourceRoot":"","sources":["../../../../../../../../../../src/components/toaster/_sub-comps/toast/toast.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Host, Prop, Listen, Watch } from '@stencil/core';\nimport { ToastType, TOAST_TYPES } from './models/toast.types';\nimport { Target, TARGETS } from '../../../../models/targets.types';\nimport { ICON_SIZES } from '../../../icon/models/icon.types';\n\n@Component({\n  tag: 'wink-toast',\n  styleUrls: {\n    telenet: 'styles/brands/toast.telenet.scss',\n    base: 'styles/brands/toast.base.scss',\n  },\n  shadow: true,\n})\nexport class Toast {\n  @Prop() appearance: ToastType = TOAST_TYPES.actionable;\n  @Prop() text = '';\n  @Prop() linkText?: string = 'Open Link';\n  @Prop() href?: string = '';\n  @Prop() target?: Target = TARGETS.self;\n  @Prop() duration? = 6000;\n  @Prop({ reflect: true, mutable: true }) isOpen = false;\n  @Prop({ reflect: true, mutable: true }) theme = 'telenet-light-theme';\n  @Prop({ reflect: true }) currentTheme = 'telenet-light-theme';\n\n  private timer: ReturnType<typeof setTimeout> | null = null;\n\n  private readonly iconsNamesMap = new Map([\n    [TOAST_TYPES.negative, 'cross-circle-filled'],\n    [TOAST_TYPES.positive, 'check-shape-filled'],\n  ]);\n\n  @Watch('isOpen')\n  watchOpenPropHandler(newValue: boolean, oldValue: boolean) {\n    if (newValue && !oldValue) {\n      this.closeToastAfterTimeout();\n    }\n  }\n\n  @Watch('currentTheme')\n  watchThemePropHandler(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.changeTheme(newValue);\n    }\n  }\n\n  @Listen('keydown', {\n    passive: true,\n  })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (ev.key === 'Escape') {\n      this.closeToast();\n    }\n  }\n\n  componentDidLoad() {\n    const currentTheme = localStorage.getItem('currentTheme') || 'telenet-light';\n    this.changeTheme(currentTheme + '-theme');\n    this.closeToastAfterTimeout();\n  }\n\n  private changeTheme(newValue: string) {\n    this.theme = newValue.includes('dark') ? newValue.replace('dark', 'light') : newValue.replace('light', 'dark');\n  }\n\n  private closeToast() {\n    this.isOpen = false;\n  }\n\n  private closeToastAfterTimeout() {\n    if (this.appearance !== TOAST_TYPES.actionable && this.duration && this.duration > 0) {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n\n      this.timer = setTimeout(() => {\n        this.closeToast();\n      }, Number(this.duration));\n    }\n  }\n\n  render() {\n    return (\n      <Host theme={this.theme} aria-hidden={this.isOpen ? 'false' : 'true'} role=\"alert\">\n        {(this.appearance === TOAST_TYPES.positive || this.appearance === TOAST_TYPES.negative) && (\n          <wink-icon\n            class={`toast-icon toast-icon-${this.appearance}`}\n            size={ICON_SIZES.md}\n            icon={this.iconsNamesMap.get(this.appearance)}></wink-icon>\n        )}\n\n        {this.text && <p class=\"toast-text\">{this.text}</p>}\n\n        {this.appearance === TOAST_TYPES.actionable && this.href && (\n          <wink-link\n            appearance=\"default\"\n            icon=\"\"\n            size=\"inherit\"\n            is-disabled=\"false\"\n            class=\"toast-link\"\n            target={this.target}\n            href={this.href}>\n            {this.linkText}\n          </wink-link>\n        )}\n\n        <wink-button\n          element=\"button\"\n          type=\"button\"\n          appearance=\"tertiary\"\n          size=\"sm\"\n          width=\"none\"\n          status=\"none\"\n          icon=\"cross\"\n          icon-position=\"center\"\n          exportparts=\"icon, icon-cross\"\n          class=\"hydrated toast-close\"\n          icon-button-aria-label=\"close toast\"\n          onClick={this.closeToast.bind(this)}></wink-button>\n      </Host>\n    );\n  }\n}\n"]}