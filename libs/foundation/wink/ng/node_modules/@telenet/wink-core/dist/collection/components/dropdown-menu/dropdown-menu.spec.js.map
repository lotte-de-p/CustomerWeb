{"version":3,"file":"dropdown-menu.spec.js","sourceRoot":"","sources":["../../../../../../../../src/components/dropdown-menu/dropdown-menu.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,MAAM,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;QAChC,MAAM,CAAC,GAAG,EAAW,CAAC;QAEtB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE;;;;;;;UAOF;SACL,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;OAoB3B,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;IAC7D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;QAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;QAC1B,IAAI,EAAE;;;;;;;SAOD;KACN,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;MAmB1B,CAAC,CAAC;AACR,CAAC,CAAC,CAAC","sourcesContent":["import { DropdownMenu } from './dropdown-menu';\nimport { newSpecPage } from '@stencil/core/testing';\ndescribe('wink-dropdown-menu', () => {\n  it('dropdown menu toggle open', () => {\n    const comp = new DropdownMenu();\n    const e = {} as Event;\n\n    comp['toggleDropdown'](e);\n    expect(comp.isExpanded).toBe(true);\n  });\n\n  it('should render dropdown correctly', async () => {\n    const page = await newSpecPage({\n      components: [DropdownMenu],\n      html: `\n      <wink-dropdown-menu item-selected=\"option 1\">\n         <wink-link>option 1</wink-link>\n         <wink-link>option 2</wink-link>\n         <wink-link>option 3</wink-link>\n         <wink-link>option 4</wink-link>\n      </wink-dropdown-menu>\n         `,\n    });\n    expect(page.root).toEqualHtml(`\n\n       <wink-dropdown-menu class=\"dropdown-menu--align-list--top-left\" exportparts=\"icon, icon-chevron-down-small\" item-selected=\"option 1\">\n            <mock:shadow-root>\n               <button class=\"dropdown-menu--heading\" tabindex=\"1\">\n               <slot name=\"dropdown-menu--avatar\"></slot>\n               default-1\n               <div class=\"dropdown-menu--chevron\">\n                  <wink-icon icon=\"chevron-down-small\" size=\"sm\"></wink-icon>\n               </button>\n            </div>\n            <ul class=\"dropdown-menu--list\">\n               <slot></slot>\n           </ul>\n         </mock:shadow-root>\n         <wink-link  class=\"active\">option 1</wink-link>\n         <wink-link >option 2</wink-link>\n         <wink-link >option 3</wink-link>\n         <wink-link >option 4</wink-link>\n      </wink-dropdown-menu>\n      `);\n  });\n});\n\nit('should render dropdown with correct tab index', async () => {\n  const page = await newSpecPage({\n    components: [DropdownMenu],\n    html: `\n     <wink-dropdown-menu item-selected=\"option 1\" dropdown-tab-index=3>\n        <wink-link>option 1</wink-link>\n        <wink-link>option 2</wink-link>\n        <wink-link>option 3</wink-link>\n        <wink-link>option 4</wink-link>\n     </wink-dropdown-menu>\n        `,\n  });\n  expect(page.root).toEqualHtml(`\n      <wink-dropdown-menu class=\"dropdown-menu--align-list--top-left\" exportparts=\"icon, icon-chevron-down-small\" item-selected=\"option 1\" dropdown-tab-index=3>\n           <mock:shadow-root>\n              <button class=\"dropdown-menu--heading\" tabindex=\"3\">\n              <slot name=\"dropdown-menu--avatar\"></slot>\n              default-1\n              <div class=\"dropdown-menu--chevron\">\n                 <wink-icon icon=\"chevron-down-small\" size=\"sm\"></wink-icon>\n              </button>\n           </div>\n           <ul class=\"dropdown-menu--list\">\n             <slot></slot>\n          </ul>\n        </mock:shadow-root>\n        <wink-link class=\"active\">option 1</wink-link>\n        <wink-link >option 2</wink-link>\n        <wink-link >option 3</wink-link>\n        <wink-link >option 4</wink-link>\n     </wink-dropdown-menu>\n     `);\n});\n"]}