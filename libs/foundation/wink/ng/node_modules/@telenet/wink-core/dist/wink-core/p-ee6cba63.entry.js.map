{"version":3,"names":["BUTTON_APPEARANCES","primary","secondary","tertiary","TYPES","button","submit","reset","file","BUTTON_ELEMENTS","input","a","BUTTON_SIZES","md","SIZES","sm","BUTTON_WIDTHS","none","full","BUTTON_STATUSES","disable","loading","skeleton","BUTTON_ICON_POSITIONS","left","right","buttonBaseCss","WinkButtonBaseStyle0","buttonTelenetCss","WinkButtonTelenetStyle0","Button","TARGETS","self","getText","this","status","text","loaderSVG","h","version","id","xmlns","x","y","width","height","viewBox","opacity","fill","d","attributeType","attributeName","type","from","to","dur","repeatCount","getClasses","element","appearance","size","iconPosition","icon","getAttributes","href","target","value","disabled","role","iconButtonAriaLabel","render","Host","key","exportparts","class"],"sources":["../core/src/components/button/models/button.types.tsx","../core/src/components/button/styles/brands/button.base.scss?tag=wink-button&mode=base&encapsulation=shadow","../core/src/components/button/styles/brands/button.telenet.scss?tag=wink-button&mode=telenet&encapsulation=shadow","../core/src/components/button/button.tsx"],"sourcesContent":["import { SIZES } from '../../../models/sizes.types';\n\nexport const BUTTON_APPEARANCES = {\n  primary: 'primary',\n  secondary: 'secondary',\n  tertiary: 'tertiary',\n} as const;\nexport type ButtonAppearance = (typeof BUTTON_APPEARANCES)[keyof typeof BUTTON_APPEARANCES];\n\nexport const TYPES = {\n  button: 'button',\n  submit: 'submit',\n  reset: 'reset',\n  file: 'file',\n} as const;\nexport type ButtonType = (typeof TYPES)[keyof typeof TYPES];\n\nexport const BUTTON_ELEMENTS = {\n  button: 'button',\n  input: 'input',\n  a: 'a',\n} as const;\nexport type ButtonElement = (typeof BUTTON_ELEMENTS)[keyof typeof BUTTON_ELEMENTS];\n\nexport const BUTTON_SIZES = {\n  md: SIZES.md,\n  sm: SIZES.sm,\n} as const;\nexport type ButtonSize = (typeof BUTTON_SIZES)[keyof typeof BUTTON_SIZES];\n\nexport const BUTTON_WIDTHS = {\n  none: 'none',\n  full: SIZES.full,\n} as const;\nexport type ButtonWidth = (typeof BUTTON_WIDTHS)[keyof typeof BUTTON_WIDTHS];\n\nexport const BUTTON_STATUSES = {\n  none: 'none',\n  disable: 'disable',\n  loading: 'loading',\n  skeleton: 'skeleton',\n} as const;\nexport type ButtonState = (typeof BUTTON_STATUSES)[keyof typeof BUTTON_STATUSES];\n\nexport const BUTTON_ICON_POSITIONS = {\n  left: 'left',\n  right: 'right',\n} as const;\nexport type ButtonIconPosition = (typeof BUTTON_ICON_POSITIONS)[keyof typeof BUTTON_ICON_POSITIONS];\n","@import '../vars/vars.base';\n@import '../button.default';\n","@import '../vars/vars.telenet';\n@import '../button.default';\n\n:host {\n  .button,\n  a.button,\n  button.button,\n  input.button {\n    @include font-body-regular;\n    &.primary {\n      font-weight: 700;\n      font-family: TelenetAlbra-Bold, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    }\n    &.secondary {\n      font-weight: 600;\n      font-family: TelenetAlbra-Semi, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    }\n    &.tertiary {\n      font-weight: 500;\n    }\n\n    &.size-sm {\n      font-size: var(--wink-button--sm-fs, 1.4rem);\n      line-height: var(--wink-button--sm-lh, 2rem);\n      @include media('from-lg') {\n        --wink-button--sm-fs: 1.6rem;\n        --wink-button--sm-lh: 2.4rem;\n      }\n\n      &.primary {\n        font-weight: 700;\n        font-family: TelenetAlbra-Bold, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n      }\n      &.secondary {\n        font-weight: 600;\n        font-family: TelenetAlbra-Semi, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n      }\n      &.tertiary {\n        font-weight: 500;\n      }\n    }\n  }\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { Target, TARGETS } from '../../models/targets.types';\nimport {\n  BUTTON_APPEARANCES,\n  BUTTON_ELEMENTS,\n  BUTTON_ICON_POSITIONS,\n  BUTTON_SIZES,\n  BUTTON_STATUSES,\n  BUTTON_WIDTHS,\n  ButtonAppearance,\n  ButtonElement,\n  ButtonIconPosition,\n  ButtonSize,\n  ButtonState,\n  ButtonType,\n  ButtonWidth,\n  TYPES,\n} from './models/button.types';\n\n@Component({\n  tag: 'wink-button',\n  styleUrls: {\n    telenet: 'styles/brands/button.telenet.scss',\n    base: 'styles/brands/button.base.scss',\n  },\n  shadow: true,\n})\nexport class Button {\n  @Prop() text?: string;\n  @Prop() element: ButtonElement = BUTTON_ELEMENTS.button;\n  @Prop() appearance: ButtonAppearance = BUTTON_APPEARANCES.secondary;\n  @Prop() size: ButtonSize = BUTTON_SIZES.md;\n  @Prop() width: ButtonWidth = BUTTON_WIDTHS.none;\n  @Prop() status: ButtonState = BUTTON_STATUSES.none;\n  @Prop() href?: string;\n  @Prop() target: Target = TARGETS.self;\n  @Prop() type: ButtonType = TYPES.button;\n  @Prop() icon?: string;\n  @Prop() iconButtonAriaLabel?: string;\n  @Prop() iconPosition?: ButtonIconPosition = BUTTON_ICON_POSITIONS.left;\n\n  private readonly getText = () => {\n    return this.status === BUTTON_STATUSES.loading ? 'Loading' : this.text;\n  };\n\n  private readonly loaderSVG = (\n    <svg\n      version=\"1.1\"\n      id=\"loader-1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 40 40\"\n      enable-background=\"new 0 0 40 40\"\n      aria-hidden={true}>\n      <path\n        opacity=\"0.2\"\n        fill=\"#000\"\n        d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946 s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634 c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"></path>\n      <path\n        fill=\"#000\"\n        d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0 C22.32,8.481,24.301,9.057,26.013,10.047z\">\n        <animateTransform\n          attributeType=\"xml\"\n          attributeName=\"transform\"\n          type=\"rotate\"\n          from=\"0 20 20\"\n          to=\"360 20 20\"\n          dur=\"0.5s\"\n          repeatCount=\"indefinite\"></animateTransform>\n      </path>\n    </svg>\n  );\n\n  private getClasses(): { [key: string]: boolean } {\n    return {\n      button: true,\n      [`type-${this.element}`]: this.element !== 'button',\n      [`${this.appearance}`]: true,\n      [`size-${this.size}`]: this.size !== BUTTON_SIZES.md,\n      [`icon-${this.iconPosition}`]: typeof this.icon !== 'undefined',\n      [`state-${this.status}`]: this.status !== 'none',\n      ['icon-button']: !this.getText() && this.icon !== '',\n    };\n  }\n\n  private getAttributes() {\n    return {\n      ...(this.element !== 'a' && { type: this.type }),\n      ...(this.element === 'a' && { href: this.href }),\n      ...(this.element === 'a' && { target: this.target }),\n      ...(this.element === 'input' && { value: this.getText() }),\n      disabled: (this.status === 'disable' || this.status === 'loading') && this.element !== 'a',\n      ...(this.element !== 'button' && { role: 'button' }),\n      ...((this.status === 'disable' || this.status === 'loading') && { ['aria-disabled']: 'true' }),\n      'aria-label': this.text ? this.text : this.iconButtonAriaLabel,\n    };\n  }\n\n  render() {\n    return (\n      <Host {...{ exportparts: this.icon && `icon, icon-${this.icon}` }}>\n        <this.element class={this.getClasses()} {...this.getAttributes()}>\n          {this.icon && this.status !== 'loading' && this.element !== 'input' && (\n            <wink-icon appearance=\"default\" icon={this.icon} size={this.size}></wink-icon>\n          )}\n          {this.status === BUTTON_STATUSES.loading && this.loaderSVG}\n\n          {this.element !== 'input' && this.getText()}\n        </this.element>\n      </Host>\n    );\n  }\n}\n"],"mappings":"0HAEO,MAAMA,EAAqB,CAChCC,QAAS,UACTC,UAAW,YACXC,SAAU,YAIL,MAAMC,EAAQ,CACnBC,OAAQ,SACRC,OAAQ,SACRC,MAAO,QACPC,KAAM,QAID,MAAMC,EAAkB,CAC7BJ,OAAQ,SACRK,MAAO,QACPC,EAAG,KAIE,MAAMC,EAAe,CAC1BC,GAAIC,EAAMD,GACVE,GAAID,EAAMC,IAIL,MAAMC,EAAgB,CAC3BC,KAAM,OACNC,KAAMJ,EAAMI,MAIP,MAAMC,EAAkB,CAC7BF,KAAM,OACNG,QAAS,UACTC,QAAS,UACTC,SAAU,YAIL,MAAMC,EAAwB,CACnCC,KAAM,OACNC,MAAO,SC9CT,MAAMC,EAAgB,szYACtB,MAAAC,EAAeD,ECDf,MAAME,EAAmB,6wcACzB,MAAAC,EAAeD,E,MC0BFE,EAAM,M,0DAEgBrB,EAAgBJ,O,gBACVL,EAAmBE,U,UAC/BU,EAAaC,G,WACXG,EAAcC,K,YACbE,EAAgBF,K,gCAErBc,EAAQC,K,UACN5B,EAAMC,O,yEAGWkB,EAAsBC,I,CAEjDS,QAAU,IAClBC,KAAKC,SAAWhB,EAAgBE,QAAU,UAAYa,KAAKE,KAGnDC,UACfC,EAAA,OACEC,QAAQ,MACRC,GAAG,WACHC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,MAAM,OACNC,OAAO,OACPC,QAAQ,YAAW,oBACD,gBAAe,cACpB,MACbR,EAAA,QACES,QAAQ,MACRC,KAAK,OACLC,EAAE,mUACJX,EAAA,QACEU,KAAK,OACLC,EAAE,sHACFX,EAAA,oBACEY,cAAc,MACdC,cAAc,YACdC,KAAK,SACLC,KAAK,UACLC,GAAG,YACHC,IAAI,OACJC,YAAY,iBAKZ,UAAAC,GACN,MAAO,CACLpD,OAAQ,KACR,CAAC,QAAQ6B,KAAKwB,WAAYxB,KAAKwB,UAAY,SAC3C,CAAC,GAAGxB,KAAKyB,cAAe,KACxB,CAAC,QAAQzB,KAAK0B,QAAS1B,KAAK0B,OAAShD,EAAaC,GAClD,CAAC,QAAQqB,KAAK2B,uBAAwB3B,KAAK4B,OAAS,YACpD,CAAC,SAAS5B,KAAKC,UAAWD,KAAKC,SAAW,OAC1C,CAAC,gBAAiBD,KAAKD,WAAaC,KAAK4B,OAAS,G,CAI9C,aAAAC,GACN,MAAO,IACD7B,KAAKwB,UAAY,KAAO,CAAEN,KAAMlB,KAAKkB,SACrClB,KAAKwB,UAAY,KAAO,CAAEM,KAAM9B,KAAK8B,SACrC9B,KAAKwB,UAAY,KAAO,CAAEO,OAAQ/B,KAAK+B,WACvC/B,KAAKwB,UAAY,SAAW,CAAEQ,MAAOhC,KAAKD,WAC9CkC,UAAWjC,KAAKC,SAAW,WAAaD,KAAKC,SAAW,YAAcD,KAAKwB,UAAY,OACnFxB,KAAKwB,UAAY,UAAY,CAAEU,KAAM,cACpClC,KAAKC,SAAW,WAAaD,KAAKC,SAAW,YAAc,CAAE,CAAC,iBAAkB,QACrF,aAAcD,KAAKE,KAAOF,KAAKE,KAAOF,KAAKmC,oB,CAI/C,MAAAC,GACE,OACEhC,EAACiC,EAAI,CAAAC,IAAA,2CAAOC,YAAavC,KAAK4B,MAAQ,cAAc5B,KAAK4B,QACvDxB,EAACJ,KAAKwB,QAAO,CAAAc,IAAA,2CAACE,MAAOxC,KAAKuB,gBAAkBvB,KAAK6B,iBAC9C7B,KAAK4B,MAAQ5B,KAAKC,SAAW,WAAaD,KAAKwB,UAAY,SAC1DpB,EAAA,aAAWqB,WAAW,UAAUG,KAAM5B,KAAK4B,KAAMF,KAAM1B,KAAK0B,OAE7D1B,KAAKC,SAAWhB,EAAgBE,SAAWa,KAAKG,UAEhDH,KAAKwB,UAAY,SAAWxB,KAAKD,W"}