{"version":3,"file":"indicator.spec.js","sourceRoot":"","sources":["../../../../../../../../../../src/components/tabs/_sub-comps/indicator/indicator.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;QACvE,MAAM,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC;QAE7B,MAAM,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE,KAAK,IAAI,EAAE;QACrF,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,mCAAmC;SAC1C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;GAQ/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,oDAAoD;SAC3D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;GAQ/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,kDAAkD;SACzD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;GAQ/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,oDAAoD;SAC3D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;GAQ/B,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { Indicator } from './indicator';\n\ndescribe('wink-indicator', () => {\n  it('should should create an instance of Indicator class component', () => {\n    const comp = new Indicator();\n\n    expect(comp).toBeInstanceOf(Indicator);\n  });\n\n  it('should render the element wink-indicator with default right indicator', async () => {\n    const page = await newSpecPage({\n      components: [Indicator],\n      html: `<wink-indicator></wink-indicator>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-indicator>\n      <div class=\"wrapper\">\n        <div class=\"indicator\">\n        <wink-icon appearance=\"default\" icon=\"chevron-right-small\" size=\"sm\"></wink-icon>\n        </div>\n      </div>\n    </wink-indicator>\n  `);\n  });\n\n  it('should render the element wink-indicator with left indicator', async () => {\n    const page = await newSpecPage({\n      components: [Indicator],\n      html: `<wink-indicator direction=\"left\"></wink-indicator>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-indicator direction=\"left\">\n      <div class=\"wrapper\">\n        <div class=\"indicator\">\n        <wink-icon appearance=\"default\" icon=\"chevron-left-small\" size=\"sm\"></wink-icon>\n        </div>\n      </div>\n    </wink-indicator>\n  `);\n  });\n\n  it('should render the element wink-indicator with up indicator', async () => {\n    const page = await newSpecPage({\n      components: [Indicator],\n      html: `<wink-indicator direction=\"up\"></wink-indicator>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-indicator direction=\"up\">\n      <div class=\"wrapper\">\n        <div class=\"indicator\">\n        <wink-icon appearance=\"default\" icon=\"chevron-up-small\" size=\"sm\"></wink-icon>\n        </div>\n      </div>\n    </wink-indicator>\n  `);\n  });\n\n  it('should render the element wink-indicator with down indicator', async () => {\n    const page = await newSpecPage({\n      components: [Indicator],\n      html: `<wink-indicator direction=\"down\"></wink-indicator>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <wink-indicator direction=\"down\">\n      <div class=\"wrapper\">\n        <div class=\"indicator\">\n        <wink-icon appearance=\"default\" icon=\"chevron-down-small\" size=\"sm\"></wink-icon>\n        </div>\n      </div>\n    </wink-indicator>\n  `);\n  });\n});\n"]}