{"version":3,"file":"badge.stories.js","sourceRoot":"","sources":["../../../../../../../../src/components/badge/badge.stories.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAChC,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AACnD,OAAO,EAAE,YAAY,EAAE,WAAW,EAAyB,MAAM,sBAAsB,CAAC;AAExF,eAAe;IACb,KAAK,EAAE,kBAAkB;IACzB,SAAS,EAAE,OAAO;IAClB,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,WAAW,EAAE,iEAAiE;YAC9E,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;SACzC;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;YACnC,WAAW,EAAE,kEAAkE;YAC/E,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,EAAE,EAAE;aAC1C;SACF;QACD,UAAU,EAAE;YACV,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;YACpC,WAAW,EACT,sGAAsG;YACxG,KAAK,EAAE;gBACL,YAAY,EAAE,EAAE,OAAO,EAAE,YAAY,CAAC,SAAS,EAAE;aAClD;SACF;KACF;IACD,UAAU,EAAE;QACV,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;KACvB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,cAAc;QACpB,IAAI,EAAE,WAAW,CAAC,EAAE;QACpB,UAAU,EAAE,YAAY,CAAC,SAAS;KACnC;CACM,CAAC;AAQV,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,IAAU,EAAE,EAAE;IACpC,OAAO,IAAI,CAAA,qBAAqB,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI,iBAAiB,IAAI,CAAC,UAAU,kBAAkB,CAAC;AAClH,CAAC,CAAC","sourcesContent":["import { Meta } from '@storybook/web-components';\nimport { html } from 'lit-html';\nimport { BADGES } from '../../models/badges.types';\nimport { BADGE_COLORS, BADGE_SIZES, BadgeColor, BadgeSize } from './models/badge.types';\n\nexport default {\n  title: 'COMPONENTS/Badge',\n  component: 'Badge',\n  argTypes: {\n    text: {\n      description: 'The text specifies the text content displayed within the badge.',\n      type: { name: 'string', required: true },\n    },\n    size: {\n      control: 'inline-radio',\n      options: Object.values(BADGE_SIZES),\n      description: 'The size property determines the visual dimensions of the badge.',\n      table: {\n        defaultValue: { summary: BADGE_SIZES.md },\n      },\n    },\n    background: {\n      control: 'select',\n      options: Object.values(BADGE_COLORS),\n      description:\n        \"The background property allows selection from predefined colors to set the badge's background color.\",\n      table: {\n        defaultValue: { summary: BADGE_COLORS.darkBrown },\n      },\n    },\n  },\n  parameters: {\n    badges: [BADGES.ready],\n  },\n  args: {\n    text: 'Onze snelste',\n    size: BADGE_SIZES.md,\n    background: BADGE_COLORS.darkBrown,\n  },\n} as Meta;\n\ntype Args = {\n  text: string;\n  size: BadgeSize;\n  background: BadgeColor;\n};\n\nexport const Default = (args: Args) => {\n  return html`<wink-badge text=\"${args.text}\" size=\"${args.size}\" background=\"${args.background}\"></wink-badge> `;\n};\n"]}