{"version":3,"names":["INPUT_APPEARANCES","default","search","INPUT_SIZES","sm","SIZES","md","INPUT_TYPES","text","password","number","tel","url","date","time","INPUT_AUTOCOMPLETES","on","off","name","address","email","username","newPassword","currentPassword","INPUT_MODES","none","numeric","decimal","INPUT_ENTERKEYHINTS","enter","done","go","next","previous","send","inputBaseCss","WinkInputBaseStyle0","inputTelenetCss","WinkInputTelenetStyle0","Input","getLabelId","this","inputId","getHelperId","getErrorMsgId","getAreaDescribedby","label","helper","error","length","filter","item","trim","join","getLabel","h","Fragment","htmlFor","id","class","isDisabled","isRequired","getPrefix","prefixValue","iconLeft","isReadonly","getPostfix","postfixValue","iconRight","getReadOnlyLength","value","inputWidth","showSearchBackSpaceIcon","appearance","showIconRight","handleChange","event","target","componentDidRender","render","Host","key","type","icon","size","onInput","e","placeholder","inputModeOption","autocomplete","autofocus","isAutofocused","enterkeyhint","enterkeyhintOption","required","readonly","disabled","input","style","width","ICON_SIZES"],"sources":["../core/src/components/input/models/input.types.tsx","../core/src/components/input/styles/brands/input.base.scss?tag=wink-input&mode=base&encapsulation=shadow","../core/src/components/input/styles/brands/input.telenet.scss?tag=wink-input&mode=telenet&encapsulation=shadow","../core/src/components/input/input.tsx"],"sourcesContent":["import { SIZES } from '../../../models/sizes.types';\n\nexport const INPUT_APPEARANCES = {\n  default: 'default',\n  search: 'search',\n} as const;\n\nexport type InputAppearance = (typeof INPUT_APPEARANCES)[keyof typeof INPUT_APPEARANCES];\n\nexport const INPUT_SIZES = {\n  sm: SIZES.sm,\n  md: SIZES.md,\n} as const;\nexport type InputSize = (typeof INPUT_SIZES)[keyof typeof INPUT_SIZES];\n\nexport const INPUT_TYPES = {\n  text: 'text',\n  password: 'password',\n  number: 'number',\n  tel: 'tel',\n  url: 'url',\n  date: 'date',\n  time: 'time',\n} as const;\nexport type InputType = (typeof INPUT_TYPES)[keyof typeof INPUT_TYPES];\n\nexport const INPUT_AUTOCOMPLETES = {\n  on: 'on',\n  off: 'off',\n  name: 'name',\n  address: 'address',\n  email: 'email',\n  username: 'username',\n  newPassword: 'new-password',\n  currentPassword: 'current-password',\n} as const;\nexport type InputAutocomplete = (typeof INPUT_AUTOCOMPLETES)[keyof typeof INPUT_AUTOCOMPLETES];\n\nexport const INPUT_MODES = {\n  none: 'none',\n  text: 'text',\n  numeric: 'numeric',\n  decimal: 'decimal',\n  tel: 'tel',\n  email: 'email',\n  search: 'search',\n  url: 'url',\n} as const;\nexport type InputMode = (typeof INPUT_MODES)[keyof typeof INPUT_MODES];\n\nexport const INPUT_ENTERKEYHINTS = {\n  none: 'none',\n  enter: 'enter',\n  done: 'done',\n  go: 'go',\n  next: 'next',\n  previous: 'previous',\n  search: 'search',\n  send: 'send',\n} as const;\nexport type InputEnterkeyhint = (typeof INPUT_ENTERKEYHINTS)[keyof typeof INPUT_ENTERKEYHINTS];\n","@import '../vars/vars.base';\n@import '../input.default';\n","@import '../vars/vars.telenet';\n@import '../input.default';\n","import { Component, Fragment, Host, h, Prop, State } from '@stencil/core';\nimport {\n  INPUT_APPEARANCES,\n  INPUT_AUTOCOMPLETES,\n  INPUT_ENTERKEYHINTS,\n  INPUT_MODES,\n  INPUT_SIZES,\n  INPUT_TYPES,\n  InputAppearance,\n  InputAutocomplete,\n  InputEnterkeyhint,\n  InputMode,\n  InputSize,\n  InputType,\n} from './models/input.types';\nimport { ICON_SIZES } from '../icon/models/icon.types';\n\n@Component({\n  tag: 'wink-input',\n  styleUrls: {\n    telenet: 'styles/brands/input.telenet.scss',\n    base: 'styles/brands/input.base.scss',\n  },\n  formAssociated: true,\n  shadow: true,\n})\nexport class Input {\n  @Prop({ reflect: true }) appearance: InputAppearance = INPUT_APPEARANCES.default;\n  @Prop({ mutable: true, reflect: true }) value = '';\n  @Prop() inputId!: string;\n  @Prop() name!: string;\n  @Prop() type: InputType = INPUT_TYPES.text;\n  @Prop() placeholder = '';\n  @Prop() isRequired = false;\n  @Prop() inputModeOption: InputMode = INPUT_MODES.text;\n  @Prop() autocomplete: InputAutocomplete = INPUT_AUTOCOMPLETES.off;\n  @Prop() enterkeyhintOption: InputEnterkeyhint = INPUT_ENTERKEYHINTS.none;\n  @Prop() isReadonly = false;\n  @Prop() isDisabled = false;\n  @Prop() isAutofocused = false;\n\n  @Prop() error = '';\n\n  @Prop() prefixValue = '';\n  @Prop() postfixValue = '';\n\n  @Prop() iconLeft = '';\n  @Prop() iconRight = '';\n  @State() showIconRight = true;\n  @State() inputWidth = 0;\n\n  @Prop() label = '';\n  @Prop() helper = '';\n\n  @Prop({ reflect: true }) size: InputSize = INPUT_SIZES.md;\n\n  private getLabelId() {\n    return this.inputId + ':Label';\n  }\n  private getHelperId() {\n    return this.inputId + ':Helper';\n  }\n  private getErrorMsgId() {\n    return this.inputId + ':Error';\n  }\n\n  private getAreaDescribedby() {\n    return [\n      this.label && this.getLabelId(),\n      this.helper && this.getHelperId(),\n      this.error?.length > 0 && this.getErrorMsgId(),\n    ]\n      .filter((item) => typeof item === 'string' && item.trim().length > 0)\n      .join(' ');\n  }\n\n  private get getLabel() {\n    if (this.label) {\n      return (\n        <Fragment>\n          <label\n            htmlFor={this.inputId}\n            id={this.getLabelId()}\n            class={{ label: true, 'label-disabled': this.isDisabled }}>\n            <div class=\"label-label\">\n              {this.label}\n              {this.helper && (\n                <div class=\"label-helper\" id={this.getHelperId()}>\n                  {this.helper}\n                </div>\n              )}\n            </div>\n            {!this.isRequired && <div class=\"label-optional\">Optional</div>}\n          </label>\n        </Fragment>\n      );\n    }\n  }\n  private get getPrefix() {\n    if (this.prefixValue && !this.iconLeft) {\n      return (\n        <Fragment>\n          <div\n            class={{\n              'input-affix input-affix-prefix': true,\n              'input-affix-disabled': this.isDisabled,\n              'input-affix-readonly': this.isReadonly,\n            }}>\n            {this.prefixValue}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n\n  private get getPostfix() {\n    if (this.postfixValue && !this.iconRight) {\n      return (\n        <Fragment>\n          <div\n            class={{\n              'input-affix input-affix-postfix': true,\n              'input-affix-disabled': this.isDisabled,\n              'input-affix-readonly': this.isReadonly,\n            }}>\n            {this.postfixValue}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n  private getReadOnlyLength(value: string) {\n    if (this.isReadonly && value.length > 0) {\n      this.inputWidth = value.length;\n    } else {\n      this.inputWidth = 0;\n    }\n  }\n\n  private showSearchBackSpaceIcon(value: string) {\n    if (value.length === 0 && this.appearance === INPUT_APPEARANCES.search) {\n      this.showIconRight = false;\n    } else {\n      this.showIconRight = true;\n    }\n  }\n\n  private handleChange(event: Event) {\n    this.value = (event.target as HTMLInputElement).value;\n    this.showSearchBackSpaceIcon(this.value);\n    this.getReadOnlyLength(this.value);\n  }\n\n  componentDidRender() {\n    this.showSearchBackSpaceIcon(this.value);\n    this.getReadOnlyLength(this.value);\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.getLabel}\n\n        <div\n          class={{\n            'input-wrapper': true,\n            'input-with-icon-button input-with-icon-button-left': this.iconLeft?.length > 0,\n            'input-with-icon-button input-with-icon-button-right': this.iconRight?.length > 0,\n          }}>\n          {this.getPrefix}\n\n          {this.iconLeft?.length > 0 && (\n            <div class=\"input-icon-button input-icon-button-left\">\n              <button type=\"button\" aria-label={this.iconLeft} class=\"input-icon-button-button\">\n                <wink-icon appearance=\"default\" icon={this.iconLeft} size={this.size}></wink-icon>\n              </button>\n            </div>\n          )}\n\n          <input\n            onInput={(e) => this.handleChange(e)}\n            id={this.inputId}\n            name={this.name}\n            type={this.type}\n            value={this.value}\n            placeholder={this.placeholder}\n            input-mode={this.inputModeOption}\n            autocomplete={this.autocomplete}\n            autofocus={this.isAutofocused}\n            enterkeyhint={this.enterkeyhintOption}\n            required={this.isRequired}\n            readonly={this.isReadonly}\n            disabled={this.isDisabled}\n            aria-describedby={this.getAreaDescribedby()}\n            aria-invalid={this.error?.length > 0}\n            class={{\n              input: true,\n            }}\n            style={{\n              width: this.isReadonly && this.inputWidth > 0 ? `${this.inputWidth}ch` : '',\n            }}\n          />\n          {this.iconRight?.length > 0 && this.showIconRight && (\n            <div class=\"input-icon-button input-icon-button-right\">\n              <button type=\"button\" aria-label={this.iconRight} class=\"input-icon-button-button\">\n                <wink-icon appearance=\"default\" icon={this.iconRight} size={this.size}></wink-icon>\n              </button>\n            </div>\n          )}\n\n          {this.getPostfix}\n        </div>\n\n        {this.error?.length > 0 && (\n          <div id={this.getErrorMsgId()} class=\"error-msg\">\n            <wink-icon appearance=\"default\" icon=\"error-shape\" size={ICON_SIZES.md}></wink-icon>\n            <div class=\"error-label font-caption \">{this.error}</div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}