{"version":3,"file":"telenet-ng-lib-step-flow.mjs","sources":["../../src/lib/interfaces/step-decision.interface.ts","../../src/lib/step.enum.ts","../../src/lib/step.model.ts","../../src/lib/step.builder.ts","../../src/lib/store/step-flow.actions.ts","../../src/lib/factories/template.factory.ts","../../src/lib/factories/step.factory.ts","../../src/lib/step-container/directives/step-host.directive.ts","../../src/lib/step-container/step-container.directive.ts","../../src/lib/store/step-flow.util.ts","../../src/lib/store/step-flow.state.ts","../../src/lib/step-container/step-container.component.ts","../../src/lib/step-container/step-container.component.html","../../src/lib/navigation-bar/navigation-bar-next-label.enum.ts","../../src/lib/navigation-bar/navigation-bar.component.html","../../src/lib/navigation-bar/navigation-bar.component.ts","../../src/lib/step-flow-lib.module.ts","../../src/telenet-ng-lib-step-flow.ts"],"sourcesContent":["import { Store } from '@ngxs/store';\nimport { StepFlowConfig } from './step-flow-config.interface';\nimport { StepConfig } from './step-config.interface';\n\nexport type StepDecisionType = (\n  store: Store,\n  possibleResults: StepFlowConfig[],\n  currentDecision?: StepFlowConfig\n) => StepFlowConfig;\n\nexport interface StepDecision {\n  currentDecision?: StepFlowConfig;\n  decisionFunction: StepDecisionType;\n  possibleResults: StepFlowConfig[];\n}\n\nexport function instanceOfStepDecision(stepConfig: StepConfig | StepDecision) {\n  return 'decisionFunction' in stepConfig;\n}\n","export enum StepEnum {\n  DEFAULT,\n  FINAL,\n  CONFIRM,\n}\n","import { Type } from '@angular/core';\nimport { StepEnum } from './step.enum';\nimport { StepLayoutOptionsInterface } from './step-layout-options.interface';\nimport { Observable } from 'rxjs';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport { StepAnalyticsOptions } from './interfaces/step-analytics-options.interface';\n\ntype ButtonCallBack = () => Observable<boolean | Record<string, unknown>>;\nexport class Step {\n  key: string;\n  type: StepEnum = StepEnum.DEFAULT;\n  template: Type<unknown>;\n  titleParameterValue: Observable<string>;\n  component: { selector: unknown };\n  withNextButton: boolean;\n  nextButtonLabel = 'btn.steps.next';\n  nextButtonCallback: ButtonCallBack;\n  prevButtonCallback: ButtonCallBack;\n  previousStepDisabled: boolean;\n  asAlternativeFirstStep: boolean;\n  image: string;\n  imageMobile: string;\n  isImageScrollable: boolean;\n  isEnabled = true;\n  isCompleted = false;\n  layoutOptions?: StepLayoutOptionsInterface;\n  overwriteFlowLabel?: string;\n  chosenProduct$?: Observable<OmapiProduct | unknown>;\n  order: number;\n\n  analyticsOptions?: StepAnalyticsOptions;\n\n  constructor(key: string) {\n    this.key = key;\n    this.withNextButton = true;\n  }\n\n  public isFinal(): boolean {\n    return this.type === StepEnum.FINAL;\n  }\n\n  public setCompleted(completedState: boolean) {\n    this.isCompleted = completedState;\n  }\n\n  public isConfirm() {\n    return this.type === StepEnum.CONFIRM;\n  }\n}\n","import { Step } from './step.model';\nimport { StepEnum } from './step.enum';\nimport { Observable } from 'rxjs';\nimport { StepLayoutOptionsInterface } from './step-layout-options.interface';\nimport { StepAnalyticsOptions } from './interfaces/step-analytics-options.interface';\nimport { Type } from '@angular/core';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\n\nexport class StepBuilder {\n  private readonly _step: Step;\n\n  private constructor(key: string) {\n    this._step = new Step(key);\n  }\n\n  public static builder(key: string): StepBuilder {\n    return new StepBuilder(key);\n  }\n\n  public withLayoutOptions(layout?: StepLayoutOptionsInterface): StepBuilder {\n    if (layout) {\n      this._step.layoutOptions = layout;\n    }\n    return this;\n  }\n\n  public withAnalyticsOptions(analyticsOptions?: StepAnalyticsOptions): StepBuilder {\n    if (analyticsOptions) {\n      this._step.analyticsOptions = analyticsOptions;\n    }\n    return this;\n  }\n\n  public withImage(image?: string): StepBuilder {\n    if (image) {\n      this._step.image = image;\n    }\n    return this;\n  }\n\n  public withComponent(selector: unknown): StepBuilder {\n    this._step.component = { selector: selector };\n    return this;\n  }\n\n  public withOrder(order: number): StepBuilder {\n    this._step.order = order;\n    return this;\n  }\n\n  public withEnabledState(state = true): StepBuilder {\n    this._step.isEnabled = state;\n    return this;\n  }\n\n  public withTemplate(template: Type<unknown>): StepBuilder {\n    this._step.template = template;\n    return this;\n  }\n\n  public withCompletedState(state = true): StepBuilder {\n    this._step.setCompleted(state);\n    return this;\n  }\n\n  public withPreviousStepDisabled(state = false): StepBuilder {\n    this._step.previousStepDisabled = state;\n    return this;\n  }\n\n  public withFinalState(): StepBuilder {\n    this._step.type = StepEnum.FINAL;\n    return this;\n  }\n\n  public withConfirmState(): StepBuilder {\n    this._step.type = StepEnum.CONFIRM;\n    return this;\n  }\n\n  public withOverwriteFlowLabel(flowLabel: string): StepBuilder {\n    this._step.overwriteFlowLabel = flowLabel;\n    return this;\n  }\n\n  public withTitleParameterValue(value: Observable<string>): StepBuilder {\n    this._step.titleParameterValue = value;\n    return this;\n  }\n\n  public withChosenProductValue(value: Observable<OmapiProduct | unknown>): StepBuilder {\n    this._step.chosenProduct$ = value;\n    return this;\n  }\n\n  public withMobileImage(value: string): StepBuilder {\n    this._step.imageMobile = value;\n    return this;\n  }\n\n  public withScrollableImage(scrollable = true): StepBuilder {\n    this._step.isImageScrollable = scrollable;\n    return this;\n  }\n\n  public withAsAlternativeFirstStep(): StepBuilder {\n    this._step.asAlternativeFirstStep = true;\n    return this;\n  }\n\n  public build(): Step {\n    return this._step;\n  }\n}\n","import { Step } from '../step.model';\nimport { StepFlowConfig } from '../interfaces/step-flow-config.interface';\nimport { StepDecision } from '../interfaces/step-decision.interface';\n\nexport interface StepEnabledActionState {\n  stepKey: string;\n  state: boolean;\n}\n\nexport class SetStepConfigurationAction {\n  public static readonly type = '[StepFlow] set the step configuration';\n\n  constructor(public stepFlowConfig: StepFlowConfig) {}\n}\n\nexport class ReportStepLoadTimingAction {\n  public static readonly type = '[StepFlow] set whether to capture step load time or not';\n\n  constructor(public reportStepLoadTime: boolean) {}\n}\n\nexport class SetStepNavigationStartTimeAction {\n  public static readonly type = '[StepFlow] set step navigation start time in milliseconds';\n}\n\nexport class SetStepsAction {\n  public static readonly type = '[StepFlow] set the steps for the stepflow';\n\n  constructor(public steps: Step[]) {}\n}\n\nexport class GoToNextStepAction {\n  public static readonly type = '[StepFlow] Go to next step';\n\n  constructor(public isStepComplete?: boolean) {}\n}\n\nexport class GoToFinalStepAction {\n  public static readonly type = '[StepFlow] Go to final step';\n}\n\nexport class GoToPreviousStepAction {\n  public static readonly type = '[StepFlow] Go to previous step';\n}\n\nexport class SetStepToEditAction {\n  public static readonly type = '[StepFlow] set the stepflow to a certain step so it can be edited';\n\n  constructor(public stepKey: string) {}\n}\n\nexport class SetStepIncompleteAction {\n  public static readonly type = '[StepFlow] set a certain step to the incomplete state';\n\n  constructor(public stepKey: string) {}\n}\n\nexport class SetStepCompleteAction {\n  public static readonly type = '[StepFlow] set a certain step to the complete state';\n\n  constructor(public stepKey: string) {}\n}\n\nexport class InsertStepsBeforeAction {\n  public static readonly type = '[StepFlow] Insert steps before a certain step with a certain key';\n\n  constructor(\n    public steps: Step[],\n    public stepKey: string\n  ) {}\n}\n\nexport class InsertStepsAfterAction {\n  public static readonly type = '[StepFlow] Insert steps behind a certain step with a certain key';\n\n  constructor(\n    public steps: Step[],\n    public stepKey: string\n  ) {}\n}\n\nexport class RemoveStepsWithStepKeysAction {\n  public static readonly type = '[StepFlow] Remove the steps with a key in the given list';\n\n  constructor(public stepKeys: string[]) {}\n}\n\nexport class SetStepsEnabledState {\n  public static readonly type = '[StepFlow] Set the enabled states of multiple steps';\n\n  constructor(public steps: StepEnabledActionState[]) {}\n}\n\nexport class UpdateStepAction {\n  public static readonly type = '[StepFlow] Change the properties of a certain step';\n\n  constructor(public step: Step) {}\n}\n\nexport class UpdateCurrentStepImageAction {\n  public static readonly type = '[StepFlow] Update the current step image';\n\n  constructor(public image: string) {}\n}\n\nexport class SetCurrentDecisionOnStepFlowConfig {\n  public static readonly type = '[StepFlow] Set the current decision on a step flow config';\n\n  constructor(\n    public stepDecision: StepDecision,\n    public currentFlowConfig: StepFlowConfig\n  ) {}\n}\n\nexport class ETFStepValidAction {\n  public static readonly type = '[StepFlow] Set ETF step valid';\n\n  constructor(public payload: boolean) {}\n}\n\nexport class GoToStepAction {\n  public static readonly type = '[StepFlow] Change current step with given step by key';\n\n  constructor(public stepKey: string) {}\n}\n\nexport class NotifyStepRendered {\n  public static readonly type = '[StepFlow] Notify step rendered';\n\n  constructor(public stepKey: string) {}\n}\n","import { StepBuilder } from '../step.builder';\nimport { StepConfig } from '../interfaces/step-config.interface';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class TemplateFactory {\n  determineTemplate(_stepBuilder: StepBuilder, _stepConfig: StepConfig): void {\n    // default is empty\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { StepFlowConfig } from '../interfaces/step-flow-config.interface';\nimport { Step } from '../step.model';\nimport { StepConfig } from '../interfaces/step-config.interface';\nimport { instanceOfStepDecision, StepDecision } from '../interfaces/step-decision.interface';\nimport { StepBuilder } from '../step.builder';\nimport { SetCurrentDecisionOnStepFlowConfig } from '../store/step-flow.actions';\nimport { TemplateFactory } from './template.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StepFactory {\n  constructor(private readonly templateFactory: TemplateFactory) {}\n\n  createFlow(store: Store, stepFlowConfig: StepFlowConfig): Step[] {\n    let steps: Step[] = [];\n    stepFlowConfig.steps.forEach((stepConfig: StepConfig | StepDecision) => {\n      if (instanceOfStepDecision(stepConfig)) {\n        steps = steps.concat(this.decideFlow(store, stepConfig as StepDecision));\n      } else {\n        steps.push(this.createStep(stepConfig as StepConfig));\n      }\n    });\n    return steps;\n  }\n\n  createStep(stepConfig: StepConfig) {\n    const stepBuilder = StepBuilder.builder(stepConfig.key)\n      .withLayoutOptions(stepConfig.layoutOptions)\n      .withAnalyticsOptions(stepConfig.analyticsOptions)\n      .withComponent(stepConfig.component)\n      .withImage(stepConfig.imagePath);\n    this.templateFactory.determineTemplate(stepBuilder, stepConfig);\n    if (stepConfig.isFinalState) {\n      stepBuilder.withFinalState();\n    }\n    return stepBuilder.build();\n  }\n\n  decideFlow(store: Store, stepDecision: StepDecision): Step[] {\n    const decidedFlow = stepDecision.decisionFunction(\n      store,\n      stepDecision.possibleResults,\n      stepDecision.currentDecision\n    );\n    store.dispatch(new SetCurrentDecisionOnStepFlowConfig(stepDecision, decidedFlow));\n    if (stepDecision.currentDecision !== decidedFlow && typeof decidedFlow.initFlowAction === 'function') {\n      decidedFlow.initFlowAction(store);\n    }\n    return this.createFlow(store, decidedFlow);\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[step-host]',\n})\nexport class StepHostDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appStepContainer]',\n})\nexport class StepContainerDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { Step } from '../step.model';\nimport { findIndex } from 'lodash-es';\n\nexport class StepFlowUtil {\n  public static hasNextStep(currentStep: Step, steps: Step[]): boolean {\n    if (currentStep?.isFinal?.()) {\n      return true;\n    }\n    return this.getStepByRelativeIndexOffset(currentStep, steps, '+', 1) !== undefined;\n  }\n\n  public static hasPreviousStep(currentStep: Step, steps: Step[]): boolean {\n    if (currentStep?.isFinal?.()) {\n      return false;\n    }\n    return this.getStepByRelativeIndexOffset(currentStep, steps, '-', 1) !== undefined;\n  }\n\n  public static getStepCount(steps: Step[]): number {\n    return this.getActiveSteps(steps).length;\n  }\n\n  public static getActiveSteps(steps: Step[]): Step[] {\n    return steps.filter((step) => {\n      return step.isEnabled;\n    });\n  }\n\n  public static getStepIndex(currentStep: Step, steps: Step[]): number {\n    const activeSteps = this.getActiveSteps(steps);\n    return findIndex(activeSteps, (step) => step.key === currentStep.key);\n  }\n\n  public static getStepByRelativeIndexOffset(\n    currentStep: Step | undefined,\n    steps: Step[],\n    operator: string,\n    offset: number\n  ): Step | undefined {\n    const activeSteps = this.getActiveSteps(steps);\n    const currentStepIndex = findIndex(activeSteps, (step: Step) => step.key === currentStep?.key);\n    switch (operator) {\n      case '+':\n        return currentStepIndex === undefined ? undefined : activeSteps[currentStepIndex + offset];\n      case '-':\n        return currentStepIndex === undefined ? undefined : activeSteps[currentStepIndex - offset];\n      default:\n        throw new Error(`${operator} is not a correct operator`);\n    }\n  }\n\n  public static getNextIncompletedStep(steps: Step[]): Step | undefined {\n    return this.getActiveSteps(steps).find((step) => !step.isCompleted);\n  }\n\n  public static getActiveStep(steps: Step[], stepKey: string): Step | undefined {\n    return this.getActiveSteps(steps).find((step) => step.key === stepKey);\n  }\n}\n","import { Draft, produce } from 'immer';\nimport { Step } from '../step.model';\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\nimport {\n  ETFStepValidAction,\n  GoToFinalStepAction,\n  GoToNextStepAction,\n  GoToPreviousStepAction,\n  GoToStepAction,\n  InsertStepsAfterAction,\n  InsertStepsBeforeAction,\n  RemoveStepsWithStepKeysAction,\n  ReportStepLoadTimingAction,\n  SetCurrentDecisionOnStepFlowConfig,\n  SetStepCompleteAction,\n  SetStepConfigurationAction,\n  SetStepIncompleteAction,\n  SetStepNavigationStartTimeAction,\n  SetStepsAction,\n  SetStepsEnabledState,\n  SetStepToEditAction,\n  UpdateCurrentStepImageAction,\n  UpdateStepAction,\n} from './step-flow.actions';\nimport { Injectable } from '@angular/core';\nimport { StepFlowConfig } from '../interfaces/step-flow-config.interface';\nimport { StepFactory } from '../factories/step.factory';\nimport { StepFlowUtil } from './step-flow.util';\nimport { StepDecision } from '../interfaces/step-decision.interface';\nimport { Log, LogFactory } from '@telenet/ng-lib-shared';\n\nexport interface StepFlowStateModel {\n  initialized: boolean;\n  stepConfiguration?: StepFlowConfig;\n  steps: Step[];\n  currentStep?: Step;\n  reportStepLoadTiming: boolean;\n  stepNavigationStartTime: number;\n  isETFStepValid: boolean;\n}\n\n@State<StepFlowStateModel>({\n  name: 'stepFlow',\n  defaults: {\n    initialized: false,\n    stepConfiguration: undefined,\n    steps: [],\n    currentStep: undefined,\n    reportStepLoadTiming: false,\n    stepNavigationStartTime: 0,\n    isETFStepValid: false,\n  },\n})\n@Injectable()\nexport class StepFlowState {\n  private readonly log: Log = LogFactory.createLogger(StepFlowState);\n\n  constructor(\n    public store: Store,\n    private readonly stepFactory: StepFactory\n  ) {}\n\n  @Selector()\n  public static currentStep(state: StepFlowStateModel): Step | undefined {\n    return state.currentStep;\n  }\n\n  @Selector()\n  public static currentStepImage(state: StepFlowStateModel): string {\n    return state.currentStep?.image || '';\n  }\n\n  @Selector()\n  public static stepNumber(state: StepFlowStateModel): number {\n    if (!state?.currentStep) {\n      return 0;\n    }\n    return state.steps.indexOf(state?.currentStep) + 1;\n  }\n\n  @Selector()\n  public static key(state: StepFlowStateModel): string {\n    return state.currentStep?.key || '';\n  }\n\n  @Selector()\n  public static steps(state: StepFlowStateModel): Step[] {\n    return state && state.steps;\n  }\n\n  @Selector()\n  public static stepNavigationStartTime(state: StepFlowStateModel): number {\n    return state.stepNavigationStartTime;\n  }\n\n  @Selector()\n  public static reportStepLoadTiming(state: StepFlowStateModel): boolean {\n    return state.reportStepLoadTiming;\n  }\n\n  @Selector()\n  public static isETFStepValid(state: StepFlowStateModel): boolean {\n    return state.isETFStepValid;\n  }\n\n  static containsStep(type: string) {\n    return createSelector([StepFlowState], (state: StepFlowStateModel) => {\n      return !!state.steps.find((step) => step.key === type);\n    });\n  }\n\n  @Action(SetStepsAction)\n  public initialise(ctx: StateContext<StepFlowStateModel>, action: SetStepsAction): void {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = action.steps;\n        draft.currentStep = action.steps[0];\n      })\n    );\n  }\n\n  @Action(SetStepConfigurationAction)\n  public setStepConfigurationAction(ctx: StateContext<StepFlowStateModel>, action: SetStepConfigurationAction): void {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.stepConfiguration = action.stepFlowConfig;\n      })\n    );\n    this.decideSteps(ctx, action.stepFlowConfig);\n  }\n\n  @Action(ReportStepLoadTimingAction)\n  public ReportStepLoadTimingAction(ctx: StateContext<StepFlowStateModel>, action: ReportStepLoadTimingAction) {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.reportStepLoadTiming = action.reportStepLoadTime;\n      })\n    );\n  }\n\n  @Action(SetStepNavigationStartTimeAction)\n  public SetStepNavigationStartTimeAction(\n    ctx: StateContext<StepFlowStateModel>,\n    _action: SetStepNavigationStartTimeAction\n  ) {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.stepNavigationStartTime = new Date().getTime();\n      })\n    );\n  }\n\n  @Action(GoToFinalStepAction)\n  public goToFinalStepAction(ctx: StateContext<StepFlowStateModel>, _action: GoToFinalStepAction): void {\n    const steps = ctx.getState().steps;\n\n    let nextStep: Step | undefined;\n    steps\n      .filter((step) => step && Object.keys(step).length)\n      .forEach((step) => {\n        if (step.isFinal()) {\n          return;\n        } else {\n          if (step.isCompleted) {\n            nextStep = StepFlowUtil.getNextIncompletedStep(steps);\n          } else {\n            step.setCompleted(true);\n            nextStep = StepFlowUtil.getStepByRelativeIndexOffset(step, steps, '+', 1);\n          }\n        }\n      });\n\n    ctx.setState(produce(ctx.getState(), this.setCurrentStep(nextStep)));\n  }\n\n  @Action(GoToNextStepAction)\n  public goToNextStepAction(ctx: StateContext<StepFlowStateModel>, _action: GoToNextStepAction): void {\n    this.decideSteps(ctx, ctx.getState().stepConfiguration);\n    const currentStep = ctx.getState().currentStep;\n    const steps = ctx.getState().steps;\n    if (currentStep?.isFinal?.()) {\n      this.log.logError('The current step is of type: FINAL. It is not possible to go to the next step.');\n      return;\n    }\n\n    let nextStep: Step | undefined;\n    if (currentStep?.isCompleted) {\n      nextStep = StepFlowUtil.getNextIncompletedStep(steps);\n    } else if (currentStep) {\n      currentStep.setCompleted(_action.isStepComplete ?? true);\n      nextStep = StepFlowUtil.getStepByRelativeIndexOffset(currentStep, steps, '+', 1);\n    }\n\n    ctx.setState(produce(ctx.getState(), this.setCurrentStep(nextStep)));\n  }\n\n  @Action(GoToPreviousStepAction)\n  public goToPreviousStepAction(ctx: StateContext<StepFlowStateModel>, _action: GoToPreviousStepAction): void {\n    this.decideSteps(ctx, ctx.getState().stepConfiguration);\n\n    let previousStep: Step | undefined;\n    const currentStep = ctx.getState().currentStep;\n    const steps = ctx.getState().steps;\n\n    if (currentStep?.isCompleted) {\n      previousStep = StepFlowUtil.getNextIncompletedStep(steps);\n    } else {\n      previousStep = StepFlowUtil.getStepByRelativeIndexOffset(currentStep, steps, '-', 1);\n\n      previousStep?.setCompleted?.(false);\n    }\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        if (previousStep) {\n          draft.currentStep = previousStep;\n        }\n      })\n    );\n  }\n\n  @Action(SetStepToEditAction)\n  public setStepToEdit(ctx: StateContext<StepFlowStateModel>, action: SetStepToEditAction) {\n    const nextStep = ctx.getState().steps.find((step) => step.key === action.stepKey);\n    ctx.setState(produce(ctx.getState(), this.setCurrentStep(nextStep)));\n  }\n\n  @Action(SetStepIncompleteAction)\n  public setStepIncomplete(ctx: StateContext<StepFlowStateModel>, action: SetStepIncompleteAction) {\n    const updatedSteps = ctx.getState().steps.map((step) => {\n      if (step.key === action.stepKey) {\n        step.isCompleted = false;\n      }\n      return step;\n    });\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = updatedSteps;\n      })\n    );\n  }\n\n  @Action(SetStepCompleteAction)\n  public setStepCompleteAction(ctx: StateContext<StepFlowStateModel>, action: SetStepCompleteAction) {\n    const updatedSteps = ctx.getState().steps.map((step) => {\n      if (step.key === action.stepKey) {\n        step.isCompleted = true;\n      }\n      return step;\n    });\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = updatedSteps;\n      })\n    );\n  }\n\n  @Action(InsertStepsBeforeAction)\n  public InsertStepsBeforeAction(ctx: StateContext<StepFlowStateModel>, action: InsertStepsBeforeAction) {\n    const stepIndex = ctx.getState().steps.findIndex((step) => step.key === action.stepKey);\n    const steps = [...ctx.getState().steps];\n    steps.splice(stepIndex, 0, ...action.steps);\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = steps;\n      })\n    );\n  }\n\n  @Action(InsertStepsAfterAction)\n  public InsertStepsAfterAction(ctx: StateContext<StepFlowStateModel>, action: InsertStepsAfterAction) {\n    const stepIndex = ctx.getState().steps.findIndex((step) => step.key === action.stepKey) + 1;\n    const steps = [...ctx.getState().steps];\n    steps.splice(stepIndex, 0, ...action.steps);\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = steps;\n      })\n    );\n  }\n\n  @Action(RemoveStepsWithStepKeysAction)\n  public RemoveStepsWithStepKeysAction(ctx: StateContext<StepFlowStateModel>, action: RemoveStepsWithStepKeysAction) {\n    const steps = ctx.getState().steps.filter((step: Step) => {\n      return !action.stepKeys.includes(step.key);\n    });\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = steps;\n      })\n    );\n  }\n\n  @Action(SetStepsEnabledState)\n  public setStepsEnabledState(ctx: StateContext<StepFlowStateModel>, action: SetStepsEnabledState) {\n    const updatedSteps = ctx.getState().steps.map((step) => {\n      const foundStep = action.steps.find((s) => s.stepKey === step.key);\n      if (foundStep) {\n        step.isEnabled = foundStep.state;\n      }\n      return step;\n    });\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = updatedSteps;\n      })\n    );\n  }\n\n  @Action(UpdateStepAction)\n  public updateStepAction(ctx: StateContext<StepFlowStateModel>, action: UpdateStepAction) {\n    const updatedSteps = ctx.getState().steps.map((step) => {\n      if (step.key === action.step.key) {\n        return action.step;\n      }\n      return step;\n    });\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = updatedSteps;\n      })\n    );\n  }\n\n  @Action(UpdateCurrentStepImageAction)\n  public updateCurrentStepImageAction(ctx: StateContext<StepFlowStateModel>, action: UpdateCurrentStepImageAction) {\n    if (ctx.getState().currentStep) {\n      ctx.setState(\n        produce(ctx.getState(), (draft) => {\n          if (draft.currentStep) {\n            draft.currentStep.image = action.image;\n          }\n        })\n      );\n    }\n  }\n\n  @Action(SetCurrentDecisionOnStepFlowConfig)\n  public setCurrentDecisionOnStepFlowConfig(\n    ctx: StateContext<StepFlowStateModel>,\n    action: SetCurrentDecisionOnStepFlowConfig\n  ) {\n    const stepDecisionIndex = ctx.getState().stepConfiguration?.steps?.findIndex((step) => {\n      return step === action.stepDecision;\n    });\n    if (stepDecisionIndex) {\n      ctx.setState(\n        produce(ctx.getState(), (draft) => {\n          if (draft.stepConfiguration?.steps[stepDecisionIndex]) {\n            (draft.stepConfiguration.steps[stepDecisionIndex] as StepDecision).currentDecision =\n              action.currentFlowConfig;\n          }\n        })\n      );\n    }\n  }\n\n  @Action(ETFStepValidAction)\n  public isETFStepValid(ctx: StateContext<StepFlowStateModel>, action: ETFStepValidAction) {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.isETFStepValid = action.payload;\n      })\n    );\n  }\n\n  @Action(GoToStepAction)\n  public goToStepAction(ctx: StateContext<StepFlowStateModel>, action: GoToStepAction): void {\n    this.decideSteps(ctx, ctx.getState().stepConfiguration);\n    const steps = ctx.getState().steps;\n    const nextStep = StepFlowUtil.getActiveStep(steps, action.stepKey);\n\n    ctx.setState(produce(ctx.getState(), this.setCurrentStep(nextStep)));\n  }\n\n  private decideSteps(ctx: StateContext<StepFlowStateModel>, stepFlowConfig?: StepFlowConfig) {\n    if (stepFlowConfig) {\n      const steps = this.stepFactory.createFlow(this.store, stepFlowConfig);\n      ctx.setState(\n        produce(ctx.getState(), (draft) => {\n          draft.steps = steps;\n          if (!ctx.getState().currentStep) {\n            draft.currentStep = steps[0];\n          }\n        })\n      );\n    }\n  }\n\n  private setCurrentStep(nextStep: Step | undefined) {\n    return (draft: Draft<StepFlowStateModel>) => {\n      if (nextStep) {\n        draft.currentStep = nextStep;\n      }\n    };\n  }\n}\n","import { Store } from '@ngxs/store';\nimport { StepInterface } from './step.interface';\nimport { StepContainerDirective } from './step-container.directive';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { DataLayerAttributes, DataLayerService } from '@telenet/ng-lib-datalayer';\nimport { StepFlowUtil } from '../store/step-flow.util';\nimport { Step } from '../step.model';\nimport { isEmpty } from 'lodash-es';\nimport { AbstractBaseComponent, LoaderData, LoaderService } from '@telenet/ng-lib-page';\nimport { StepFlowAnalyticsConfig } from '../interfaces/step-flow-analytics-config.interface';\nimport { StepFlowState } from '../store/step-flow.state';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-step-container',\n  templateUrl: 'step-container.component.html',\n})\nexport class StepContainerComponent extends AbstractBaseComponent implements OnInit {\n  @Input() stepFlowAnalyticsConfig: StepFlowAnalyticsConfig;\n  @Input() messageGroup: string;\n  @ViewChild(StepContainerDirective, { static: true }) stepContainer: StepContainerDirective;\n  previousStep: Step;\n  stepNavigationEndTime: number;\n\n  constructor(\n    private readonly store: Store,\n    private readonly loaderService: LoaderService,\n    private readonly dataLayerService: DataLayerService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.obs(this.store.select(StepFlowState.currentStep))\n      .pipe(untilDestroyed(this))\n      .subscribe((currentStep: Step | undefined) => {\n        if (currentStep) {\n          this.stepNavigationEndTime = new Date().getTime();\n          this.reportStepLoadTime(currentStep);\n          const viewContainerRef = this.stepContainer.viewContainerRef;\n          viewContainerRef.clear();\n          const componentRef = viewContainerRef.createComponent(currentStep.template);\n          (componentRef.instance as StepInterface).store = this.store;\n          (componentRef.instance as StepInterface).currentStep = currentStep;\n          if (this.messageGroup) {\n            (componentRef.instance as StepInterface).messageGroup = this.messageGroup;\n          }\n\n          if (!isEmpty(this.stepFlowAnalyticsConfig)) {\n            const attributes: DataLayerAttributes = {\n              stepId: this.getAnalyticsStepName(),\n              intent: this.stepFlowAnalyticsConfig.analyticsIntent,\n              flowType: this.stepFlowAnalyticsConfig.analyticsFlowType,\n              cart: this.stepFlowAnalyticsConfig.cart,\n            };\n            this.dataLayerService.addStepViewEvent(attributes);\n          }\n        }\n      });\n    this.getLastAPIExecutionTime();\n  }\n\n  private getLastAPIExecutionTime(): void {\n    this.loaderService.loadingStatus.pipe(untilDestroyed(this)).subscribe((loaderData: LoaderData) => {\n      if (loaderData.isAPIExecutionInProgress) {\n        this.stepNavigationEndTime = 0;\n      } else {\n        this.stepNavigationEndTime = loaderData.dataCapturedOn;\n      }\n    });\n  }\n\n  private reportStepLoadTime(currentStep: Step): void {\n    const reportStepLoadTiming = this.store.selectSnapshot(StepFlowState.reportStepLoadTiming);\n    if (reportStepLoadTiming) {\n      const steps = this.store.selectSnapshot(StepFlowState.steps);\n\n      const currentStepIndex = StepFlowUtil.getStepIndex(currentStep, steps);\n      const previousStepIndex = this.previousStep ? StepFlowUtil.getStepIndex(this.previousStep, steps) : 0;\n      if (currentStepIndex - previousStepIndex >= 0) {\n        this.delayStepLoadTime();\n      }\n      this.previousStep = currentStep;\n    }\n  }\n\n  private delayStepLoadTime(): void {\n    setTimeout(\n      (stepNavigationEndTime: number) => {\n        if (stepNavigationEndTime === this.stepNavigationEndTime && this.stepNavigationEndTime !== 0) {\n          this.fireStepLoadTimeEvent();\n        } else {\n          this.delayStepLoadTime();\n        }\n      },\n      10,\n      this.stepNavigationEndTime\n    );\n  }\n\n  private fireStepLoadTimeEvent(): void {\n    const stepNavigationStartTime = this.store.selectSnapshot(StepFlowState.stepNavigationStartTime);\n\n    const attributes: DataLayerAttributes = {\n      itemName:\n        stepNavigationStartTime > 0\n          ? ((this.stepNavigationEndTime - stepNavigationStartTime) / 1000).toFixed(2).toString()\n          : (\n              (this.stepNavigationEndTime -\n                (window.performance.getEntries()[0] as PerformanceNavigationTiming).fetchStart) /\n              1000\n            )\n              .toFixed(2)\n              .toString(),\n    };\n    this.dataLayerService.addStepLoadTimeEvent(attributes);\n  }\n\n  private getAnalyticsStepName(): string {\n    const currentStep = this.store.selectSnapshot(StepFlowState.currentStep);\n    if (currentStep?.analyticsOptions?.name) {\n      return `${currentStep.analyticsOptions.name}`;\n    }\n    return `${currentStep?.key}`;\n  }\n}\n","<ng-container appStepContainer></ng-container>\n","export enum NavigationBarNextLabelEnum {\n  START = 'ng.step-flow.start-step-label',\n  NEXT = 'ng.step-flow.next-step-label',\n  FINAL = 'ng.step-flow.close-label',\n  CONFIRM = 'ng.step-flow.confirm-label',\n}\n","<div\n  [class.disabled]=\"isLoading\"\n  [class.sticky-footer--flow__dynamic-shadow]=\"dynamicShadow\"\n  class=\"sticky-footer-v2 position--fixed background-white width--full py--m px--xm p--xm--md display--flex justify-content--center align-items--center box-sizing--inherit shadow--xs-inverse position--bottom position--left\">\n  <div\n    class=\"sticky-footer-v2__container width--full default-max-site-width display--flex justify-content--between align-items--center\">\n    <!-- left arrow and back text-->\n    <div class=\"back-section\">\n      <ng-template [ngIf]=\"styling === 'default'\">\n        <a\n          (click)=\"goToPreviousStep()\"\n          [class.disabled]=\"isLoading\"\n          [class.visibility--hide]=\"(!hasPreviousStep || previousStepDisabled) && !isCurrentStepAlternativeFirstStep()\"\n          class=\"link link--with-icon link--subtle\">\n          {{ 'ng.step-flow.previous-step-label' | translate }}\n        </a>\n      </ng-template>\n      <ng-template [ngIf]=\"styling === 'buttons'\">\n        <button\n          class=\"button button--secondary button__icon--position-left\"\n          (click)=\"goToPreviousStep()\"\n          [class.disabled]=\"isLoading\"\n          [class.display--none-important]=\"\n            (!hasPreviousStep || previousStepDisabled) && !isCurrentStepAlternativeFirstStep()\n          \">\n          <i class=\"icon icon-chevron-left\"></i>\n          <span>{{ 'ng.step-flow.previous-step-label' | translate }}</span>\n        </button>\n      </ng-template>\n    </div>\n    <div *ngIf=\"this.showStepCounter\" class=\"progress-paging\">\n      <p>{{ currentStepNumber }}/{{ stepCount }}</p>\n    </div>\n    <div\n      *ngIf=\"this.showSalesContactNumber\"\n      class=\"display--flex flex-direction--column font-weight--bold align-items--center\">\n      <div>\n        <span>{{ messageGroup + '.info.free-sales-number' }}</span>\n      </div>\n      <a\n        ><span>{{ messageGroup + '.free-sales-number' | translate }}</span></a\n      >\n      <div>\n        <span>{{ messageGroup + '.info.free-sales-number' }}</span>\n      </div>\n      <a>{{ messageGroup + '.free-sales-number' | translate }}</a>\n    </div>\n    <div [class.next-section]=\"currentStepNumber !== 1 && !isConfirmationStep\">\n      <ng-template [ngIf]=\"styling === 'default'\">\n        <a\n          (click)=\"goToNextStep()\"\n          [class.disabled]=\"isLoading\"\n          [class.visibility--hide]=\"!hasNextStep\"\n          [ngClass]=\"\n            (currentStepNumber === 1 && !isCurrentStepAlternativeFirstStep()) || isConfirmationStep\n              ? 'button button--primary'\n              : 'link link--chevron'\n          \">\n          {{ this.nextStepLabel | translate }}\n        </a>\n      </ng-template>\n      <ng-template [ngIf]=\"styling === 'buttons'\">\n        <button\n          class=\"button button--primary button__icon--position-right\"\n          (click)=\"goToNextStep()\"\n          [class.disabled]=\"isLoading\"\n          [class.visibility--hide]=\"!hasNextStep\">\n          <ng-container *ngIf=\"buttonTextOverride; else defaultLabel\">\n            <span>{{ this.buttonTextOverride | translate }}</span>\n          </ng-container>\n          <ng-template #defaultLabel>\n            <span>{{ this.nextStepLabel | translate }}</span> </ng-template\n          ><i class=\"icon icon-chevron-right\"></i>\n        </button>\n      </ng-template>\n    </div>\n  </div>\n  <div *ngIf=\"this.showStepProgressBar\" class=\"progress-bar\">\n    <div class=\"indicator-progress ready-{{ this.progressPercentage }}\"></div>\n  </div>\n</div>\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { FormErrorService } from '@telenet/ng-lib-form';\nimport { Store } from '@ngxs/store';\nimport { NavigationBarNextLabelEnum } from './navigation-bar-next-label.enum';\nimport { GoToNextStepAction, GoToPreviousStepAction, StepFlowState, StepFlowUtil } from '../store';\nimport { Step } from '../step.model';\nimport { take, tap } from 'rxjs/operators';\nimport { LoaderData, LoaderService } from '@telenet/ng-lib-page';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-step-navigation-bar-monorepo',\n  templateUrl: './navigation-bar.component.html',\n})\nexport class NavigationBarComponent implements OnInit {\n  @Input() dynamicShadow: boolean;\n  @Input() showStepCounter: boolean;\n  @Input() showStepProgressBar: boolean;\n  @Input() showSalesContactNumber: boolean;\n  @Input() styling: 'default' | 'buttons' = 'default';\n  @Input() buttonTextOverride: string;\n  @Input() messageGroup = '';\n  currentStep: Step;\n  isConfirmationStep: boolean;\n  stepCount: number;\n  currentStepNumber: number;\n  progressPercentage: string;\n  hasNextStep = false;\n  hasPreviousStep = false;\n  previousStepDisabled = false;\n  isLoading = false;\n  nextStepLabel: NavigationBarNextLabelEnum = NavigationBarNextLabelEnum.START;\n  alternativeFirstStep = false;\n  buttonTypeOverride: NavigationBarNextLabelEnum;\n\n  constructor(\n    private readonly store: Store,\n    private readonly formErrorService: FormErrorService,\n    private readonly loaderService: LoaderService,\n    private readonly changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.store\n      .select(StepFlowState.currentStep)\n      .pipe(\n        untilDestroyed(this),\n        tap((currentStep?: Step) => {\n          if (currentStep) {\n            this.alternativeFirstStep = currentStep.asAlternativeFirstStep;\n          }\n        })\n      )\n      .subscribe((currentStep?: Step) => {\n        if (!currentStep) {\n          throw Error('Could not initialise stepper navigation bar');\n        } else {\n          this.currentStep = currentStep;\n        }\n        this.isConfirmationStep = currentStep.isConfirm();\n        const steps = this.store.selectSnapshot(StepFlowState.steps);\n        this.stepCount = StepFlowUtil.getStepCount(steps);\n        this.currentStepNumber = StepFlowUtil.getStepIndex(currentStep, steps) + 1;\n        this.hasNextStep = StepFlowUtil.hasNextStep(currentStep, steps);\n        this.hasPreviousStep = StepFlowUtil.hasPreviousStep(currentStep, steps);\n        this.previousStepDisabled = currentStep.previousStepDisabled;\n        this.nextStepLabel = this.getNextLabel();\n        this.progressPercentage = this.calculateProgress();\n      });\n    this.loaderService.loadingStatus.pipe(untilDestroyed(this)).subscribe((loaderData: LoaderData) => {\n      this.isLoading = !!loaderData.isAPIExecutionInProgress;\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  goToNextStep(): void {\n    if (!this.isLoading) {\n      this.formErrorService.submit$.next(null);\n      if (this.currentStep.nextButtonCallback) {\n        this.currentStep\n          .nextButtonCallback()\n          .pipe(take(1))\n          .subscribe((response: unknown) => {\n            if (response) {\n              this.store.dispatch(new GoToNextStepAction());\n            }\n          });\n      } else {\n        this.store.dispatch(new GoToNextStepAction());\n      }\n    }\n  }\n\n  private calculateProgress(): string {\n    return ((this.currentStepNumber / this.stepCount) * 100).toFixed(0);\n  }\n\n  getNextLabel(): NavigationBarNextLabelEnum {\n    if (this.buttonTypeOverride) {\n      return this.buttonTypeOverride;\n    } else if (this.isCurrentStepAlternativeFirstStep() || this.currentStep.isConfirm()) {\n      return NavigationBarNextLabelEnum.CONFIRM;\n    } else if (this.isCurrentStepFirstStep()) {\n      return NavigationBarNextLabelEnum.START;\n    } else if (this.currentStep.isFinal()) {\n      return NavigationBarNextLabelEnum.FINAL;\n    } else {\n      return NavigationBarNextLabelEnum.NEXT;\n    }\n  }\n\n  private isCurrentStepFirstStep() {\n    return this.currentStepNumber === 1;\n  }\n\n  goToPreviousStep(): void {\n    if (this.currentStep.prevButtonCallback) {\n      this.currentStep\n        .prevButtonCallback()\n        .pipe(take(1))\n        .subscribe((response: unknown) => {\n          if (response) {\n            this.store.dispatch(new GoToPreviousStepAction());\n          }\n        });\n    } else {\n      this.store.dispatch(new GoToPreviousStepAction());\n    }\n  }\n\n  isCurrentStepAlternativeFirstStep(): boolean {\n    return this.isCurrentStepFirstStep() && this.alternativeFirstStep;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StepContainerDirective, StepHostDirective, StepContainerComponent } from './step-container';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { NavigationBarComponent } from './navigation-bar/navigation-bar.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule],\n  declarations: [StepContainerDirective, StepHostDirective, StepContainerComponent, NavigationBarComponent],\n  exports: [StepContainerComponent, StepContainerDirective, StepHostDirective, NavigationBarComponent],\n  providers: [TranslateService],\n})\nexport class StepFlowLibModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.TemplateFactory","i2.StepFactory","__decorate","i2","i3"],"mappings":"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"}