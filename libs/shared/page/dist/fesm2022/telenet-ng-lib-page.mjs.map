{"version":3,"file":"telenet-ng-lib-page.mjs","sources":["../../src/lib/contexthub/constants/contexthub.constant.ts","../../src/lib/contexthub/services/context-hub-generic-store.service.ts","../../src/lib/cache/cache.service.ts","../../src/lib/page/client-browser-type/browser-type.enum.ts","../../src/lib/page/client-browser-type/client-browser-type.service.ts","../../src/lib/page/enums/customer-category.enum.ts","../../src/lib/page/enums/customer-status.enum.ts","../../src/lib/page/enums/customer-brand.enum.ts","../../src/lib/page/enums/query-param.enum.ts","../../src/lib/i18n/language.enum.ts","../../src/lib/page/language/language.service.ts","../../src/lib/page/normalization/normalization.service.ts","../../src/lib/page/path-categorisation/path-categorisation.service.ts","../../src/lib/page/url/url.service.ts","../../src/lib/page/url/url-param.model.ts","../../src/lib/page/url/window.testfactory.ts","../../src/lib/page/json-url/json-url.service.ts","../../src/lib/page/media-query/device-types.enum.ts","../../src/lib/page/media-query/media-query.service.ts","../../src/lib/page/module-federated-debug-info/module-federated-debug-info.service.ts","../../src/lib/page/module-federated-debug-info/module-federated-debug-info.component.ts","../../src/lib/page/module-federated-debug-info/module-federated-debug-info.module.ts","../../src/lib/page/common/abstract-base.component.ts","../../src/lib/page/common/abstract-card.component.ts","../../src/lib/page/loader/loaderData.model.ts","../../src/lib/page/loader/services/loader.service.ts","../../src/lib/page/loader/loader.component.ts","../../src/lib/page/loader/loader-type.enums.ts","../../src/lib/page/loader/loader.module.ts","../../src/lib/page/asset/service/asset.service.ts","../../src/lib/page/asset/directives/image-src-path/image-src-path.directive.ts","../../src/lib/page/asset/directives/image-src-path/image-src-path.module.ts","../../src/lib/page/asset/directives/brand-image/brand-image.directive.ts","../../src/lib/i18n/label-key-type.enum.ts","../../src/lib/i18n/main-translate-loader.ts","../../src/lib/i18n/missing-translation.service.ts","../../src/lib/i18n/missing-translation.handler.ts","../../src/lib/i18n/label.util.ts","../../src/lib/i18n/i18n.service.ts","../../src/lib/i18n/translate-testing.module.ts","../../src/lib/directives/click-outside.directive.ts","../../src/lib/experience-fragment/experience-fragment.service.ts","../../src/telenet-ng-lib-page.ts"],"sourcesContent":["export class ContexthubConstants {\n  static CONTEXTHUB = 'ContextHub';\n  static MESSAGE_GROUP_NBALIST = 'nbaList';\n  static STORE_NAME_CONTACT_DETAILS = 'contactDetails';\n  static MESSAGE_GROUP_CONTACT_DETAILS = 'contact-details';\n  static STORE_NAME_PEGA = 'pega';\n  static ANGULAR_STORE_SERVICE_REF = 'angularStoreServicesRef';\n  static EVENT_STORE_READY = 'store-ready';\n}\n","import { Observable, ReplaySubject } from 'rxjs';\nimport { ContexthubConstants } from '../constants/contexthub.constant';\nimport { ContextHubModelInterface } from '../interfaces/context-hub-model-interface';\nimport { ContextHubStoreConfigInterface } from '../interfaces/context-hub-store-config.interface';\nimport { Inject, NgZone } from '@angular/core';\nimport { DataLayerAttributes, DataLayerService, EventCategoryEnum, EventTypeEnum } from '@telenet/ng-lib-datalayer';\nimport { DirectCallLabelEnum } from 'udl';\n\nexport class ContextHubGenericStoreService<T extends ContextHubModelInterface<T>> {\n  protected readonly STORE_DATA_LOADED_CALL_LABEL = 'store_data_loaded';\n\n  protected contextHubSubject: ReplaySubject<T> = new ReplaySubject<T>(1);\n\n  private isGetDataCallInvoked = false;\n\n  constructor(\n    protected _ngZone: NgZone,\n    @Inject('Window') protected window: Window,\n    protected dataLayerService: DataLayerService,\n    protected storeConfig: ContextHubStoreConfigInterface<T>\n  ) {\n    this.registerAngularService();\n    this.registerStoreEventHook();\n  }\n  enrich<P>(_data: P): T {\n    throw new Error('Method not Supported');\n  }\n  onLoadData<P>(_data?: P): Observable<T> {\n    throw new Error('Method not Supported');\n  }\n\n  getStoreData(): ReplaySubject<T> {\n    const store = this.getStore();\n    if (store) {\n      const uniqueBindIdentifier = store.name + '_store_ready';\n      const triggerForPastEvents = true;\n      store.eventing.once(\n        ContexthubConstants.EVENT_STORE_READY,\n        () => {\n          if (!this.isGetDataCallInvoked) {\n            this.isGetDataCallInvoked = true;\n            store.getData(true);\n          }\n        },\n        uniqueBindIdentifier,\n        triggerForPastEvents\n      );\n    }\n\n    return this.contextHubSubject;\n  }\n\n  updateStoreData<PData>(data: PData, updateTimestamp: boolean = true): void {\n    const store = this.getStore();\n    store?.updateStoreData(data, updateTimestamp);\n  }\n\n  onStoreDataLoaded(storeDataObj: T): void {\n    if (this.contextHubSubject) {\n      storeDataObj = this.handleEnrich(storeDataObj);\n      this.contextHubSubject.next(storeDataObj);\n      this.contextHubSubject.complete();\n      this.contextHubSubject = new ReplaySubject<T>(1);\n      this.isGetDataCallInvoked = false;\n    }\n  }\n\n  private registerAngularService() {\n    if (!this.window[ContexthubConstants.ANGULAR_STORE_SERVICE_REF]) {\n      this.window[ContexthubConstants.ANGULAR_STORE_SERVICE_REF] = {};\n    }\n\n    const angularStoreServiceRef = this.window[ContexthubConstants.ANGULAR_STORE_SERVICE_REF];\n    if (angularStoreServiceRef) {\n      angularStoreServiceRef[this.storeConfig.serviceName] = { service: this, zone: this._ngZone };\n    }\n  }\n\n  private getStore() {\n    const contextHub = this.window[ContexthubConstants.CONTEXTHUB];\n    if (contextHub === undefined || contextHub === null || contextHub?.getStore === null) {\n      return null;\n    }\n\n    return contextHub.getStore?.(this.storeConfig.storeName);\n  }\n\n  private handleEnrich<PData>(storeData: PData): T {\n    try {\n      return this.enrich(storeData);\n    } catch (e) {\n      if (this.storeConfig.storeModel?.enrich) {\n        return this.storeConfig.storeModel.enrich(storeData);\n      }\n\n      return {} as T;\n    }\n  }\n\n  private registerStoreEventHook() {\n    const store = this.getStore();\n    if (store === null) {\n      return;\n    }\n\n    this.sendDataLayerEventOnStoreEvent(\n      store,\n      this.STORE_DATA_LOADED_CALL_LABEL,\n      DirectCallLabelEnum.STORE_DATA_LOADED\n    );\n  }\n\n  private sendDataLayerEventOnStoreEvent(\n    store: StoreInterface,\n    storeEvent: string,\n    directCallLabel: DirectCallLabelEnum\n  ) {\n    const triggerForPastEvents = true;\n    store.eventing['once'](\n      storeEvent + ':' + store.name,\n      () => this.sendDataLayerStoreEvent('contexthub ' + storeEvent, directCallLabel, store),\n      store.name + '_' + storeEvent,\n      triggerForPastEvents\n    );\n  }\n\n  private sendDataLayerStoreEvent(eventName: string, directCallLabel: DirectCallLabelEnum, store: StoreInterface) {\n    const eventInfoData = this.dataLayerService.createEventInfo(eventName, EventTypeEnum.EVENT_TYPE_CH_STORE);\n    const category = this.dataLayerService.createCategory(EventCategoryEnum.PRIMARY_CATEGORY_GENERAL);\n    const attributes: DataLayerAttributes = {\n      storeName: store.name,\n    };\n\n    this.dataLayerService.sendEvent({ eventInfo: eventInfoData, attributes, category, directCallLabel });\n  }\n}\n\nexport interface StoreInterface {\n  eventing: Record<string, (...args: unknown[]) => boolean | undefined>;\n  name: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n  private cache = {};\n\n  get<T>(key: string): Observable<T> {\n    return this.cache[key];\n  }\n\n  add<T>(key: string, response$: Observable<T>): void {\n    this.cache[key] = response$.pipe(shareReplay({ bufferSize: 1, refCount: false }));\n  }\n\n  remove(key: string): void {\n    delete this.cache[key];\n  }\n}\n","export enum BrowserTypeEnum {\n  EDGE,\n  OPERA,\n  CHROME,\n  INTERNET_EXPLORER,\n  FIREFOX,\n  SAFARI,\n  UNKNOWN,\n}\n","import { Injectable } from '@angular/core';\nimport { BrowserTypeEnum } from './browser-type.enum';\n\n@Injectable({ providedIn: 'root' })\nexport class ClientBrowserTypeService {\n  private static readonly SUBSTRING_NOT_IN_STRING_DELIMETER = -1;\n\n  clientBrowserType(): BrowserTypeEnum {\n    const agent = window.navigator.userAgent.toLowerCase();\n\n    if (agent.indexOf('edge') > ClientBrowserTypeService.SUBSTRING_NOT_IN_STRING_DELIMETER) {\n      return BrowserTypeEnum.EDGE;\n    } else if (agent.indexOf('opr') > ClientBrowserTypeService.SUBSTRING_NOT_IN_STRING_DELIMETER && !!window['opr']) {\n      return BrowserTypeEnum.OPERA;\n    } else if (\n      agent.indexOf('chrome') > ClientBrowserTypeService.SUBSTRING_NOT_IN_STRING_DELIMETER &&\n      !!window['chrome']\n    ) {\n      return BrowserTypeEnum.CHROME;\n    } else if (agent.indexOf('trident') > ClientBrowserTypeService.SUBSTRING_NOT_IN_STRING_DELIMETER) {\n      return BrowserTypeEnum.INTERNET_EXPLORER;\n    } else if (agent.indexOf('firefox') > ClientBrowserTypeService.SUBSTRING_NOT_IN_STRING_DELIMETER) {\n      return BrowserTypeEnum.FIREFOX;\n    } else if (agent.indexOf('safari') > ClientBrowserTypeService.SUBSTRING_NOT_IN_STRING_DELIMETER) {\n      return BrowserTypeEnum.SAFARI;\n    } else {\n      return BrowserTypeEnum.UNKNOWN;\n    }\n  }\n\n  isClientUsingSafari(): boolean {\n    return this.clientBrowserType() === BrowserTypeEnum.SAFARI;\n  }\n}\n","export enum CustomerCategoryEnum {\n  RESIDENTIAL = 'RESIDENTIAL',\n  BUSINESS = 'BUSINESS',\n  FLEET_PORTAL = 'FLEET-PORTAL',\n  BUSINESS_LINE = 'Business',\n  RESIDENTIAL_LINE = 'Residential',\n  ORPHAN = 'ORPHAN USER',\n  FLEET_MANAGER = 'FLEET MANAGER',\n  FLEET_USER = 'FLEET USER',\n  LEGACY = 'LEGACY USER',\n}\n","export enum CustomerStatusEnum {\n  ACTIVE = 'ACTIVE',\n}\n","export enum CustomerBrandEnum {\n  BRAND_TELENET = 'TELENET',\n  BRAND_BASE = 'BASE',\n}\n","export enum QueryParamEnum {\n  FLOW = 'flow',\n  PGSTATUS = 'pgstatus',\n  ITEM = 'item',\n  PRODUCT_TYPE = 'producttype',\n  SALES_ORDER_ID = 'sid',\n  PRODUCT_IDENTIFIER = 'pid',\n  STATUSES = 'statuses',\n  INTENT = 'intent',\n  SOURCE = 'source',\n  SOURCE_NBA = 'nba',\n  SOURCE_ITS_ME = 'itsme',\n  SOURCE_EMAIL = 'email',\n  VAL = 'val',\n  SO_TOKEN = 'token',\n  JWT_TOKEN = 'jwt',\n  FLOW_MARKETING = 'marketing',\n  IDENTIFIER = 'identifier',\n  STEP = 'step',\n  INTENT_SUFFIX = 'intentsuffix',\n  ACTION = 'action',\n  INSTALLATION_LOCATION_ID = 'installationLocationId',\n  SDATA = 'sdata',\n}\n","export enum LanguageEnum {\n  NL = 'nl',\n  FR = 'fr',\n  EN = 'en',\n}\n","import { Inject, Injectable } from '@angular/core';\nimport localeNL from '@angular/common/locales/nl-BE';\nimport localeFR from '@angular/common/locales/fr-BE';\nimport localeEN from '@angular/common/locales/en-BE';\nimport { LanguageEnum } from '../../i18n/language.enum';\n\n@Injectable({ providedIn: 'root' })\nexport class LanguageService {\n  constructor(@Inject('Window') private readonly window: Window) {}\n\n  language?: LanguageEnum;\n\n  getLanguage(): LanguageEnum {\n    let lang = this.window.document.documentElement.lang;\n    lang = lang && lang.toLowerCase();\n    if (!this.language && lang) {\n      switch (true) {\n        case lang.includes(LanguageEnum.FR):\n          return LanguageEnum.FR;\n        case lang.includes(LanguageEnum.EN):\n          return LanguageEnum.EN;\n        case lang.includes(LanguageEnum.NL):\n        default:\n          return LanguageEnum.NL;\n      }\n    } else {\n      return LanguageEnum.NL;\n    }\n  }\n\n  getLocale(): unknown {\n    switch (this.getLanguage()) {\n      case LanguageEnum.FR:\n        return localeFR;\n      case LanguageEnum.EN:\n        return localeEN;\n      case LanguageEnum.NL:\n      default:\n        return localeNL;\n    }\n  }\n\n  getLocaleString(): string {\n    switch (this.getLanguage()) {\n      case LanguageEnum.FR:\n        return 'fr-BE';\n      case LanguageEnum.EN:\n        return 'en-BE';\n      case LanguageEnum.NL:\n      default:\n        return 'nl-BE';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NormalizationService {\n  normalizeKey(key?: string | null) {\n    if (key) {\n      return key\n        .replace(/ /g, '-')\n        .replace(/\\./g, '-')\n        .replace(/[^0-9a-zA-Z_-]/g, '')\n        .toLowerCase();\n    }\n    return '';\n  }\n\n  normalizeList(list?: string[] | null) {\n    if (list?.length) {\n      return list.map((item) => this.normalizeKey(item));\n    }\n    return [];\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { CustomerCategoryEnum } from '../enums/customer-category.enum';\nimport { CustomerBrandEnum } from '../enums/customer-brand.enum';\n\ntype TranslationLabelPostfixes = 'BRAND_POSTFIX' | 'CATEGORY_POSTFIX' | 'BRAND_CATEGORY_POSTFIX';\ntype PostfixMapping = {\n  [Key in TranslationLabelPostfixes]: string;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PathCategorisationService {\n  constructor(@Inject('Window') private readonly window: Window) {}\n\n  getPostfixVariables(): PostfixMapping {\n    return {\n      BRAND_POSTFIX: this.getBrandPostfix(),\n      CATEGORY_POSTFIX: this.getCategoryPostfix(),\n      BRAND_CATEGORY_POSTFIX: this.getBrandPostfix() + this.getCategoryPostfix(),\n    };\n  }\n\n  getBrandPostfix(): string {\n    const brandSuffix = this.getBrandLabelSuffix();\n    return brandSuffix ? `.${brandSuffix}` : '';\n  }\n\n  getCategoryPostfix(): string {\n    const categoryLabelSuffix = this.getValueFromWindowByProperty('categoryLabelSuffix');\n    if (categoryLabelSuffix) {\n      return `.${categoryLabelSuffix}`;\n    }\n    if (window.location.pathname.indexOf('/business/') !== -1) {\n      return '.tfb';\n    }\n    return '';\n  }\n\n  getBrandLabelSuffix(): string {\n    return this.getValueFromWindowByProperty('brandLabelSuffix');\n  }\n\n  getValueFromWindowByProperty(property: string): string {\n    return this.window['TelenetGroup']?.pathCategorisation?.[property];\n  }\n\n  getLabelSuffix(): string {\n    return this.getValueFromWindowByProperty('labelSuffix');\n  }\n\n  getCustomerBrand(): string {\n    return this.getValueFromWindowByProperty('customerBrand');\n  }\n\n  getCustomerCategory(): string {\n    return this.getValueFromWindowByProperty('customerCategory');\n  }\n\n  isCustomerOfBrandTypes(customerBrandEnums: CustomerBrandEnum[] = []): boolean {\n    return customerBrandEnums.includes(this.getCustomerBrand() as CustomerBrandEnum);\n  }\n\n  isCustomerOfBrand(customerBrand: CustomerBrandEnum): boolean {\n    return this.getCustomerBrand() === customerBrand;\n  }\n\n  isCustomerOfType(type: CustomerCategoryEnum): boolean {\n    return this.getCustomerCategory()?.toUpperCase() === type.toUpperCase();\n  }\n\n  isBrandBaseAndCategoryResidential() {\n    return (\n      this.getCustomerBrand() === CustomerBrandEnum.BRAND_BASE &&\n      this.isCustomerOfType(CustomerCategoryEnum.RESIDENTIAL)\n    );\n  }\n\n  isBrandBaseAndCategoryBusiness() {\n    return (\n      this.getCustomerBrand() === CustomerBrandEnum.BRAND_BASE && this.isCustomerOfType(CustomerCategoryEnum.BUSINESS)\n    );\n  }\n\n  isBrandTelenetAndCategoryResidential() {\n    return (\n      this.getCustomerBrand() === CustomerBrandEnum.BRAND_TELENET &&\n      this.isCustomerOfType(CustomerCategoryEnum.RESIDENTIAL)\n    );\n  }\n\n  isBrandTelenetAndCategoryBusiness() {\n    return (\n      this.getCustomerBrand() === CustomerBrandEnum.BRAND_TELENET &&\n      this.isCustomerOfType(CustomerCategoryEnum.BUSINESS)\n    );\n  }\n\n  isBrandTelenetAndCategoryFleetPortal(): boolean {\n    return (\n      this.getCustomerBrand() === CustomerBrandEnum.BRAND_TELENET &&\n      this.isCustomerOfType(CustomerCategoryEnum.FLEET_PORTAL)\n    );\n  }\n\n  isBrandTelenetAndCategoryResidentialOrFleet() {\n    return this.isBrandTelenetAndCategoryResidential() || this.isBrandTelenetAndCategoryFleetPortal();\n  }\n\n  isBrandBaseAndCategoryResidentialOrBusiness() {\n    return this.isBrandBaseAndCategoryResidential() || this.isBrandBaseAndCategoryBusiness();\n  }\n}\n","import { UrlParam } from './url-param.model';\nimport { Inject, Injectable } from '@angular/core';\nimport { find, keyBy, map } from 'lodash-es';\nimport { ClientBrowserTypeService } from '../client-browser-type/client-browser-type.service';\nimport { QueryParamEnum } from '../enums/query-param.enum';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport { forkJoin, timeout } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UrlService {\n  constructor(\n    @Inject('Window') protected window: Window,\n    private readonly dataLayerService: DataLayerService,\n    private readonly clientBrowserTypeService: ClientBrowserTypeService\n  ) {}\n\n  getCurrentUrl(): string {\n    if (this.window.location && this.window.location.href) {\n      return this.window.location.href;\n    }\n    return '';\n  }\n\n  openWindow(url: string): void {\n    this.window.open(url, '_self');\n  }\n\n  openNewTab(url: string): void {\n    if (this.clientBrowserTypeService.isClientUsingSafari()) {\n      this.openNewTabForSafari(url);\n    } else {\n      this.window.open(url, '_blank');\n    }\n  }\n\n  reloadWindow() {\n    this.window.location.reload();\n  }\n\n  getParameterByName(name: string): string | null {\n    const match = RegExp('[?&]' + name + '=([^&]*)').exec(this.window.location.search);\n    return match && decodeURIComponent(match[1]);\n  }\n\n  getParamsValueFromUrl(url: string, paramKey: string): string | null {\n    const match = RegExp('[?&]' + paramKey + '=([^&]*)').exec(url);\n    return match && decodeURIComponent(match[1]);\n  }\n\n  getUrlWithParams(url: string, params: UrlParam[]): string {\n    const keyValues = map(params, (param) => {\n      return param.getKeyValue();\n    });\n\n    return url + '?' + keyValues.join('&');\n  }\n\n  redirectTo(url: string): void {\n    const promiseArray = this.dataLayerService.getAnalyticsPromises();\n    if (promiseArray?.length === 0) {\n      this.window.location.href = url;\n    } else {\n      forkJoin(promiseArray)\n        .pipe(\n          timeout(5000) // timeout after 5 seconds\n        )\n        .subscribe({\n          next: () => {\n            this.window.location.href = url;\n          },\n          error: () => {\n            // This block will be executed if the timeout occurs, this way we can ensure that the user is redirected even if the analytics are not loaded\n            console.warn(\"Timeout: Datalayer promises couldn't be resolved. Redirecting to the url\");\n            this.window.location.href = url;\n          },\n        });\n    }\n  }\n\n  doHistoryBack(): void {\n    if (this.window.history) {\n      this.window.history.back();\n    }\n  }\n\n  getRequestParametersAsString(): string {\n    if (this.window.location && this.window.location.search) {\n      return this.window.location.search;\n    }\n    return '';\n  }\n\n  getRequestParameters(): Record<string, string> {\n    const obj: Record<string, string> = {};\n    if (this.window.location && this.window.location.search) {\n      const pairs = this.window.location.search.substring(1).split('&');\n      let keyValue: string[] = [];\n      pairs.forEach((pair) => {\n        if (pair !== '') {\n          keyValue = pair.split('=');\n          obj[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);\n        }\n      });\n    }\n    return obj;\n  }\n\n  getRequestParameterOrDefault(key: string, defaultValue: string): string {\n    return (\n      find(this.getRequestParameters(), function (_paramValue, paramKey) {\n        return paramKey.toLowerCase() === key.toLowerCase();\n      }) || defaultValue\n    );\n  }\n\n  getRequestParamValue(key: string, defaultValue: string): string {\n    return this.getRequestParameterOrDefault(key, defaultValue);\n  }\n\n  requestParamsContains(key: string): boolean {\n    return this.getRequestParameters()[key] !== undefined;\n  }\n\n  getHashParameter(key: string): string | null {\n    const hashParam = this.getHashParameters()[key];\n\n    if (hashParam !== undefined) {\n      return hashParam.value;\n    }\n\n    return null;\n  }\n\n  getUrlWithOnlyHashParam(): string {\n    if (this.window && this.window.location && this.window.location.hash) {\n      return this.window.location.hash;\n    }\n    return '';\n  }\n\n  removeURLParameters(removeParams: string[]) {\n    const deleteRegex = new RegExp(removeParams.join('=|') + '=');\n    const params = this.window.location.search.slice(1).split('&');\n    const search: string[] = [];\n    for (const value of params) {\n      if (value.length > 0 && !deleteRegex.test(value)) {\n        search.push(value);\n      }\n    }\n    const path =\n      this.window.location.pathname + (search.length ? '?' + search.join('&') : '') + this.window.location.hash;\n    this.window.history.replaceState({}, this.window.document.title, path);\n  }\n\n  removeParametersFromUrl(url: string, parameters: string | string[]) {\n    if (!Array.isArray(parameters)) {\n      parameters = [parameters];\n    }\n\n    if (!url?.startsWith('http')) {\n      return url;\n    }\n    const urlObject = new URL(url);\n    const params = urlObject.searchParams;\n    parameters.forEach((param) => {\n      params.delete(param);\n    });\n\n    return urlObject.href;\n  }\n\n  replaceURLParameters(data: { key: string; value: string }[]) {\n    const params = this.window.location.search.slice(1).split('&');\n    const search: string[] = [];\n    for (const value of params) {\n      if (value.length > 0) {\n        const split = value.split('=');\n        const key = decodeURIComponent(split[0]);\n        const newValue = data.find((d) => d.key === key)?.value ?? decodeURIComponent(split[1]);\n        search.push(`${encodeURIComponent(key)}=${encodeURIComponent(newValue)}`);\n      }\n    }\n    data\n      .filter((d) => !params.find((p) => decodeURIComponent(p.split('=')[0]) === d.key))\n      .forEach((d) => search.push(`${encodeURIComponent(d.key)}=${encodeURIComponent(d.value)}`));\n    const path =\n      this.window.location.pathname + (search.length ? '?' + search.join('&') : '') + this.window.location.hash;\n    this.window.history.replaceState({}, this.window.document.title, path);\n  }\n\n  fromSource(value: QueryParamEnum): boolean {\n    let source = this.getRequestParamValue(QueryParamEnum.SOURCE, '');\n    source = source && source.toUpperCase();\n    return source === value.toUpperCase();\n  }\n\n  public getHashParameters() {\n    if (this.window && this.window.location && this.window.location.hash) {\n      const hash = this.window.location.hash.replace(/^#/, '');\n\n      if (hash !== '') {\n        const pairs = decodeURI(hash).split('/');\n\n        return keyBy(\n          map(pairs, (pair) => {\n            const keyValue = pair.split('=');\n\n            return {\n              key: keyValue[0],\n              value: keyValue[1],\n            };\n          }),\n          (p) => p.key\n        );\n      }\n    }\n    return [];\n  }\n\n  public buildUrlWithParams(url: string, params: Map<string, string>): string {\n    const paramList: string[] = [];\n\n    params.forEach((value: string, key: string) => {\n      paramList.push(`${key}=${value}`);\n    });\n\n    return url + (paramList.length > 0 ? `?${paramList.join('&')}` : '');\n  }\n\n  public buildUrlWithHashParams(url: string, params: Map<string, string>): string {\n    const paramList: string[] = [];\n\n    params.forEach((value: string, key: string) => {\n      paramList.push(`${key}=${value}`);\n    });\n\n    return url + (paramList.length > 0 ? '/#/' + `${paramList.join('/')}` : '');\n  }\n\n  getOrigin(): string {\n    return this.window.location.origin;\n  }\n\n  getActionParametersRemovedURL(): string {\n    const paramArray: string[] = [];\n    const params = this.getCurrentUrl().split('&');\n    for (const value of params) {\n      if (value.length > 0 && value !== 'action=register') {\n        paramArray.push(value);\n      }\n    }\n    return paramArray.join('&');\n  }\n\n  getParameters(urlString: string): Map<string, string> {\n    const url = new URL(urlString);\n    const paramMap = new Map();\n    for (const [key, value] of url.searchParams.entries()) {\n      paramMap.set(key, decodeURIComponent(value));\n    }\n\n    return paramMap;\n  }\n\n  private openNewTabForSafari(url: string) {\n    const anchorElement = this.window.document.createElement('a');\n    anchorElement.target = '_blank';\n    anchorElement.href = url;\n\n    const event = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n      detail: 0,\n      screenX: 0,\n      screenY: 0,\n      clientX: 0,\n      clientY: 0,\n      ctrlKey: false,\n      altKey: false,\n      shiftKey: false,\n      metaKey: false,\n      button: 0,\n      relatedTarget: null,\n    });\n    anchorElement.dispatchEvent(event);\n  }\n}\n","export class UrlParam {\n  key: string;\n  value: string;\n\n  constructor(key: string, value: string) {\n    this.key = key;\n    this.value = value;\n  }\n\n  getKeyValue(): string {\n    return this.key + '=' + this.value;\n  }\n}\n","export interface WindowInterface {\n  location: {\n    href: string;\n    hash: string;\n    search: string;\n    pathname: string;\n    assign: string;\n  };\n  document: {\n    title: string;\n    documentElement: {\n      lang: string;\n    };\n    createEvent: (type: string) => unknown;\n    createElement: (type: string) => unknown;\n  };\n  history: {\n    back: () => void;\n    replaceState: () => void;\n  };\n  grecaptcha?: {\n    ready: (callback: () => void) => unknown;\n    execute: (...args: unknown[]) => Promise<string>;\n  };\n  open: (url?: string, target?: string, windowFeatures?: string) => WindowProxy | null;\n  ContextHub: {\n    getStore: (name: string) => unknown;\n    get: (storeName: string) => { uid: string; mail: string; roles: string } | undefined;\n  };\n  telenetgroupLoader: {\n    showPageLoader: (option: unknown) => void;\n    hidePageLoader: () => void;\n  };\n}\n\nexport const windowFactory = (): WindowInterface => ({\n  location: {\n    href: 'http://testurl.com',\n    hash: '#foo',\n    pathname: '',\n    search: '?page=1&mode=b',\n    assign: '',\n  },\n  document: {\n    title: 'Test bed',\n    documentElement: {\n      lang: '',\n    },\n    createElement: function () {\n      return {\n        target: '',\n        href: '',\n        dispatchEvent: new Function(),\n      };\n    },\n    createEvent: function () {\n      return {\n        initMouseEvent: new Function(),\n      };\n    },\n  },\n  history: {\n    back: () => undefined,\n    replaceState: () => undefined,\n  },\n  grecaptcha: {\n    ready: (callback: () => void) => {\n      return callback();\n    },\n    execute: function () {\n      return new Promise((resolve) => {\n        resolve('unique-grecaptcha-token');\n      });\n    },\n  },\n  open: () => window,\n  ContextHub: {\n    getStore: function () {\n      return {\n        eventing: {\n          once: function () {\n            // empty method\n          },\n        },\n      };\n    },\n    get: function (storeName: string) {\n      if (storeName === 'internal-employee') {\n        return {\n          uid: 'Daniel',\n          mail: 'daniel@daniel.com',\n          roles: 'genius-care-advisor,genius-sales-advisor',\n        };\n      } else {\n        return undefined;\n      }\n    },\n  },\n  telenetgroupLoader: {\n    showPageLoader: function (_option) {\n      // empty\n    },\n    hidePageLoader: function () {\n      // empty\n    },\n  },\n});\n","import { Inject, Injectable } from '@angular/core';\nimport { from, Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class JsonUrlService {\n  private static readonly JSON_URL = 'JsonUrl';\n  private readonly libng;\n\n  constructor(@Inject('Window') private readonly window: Window) {\n    this.libng =\n      this.window[JsonUrlService.JSON_URL as keyof Window] &&\n      this.window[JsonUrlService.JSON_URL as keyof Window]('lzma');\n  }\n\n  compress(object: unknown): Observable<string> {\n    return from(this.libng.compress(object) as string);\n  }\n\n  decompress(compressedString: string): Observable<unknown> {\n    return from(this.libng.decompress(compressedString));\n  }\n}\n","export enum DeviceTypesEnum {\n  COMPUTER = 'computer',\n  MOBILE = 'mobile',\n  TABLET = 'tablet',\n}\n\nexport enum BreakpointsEnum {\n  XS = '(max-width: 20em)',\n  SM = '(max-width: 36em)',\n  MD = '(max-width: 48.0625em)',\n  LG = '(max-width: 74.5em)',\n  XL = '(max-width: 90em)',\n  XXL = '(max-width: 104.688em)',\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { BreakpointsEnum, DeviceTypesEnum } from './device-types.enum';\nimport { DeviceDetectorService, DeviceInfo } from 'ngx-device-detector';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaQueryService {\n  constructor(\n    private readonly deviceService: DeviceDetectorService,\n    @Inject('Window') private readonly window: Window\n  ) {}\n\n  getDeviceName(): string {\n    switch (true) {\n      case this.deviceService.isMobile():\n        return DeviceTypesEnum.MOBILE;\n      case this.deviceService.isTablet():\n        return DeviceTypesEnum.TABLET;\n      case this.deviceService.isDesktop():\n        return DeviceTypesEnum.COMPUTER;\n      default:\n        return DeviceTypesEnum.COMPUTER;\n    }\n  }\n\n  getDeviceInfo(): DeviceInfo {\n    return this.deviceService.getDeviceInfo();\n  }\n\n  isLandscapeMode(): boolean {\n    return this.window.innerHeight < this.window.innerWidth;\n  }\n\n  isMobile(): boolean {\n    return this.deviceService.isMobile();\n  }\n\n  isTablet(): boolean {\n    return this.deviceService.isTablet();\n  }\n\n  isDesktop(): boolean {\n    return this.deviceService.isDesktop();\n  }\n\n  isXsScreen(): boolean {\n    return this.window.matchMedia(BreakpointsEnum.XS).matches;\n  }\n\n  isSmScreen(): boolean {\n    return this.window.matchMedia(BreakpointsEnum.SM).matches;\n  }\n\n  isMdScreen(): boolean {\n    return this.window.matchMedia(BreakpointsEnum.MD).matches;\n  }\n\n  isLgScreen(): boolean {\n    return this.window.matchMedia(BreakpointsEnum.LG).matches;\n  }\n\n  isXlScreen(): boolean {\n    return this.window.matchMedia(BreakpointsEnum.XL).matches;\n  }\n\n  isXxlScreen(): boolean {\n    return this.window.matchMedia(BreakpointsEnum.XXL).matches;\n  }\n}\n","import { inject, Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { filter, map, mergeMap, take, tap } from 'rxjs/operators';\nimport { ModuleFederatedDebugInfoModuleConfig, SharedLibConfig } from './shared-lib-config.model';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const DEBUG_CONFIG_TOKEN = new InjectionToken<ModuleFederatedDebugInfoModuleConfig>('debugConfig');\n\n@Injectable({ providedIn: 'root' })\nexport class ModuleFederatedDebugInfoService {\n  private readonly route = inject(ActivatedRoute);\n  isDebug$ = this.route.queryParams.pipe(map((queryParams) => queryParams['debug'] === 'true'));\n  private readonly sharedLibrariesBs$ = new BehaviorSubject<SharedLibConfig[] | null>(null);\n  sharedLibraries$ = this.sharedLibrariesBs$.pipe(filter((value) => !!value));\n\n  private readonly enrichLibInfo = (debugConfig?: ModuleFederatedDebugInfoModuleConfig): SharedLibConfig[] => {\n    const sharedLibraries = debugConfig?.sharedLibsFunction()?.['sharedLibraries'];\n    return Object.keys(sharedLibraries || {}).map((key) => ({\n      [key]: {\n        ...sharedLibraries?.[key],\n        version:\n          (this.debugConfig?.packageLockFunction()?.['dependencies'][key]?.['version'] as string) ??\n          sharedLibraries?.[key]?.version,\n      },\n    }));\n  };\n\n  constructor(\n    @Inject(DEBUG_CONFIG_TOKEN) @Optional() private readonly debugConfig?: ModuleFederatedDebugInfoModuleConfig\n  ) {\n    const sharedLibConfigs = this.enrichLibInfo(debugConfig);\n    this.sharedLibrariesBs$.next(sharedLibConfigs);\n  }\n\n  load(): void {\n    this.isDebug$\n      .pipe(\n        filter((isDebug) => isDebug),\n        mergeMap(() => this.sharedLibraries$),\n        tap((sharedLibraries) => console.debug('SHARED_LIBRARIES', sharedLibraries)),\n        take(1)\n      )\n      .subscribe();\n  }\n}\n","import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { ModuleFederatedDebugInfoService } from './module-federated-debug-info.service';\n\n@Component({\n  selector: 'app-debug-info',\n  template: ` <div\n    *ngIf=\"isDebug$ | async\"\n    class=\"horizontal-center-align flex-direction--column align-items--center background-dark-brown color-white border-radius__all--l p--m\">\n    <h3>Shared libraries</h3>\n    <p class=\"pre\">{{ sharedLibraries$ | async | json }}</p>\n  </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      .pre {\n        white-space: pre;\n      }\n    `,\n  ],\n})\nexport class ModuleFederatedDebugInfoComponent {\n  private readonly debugInfoService = inject(ModuleFederatedDebugInfoService);\n  isDebug$ = this.debugInfoService.isDebug$;\n  sharedLibraries$ = this.debugInfoService.sharedLibraries$;\n}\n","import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { DEBUG_CONFIG_TOKEN, ModuleFederatedDebugInfoService } from './module-federated-debug-info.service';\nimport { ModuleFederatedDebugInfoModuleConfig } from './shared-lib-config.model';\nimport { ModuleFederatedDebugInfoComponent } from './module-federated-debug-info.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [ModuleFederatedDebugInfoComponent],\n  imports: [CommonModule, RouterModule.forRoot([])],\n  providers: [ModuleFederatedDebugInfoService],\n  exports: [ModuleFederatedDebugInfoComponent],\n})\nexport class ModuleFederatedDebugInfoModule {\n  static forRoot(config?: ModuleFederatedDebugInfoModuleConfig): ModuleWithProviders<ModuleFederatedDebugInfoModule> {\n    return {\n      ngModule: ModuleFederatedDebugInfoModule,\n      providers: [\n        {\n          provide: DEBUG_CONFIG_TOKEN,\n          useValue: config,\n        },\n        ModuleFederatedDebugInfoService,\n        {\n          provide: APP_INITIALIZER,\n          deps: [ModuleFederatedDebugInfoService],\n          multi: true,\n          useFactory: (service: ModuleFederatedDebugInfoService) => () => initModuleFederatedDebugInfoService(service),\n        },\n      ],\n    };\n  }\n}\n\nfunction initModuleFederatedDebugInfoService(service: ModuleFederatedDebugInfoService): Promise<void> {\n  // Promise is needed for the useFactory\n  return new Promise((resolve) => {\n    service.load();\n    resolve();\n  });\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\ntype ObsTypes = unknown | string | boolean | object;\n@Component({\n  selector: 'app-abstract-base',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport abstract class AbstractBaseComponent implements OnDestroy {\n  protected unsubscribe$ = new Subject();\n\n  onDestroy(): void {\n    // onDestroy\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.complete();\n\n    this.onDestroy();\n  }\n\n  obs<T>(obs: Observable<T>): Observable<T>;\n  obs(obs: Observable<ObsTypes>): Observable<ObsTypes>;\n  obs(obs: Observable<ObsTypes>): Observable<ObsTypes> {\n    return obs.pipe(takeUntil(this.unsubscribe$));\n  }\n}\n","import { ElementRef } from '@angular/core';\nimport { AbstractBaseComponent } from './abstract-base.component';\n\nconst TIMEOUT = 800;\n\nexport abstract class AbstractCardComponent extends AbstractBaseComponent {\n  protected constructor(\n    protected elementRef: ElementRef,\n    protected document?: Document\n  ) {\n    super();\n  }\n\n  hideCard(): void {\n    setTimeout(() => {\n      this.parentCardElement?.dispatchEvent(new CustomEvent('card:hide', { bubbles: true }));\n    }, TIMEOUT);\n  }\n\n  showSimpleCard(): void {\n    setTimeout(() => {\n      this.parentCardElement?.dispatchEvent(new CustomEvent('card:show-simple-view', { bubbles: true }));\n    }, TIMEOUT);\n  }\n\n  hideSimpleCard(): void {\n    setTimeout(() => {\n      this.parentCardElement?.dispatchEvent(new CustomEvent('card:hide-simple-view', { bubbles: true }));\n    }, TIMEOUT);\n  }\n\n  showCardWithData<T>(data: T): void {\n    setTimeout(() => {\n      this.parentCardElement?.dispatchEvent(new CustomEvent('card:show-data', { bubbles: true, detail: data }));\n    }, TIMEOUT);\n  }\n\n  updateCardTarget(url: string): void {\n    setTimeout(() => {\n      this.parentCardElement?.dispatchEvent(new CustomEvent('card:updateTarget', { bubbles: true, detail: url }));\n    }, TIMEOUT);\n  }\n\n  processClick(url: string): void {\n    setTimeout(() => {\n      this.parentCardElement?.dispatchEvent(new CustomEvent('card:click', { bubbles: true, detail: { url: url } }));\n    }, TIMEOUT);\n  }\n\n  private get parentCardElement(): Element {\n    const cardElement = this.elementRef.nativeElement;\n    return (\n      cardElement?.closest('[data-tg-cmp-dashboard-card-instance-id]') ||\n      cardElement?.closest('[data-component-instance-id]')\n    );\n  }\n}\n","export class LoaderData {\n  isAPIExecutionInProgress: boolean;\n  dataCapturedOn: number;\n\n  public constructor(status: boolean) {\n    this.isAPIExecutionInProgress = status;\n    this.dataCapturedOn = new Date().getTime();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoaderData } from '../loaderData.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoaderService {\n  skipUrls = ['/authrefresh', '/?p=eligibleproducts', '/search/api/'];\n\n  loadingStatus = new BehaviorSubject<LoaderData>(new LoaderData(false));\n\n  start() {\n    const _loaderData = new LoaderData(true);\n    this.loadingStatus.next(_loaderData);\n  }\n\n  stop() {\n    const _loaderData = new LoaderData(false);\n    this.loadingStatus.next(_loaderData);\n  }\n\n  shouldDisableLoader(url: string): boolean {\n    return this.skipUrls.some((skipUrl) => new RegExp(skipUrl).test(url)) || url.includes('disabledLoader=true');\n  }\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, Inject, Input } from '@angular/core';\nimport { LoaderService } from './services/loader.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoaderData } from './loaderData.model';\nimport { PathCategorisationService } from '../path-categorisation/path-categorisation.service';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { map } from 'rxjs/operators';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-loader',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent implements AfterViewInit {\n  @Input() pageType = '';\n  @Input() startByDefault = false;\n  @Input() enableLoader = false;\n  @Input() enableMask = false;\n\n  private readonly pageLoaderID = 'page-loader';\n\n  private readonly loaderObj;\n  private readonly messages;\n\n  constructor(\n    private readonly loaderService: LoaderService,\n    private readonly translate: TranslateService,\n    private readonly pathCategorisationService: PathCategorisationService,\n    @Inject('Window') private readonly window: Window\n  ) {\n    this.loaderObj = this.window?.['telenetgroupLoader'];\n    this.messages = [\n      this.translate.instant('ng.loader.message.sm'),\n      this.translate.instant('ng.loader.message.lg'),\n      this.translate.instant('ng.loader.message.xlg'),\n    ];\n  }\n\n  ngAfterViewInit(): void {\n    if (this.loaderObj) {\n      if (this.startByDefault) {\n        this.showPageLoader();\n      }\n\n      this.loaderService.loadingStatus\n        .pipe(\n          untilDestroyed(this),\n          map((loaderData: LoaderData) => loaderData.isAPIExecutionInProgress)\n        )\n        .subscribe((isAPIExecutionInProgress: boolean) => {\n          if (isAPIExecutionInProgress) {\n            this.showPageLoader();\n          } else {\n            this.hidePageLoader();\n          }\n        });\n    } else {\n      console.error('Loader Plugin not initialised');\n    }\n  }\n\n  protected showPageLoader(): void {\n    const brand = this.pathCategorisationService.getCustomerBrand();\n    const options = {\n      enable_loader: this.enableLoader,\n      enable_mask: this.enableMask,\n      loader_message: this.messages,\n      brand: brand,\n      selector: this.pageLoaderID,\n    };\n    this.loaderObj.showPageLoader(options);\n  }\n\n  private hidePageLoader(): void {\n    setTimeout(() => {\n      this.loaderObj.hidePageLoader();\n    }, 250);\n  }\n}\n","export enum LoaderTypeEnum {\n  DISABLE = 'disabled',\n  BAR_SPINNER = 'barSpinner',\n  SNAKE = 'snake',\n  ORBITAL = 'orbital',\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoaderComponent } from './loader.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule],\n  declarations: [LoaderComponent],\n  exports: [LoaderComponent],\n})\nexport class LoaderModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AssetService {\n  private static readonly imagePaths = {\n    SALES: '/components/sales/nc/sales-checkout/media/',\n    HARDWARE_CHECKOUT: '/content/dam/www-telenet-touch/default/images/hardware-checkout/',\n    MOVE: '/components/care/administration/cafe/move/media/',\n    CHANGE_FLAVOUR: '/components/sales/cafe/change-flavour/media/',\n    CONNECT_FIVE: '/components/sales/cafe/connect-five/media/',\n    PRODUCT_DASHBOARD: '/components/sales/cafe/product-dashboard/media/',\n    TIP: '/components/tip/nc/media/',\n    INTENT_FINDER: '/components/navigation/common/intent-finder/media/',\n    CONTACT_SCHEDULER: '/components/general/common/contact-scheduler/media/',\n    FLEET_HARDWARE: '/components/fleet/hardware/nc/media/',\n    FLEET_PROFILE: '/components/fleet/create-profile/nc/media/',\n    DWN_MOVE_FLOW: '/components/care/administration/nc/move-flow/media/',\n    SELF_INSTALL: '/components/care/administration/nc/self-install/media/',\n    FLEET_REMOVE_OPTIONS: '/components/fleet/product/nc/lineremoveoptions/media/',\n    FLEET_ADD_OPTIONS: '/components/fleet/product/nc/lineaddoptions/media/',\n    FLEET_LINE_CHANGE_TARIFF_PLAN: '/components/fleet/product/nc/linechangetariffplan/media/',\n    MANAGE_EASY_SWITCH: '/components/care/administration/nc/manage-easy-switch/media/',\n    CENTRAL_LOGIN: '/components/common/central-login/media/',\n    DEFAULT_PROFILE_PIC: '/components/general/common/telenet-login/media/',\n    FLEET_LINE_NAVIGATION_LIST: '/components/fleet/sim-swap/nc/line-navigation-list/media/',\n    IN_HOME_CONNECTIVITY: '/components/sales/nc/in-home-connectivity/media/',\n    FLEET_ACCOUNT: '/components/fleet/account/nc/media/',\n    FLEET_SWITCH_LINE: '/components/fleet/contact/switch-line/nc/media/',\n    ONLINE_PAYMENT: '/components/sales/online-payment/media/',\n    FPB: '/components/fpb/search-contacts/nc/media/',\n    STORE_FINDER: '/components/general/common/store-finder/media/',\n    FTTH: '/content/dam/www-telenet-bus/nl/producten/ftth/',\n  };\n\n  static getImagePath(moduleName: string, imageName: string, customerBrand?: string): string {\n    const basePath: string = AssetService.imagePaths[moduleName] || '';\n    const brand: string = customerBrand ? customerBrand.toLocaleLowerCase().concat('/') : '';\n    return basePath + brand + imageName;\n  }\n}\n","import { Directive, ElementRef, Inject, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[src]',\n})\nexport class ImageSrcPathDirective implements OnChanges {\n  @Input() override = false;\n\n  @Input() src = '';\n\n  constructor(\n    private readonly el: ElementRef,\n    @Inject('IMAGE_BASE_PATH') private readonly imageBasePath: string\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['src']?.isFirstChange()) {\n      const imagePath = changes['src'].currentValue;\n\n      if (this.el.nativeElement.tagName !== 'IMG' || this.override) {\n        this.el.nativeElement.src = imagePath;\n        return;\n      }\n\n      const imageBasePathWithoutSlash = this.imageBasePath.endsWith('/')\n        ? this.imageBasePath.slice(0, -1)\n        : this.imageBasePath;\n      const imagePathWithoutLeadingSlash = imagePath.startsWith('/') ? imagePath.slice(1) : imagePath;\n      this.el.nativeElement.src = `${imageBasePathWithoutSlash}/${imagePathWithoutLeadingSlash}`;\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ImageSrcPathDirective } from './image-src-path.directive';\n\n@NgModule({\n  declarations: [ImageSrcPathDirective],\n  imports: [],\n  providers: [],\n  exports: [ImageSrcPathDirective],\n})\nexport class ImageSrcPathModule {\n  static forRoot(imagePath: string): ModuleWithProviders<ImageSrcPathModule> {\n    return {\n      ngModule: ImageSrcPathModule,\n      providers: [{ provide: 'IMAGE_BASE_PATH', useValue: imagePath }],\n    };\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\n\ntype ImageSrcSet = {\n  desktop: string;\n  mobile: string;\n  tablet: string;\n};\n\n@Directive({\n  selector: '[brandImage]',\n  standalone: true,\n})\nexport class BrandImageDirective implements OnChanges {\n  @Input() isTelenet = false;\n  @Input() img: ImageSrcSet | string = '';\n  @Input() telenetImg: ImageSrcSet | string = '';\n  @Input() baseImg: ImageSrcSet | string = '';\n\n  constructor(private readonly el: ElementRef) {}\n\n  ngOnChanges() {\n    const image = this.getImageSrcSet();\n    if (this.el.nativeElement.tagName === 'WINK-IMG') {\n      this.el.nativeElement.setAttribute('src-desktop', image.desktop);\n      this.el.nativeElement.setAttribute('src-mobile', image.mobile);\n      this.el.nativeElement.setAttribute('src-tablet', image.tablet);\n    }\n    if (this.el.nativeElement.tagName === 'IMG') {\n      this.el.nativeElement.setAttribute('src', image.desktop);\n    }\n  }\n\n  get image() {\n    if (this.isTelenet && this.telenetImg) {\n      return this.telenetImg;\n    }\n    if (!this.isTelenet && this.baseImg) {\n      return this.baseImg;\n    }\n    return this.img;\n  }\n\n  private getImageSrcSet(): ImageSrcSet {\n    if (typeof this.image === 'string') {\n      const image = this.image;\n      return {\n        desktop: image,\n        tablet: image,\n        mobile: image,\n      };\n    } else {\n      const image = this.image;\n      return {\n        desktop: image.desktop,\n        mobile: image.mobile,\n        tablet: image.tablet,\n      };\n    }\n  }\n}\n","export enum LabelKeyType {\n  LABEL = 'lbl',\n  BUTTON = 'btn',\n  PLACEHOLDER = 'phd',\n  LINK = 'lnk',\n  TOOLTIP = 'ttp',\n  TITLE = 'title',\n  ERROR = 'error',\n  TXT = 'text',\n}\n","import { TranslateLoader } from '@ngx-translate/core';\nimport { inject, Inject, Injectable } from '@angular/core';\nimport { isEmpty } from 'lodash-es';\nimport { Observable } from 'rxjs';\nimport { PathCategorisationService } from '../page';\n\n@Injectable()\nexport class TelenetTranslateLoader implements TranslateLoader {\n  private readonly pathCategorisationService = inject(PathCategorisationService);\n  private readonly postfixes = this.pathCategorisationService.getPostfixVariables();\n\n  constructor(@Inject('Window') public window: Window) {\n    this.initializeBrandAndCategoryLabels();\n  }\n\n  private initializeBrandAndCategoryLabels() {\n    this.getTranslationData().subscribe((labelSet) => {\n      for (const keyWithBrandOrCategory in labelSet) {\n        this.overwriteOriginalLabelWithBrandOrCategorySpecificLabel(labelSet, keyWithBrandOrCategory);\n      }\n    });\n  }\n\n  private overwriteOriginalLabelWithBrandOrCategorySpecificLabel(\n    labelSet: Record<string, string>,\n    keyWithBrandOrCategory: string\n  ) {\n    const postfix = this.getPostfix(keyWithBrandOrCategory);\n    if (postfix) {\n      const keyWithoutCategoryOrBrand = keyWithBrandOrCategory.replace(new RegExp(postfix + '$'), '');\n      if (labelSet[keyWithoutCategoryOrBrand] !== undefined) {\n        labelSet[keyWithoutCategoryOrBrand] = labelSet[keyWithBrandOrCategory];\n      }\n    }\n  }\n\n  private getPostfix(property: string) {\n    return (\n      [this.postfixes.BRAND_CATEGORY_POSTFIX, this.postfixes.CATEGORY_POSTFIX, this.postfixes.BRAND_POSTFIX].find(\n        (postfix) => property.endsWith(postfix)\n      ) || null\n    );\n  }\n\n  public getTranslation(_lang: string): Observable<unknown> {\n    return this.getTranslationData();\n  }\n\n  private getTranslationData(): Observable<Record<string, string>> {\n    return new Observable<Record<string, string>>((observer) => {\n      if (!isEmpty(this.window?.['localisationData']?.keys)) {\n        observer.next(this.window['localisationData'].keys);\n        observer.complete();\n      } else if (this.window?.['pageLocaleData']?.bundle) {\n        observer.next(this.window['pageLocaleData'].bundle);\n        observer.complete();\n      } else {\n        observer.next({});\n        observer.complete();\n        console.log('NG Translations could not be loaded');\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TelenetMissingTranslationService {\n  notTranslated(key: string): string {\n    if (key.includes('undefined')) {\n      return '';\n    }\n    return key;\n  }\n}\n","import { MissingTranslationHandler, MissingTranslationHandlerParams } from '@ngx-translate/core';\nimport { Injectable } from '@angular/core';\nimport { TelenetMissingTranslationService } from './missing-translation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TelenetMissingTranslationHandler implements MissingTranslationHandler {\n  handle(params: MissingTranslationHandlerParams) {\n    return this.telenetMissingTranslationService.notTranslated(params.key);\n  }\n\n  constructor(private readonly telenetMissingTranslationService: TelenetMissingTranslationService) {}\n}\n","import { LabelKeyType } from './label-key-type.enum';\n\nexport class LabelUtil {\n  static LABEL_PREFIX = 'ng';\n\n  static getLabelKeyWithTypeLabel(key: string | string[]): string {\n    return this.parseKey(key, LabelKeyType.LABEL);\n  }\n\n  static getLabelKeyWithTypeTitle(key: string | string[]): string {\n    return this.parseKey(key, LabelKeyType.TITLE);\n  }\n\n  static getLabelKeyWithTypePlaceholder(key: string | string[]) {\n    return this.parseKey(key, LabelKeyType.PLACEHOLDER);\n  }\n\n  static getLabelKeyWithTypeText(key: string | string[]) {\n    return this.parseKey(key, LabelKeyType.TXT);\n  }\n\n  static getLabelKeyWithTypeError(key: string | string[]) {\n    return this.parseKey(key, LabelKeyType.ERROR);\n  }\n\n  static getLabelKeyWithTypeButton(key: string | string[]) {\n    return this.parseKey(key, LabelKeyType.BUTTON);\n  }\n\n  static normalizeKey(key: string): string {\n    return key\n      .replace(/ /g, '-')\n      .replace(/_/g, '-')\n      .replace(/[^.0-9a-zA-Z_-]/g, '')\n      .toLowerCase();\n  }\n\n  private static parseKey(key: string | string[], labelKeyType: LabelKeyType) {\n    if (Array.isArray(key)) {\n      return this.joinKeys([this.LABEL_PREFIX, this.joinKeys(key), labelKeyType]);\n    }\n    return this.joinKeys([this.LABEL_PREFIX, key, labelKeyType]);\n  }\n\n  private static joinKeys(values: string[]): string {\n    return values.join('.');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport localeFR from '@angular/common/locales/fr-BE';\nimport localeEN from '@angular/common/locales/en-BE';\nimport localeNL from '@angular/common/locales/nl-BE';\nimport { registerLocaleData } from '@angular/common';\nimport { LanguageEnum } from './language.enum';\nimport { UrlService } from '../page';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nService {\n  private readonly LANGUAGES = Object.values(LanguageEnum);\n  private readonly DEFAULT_LANGUAGE = LanguageEnum.EN;\n\n  constructor(\n    private readonly urlService: UrlService,\n    private readonly translateService: TranslateService\n  ) {}\n\n  get languages(): LanguageEnum[] {\n    return this.LANGUAGES;\n  }\n\n  setDefaultLanguageAndLocale(): void {\n    this.translateService.addLangs(this.LANGUAGES);\n    this.translateService.setDefaultLang(this.DEFAULT_LANGUAGE);\n    registerLocaleData(this.getLocale(this.DEFAULT_LANGUAGE));\n  }\n\n  setLanguage(language?: LanguageEnum): void {\n    const lang = language ? language : this.getLanguage();\n    this.translateService.use(lang);\n    registerLocaleData(this.getLocale(lang));\n  }\n\n  getLanguage(): LanguageEnum {\n    return this.urlService.getRequestParamValue('lang', this.DEFAULT_LANGUAGE) as LanguageEnum;\n  }\n\n  getLocale(language: string): unknown {\n    switch (language) {\n      case LanguageEnum.FR:\n        return localeFR;\n      case LanguageEnum.NL:\n        return localeNL;\n      case LanguageEnum.EN:\n      default:\n        return localeEN;\n    }\n  }\n}\n","import { Inject, InjectionToken, LOCALE_ID, ModuleWithProviders, NgModule, Optional } from '@angular/core';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TelenetTranslateLoader } from './main-translate-loader';\n\nexport const TESTING_TRANSLATION_CONFIG = new InjectionToken<TestingTranslateConfig>('testing-translation-config');\n\ninterface TestingTranslateConfig {\n  language?: 'fr' | 'nl' | 'en';\n  translations?: Record<string, string | unknown>;\n}\n\n@NgModule({\n  imports: [\n    TranslateModule.forRoot({\n      useDefaultLang: true,\n      isolate: true,\n      extend: false,\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useClass: TelenetTranslateLoader,\n      },\n    }),\n  ],\n  exports: [TranslateModule],\n})\nexport class TgTranslateTestingModule {\n  constructor(\n    @Inject(TESTING_TRANSLATION_CONFIG) @Optional() config: TestingTranslateConfig,\n    translateService: TranslateService\n  ) {\n    translateService.use(config?.language || 'en');\n    translateService.currentLang = config?.language || 'en';\n    if (config?.translations) {\n      translateService.setTranslation(config?.language || 'en', config?.translations);\n    }\n  }\n\n  static forRoot(config?: TestingTranslateConfig): ModuleWithProviders<TgTranslateTestingModule> {\n    return {\n      ngModule: TgTranslateTestingModule,\n      providers: [\n        { provide: TESTING_TRANSLATION_CONFIG, useValue: config },\n        { provide: LOCALE_ID, useValue: `${config?.language || 'en'}-BE` },\n        { provide: 'Window', useValue: window },\n      ],\n    };\n  }\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appClickOutside]',\n  standalone: true,\n})\nexport class ClickOutsideDirective {\n  @Output()\n  public appClickOutside = new EventEmitter<MouseEvent>();\n\n  constructor(private readonly elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement?: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.appClickOutside.emit(event);\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LanguageService } from '../page';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExperienceFragmentService {\n  baseUrl = `/content/experience-fragments`;\n\n  readonly #http = inject(HttpClient);\n  readonly #languageService = inject(LanguageService);\n\n  fetchExpFragment(experienceFragmentName: string, expFragmentLocation: string): Observable<string> {\n    const expFragmentPath = this.generateExpFragmentFullPath(experienceFragmentName, expFragmentLocation);\n    const expFragmentUrl = new URL(window.location.href).origin.concat(expFragmentPath);\n\n    return this.#http\n      .get(expFragmentUrl + '?wcmmode=disabled', { responseType: 'text' })\n      .pipe(map((result) => this.getSectionContent(result)));\n  }\n\n  private generateExpFragmentFullPath(experienceFragmentName: string, expFragmentLocation: string): string {\n    const breakpoint = /\\/nl\\/|\\/fr\\/|\\/en\\//;\n    const splitPathWithLanguage = expFragmentLocation?.split(breakpoint);\n\n    if (splitPathWithLanguage?.length >= 2 && experienceFragmentName) {\n      return `${splitPathWithLanguage[0]}/${this.#languageService.getLanguage()}/${\n        splitPathWithLanguage[1]\n      }/${experienceFragmentName}`;\n    }\n    return '';\n  }\n\n  private getSectionContent(result: string): string {\n    const startStr = '<div class=\"cmp cmp-responsivegrid\">';\n    const endStrPos = result.lastIndexOf('</div>');\n    return result.slice(result.indexOf(startStr), endStrPos);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["__decorate","i2.ClientBrowserTypeService","map","i1.TelenetMissingTranslationService","i1.UrlService","i1"],"mappings":"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"}