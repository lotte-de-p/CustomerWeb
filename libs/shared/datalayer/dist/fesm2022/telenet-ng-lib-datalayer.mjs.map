{"version":3,"file":"telenet-ng-lib-datalayer.mjs","sources":["../../src/lib/datalayer/constants/anaytics.constants.ts","../../src/lib/datalayer/enums/attribute.enum.ts","../../src/lib/datalayer/enums/datalayer-event-names.enum.ts","../../src/lib/datalayer/enums/event-name.enum.ts","../../src/lib/datalayer/enums/event-type.enum.ts","../../src/lib/datalayer/enums/event-status.enum.ts","../../src/lib/datalayer/enums/datalayer-event-types.enum.ts","../../src/lib/datalayer/enums/event-category.enum.ts","../../src/lib/datalayer/datalayer.service.ts","../../src/lib/datalayer/provider/datalayer-service.provider.ts","../../src/lib/datalayer/util/data-layer-util/adobe-analytics.directive.ts","../../src/lib/datalayer/model/data-layer-transaction.builder.ts","../../src/telenet-ng-lib-datalayer.ts"],"sourcesContent":["export class AnalyticsConstants {\n  static readonly ATTRIBUTE_STEP_ID = 'stepId';\n  static readonly ATTRIBUTES_INTENT = 'intent';\n  static readonly ATTRIBUTES_FLOW_TYPE = 'flowType';\n\n  static readonly INTENT_C5_CHECKOUT = 'C5 checkout';\n  static readonly INTENT_AEM_SALES_FLOW = 'AEM sales flow';\n  static readonly FLOW_TYPE_MARKETING = 'marketing';\n  static readonly FLOW_TYPE_CARE = 'care';\n  static readonly PRIMARY_CATEGORY_SALES = 'sales';\n  static readonly PRIMARY_CATEGORY_CARE = 'care';\n  static readonly LOGIN_PAGE_ID = 'checkout login page';\n  static readonly PRICE = 'price';\n  static readonly PRICE_EXCL_VAT = 'priceexclvat';\n\n  static readonly ITEM_DATA_EASYSWITCH_TRUE = 'Cancellation: Easy Switch';\n  static readonly ITEM_DATA_EASYSWITCH_FALSE = 'Cancellation: No Easy Switch';\n\n  static readonly ITEM_NAME_ADDRESS_SELECTION_OTHER = 'Installation address: different address';\n  static readonly ITEM_NAME_ADDRESS_SELECTION_CHANGED = 'Installation address changed';\n  static readonly ITEM_NAME_ADDRESS_SELECTION_POSTAL_CODE = 'Postal Code';\n  static readonly ITEM_NAME_EASYSWITCH_OPERATOR = 'Cancellation: Previous operator';\n  static readonly ITEM_NAME_INSTALLATION = 'Installation';\n  static readonly ITEM_NAME_CONNECTION_CABLE = 'Connection: Telenet cable';\n  static readonly ITEM_NAME_FIXED_TELEPHONY_CHANGED = 'Fixed telephony changed';\n\n  static readonly ITEM_NAME_WIFI_NETWORK_SETUP = 'wifi-network-setup';\n  static readonly INTENT_MOVE_FLOW = 'Move flow';\n  static readonly FLOW_TYPE_SELF_SERVICE = 'self-service';\n  static readonly ZENDESK_CHAT: 'zendesk chat';\n  static readonly INTENT_CHANGE_MODEM_SETTINGS = 'change modem-settings';\n  static readonly INTENT_RESET_MODEM_SETTINGS = 'reset-modem-settings';\n  static readonly INTENT_REBOOT_MODEM = 'modem reboot';\n  static readonly INTENT_UNLOCK_SETTINGS = 'unlock settings';\n\n  static readonly INTENT_ACTIVATE_SIM = 'activate-sim';\n  static readonly STEP_ACTIVATE_SIM_OVERLAY = 'activate-sim-overlay';\n  static readonly CATEGORY_FLEET = 'fleet';\n  static readonly SUB_CATEGORY_SIM_CARD = 'sim-card';\n  static readonly EVENT_NAME_SIM_ACTIVATION_START = 'sim activation started';\n  static readonly EVENT_NAME_SIM_ACTIVATED = 'sim activated';\n  static readonly EVENT_TYPE_SELF_SERVICE_FLOW_START = 'self-service-flow-start';\n  static readonly EVENT_TYPE_SELF_SERVICE_FLOW_END = 'self-service-flow-end';\n  static readonly PRIMARY_CATEGORY_GENERAL = 'general';\n}\n","export enum AttributeEnum {\n  KEY_ITEM_DATA = 'itemData',\n  KEY_ITEM_NAME = 'itemName',\n  KEY_ITEM_GROUP = 'itemGroup',\n  KEY_DESTINATION_URL = 'destinationURL',\n  KEY_PEGA_OUTCOME = 'pega_outcome',\n  KEY_APPEND_STEP_ID = 'appendStepId',\n}\n","export enum DatalayerEventNames {\n  MOVE_FLOW_STARTED = 'move-flow started',\n  MOVE_FLOW_COMPLETED = 'move-flow completed',\n  OPTION_SELECTED = 'option selected',\n  OPTION_CHOSEN = 'option chosen',\n  LINK_CLICKED = 'link clicked',\n  BUTTON_CLICKED = 'button clicked',\n  CTA_BUTTON_CLICKED = 'cta-button clicked',\n  CHAT_REQUESTED = 'chat requested',\n  CHAT_WAITING = 'chat waiting',\n  CHAT_STARTED = 'chat started',\n  CHAT_ENDED = 'chat ended',\n  CONTACT_OPTIONS_POPUP_VIEW = 'contact options popup view',\n  CONTACT_OPTIONS_POPUP_CLICK = 'contact options popup click',\n  CONTACT_OPTION_VIEW = 'contact option view',\n  CONTACT_OPTION_CLICK = 'contact option click',\n  SELF_INSTALL_OPTION_VIEWED = 'self-install option viewed',\n  FORM_FIELD_COMPLETED = 'form field completed',\n  MOBILE_NUMBERS_ADDED = 'mobile numbers added',\n}\n","export enum EventNameEnum {\n  EVENT_NAME_VIEW_PRODUCT_DETAILS = 'product details viewed',\n  EVENT_NAME_SELECT_NEW_PRODUCT = 'new product selected',\n  EVENT_NAME_VIEW_PRODUCT_HOLDING = 'product holdings viewed',\n  EVENT_NAME_SELECT_OWN_PRODUCT = 'owned product selected',\n  EVENT_NAME_START_SALES_FLOW = 'sales flow started',\n  EVENT_NAME_END_SALES_FLOW = 'sales flow ended',\n  EVENT_NAME_SUBMIT_ORDER = 'order submitted',\n  EVENT_NAME_VIEW_PAGE = 'pageview',\n  EVENT_NAME_VIEW_STEP = 'step viewed',\n  EVENT_NAME_SELECT_NEW_LINE = 'new line selected',\n  EVENT_NAME_SELECT_NEW_OPTION = 'new option selected',\n  EVENT_NAME_REMOVE_OPTION = 'option removed',\n  EVENT_NAME_REMOVE_MUTUALLY_EXCLUSIVE_OPTION = 'mutually exclusive option removed',\n  EVENT_NAME_ERROR_OCCURRED = 'error occurred',\n  EVENT_NAME_CHECK_ELIGIBILITY = 'eligibility checked',\n  EVENT_NAME_OUT_OF_BUNDLE_CONSULTED = 'out of bundle usage consulted',\n  EVENT_NAME_BUTTON_CLICKED = 'button clicked',\n  EVENT_NAME_CONTRACT_SUMMARY_CLICKED = 'contract summary link clicked',\n  EVENT_NAME_STEP_LOAD_TIME = 'step load time',\n  EVENT_NAME_CART_OPENED = 'cart opened',\n  EVENT_NAME_PRODUCT_REMOVED = 'product removed',\n  EVENT_NAME_PRODUCT_ADDED = 'product added',\n  EVENT_NAME_SALES_FLOW_STARTED = 'sales flow started',\n  EVENT_NAME_CONTACT_DETAILS_CHANGED = 'contact details changed',\n  EVENT_NAME_ADDRESS_DETAILS_CHANGED = 'address details changed',\n  EVENT_NAME_ORDER_SUBMITTED = 'order submitted',\n  EVENT_NAME_SAVE_ORDER_CLICKED = 'save order link clicked',\n  EVENT_NAME_MOBILE_USAGE_LIMITS_CHANGED = 'mobile usage limits changed',\n  EVENT_NAME_RESCHEDULE_APPOINTMENT_FLOW_STARTED = 'reschedule appointment flow started',\n  EVENT_NAME_RESCHEDULE_APPOINTMENT_FLOW_COMPLETED = 'reschedule appointment flow completed',\n  EVENT_NAME_CANCEL_APPOINTMENT = 'cancel appointment',\n  EVENT_NAME_APPOINTMENT_OPTION_SELECTED = 'option selected',\n  EVENT_NAME_LINK_CLICKED = 'link clicked',\n  EVENT_NAME_LOGIN = 'redirected to login',\n  EVENT_NAME_REGISTER = 'redirected to registration',\n  EVENT_NAME_MOBILE_USAGE = 'mobile usage',\n  EVENT_NAME_EXISTING_ADDRESS_SELECTED = 'existing address selected',\n  EVENT_NAME_NEW_ADDRESS_OPTION_SELECTED = 'new address option selected',\n  EVENT_NAME_NEW_ADDRESS_SELECTED = 'new address saved',\n  EVENT_NAME_NEW_ADDRESS_CANCELED = 'new address canceled',\n  EVENT_NAME_CONTINUE_BUTTON_CLICKED = 'continue button clicked',\n  EVENT_NAME_NAVIGATED_TO_NEXT_STEP = 'navigated to next step',\n  EVENT_NAME_VIEW_INSTALLATION_TYPE = 'installation type viewed',\n  EVENT_INSTALLATION_TYPE_SELECTED = 'installation type selected',\n  EVENT_NAME_CHEVRON_FEATUE_LINK_CLICKED = 'featured included link clicked',\n  EVENT_NAME_MOBILE_USAGE_PAUSED = 'mobile usage paused',\n  EVENT_NAME_MOBILE_USAGE_UNPAUSED = 'mobile usage unpaused',\n  EVENT_NAME_EASY_SWITCH_OPTION_SELECTED = 'easy switch option selected',\n  EVENT_NAME_MULTIPLE_OPERATOR_CHOICE_SELECTED = 'multiple operator choice selected',\n  EVENT_NAME_I_WILL_DO_IT_LATER_SELECTED = 'I will do it later option selected for product',\n  EVENT_NAME_EASY_SWITCH_SELECTED = 'easy switch option selected for product',\n  EVENT_NAME_CURRENT_PROVIDER_CLICKED = 'current provider option clicked',\n  EVENT_NAME_CURRENT_PROVIDER_SELECTED = 'current provider selected',\n  EVENT_NAME_APPOINTMENT_BY_DATE_OPTION_SELECTED = 'appointment by date option selected',\n  EVENT_NAME_APPOINTMENT_BY_TIME_OPTION_SELECTED = 'appointment by time option selected',\n  EVENT_NAME_OTHER_TIME_SLOTS_LOADED = 'other time slots loaded',\n  EVENT_NAME_EARLIEST_AVAILABLE_APPOINTMENT = 'earliest available appointment',\n  EVENT_NAME_CHANGE_ADDRESS_OPTION_SELECTED = 'change address option selected',\n  EVENT_NAME_CHANGE_ADDRESS_CANCELLED = 'change address cancelled',\n  EVENT_NAME_CHANGE_ADDRESS_SAVED = 'change address saved',\n  EVENT_NAME_PHONE_NUMBER_UPDATED = 'phone number updated',\n  EVENT_NAME_GET_AVAILABLE_MOBILE_LINES = 'available mobile lines',\n  EVENT_NAME_MANAGE_TIP_STARTED = 'manage-tip started',\n  EVENT_NAME_MANAGE_TIP_COMPLETED = 'manage-tip completed',\n  EVENT_NAME_NEW_BUNDLE_LINE_CONFIGURATION_VIEWED = 'new bundle line configuration viewed',\n  EVENT_NAME_SIM_ACCORDION_EXPANDED = 'sim accordion expanded',\n  EVENT_NAME_SIM_CONFIGURATION_SELECTED = 'sim configuration selected',\n  EVENT_NAME_SIM_CONFIGURATION_SAVED = 'sim configuration saved',\n  EVENT_NAME_MOBILE_LINES_TO_TERMINATE = 'mobile lines to terminate',\n  EVENT_NAME_EDIT_LINK_CLICKED = 'sim configuration edit',\n  EVENT_NAME_FIXED_LINE_SELECTED = 'fixed line selected',\n  EVENT_NAME_STANDALONE_CONFIGURATION_SELECTED = 'standalone configuration selected',\n  EVENT_NAME_BILLING_ADDRESS_LINK_CLICKED = 'change billing address link  clicked',\n  EVENT_NAME_INSTALLATION_ADDRESS = 'change installation address link clicked',\n  EVENT_NAME_INSTALLATION_TYPE = 'change installation type link clicked',\n  EVENT_NAME_PERSONAL_DETAILS_LINK_CLICKED = 'change personal detail link  clicked',\n  EVENT_NAME_DEPRECIATION_TABLE = 'show depreciation table for {{product}}',\n  EVENT_NAME_COUPON_CODE_BUTTON_CLICKED = 'coupon code button clicked',\n  EVENT_NAME_COUPON_CODE_APPLIED_SUCCESSFULLY = 'coupon code applied successfully',\n  EVENT_NAME_ORDER_BUTTON_CLICKED = 'order button clicked',\n  EVENT_NAME_SAVE_ORDER_BUTTON_CLICKED = 'save order button clicked',\n  EVENT_NAME_SUBMIT_ORDER_BUTTON_CLICKED = 'submit order button clicked',\n  EVENT_NAME_REDIRECTED_TO_PAYMENT_GATEWAY = 'redirected to payment gateway',\n  EVENT_NAME_PAYMENT_INITIATED = 'payment initiated',\n  EVENT_NAME_COUPON_CODE_REMOVED = 'coupon code removed',\n  EVENT_NAME_TERMS_CONDITION_CLICKED = 'Terms and Conditions link clicked',\n  EVENT_NAME_TERMINATE_EXISTING_CONTRACT_SELECTED = 'terminate existing contract selected',\n  EVENT_NAME_APPLY_BUTTON_CLICKED = 'apply button clicked',\n  EVENT_NAME_CANCEL_BUTTON_CLICKED = 'cancel button clicked',\n  EVENT_NAME_PRODUCT_CANCELLED = 'product cancelled',\n  EVENT_NAME_ENABLE_DISCOUNT_LINK_CLICKED = 'enable discount link clicked',\n  EVENT_NAME_NEW_OPERATOR_INSTALLATION_ADDRESS_SELECTED = 'new operator installation address selected',\n  EVENT_NAME_APPLY_MOVE_BUTTON_CLICKED = 'apply for move button clicked',\n  EVENT_NAME_MOVE_SAVE_BUTTON_CLICKED = 'move address saved',\n  EVENT_NAME_MOVE_ZIP_CODE = 'zip code for move address selected',\n  EVENT_NAME_INSTALLATION_TYPE_CLICKED = 'installation type clicked',\n  EVENT_NAME_DELIVERY_ADDRESS_UPDATED = 'delivery address updated',\n  EVENT_NAME_CONTACT_UPDATED = 'contact updated',\n  EVENT_NAME_CANCEL_SIM_CONFIGURATION_CLICKED = 'sim configuration cancelled',\n  EVENT_NAME_RESTRICTED_PRODUCT_DISCLAIMER_SHOWN = 'restricted product disclaimer shown',\n  EVENT_NAME_BILLING_ADDRESS_NOT_UPDATED = 'billing address is not changed',\n  EVENT_NAME_BILLING_ADDRESS_UPDATED = 'biling address updated',\n  EVENT_NAME_PERSONAL_INFO_NOT_CHANGED = 'personal info is not changed',\n  EVENT_NAME_PERSONAL_INFO_UPDATED = 'personal info is updated',\n  EVENT_NAME_REDIRECTED_TO_INSTALLATION_LOCATION_STEP = 'redirected to installation location step',\n  EVENT_NAME_INSTALLATION_ADDRESS_NOT_CHANGED = 'installation address not changed',\n  EVENT_NAME_INSTALLATION_TYPE_NOT_CHANGED = 'installation type not changed',\n  EVENT_NAME_REDIRECTED_TO_RESERVE_APPOINTMENT_STEP = 'redirected to reserve appointment step',\n  EVENT_NAME_REDIRECTED_TO_INSTALLATION_TPE_STEP = 'redirected to installation type step',\n  EVENT_NAME_APPLY_COUPON_CODE_FAILED = 'apply coupon failed',\n  EVENT_NAME_CHANGE_SHIPPING_ADDRESS_LINK_CLICKED = 'change shipping address link clicked',\n  EVENT_NAME_SHIPPING_ADDRESS_UPDATED = 'shipping address is updated',\n  EVENT_NAME_SHIPPING_ADDRESS_NOT_CHANGED = 'shipping address not changed',\n  EVENT_NAME_EASY_SWITCH_AVAILABLE_OPTION_SELECTED = 'easyswitch available option clicked',\n  EVENT_NAME_EASY_SWITCH_TV_OPTION = 'tv option clicked',\n  EVENT_NAME_EASY_SWITCH_TV_INTERNET_OPTION = 'internet and tv option clicked',\n  EVENT_NAME_START_DATE_OPTION = 'start date option clicked',\n  EVENT_NAME_START_DATE_OPTION_MESSAGE = 'start date option message viewed',\n  EVENT_NAME_CHANGE_LINE_SELECTED = 'change line selected',\n}\n","export enum EventTypeEnum {\n  EVENT_TYPE_ERROR = 'error',\n  EVENT_TYPE_CLICK = 'click',\n  EVENT_TYPE_CLICK_CARD = 'click-card',\n  EVENT_TYPE_SALES_FLOW_START = 'sales-flow-start',\n  EVENT_TYPE_SALES_FLOW_END = 'sales-flow-end',\n  EVENT_TYPE_SC_ADD = 'sc-add',\n  EVENT_TYPE_SC_OPEN = 'sc-open',\n  EVENT_TYPE_SC_REMOVE = 'sc-remove',\n  EVENT_TYPE_SC_CANCEL = 'sc-cancel',\n  EVENT_TYPE_SC_ADD_ERROR = 'sc-add + error',\n  EVENT_TYPE_SC_REMOVE_ERROR = 'sc-remove + error',\n  EVENT_TYPE_VIEW_PRODUCT_DETAILS = 'view-product-details',\n  EVENT_TYPE_VIEW_MOBILE_USAGE = 'view-mobile-usage',\n  EVENT_TYPE_STEP_LOAD_TIME = 'step-load-time',\n  EVENT_TYPE_ONSITE_SEARCH_CLICK = 'on-site-search-click',\n  EVENT_TYPE_ONSITE_SEARCH = 'on-site-search',\n  EVENT_TYPE_IMPRESSION = 'impression',\n  EVENT_TYPE_BUTTON_CLICK = 'button-click',\n  EVENT_TYPE_CH_STORE = 'context-hub-store',\n  EVENT_TYPE_SELF_SERVICE_FLOW_STARTED = 'self-service-flow-start',\n  EVENT_TYPE_SELF_SERVICE_FLOW_END = 'self-service-flow-end',\n  EVENT_TYPE_VIEW_BANNER = 'view-banner',\n  EVENT_TYPE_VIEWED_PAGE = 'viewed-page',\n  EVENT_TYPE_BILLING_INFO = 'change-billing-info',\n  EVENT_TYPE_INSTALLATION_ADDRESS = 'change-installation-address',\n  EVENT_TYPE_INFO_CARD = 'change-installation-type-info-card',\n  EVENT_TYPE_PERSONAL_INFO = 'change-personal-info',\n  EVENT_TYPE_PRE_ORDER = 'pre-order',\n  EVENT_TYPE_PURCHASE = 'purchase',\n}\n","export enum EventStatusEnum {\n  EVENT_STATUS_FAILED = 'failed',\n  EVENT_STATUS_SUCCESS = 'success',\n  EVENT_STATUS_MESSAGE_EMPTY = '',\n}\n","export enum EventTypes {\n  SELF_SERVICE_FLOW_STARTED = 'self-service-flow-start',\n  SELF_SERVICE_FLOW_END = 'self-service-flow-end',\n  OPTION_CLICK = 'option-click',\n  LINK_CLICK = 'link-click',\n  CHAT_REQUEST = 'chat-request',\n  CHAT_WAIT = 'chat-wait',\n  CHAT_START = 'chat-start',\n  CHAT_END = 'chat-end',\n  CONTACT_OPTIONS_POPUP_VIEW = 'pop-up-view',\n  CONTACT_OPTIONS_POPUP_CLICK = 'pop-up-click',\n  CONTACT_OPTION_VIEW = 'contact-option-view',\n  CONTACT_OPTION_CLICK = 'button-click',\n  SELF_INSTALL_VIEW = 'view-notification',\n  CLICK = 'click',\n}\n","export enum EventCategoryEnum {\n  PRIMARY_CATEGORY_SALES = 'sales',\n  PRIMARY_CATEGORY_CARE = 'care',\n  PRIMARY_CATEGORY_GENERAL = 'general',\n  PRIMARY_CATEGORY_TIP = 'tip',\n  PRIMARY_CATEGORY_CONTAINER = 'container',\n  SUBCATEGORY_PRODUCT_HOLDING = 'product holding',\n  SUBCATEGORY_CONTACT = 'contact',\n  SUBCATEGORY_EMPTY = '',\n  SUBCATEGORY_HOMENETWORK = 'home-network',\n}\n","import { Inject, Injectable } from '@angular/core';\nimport * as udl from 'udl';\nimport { EventTypeEnum } from './enums/event-type.enum';\nimport { DataLayerAttributes } from './interfaces/data-layer-attributes';\nimport { EventNameEnum } from './enums/event-name.enum';\nimport { EventStatusEnum } from './enums/event-status.enum';\nimport { AbstractMessage, MessageService } from '@telenet/ng-lib-message';\nimport { mergeMap, tap } from 'rxjs/operators';\nimport { DirectCallLabelEnum } from 'udl';\nimport { forkJoin, timer } from 'rxjs';\nimport { EventProperties } from './interfaces/udl-event-properties';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataLayerService {\n  private dataLayer!: udl.DataLayer;\n\n  constructor(\n    private readonly messageService: MessageService,\n    @Inject('Window')\n    private readonly window: Record<string, unknown>\n  ) {}\n\n  init() {\n    const udlObjectName = this.window['udlObjectName'] as string;\n    this.dataLayer = udl.DataLayer.create();\n    if (this.window[udlObjectName] && udlObjectName) {\n      let componentList = this.dataLayer.getComponents();\n      if (componentList && componentList.length > 0) {\n        componentList = componentList.map(function (componentItem) {\n          return new udl.Component(componentItem);\n        });\n      }\n      this.dataLayer.setComponents(componentList);\n    }\n    return true;\n  }\n\n  getDataLayer(): udl.DataLayer {\n    return this.dataLayer;\n  }\n\n  setPage(page: udl.Page): Promise<boolean> {\n    if (this.dataLayer) {\n      return this.dataLayer.setPage(page);\n    }\n    return new Promise(() => false);\n  }\n\n  getCategory(componentInstanceId: string): udl.Category | null {\n    if (this.dataLayer) {\n      return this.dataLayer.getCategory(componentInstanceId);\n    }\n    return null;\n  }\n\n  createCategory(primaryCategory: string = '', subCategory1?: string): udl.Category {\n    const category = new udl.Category();\n    category.setPrimaryCategory(primaryCategory);\n    if (subCategory1) {\n      category.setSubCategory1(subCategory1);\n    }\n\n    return category;\n  }\n\n  addPageEvent(pageId: string, attributes?: Record<string, string | boolean | number>): void {\n    const pageInfoObject = new udl.PageInfo();\n    pageInfoObject.setPageID(pageId);\n    pageInfoObject.setPageName(pageId);\n    pageInfoObject.setLanguage(this.dataLayer.getPage().getPageInfo().getLanguage());\n\n    const page = new udl.Page({ pageInfo: pageInfoObject });\n    if (attributes) {\n      Object.keys(attributes).forEach((key) => page.addAttribute(key, attributes[key]));\n    }\n\n    this.setPage(page).then();\n  }\n\n  addStepViewEvent(attributes: DataLayerAttributes): Promise<boolean> {\n    const event = new udl.Event();\n    const eventInfo = this.createEventInfo(EventNameEnum.EVENT_NAME_VIEW_STEP);\n    event.setEventInfo(eventInfo);\n    event.setAttributes(attributes);\n\n    if (this.dataLayer) {\n      return this.dataLayer.addStepViewEvent(event);\n    }\n    return new Promise(() => false);\n  }\n\n  createEvent(eventProperties: EventProperties): udl.Event {\n    const { eventInfo, attributes, strategy, category, directCallLabel } = eventProperties;\n    const event = new udl.Event();\n    event.setEventInfo(eventInfo);\n    event.setAttributes(attributes);\n    if (strategy) {\n      event.setStrategy(strategy);\n    }\n\n    if (category) {\n      event.setCategory(category);\n    }\n\n    if (directCallLabel) {\n      event.setDirectCallLabel(directCallLabel);\n    }\n\n    return event;\n  }\n\n  sendEvent(eventProperties: EventProperties): Promise<boolean> {\n    const event = this.createEvent(eventProperties);\n    if (this.dataLayer) {\n      return this.dataLayer.addEvent(event);\n    }\n    return new Promise(() => false);\n  }\n\n  addEvent(\n    eventInfo: udl.EventInfo,\n    attributes: DataLayerAttributes,\n    category?: udl.Category,\n    directCallLabel?: udl.DirectCallLabelEnum\n  ): Promise<boolean> {\n    const event = new udl.Event();\n    event.setEventInfo(eventInfo);\n    event.setAttributes(attributes);\n\n    if (category) {\n      event.setCategory(category);\n    }\n\n    if (directCallLabel) {\n      event.setDirectCallLabel(directCallLabel as DirectCallLabelEnum);\n    }\n\n    if (this.dataLayer) {\n      return this.dataLayer.addEvent(event);\n    }\n    return new Promise(() => false);\n  }\n\n  addStepLoadTimeEvent(attributes: DataLayerAttributes) {\n    const eventInfo = this.createEventInfo(\n      EventNameEnum.EVENT_NAME_STEP_LOAD_TIME,\n      EventTypeEnum.EVENT_TYPE_STEP_LOAD_TIME\n    );\n    return this.addEvent(eventInfo, attributes);\n  }\n\n  setCart(cart: udl.Cart): Promise<boolean> {\n    if (this.dataLayer) {\n      return this.dataLayer.setCart(cart);\n    }\n    return new Promise(() => false);\n  }\n\n  getCart(): udl.Cart | null {\n    if (this.dataLayer) {\n      return this.dataLayer.getCart();\n    }\n    return null;\n  }\n\n  createEventInfo(eventName: string, eventType?: string, messageGroups?: string[]): udl.EventInfo {\n    const eventInfo = new udl.EventInfo();\n    eventInfo.setEventName(eventName);\n    eventInfo.setType(eventType ?? '');\n    eventInfo.setEventStatus(this.getStatus(messageGroups?.length ? messageGroups : []));\n    eventInfo.setEventStatusMessage(this.getStatusMessage(messageGroups?.length ? messageGroups : []));\n    return eventInfo;\n  }\n\n  createCart(cartId: string, price?: udl.Price): udl.Cart {\n    const cart = new udl.Cart();\n    cart.setCartID(cartId);\n    cart.setPrice(price ?? new udl.Price());\n\n    return cart;\n  }\n\n  createTransaction(transactionId: string, price: udl.Price): udl.Transaction {\n    const transaction = new udl.Transaction();\n    transaction.setTransactionID(transactionId);\n    transaction.setPrice(price);\n\n    return transaction;\n  }\n\n  setTransaction(transaction: udl.Transaction): Promise<boolean> {\n    if (this.dataLayer) {\n      return this.dataLayer.setTransaction(transaction);\n    }\n    return new Promise(() => false);\n  }\n\n  createPrice(\n    oneTimePrice?: number,\n    recurringPrice?: number,\n    basePrice?: udl.Price,\n    totalPrice?: udl.Price,\n    discountedPrice?: udl.Price\n  ) {\n    const price = new udl.Price();\n    price.setOnetimePrice(oneTimePrice ?? 0);\n    price.setRecurringPrice(recurringPrice ?? 0);\n    price.setBasePrice(basePrice ?? new udl.Price());\n    price.setTotalPrice(totalPrice ?? new udl.Price());\n    price.setDiscountedPrice(discountedPrice ?? new udl.Price());\n\n    return price;\n  }\n\n  createProductInfo(productId: string, productName?: string, productType?: string, productStatus?: string) {\n    const product = new udl.Product();\n    product.setProductID(productId);\n    product.setProductName(productName ?? '');\n    product.setProductType(productType ?? '');\n    product.setProductStatus(productStatus ?? '');\n\n    return product;\n  }\n\n  createItem(productInfo: udl.Product, price?: udl.Price, quantity?: number) {\n    const item = new udl.Item();\n    item.setProductInfo(productInfo);\n    item.setPrice(price ?? new udl.Price());\n    item.setQuantity(quantity ?? 0);\n\n    return item;\n  }\n\n  private getStatus(messageGroups: string[]): string {\n    if (messageGroups?.length) {\n      for (const messageGroup of messageGroups) {\n        if (this.messageService.hasErrorMessages(messageGroup)) {\n          return EventStatusEnum.EVENT_STATUS_FAILED;\n        }\n      }\n      return EventStatusEnum.EVENT_STATUS_SUCCESS;\n    }\n    return EventStatusEnum.EVENT_STATUS_MESSAGE_EMPTY;\n  }\n\n  private getStatusMessage(messageGroups: string[]): string {\n    let statusMessages = '';\n    let messagesFromMessageService: AbstractMessage[] = [];\n    if (messageGroups?.length) {\n      for (const messageGroup of messageGroups) {\n        if (this.messageService.hasErrorMessages(messageGroup)) {\n          messagesFromMessageService = messagesFromMessageService.concat(\n            this.messageService.getErrorMessages(messageGroup)\n          );\n        }\n      }\n      messagesFromMessageService = messagesFromMessageService.filter((msg) => msg.type !== 'success');\n      statusMessages = messagesFromMessageService.map((msg) => msg['_key']).join(',');\n    }\n    return statusMessages;\n  }\n\n  getAnalyticsPromises(): Promise<boolean>[] {\n    if (this.dataLayer) {\n      return this.dataLayer.getAnalyticsPromises();\n    }\n    return [];\n  }\n\n  rollbackStepIdToParent(stepId: string): void {\n    timer(100)\n      .pipe(\n        mergeMap(() => {\n          const analyticsPromises = this.getAnalyticsPromises();\n          return forkJoin(analyticsPromises);\n        }),\n        tap(() => this.getDataLayer().getPage().getPageInfo().setStepId(stepId))\n      )\n      .subscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataLayerService } from '../datalayer.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataLayerServiceProvider {\n  constructor(private readonly dataLayerService: DataLayerService) {}\n\n  init(): Promise<boolean> {\n    const timeout = 5000;\n    const intervalTimer = 250;\n    let numberOfRuns = 0;\n\n    return new Promise<boolean>((resolve, _) => {\n      const interval = setInterval(() => {\n        if (this.dataLayerService.init()) {\n          resolve(true);\n          clearInterval(interval);\n        } else if (timeout <= intervalTimer * numberOfRuns) {\n          clearInterval(interval);\n        }\n        numberOfRuns++;\n      }, 250);\n    });\n  }\n}\n\nexport function dataLayerServiceProviderFactory(dataLayerServiceProvider: DataLayerServiceProvider) {\n  return () => dataLayerServiceProvider.init();\n}\n","import { Directive, HostListener, Input } from '@angular/core';\n\nimport * as udl from 'udl';\nimport { DataLayerService } from '../../datalayer.service';\nimport { DataLayerAttributes } from '../../interfaces/data-layer-attributes';\nimport { EventCategoryEnum } from '../../enums/event-category.enum';\nimport { DatalayerEventNames } from '../../enums/datalayer-event-names.enum';\nimport { EventTypes } from '../../enums/datalayer-event-types.enum';\n\n@Directive({\n  selector: '[clickPushToAnalytics]',\n  standalone: true,\n})\nexport class AdobeAnalyticsDirective {\n  @Input() clickPushToAnalytics!: { attributeName: string; eventName: DatalayerEventNames; messageGroupName: string };\n\n  @HostListener('click')\n  onClick() {\n    this.pushToAnalytics(\n      this.clickPushToAnalytics.attributeName,\n      this.clickPushToAnalytics.eventName,\n      this.clickPushToAnalytics.messageGroupName\n    );\n  }\n\n  constructor(private readonly dataLayerService: DataLayerService) {}\n\n  pushToAnalytics(attributeName: string, eventName: DatalayerEventNames, messageGroupName: string): void {\n    const eventInfo = this.dataLayerService.createEventInfo(eventName, EventTypes.CLICK, [messageGroupName]);\n    const attributes: DataLayerAttributes = {\n      itemName: attributeName,\n    };\n    this.addEventToDataLayer(eventInfo, attributes);\n  }\n\n  private addEventToDataLayer(eventInfo: udl.EventInfo, attributes?: DataLayerAttributes): void {\n    const category = this.dataLayerService.createCategory(\n      EventCategoryEnum.PRIMARY_CATEGORY_CARE,\n      EventCategoryEnum.PRIMARY_CATEGORY_GENERAL\n    );\n    const enrichedAttributes = attributes || {};\n    this.dataLayerService.addEvent(eventInfo, enrichedAttributes, category);\n  }\n}\n","import { Transaction, TransactionBuilder } from 'udl';\nimport { DataLayerAttributes } from '../interfaces/data-layer-attributes';\n\nexport class DataLayerTransactionBuilder extends TransactionBuilder {\n  private _dataLayerAttributes: DataLayerAttributes | undefined;\n  private _resolvePromiseAfterDelay = 0;\n\n  withDataLayerAttributes(attributes: DataLayerAttributes): DataLayerTransactionBuilder {\n    this._dataLayerAttributes = attributes;\n    return this;\n  }\n\n  withDataLayerForceResolvePromiseAfterDelay(timeoutInMS: number): DataLayerTransactionBuilder {\n    this._resolvePromiseAfterDelay = timeoutInMS;\n    return this;\n  }\n\n  override build(): Transaction {\n    const transaction = super.build();\n    if (this._dataLayerAttributes) {\n      transaction.setAttributes(this._dataLayerAttributes);\n    }\n    transaction.setForceResolvePromiseAfterDelay(this._resolvePromiseAfterDelay);\n    return transaction;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.DataLayerService"],"mappings":"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"}