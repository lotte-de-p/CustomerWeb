import { WindowService } from '../window/window.service';
export class LogFactory {
    static createLogger(component) {
        return new LogImpl(component);
    }
}
class LogImpl {
    windowService = new WindowService();
    component;
    constructor(component) {
        if (component) {
            this.component = component;
        }
    }
    log(...args) {
        if (this.component) {
            console.log(this.componentToString(args));
        }
        else {
            console.log(args);
        }
    }
    logDebug(...args) {
        if (this.isDebugEnabled()) {
            if (this.component) {
                console.debug(this.componentToString(args));
            }
            else {
                console.debug(args);
            }
        }
    }
    logError(...args) {
        if (this.component) {
            console.error(this.componentToString(args));
        }
        else {
            console.error(args);
        }
    }
    logInfo(...args) {
        if (this.component) {
            console.info(this.componentToString(args));
        }
        else {
            console.info(args);
        }
    }
    isDebugEnabled() {
        return this.windowService && this.windowService.getParamValue('debug') === 'true';
    }
    componentToString(args) {
        return [`${this.component.prototype.constructor.name}`, ...args];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2RlYnVnL2xvZy5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUd6RCxNQUFNLE9BQU8sVUFBVTtJQUNyQixNQUFNLENBQUMsWUFBWSxDQUFDLFNBQXlCO1FBQzNDLE9BQU8sSUFBSSxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDaEMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPO0lBQ00sYUFBYSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7SUFDcEMsU0FBUyxDQUFpQjtJQUUzQyxZQUFZLFNBQXlCO1FBQ25DLElBQUksU0FBUyxFQUFFLENBQUM7WUFDZCxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUM3QixDQUFDO0lBQ0gsQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFHLElBQWU7UUFDcEIsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDbkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUM1QyxDQUFDO2FBQU0sQ0FBQztZQUNOLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDcEIsQ0FBQztJQUNILENBQUM7SUFFRCxRQUFRLENBQUMsR0FBRyxJQUFlO1FBQ3pCLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRSxFQUFFLENBQUM7WUFDMUIsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7Z0JBQ25CLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDOUMsQ0FBQztpQkFBTSxDQUFDO2dCQUNOLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDdEIsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0lBRUQsUUFBUSxDQUFDLEdBQUcsSUFBZTtRQUN6QixJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNuQixPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQzlDLENBQUM7YUFBTSxDQUFDO1lBQ04sT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QixDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU8sQ0FBQyxHQUFHLElBQWU7UUFDeEIsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDbkIsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUM3QyxDQUFDO2FBQU0sQ0FBQztZQUNOLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckIsQ0FBQztJQUNILENBQUM7SUFFTyxjQUFjO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsS0FBSyxNQUFNLENBQUM7SUFDcEYsQ0FBQztJQUVPLGlCQUFpQixDQUFDLElBQWU7UUFDdkMsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDbkUsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgV2luZG93U2VydmljZSB9IGZyb20gJy4uL3dpbmRvdy93aW5kb3cuc2VydmljZSc7XG5pbXBvcnQgeyBMb2cgfSBmcm9tICcuL2xvZyc7XG5cbmV4cG9ydCBjbGFzcyBMb2dGYWN0b3J5IHtcbiAgc3RhdGljIGNyZWF0ZUxvZ2dlcihjb21wb25lbnQ/OiBUeXBlPHVua25vd24+KTogTG9nIHtcbiAgICByZXR1cm4gbmV3IExvZ0ltcGwoY29tcG9uZW50KTtcbiAgfVxufVxuXG5jbGFzcyBMb2dJbXBsIGltcGxlbWVudHMgTG9nIHtcbiAgcHJpdmF0ZSByZWFkb25seSB3aW5kb3dTZXJ2aWNlID0gbmV3IFdpbmRvd1NlcnZpY2UoKTtcbiAgcHJpdmF0ZSByZWFkb25seSBjb21wb25lbnQhOiBUeXBlPHVua25vd24+O1xuXG4gIGNvbnN0cnVjdG9yKGNvbXBvbmVudD86IFR5cGU8dW5rbm93bj4pIHtcbiAgICBpZiAoY29tcG9uZW50KSB7XG4gICAgICB0aGlzLmNvbXBvbmVudCA9IGNvbXBvbmVudDtcbiAgICB9XG4gIH1cblxuICBsb2coLi4uYXJnczogdW5rbm93bltdKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY29tcG9uZW50KSB7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmNvbXBvbmVudFRvU3RyaW5nKGFyZ3MpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coYXJncyk7XG4gICAgfVxuICB9XG5cbiAgbG9nRGVidWcoLi4uYXJnczogdW5rbm93bltdKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuaXNEZWJ1Z0VuYWJsZWQoKSkge1xuICAgICAgaWYgKHRoaXMuY29tcG9uZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZGVidWcodGhpcy5jb21wb25lbnRUb1N0cmluZyhhcmdzKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmRlYnVnKGFyZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGxvZ0Vycm9yKC4uLmFyZ3M6IHVua25vd25bXSk6IHZvaWQge1xuICAgIGlmICh0aGlzLmNvbXBvbmVudCkge1xuICAgICAgY29uc29sZS5lcnJvcih0aGlzLmNvbXBvbmVudFRvU3RyaW5nKGFyZ3MpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihhcmdzKTtcbiAgICB9XG4gIH1cblxuICBsb2dJbmZvKC4uLmFyZ3M6IHVua25vd25bXSk6IHZvaWQge1xuICAgIGlmICh0aGlzLmNvbXBvbmVudCkge1xuICAgICAgY29uc29sZS5pbmZvKHRoaXMuY29tcG9uZW50VG9TdHJpbmcoYXJncykpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmluZm8oYXJncyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBpc0RlYnVnRW5hYmxlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy53aW5kb3dTZXJ2aWNlICYmIHRoaXMud2luZG93U2VydmljZS5nZXRQYXJhbVZhbHVlKCdkZWJ1ZycpID09PSAndHJ1ZSc7XG4gIH1cblxuICBwcml2YXRlIGNvbXBvbmVudFRvU3RyaW5nKGFyZ3M6IHVua25vd25bXSk6IHVua25vd24ge1xuICAgIHJldHVybiBbYCR7dGhpcy5jb21wb25lbnQucHJvdG90eXBlLmNvbnN0cnVjdG9yLm5hbWV9YCwgLi4uYXJnc107XG4gIH1cbn1cbiJdfQ==