export class OcapiCallConfig {
    messageGroupName;
    endpoint;
    mapper;
    data;
    withCredentials = true;
    withDefaultContentType = true;
    errorHandler;
    httpType;
    customHeaders;
    observeAsResponse;
    responseType;
    useAdaptorEndpoint;
    silentlyHandleError;
    authNeeded = true;
    constructor(messageGroupName, endpoint, mapper, data, customHeaders = {}, observeAsResponse, responseType, useAdaptorEndpoint, silentlyHandleError = false) {
        this.messageGroupName = messageGroupName;
        this.endpoint = endpoint;
        this.mapper = mapper;
        this.data = data;
        this.customHeaders = customHeaders;
        this.observeAsResponse = observeAsResponse;
        this.responseType = responseType;
        this.useAdaptorEndpoint = useAdaptorEndpoint;
        this.silentlyHandleError = silentlyHandleError;
    }
    getEndpoint() {
        return this.useAdaptorEndpoint ? this.endpoint.replace('/public', '-adaptor/public') : this.endpoint;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2NhcGktY2FsbC5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvbW9kZWxzL29jYXBpLWNhbGwubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsTUFBTSxPQUFPLGVBQWU7SUFDMUIsZ0JBQWdCLENBQVM7SUFDekIsUUFBUSxDQUFTO0lBQ2pCLE1BQU0sQ0FBeUI7SUFDL0IsSUFBSSxDQUFVO0lBQ2QsZUFBZSxHQUFHLElBQUksQ0FBQztJQUN2QixzQkFBc0IsR0FBRyxJQUFJLENBQUM7SUFDOUIsWUFBWSxDQUEwRjtJQUN0RyxRQUFRLENBQWdCO0lBQ3hCLGFBQWEsQ0FBb0M7SUFDakQsaUJBQWlCLENBQVc7SUFDNUIsWUFBWSxDQUFVO0lBQ3RCLGtCQUFrQixDQUFXO0lBQzdCLG1CQUFtQixDQUFVO0lBQzdCLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFFbEIsWUFDRSxnQkFBd0IsRUFDeEIsUUFBZ0IsRUFDaEIsTUFBOEIsRUFDOUIsSUFBYyxFQUNkLGdCQUFtRCxFQUFFLEVBQ3JELGlCQUEyQixFQUMzQixZQUFxQixFQUNyQixrQkFBNEIsRUFDNUIsbUJBQW1CLEdBQUcsS0FBSztRQUUzQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7UUFDekMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDO1FBQzNDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsbUJBQW1CLENBQUM7SUFDakQsQ0FBQztJQUVELFdBQVc7UUFDVCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkcsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFwcGVySW50ZXJmYWNlIH0gZnJvbSAnQHRlbGVuZXQvbmctbGliLXNoYXJlZCc7XG5pbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEh0dHBUeXBlc0VudW0gfSBmcm9tICcuLi9lbnVtcyc7XG5cbmV4cG9ydCBjbGFzcyBPY2FwaUNhbGxDb25maWc8VCwgRz4ge1xuICBtZXNzYWdlR3JvdXBOYW1lOiBzdHJpbmc7XG4gIGVuZHBvaW50OiBzdHJpbmc7XG4gIG1hcHBlcj86IE1hcHBlckludGVyZmFjZTxULCBHPjtcbiAgZGF0YTogdW5rbm93bjtcbiAgd2l0aENyZWRlbnRpYWxzID0gdHJ1ZTtcbiAgd2l0aERlZmF1bHRDb250ZW50VHlwZSA9IHRydWU7XG4gIGVycm9ySGFuZGxlcjogKGVycm9ySGFuZGxlcjogSHR0cEVycm9yUmVzcG9uc2UsIGNvbmZpZzogT2NhcGlDYWxsQ29uZmlnPFQsIEc+KSA9PiBPYnNlcnZhYmxlPHVua25vd24+O1xuICBodHRwVHlwZTogSHR0cFR5cGVzRW51bTtcbiAgY3VzdG9tSGVhZGVyczogUmVjb3JkPHN0cmluZywgc3RyaW5nIHwgc3RyaW5nW10+O1xuICBvYnNlcnZlQXNSZXNwb25zZT86IGJvb2xlYW47XG4gIHJlc3BvbnNlVHlwZT86IHN0cmluZztcbiAgdXNlQWRhcHRvckVuZHBvaW50PzogYm9vbGVhbjtcbiAgc2lsZW50bHlIYW5kbGVFcnJvcjogYm9vbGVhbjtcbiAgYXV0aE5lZWRlZCA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgbWVzc2FnZUdyb3VwTmFtZTogc3RyaW5nLFxuICAgIGVuZHBvaW50OiBzdHJpbmcsXG4gICAgbWFwcGVyPzogTWFwcGVySW50ZXJmYWNlPFQsIEc+LFxuICAgIGRhdGE/OiB1bmtub3duLFxuICAgIGN1c3RvbUhlYWRlcnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZyB8IHN0cmluZ1tdPiA9IHt9LFxuICAgIG9ic2VydmVBc1Jlc3BvbnNlPzogYm9vbGVhbixcbiAgICByZXNwb25zZVR5cGU/OiBzdHJpbmcsXG4gICAgdXNlQWRhcHRvckVuZHBvaW50PzogYm9vbGVhbixcbiAgICBzaWxlbnRseUhhbmRsZUVycm9yID0gZmFsc2VcbiAgKSB7XG4gICAgdGhpcy5tZXNzYWdlR3JvdXBOYW1lID0gbWVzc2FnZUdyb3VwTmFtZTtcbiAgICB0aGlzLmVuZHBvaW50ID0gZW5kcG9pbnQ7XG4gICAgdGhpcy5tYXBwZXIgPSBtYXBwZXI7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB0aGlzLmN1c3RvbUhlYWRlcnMgPSBjdXN0b21IZWFkZXJzO1xuICAgIHRoaXMub2JzZXJ2ZUFzUmVzcG9uc2UgPSBvYnNlcnZlQXNSZXNwb25zZTtcbiAgICB0aGlzLnJlc3BvbnNlVHlwZSA9IHJlc3BvbnNlVHlwZTtcbiAgICB0aGlzLnVzZUFkYXB0b3JFbmRwb2ludCA9IHVzZUFkYXB0b3JFbmRwb2ludDtcbiAgICB0aGlzLnNpbGVudGx5SGFuZGxlRXJyb3IgPSBzaWxlbnRseUhhbmRsZUVycm9yO1xuICB9XG5cbiAgZ2V0RW5kcG9pbnQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy51c2VBZGFwdG9yRW5kcG9pbnQgPyB0aGlzLmVuZHBvaW50LnJlcGxhY2UoJy9wdWJsaWMnLCAnLWFkYXB0b3IvcHVibGljJykgOiB0aGlzLmVuZHBvaW50O1xuICB9XG59XG4iXX0=