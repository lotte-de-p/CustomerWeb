{"version":3,"file":"telenet-ng-lib-omapi-query.mjs","sources":["../../src/lib/enums/http-types.enum.ts","../../src/lib/interfaces/raw-omapi-query-product.testfactory.ts","../../src/lib/mappers/omapi-query-product.mapper.ts","../../src/lib/enums/product-type.enum.ts","../../src/lib/models/query-product-info-transformer.model.ts","../../src/lib/models/omapi-query-call.model.ts","../../src/lib/services/cache/cache.service.ts","../../src/lib/services/omapi-query-product.service.ts","../../src/lib/enums/address.enum.ts","../../src/lib/helpers/omapi-query.helper.ts","../../src/lib/services/omapi-query.service.ts","../../src/telenet-ng-lib-omapi-query.ts"],"sourcesContent":["export enum HttpTypesEnum {\n  POST = 'POST',\n}\n","import {\n  RawColorInterface,\n  RawImagesInterface,\n  RawLocalizedContentInterface,\n  RawOmapiQueryProductInterface,\n  RawOmapiQueryProductInterfaceData,\n  RawProductTypeInterface,\n  RawVariantsInterface,\n  VariantTagInterface,\n  VariantTagOptionInterface,\n} from '../interfaces/raw-omapi-query-product.interface';\nimport { makeFactory } from 'factory.ts';\n\nexport const rawLocalizedContentInterfaceFactory = makeFactory<RawLocalizedContentInterface>({\n  key: '1',\n  value: [],\n  data: 'test',\n  locale: 'nl',\n});\n\nexport const rawProductTypeInterfaceFactory = makeFactory<RawProductTypeInterface>({\n  code: '',\n  localizedContent: [rawLocalizedContentInterfaceFactory.build()],\n});\n\nexport const rawColorInterfaceFactory = makeFactory<RawColorInterface>({\n  sortOrder: '',\n  localizedContent: [],\n  attributeGroup: rawProductTypeInterfaceFactory.build(),\n});\n\nexport const variantTagOptionInterfaceFactory = makeFactory<VariantTagOptionInterface>({\n  attributeKey: '',\n  backOrderDescription: {\n    localizedContent: [rawLocalizedContentInterfaceFactory.build()],\n  },\n  preOrderDescription: {\n    localizedContent: [rawLocalizedContentInterfaceFactory.build()],\n  },\n});\n\nexport const variantTagInterfaceFactory = makeFactory<VariantTagInterface>({\n  telenet: { options: [variantTagOptionInterfaceFactory.build()] },\n  telenetSOHO: { options: [variantTagOptionInterfaceFactory.build()] },\n  base: { options: [variantTagOptionInterfaceFactory.build()] },\n  baseSOHO: { options: [variantTagOptionInterfaceFactory.build()] },\n});\n\nexport const RawImagesInterfaceFactory = makeFactory<RawImagesInterface>({\n  attributeKey: '',\n  value: '',\n  localizedContent: [],\n});\n\nexport const rawVariantsInterfaceFactory = makeFactory<RawVariantsInterface>({\n  productId: '',\n  images: [],\n  contractMonths: undefined,\n  prices: {\n    priceType: '',\n  },\n  color: rawColorInterfaceFactory.build(),\n  manBrand: rawColorInterfaceFactory.build(),\n  shortDescription: {\n    localizedContent: [rawLocalizedContentInterfaceFactory.build()],\n  },\n  tag: variantTagInterfaceFactory.build(),\n  characteristics: undefined,\n});\n\nexport const rawBigItemVariantInterfaceFactory = rawVariantsInterfaceFactory.extend({\n  extraAtHomeDelivery: true,\n});\n\nexport const rawOmapiQueryProductInterfaceDataFactory = makeFactory<RawOmapiQueryProductInterfaceData>({\n  labelKey: '',\n  productFamily: '',\n  variants: [],\n  manBrand: rawColorInterfaceFactory.build(),\n  isPreOrder: false,\n  isBackOrder: false,\n});\n\nexport const rawOmapiQueryProductTestfactory = makeFactory<RawOmapiQueryProductInterface>({\n  products: rawOmapiQueryProductInterfaceDataFactory.buildList(2),\n});\n\nexport const rawOmapiQueryProductInterfaceDataWithPreOrderFactory = rawOmapiQueryProductInterfaceDataFactory.extend({\n  labelKey: '',\n  productFamily: '',\n  variants: [\n    rawVariantsInterfaceFactory.build({\n      tag: {\n        telenet: {\n          options: [\n            variantTagOptionInterfaceFactory.build({\n              attributeKey: 'pre_order_label',\n            }),\n          ],\n        },\n      },\n    }),\n  ],\n  manBrand: rawColorInterfaceFactory.build(),\n  isPreOrder: false,\n  isBackOrder: false,\n});\n\nexport const rawOmapiQueryProductInterfaceDataWithBackOrderFactory = rawOmapiQueryProductInterfaceDataFactory.extend({\n  labelKey: '',\n  productFamily: '',\n  variants: [\n    rawVariantsInterfaceFactory.build({\n      tag: {\n        telenet: {\n          options: [\n            variantTagOptionInterfaceFactory.build({\n              attributeKey: 'back_order_label',\n            }),\n          ],\n        },\n      },\n    }),\n  ],\n  manBrand: rawColorInterfaceFactory.build(),\n  isPreOrder: false,\n  isBackOrder: false,\n});\n\nexport const rawOmapiQueryProductFactoryWithPreOrder = rawOmapiQueryProductTestfactory.extend({\n  products: [\n    rawOmapiQueryProductInterfaceDataFactory.build(),\n    rawOmapiQueryProductInterfaceDataWithPreOrderFactory.build(),\n  ],\n});\n","import { Injectable } from '@angular/core';\nimport { isEmpty, isNil } from 'lodash-es';\nimport {\n  BrandInterface,\n  ImagesInterface,\n  LocalizedContentInterface,\n  OmapiQueryProductInterface,\n  PricesInterface,\n  QueryProductsInterface,\n  ShortDescriptionInterface,\n  VariantsInterface,\n} from '../interfaces/omapi-query-product.interface';\nimport {\n  RawBrandInterface,\n  RawImagesInterface,\n  RawLocalizedContentInterface,\n  RawOmapiQueryProductInterface,\n  RawOmapiQueryProductInterfaceData,\n  RawPricesInterface,\n  RawShortDescription,\n  RawVariantsInterface,\n} from '../interfaces/raw-omapi-query-product.interface';\nimport { MapperInterface } from '@telenet/ng-lib-shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OmapiQueryProductMapper\n  implements MapperInterface<RawOmapiQueryProductInterface, OmapiQueryProductInterface>\n{\n  toModel(rawOmapiQueryProduct: RawOmapiQueryProductInterface): OmapiQueryProductInterface {\n    return this.createOmapiQueryProduct(rawOmapiQueryProduct);\n  }\n\n  private createOmapiQueryProduct(rawOmapiQueryProduct: RawOmapiQueryProductInterface): OmapiQueryProductInterface {\n    const omapiQueryProduct = {} as OmapiQueryProductInterface;\n    omapiQueryProduct.products = this.createQueryProducts(rawOmapiQueryProduct.products);\n\n    return omapiQueryProduct;\n  }\n\n  createQueryProducts(rawQueryProducts: RawOmapiQueryProductInterfaceData[]): QueryProductsInterface[] {\n    return (\n      rawQueryProducts &&\n      rawQueryProducts.map((rawQueryProduct) => {\n        return this.createQueryProductData(rawQueryProduct);\n      })\n    );\n  }\n\n  createQueryProductData(rawQueryProduct: RawOmapiQueryProductInterfaceData): QueryProductsInterface {\n    const queryProduct = {} as QueryProductsInterface;\n    queryProduct.labelKey = rawQueryProduct.labelKey;\n    queryProduct.productFamily = rawQueryProduct.productFamily;\n    queryProduct.variants = this.createVariants(rawQueryProduct.variants);\n    return queryProduct;\n  }\n\n  private createLocalizedContents(rawLocalizedContents: RawLocalizedContentInterface[]): LocalizedContentInterface[] {\n    return (\n      rawLocalizedContents &&\n      rawLocalizedContents.map((rawLocalizedContent) => {\n        return OmapiQueryProductMapper.createLocalizedContent(rawLocalizedContent);\n      })\n    );\n  }\n\n  private static createLocalizedContent(rawLocalizedContent: RawLocalizedContentInterface): LocalizedContentInterface {\n    const localizedContent = {} as LocalizedContentInterface;\n    localizedContent.locale = rawLocalizedContent.locale;\n    localizedContent.key = rawLocalizedContent.key;\n    localizedContent.data = rawLocalizedContent.data;\n    localizedContent.value = OmapiQueryProductMapper.createLocalizedContentValue(\n      rawLocalizedContent.value ? rawLocalizedContent.value : []\n    );\n    return localizedContent;\n  }\n\n  private static createLocalizedContentValue(rawLocalizedContentValue: string[]): string[] {\n    return (\n      rawLocalizedContentValue &&\n      rawLocalizedContentValue.map((value) => {\n        return value;\n      })\n    );\n  }\n\n  private createVariants(rawVariants: RawVariantsInterface[]): VariantsInterface[] {\n    return (\n      rawVariants &&\n      rawVariants.map((rawVariant) => {\n        return this.createVariant(rawVariant);\n      })\n    );\n  }\n\n  private createVariant(rawVariant: RawVariantsInterface): VariantsInterface {\n    const variant = {} as VariantsInterface;\n    variant.productId = rawVariant.productId;\n    if (!isNil(rawVariant.extraAtHomeDelivery)) {\n      variant.extraAtHomeDelivery = rawVariant.extraAtHomeDelivery;\n    }\n    variant.prices = OmapiQueryProductMapper.createPrices(rawVariant.prices);\n    variant.images = this.createImages(rawVariant.images);\n    const shortDescription = this.createShortDescription(rawVariant.shortDescription);\n    if (shortDescription) {\n      variant.shortDescription = shortDescription;\n    }\n    variant.brand = this.createBrand(rawVariant.manBrand);\n    return variant;\n  }\n\n  private static createPrices(rawPrices: RawPricesInterface): PricesInterface {\n    const prices = {} as PricesInterface;\n    prices.priceType = rawPrices.priceType;\n    return prices;\n  }\n\n  private createImages(rawImages: RawImagesInterface[]): ImagesInterface[] {\n    return (\n      rawImages &&\n      rawImages.map((rawImage) => {\n        return this.createImage(rawImage);\n      })\n    );\n  }\n\n  private createImage(rawImage: RawImagesInterface): ImagesInterface {\n    const image = {} as ImagesInterface;\n    image.attributeKey = rawImage.attributeKey;\n    image.value = rawImage.value;\n    image.localizedContent = this.createLocalizedContents(rawImage.localizedContent);\n    return image;\n  }\n\n  private createShortDescription(rawShortDescription: RawShortDescription): ShortDescriptionInterface {\n    if (!isEmpty(rawShortDescription) && !isEmpty(rawShortDescription.localizedContent)) {\n      const shortDescription = {} as ShortDescriptionInterface;\n      shortDescription.localizedContent = this.createLocalizedContents(rawShortDescription.localizedContent);\n      return shortDescription;\n    }\n\n    return {} as ShortDescriptionInterface;\n  }\n  private createBrand(rawBrand: RawBrandInterface): BrandInterface {\n    if (!isEmpty(rawBrand) && !isEmpty(rawBrand.localizedContent)) {\n      const brand = {} as BrandInterface;\n      brand.localizedContent = this.createLocalizedContents(rawBrand.localizedContent);\n      return brand;\n    }\n    return {} as BrandInterface;\n  }\n}\n","export enum ProductTypeEnum {\n  SMARTPHONE = 'SMARTPHONE',\n  SMARTPHONES = 'SMARTPHONES',\n}\n","import { Injectable } from '@angular/core';\nimport { ProductTypeEnum } from '../enums/product-type.enum';\nimport { LanguageService } from '@telenet/ng-lib-page';\nimport { isEmpty, first, isNil } from 'lodash-es';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport {\n  BrandInterface,\n  LocalizedContentInterface,\n  OmapiQueryProductInterface,\n  QueryProductsInterface,\n  ShortDescriptionInterface,\n  VariantsInterface,\n} from '../interfaces/omapi-query-product.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QueryProductInfoTransformer {\n  constructor(private readonly languageService: LanguageService) {}\n\n  toModel(queryProductInfo: OmapiQueryProductInterface): OmapiProduct {\n    return this.transformToOmapiProduct(queryProductInfo);\n  }\n\n  transformToOmapiProduct(queryProductInfo: OmapiQueryProductInterface): OmapiProduct {\n    const omapiProduct = new OmapiProduct();\n    if (!isEmpty(queryProductInfo.products)) {\n      const queryProductDetails = first(queryProductInfo.products);\n      if (queryProductDetails) {\n        omapiProduct.labelKey = queryProductDetails.labelKey;\n        omapiProduct.productType =\n          queryProductDetails.productFamily.toUpperCase() === ProductTypeEnum.SMARTPHONES\n            ? ProductTypeEnum.SMARTPHONE\n            : queryProductDetails.productFamily.toUpperCase();\n        if (!isEmpty(queryProductDetails.variants)) {\n          this.appendVariantToOmapiProduct(queryProductDetails, omapiProduct);\n        }\n      }\n    }\n    return omapiProduct;\n  }\n\n  private appendVariantToOmapiProduct(queryProductDetails: QueryProductsInterface, omapiProduct: OmapiProduct) {\n    const variant = first(queryProductDetails.variants);\n    if (variant) {\n      if (!isNil(variant.extraAtHomeDelivery)) {\n        omapiProduct.extraAtHomeDelivery = variant.extraAtHomeDelivery;\n      }\n      omapiProduct.productId = variant.productId;\n      omapiProduct.externalProductCode = variant.productId;\n      omapiProduct.priceType = variant.prices.priceType;\n      omapiProduct.imageUrl = QueryProductInfoTransformer.getImageUrl(variant);\n      const contentForLocale = this.getContentForLocale(variant.shortDescription);\n      if (contentForLocale) {\n        omapiProduct.name = contentForLocale.data;\n      }\n      const brandValue = this.getBrandValueForLocale(variant.brand);\n      if (brandValue) {\n        omapiProduct.brand = first(brandValue.value);\n      }\n    }\n  }\n\n  private static getImageUrl(variant: VariantsInterface): string {\n    if (!isEmpty(variant) && !isEmpty(variant.images)) {\n      const imageDetails = first(variant.images);\n      return imageDetails ? imageDetails.value : '';\n    }\n    return '';\n  }\n\n  private getContentForLocale(shortDescription: ShortDescriptionInterface): LocalizedContentInterface {\n    if (!isEmpty(shortDescription) && !isEmpty(shortDescription.localizedContent)) {\n      const localizedContentInterface = shortDescription.localizedContent.find((localizeContent) => {\n        return localizeContent.locale === this.languageService.getLanguage();\n      });\n      return localizedContentInterface ? localizedContentInterface : ({} as LocalizedContentInterface);\n    }\n\n    return {} as LocalizedContentInterface;\n  }\n\n  private getBrandValueForLocale(brand: BrandInterface): LocalizedContentInterface {\n    if (!isEmpty(brand) && !isEmpty(brand.localizedContent)) {\n      const localizedContentInterface = brand.localizedContent.find((localizedContent) => {\n        return localizedContent.locale === this.languageService.getLanguage();\n      });\n\n      return localizedContentInterface ? localizedContentInterface : ({} as LocalizedContentInterface);\n    }\n\n    return {} as LocalizedContentInterface;\n  }\n}\n","import { MapperInterface } from '@telenet/ng-lib-shared';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpTypesEnum } from '../enums/http-types.enum';\n\nexport class OmapiQueryCallConfig<K, G> {\n  messageGroupName: string;\n  endpoint: string;\n  mapper: MapperInterface<K, G>;\n  data: unknown;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  errorHandler?: (errorHandler: HttpErrorResponse, config: OmapiQueryCallConfig<K, G>) => Observable<any>;\n  httpType: HttpTypesEnum = HttpTypesEnum.POST;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  customHeaders?: object;\n\n  constructor(\n    messageGroupName: string,\n    endpoint: string,\n    mapper: MapperInterface<K, G>,\n    data?: unknown,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    customHeaders?: Object\n  ) {\n    this.messageGroupName = messageGroupName;\n    this.endpoint = endpoint;\n    this.mapper = mapper;\n    this.data = data;\n    this.customHeaders = customHeaders;\n  }\n}\n","import { shareReplay } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n  private cache: Record<string, Observable<unknown>> = {};\n\n  get(key: string): Observable<unknown> {\n    return this.cache[key];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  add(key: string, response$: Observable<unknown | Object>): void {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.cache[key] = response$.pipe(shareReplay({ bufferSize: 1 }));\n  }\n\n  remove(key: string): void {\n    delete this.cache[key];\n  }\n}\n","import { map as lodashMap } from 'lodash-es';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UrlService } from '@telenet/ng-lib-page';\nimport { forkJoin, Observable } from 'rxjs';\nimport { CacheService } from './cache/cache.service';\nimport { RawOmapiQueryProductInterface } from '../interfaces/raw-omapi-query-product.interface';\nimport { catchError, map, take } from 'rxjs/operators';\nimport { ErrorMessage, MessageService } from '@telenet/ng-lib-message';\nimport { LogFactory } from '@telenet/ng-lib-shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OmapiQueryProductService {\n  private readonly log = LogFactory.createLogger(OmapiQueryProductService);\n  constructor(\n    private readonly http: HttpClient,\n    private readonly cacheService: CacheService,\n    private readonly urlService: UrlService,\n    private readonly messageService: MessageService\n  ) {}\n\n  getRawQueryProductByEndpoint(messageGroup: string, endpoint: string): Observable<RawOmapiQueryProductInterface> {\n    if (!this.cacheService.get(endpoint)) {\n      this.cacheService.add(endpoint, this.http.get(endpoint, this.getHttpConfig()));\n    }\n    return this.cacheService.get(endpoint).pipe(\n      take(1),\n      catchError((error: HttpErrorResponse) => this.handleError(error, messageGroup)),\n      map((response: unknown) => response as RawOmapiQueryProductInterface)\n    );\n  }\n\n  rawQueryProductsFromEndpoints$(\n    messageGroup: string,\n    endpoints: string[]\n  ): Observable<RawOmapiQueryProductInterface[]> {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return forkJoin(lodashMap(endpoints, (endpoint) => this.getRawQueryProductByEndpoint(messageGroup, endpoint)));\n  }\n\n  private getHttpConfig() {\n    return {\n      headers: {\n        'x-alt-referer': this.urlService.getCurrentUrl(),\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n      timeout: 10000,\n      cache: true,\n    };\n  }\n\n  private handleError(error: HttpErrorResponse, messageGroup: string): Observable<void> {\n    if (error.status !== 410) {\n      this.messageService.addMessage(new ErrorMessage(messageGroup, 'omapi-query-' + error.status));\n    }\n    this.log.logError('An error occurred while trying to fetch ' + messageGroup, error);\n    throw Error('An error occurred while trying to fetch ' + messageGroup);\n  }\n}\n","export enum AddressEnum {\n  ADDRESS_NOT_FOUND = 'OMAPI-ERROR-ADDRESS-NOT-FOUND',\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OmapiQueryHelper {\n  getHttpHeaders(): HttpHeaders {\n    return new HttpHeaders(this.createHttpHeaders());\n  }\n\n  createHttpHeaders() {\n    return {\n      'Content-Type': 'application/json',\n    };\n  }\n\n  getHttpOptions() {\n    return {\n      headers: this.getHttpHeaders(),\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { ConfigConstants, ConfigService } from '@telenet/ng-lib-config';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ErrorMessage, MessageService } from '@telenet/ng-lib-message';\nimport { catchError, map, mergeMap, take } from 'rxjs/operators';\nimport { OmapiQueryHelper } from '../helpers/omapi-query.helper';\nimport { OmapiQueryCallConfig } from '../models/omapi-query-call.model';\nimport { OmapiEnrichService } from '@telenet/ng-lib-omapi';\nimport { AddressEnum } from '../enums/address.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OmapiQueryService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly configService: ConfigService,\n    private readonly messageService: MessageService,\n    private readonly omapiQueryHelper: OmapiQueryHelper,\n    private readonly omapiEnrichService: OmapiEnrichService\n  ) {}\n\n  public doPost<T, G>(omapiQueryCallConfig: OmapiQueryCallConfig<T, G>): Observable<G> {\n    return this.doRequest(omapiQueryCallConfig).pipe(\n      mergeMap((omapiQueryResponse: T) => {\n        return this.omapiEnrichService.enrichResponseWithOmapiData<T>(\n          omapiQueryCallConfig.messageGroupName,\n          omapiQueryResponse\n        );\n      }),\n      map((omapiQueryResponseEnrichedWithOmapiData: T) => {\n        return omapiQueryCallConfig.mapper.toModel(omapiQueryResponseEnrichedWithOmapiData);\n      })\n    );\n  }\n\n  public doGet<T, G>(omapiQueryCallConfig: OmapiQueryCallConfig<T, G>): Observable<G> {\n    return this.http\n      .get(this.configService.getConfig(ConfigConstants.OMAPI_QUERY_URL) + omapiQueryCallConfig.endpoint)\n      .pipe(\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        mergeMap((omapiQueryResponse: Object) => {\n          return this.omapiEnrichService.enrichResponseWithOmapiData<T>(\n            omapiQueryCallConfig.messageGroupName,\n            omapiQueryResponse as T\n          );\n        }),\n        map((omapiResponseEnrichedWithOmapiData: T) =>\n          omapiQueryCallConfig.mapper.toModel(omapiResponseEnrichedWithOmapiData)\n        ),\n        catchError((error: unknown) => {\n          return this.handleError(error as HttpErrorResponse, omapiQueryCallConfig);\n        })\n      );\n  }\n\n  private doRequest<T, G>(omapiQueryCall: OmapiQueryCallConfig<T, G>): Observable<T> {\n    const options = this.omapiQueryHelper.getHttpOptions();\n    return this.http\n      .post<T>(\n        this.configService.getConfig(ConfigConstants.OMAPI_QUERY_URL) + omapiQueryCall.endpoint,\n        omapiQueryCall.data,\n        options\n      )\n      .pipe(\n        take(1),\n        catchError((error: unknown) => {\n          return this.handleError(error as HttpErrorResponse, omapiQueryCall);\n        })\n      );\n  }\n\n  private handleError<T, G>(error: HttpErrorResponse, omapiQueryCall: OmapiQueryCallConfig<T, G>) {\n    if (omapiQueryCall.errorHandler !== undefined) {\n      return omapiQueryCall.errorHandler(error, omapiQueryCall);\n    }\n\n    let errorCode = 'omapi-query.'.concat(error.status.toString());\n    let detailedErrorCode;\n    switch (error.status) {\n      case 400:\n        errorCode = AddressEnum.ADDRESS_NOT_FOUND\n          ? `${omapiQueryCall.messageGroupName}.${AddressEnum.ADDRESS_NOT_FOUND}`\n          : errorCode;\n        this.messageService.addMessage(new ErrorMessage(omapiQueryCall.messageGroupName, errorCode));\n        break;\n      case 500:\n        this.messageService.addMessage(new ErrorMessage(omapiQueryCall.messageGroupName, errorCode));\n        break;\n      default:\n        detailedErrorCode = this.getDetailedErrorCode(error, errorCode);\n        if (detailedErrorCode) {\n          errorCode = detailedErrorCode;\n        }\n        this.messageService.addMessage(new ErrorMessage(omapiQueryCall.messageGroupName, errorCode));\n        break;\n    }\n    return throwError(\n      () => 'An error occured while trying to fetch ' + omapiQueryCall.messageGroupName + ' | ' + errorCode\n    );\n  }\n\n  private getDetailedErrorCode(error: HttpErrorResponse, errorCode: string): string | undefined {\n    if (error.error && error.error.code) {\n      return errorCode.concat('-').concat(error.error.code);\n    }\n    return undefined;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["lodashMap","i1","i2.CacheService","i3","i4.OmapiQueryHelper"],"mappings":"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"}