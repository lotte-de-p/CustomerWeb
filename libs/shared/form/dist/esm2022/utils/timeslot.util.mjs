import { of } from 'rxjs';
import { TimeslotMoment, TimeslotMomentEnum } from '../enums';
export class TimeslotUtil {
    static stringToEnum(moment) {
        switch (moment) {
            case 'MORNING':
                return TimeslotMomentEnum.MORNING;
            case 'LUNCH':
                return TimeslotMomentEnum.LUNCH;
            case 'AFTERNOON':
                return TimeslotMomentEnum.AFTERNOON;
            case 'EVENING':
                return TimeslotMomentEnum.EVENING;
            case 'DAY':
                return TimeslotMomentEnum.DAY;
            default:
                return undefined;
        }
    }
    static enumToString(moment) {
        switch (moment) {
            case TimeslotMomentEnum.MORNING:
                return 'MORNING';
            case TimeslotMomentEnum.LUNCH:
                return 'LUNCH';
            case TimeslotMomentEnum.AFTERNOON:
                return 'AFTERNOON';
            case TimeslotMomentEnum.EVENING:
                return 'EVENING';
            case TimeslotMomentEnum.DAY:
                return 'DAY';
            default:
                return undefined;
        }
    }
    static enumToMomentObject(moment) {
        if (!moment) {
            return undefined;
        }
        switch (moment) {
            case TimeslotMomentEnum.DAY:
                return TimeslotMoment.DAY;
            case TimeslotMomentEnum.MORNING:
                return TimeslotMoment.MORNING;
            case TimeslotMomentEnum.LUNCH:
                return TimeslotMoment.LUNCH;
            case TimeslotMomentEnum.AFTERNOON:
                return TimeslotMoment.AFTERNOON;
            case TimeslotMomentEnum.EVENING:
                return TimeslotMoment.EVENING;
            default:
                return undefined;
        }
    }
    static objectToEnum(moment) {
        switch (moment) {
            case TimeslotMoment.DAY:
                return TimeslotMomentEnum.DAY;
            case TimeslotMoment.MORNING:
                return TimeslotMomentEnum.MORNING;
            case TimeslotMoment.LUNCH:
                return TimeslotMomentEnum.LUNCH;
            case TimeslotMoment.AFTERNOON:
                return TimeslotMomentEnum.AFTERNOON;
            case TimeslotMoment.EVENING:
                return TimeslotMomentEnum.EVENING;
            default:
                return undefined;
        }
    }
    static calculateTimeSlotsAvailability(slots, disableNoAvailableSlots) {
        return of(disableNoAvailableSlots || slots.some((slot) => slot.timeSlots.length > 0));
    }
    static shouldUpdateTimeSlots(updateSlots, timeSlots) {
        return (updateSlots &&
            timeSlots[timeSlots.length - 1]?.date.getTime() !== updateSlots[updateSlots.length - 1]?.date.getTime());
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXNsb3QudXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy90aW1lc2xvdC51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdEMsT0FBTyxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUk5RCxNQUFNLE9BQU8sWUFBWTtJQUN2QixNQUFNLENBQUMsWUFBWSxDQUFDLE1BQWM7UUFDaEMsUUFBUSxNQUFNLEVBQUUsQ0FBQztZQUNmLEtBQUssU0FBUztnQkFDWixPQUFPLGtCQUFrQixDQUFDLE9BQU8sQ0FBQztZQUNwQyxLQUFLLE9BQU87Z0JBQ1YsT0FBTyxrQkFBa0IsQ0FBQyxLQUFLLENBQUM7WUFDbEMsS0FBSyxXQUFXO2dCQUNkLE9BQU8sa0JBQWtCLENBQUMsU0FBUyxDQUFDO1lBQ3RDLEtBQUssU0FBUztnQkFDWixPQUFPLGtCQUFrQixDQUFDLE9BQU8sQ0FBQztZQUNwQyxLQUFLLEtBQUs7Z0JBQ1IsT0FBTyxrQkFBa0IsQ0FBQyxHQUFHLENBQUM7WUFDaEM7Z0JBQ0UsT0FBTyxTQUFTLENBQUM7UUFDckIsQ0FBQztJQUNILENBQUM7SUFFRCxNQUFNLENBQUMsWUFBWSxDQUFDLE1BQTBCO1FBQzVDLFFBQVEsTUFBTSxFQUFFLENBQUM7WUFDZixLQUFLLGtCQUFrQixDQUFDLE9BQU87Z0JBQzdCLE9BQU8sU0FBUyxDQUFDO1lBQ25CLEtBQUssa0JBQWtCLENBQUMsS0FBSztnQkFDM0IsT0FBTyxPQUFPLENBQUM7WUFDakIsS0FBSyxrQkFBa0IsQ0FBQyxTQUFTO2dCQUMvQixPQUFPLFdBQVcsQ0FBQztZQUNyQixLQUFLLGtCQUFrQixDQUFDLE9BQU87Z0JBQzdCLE9BQU8sU0FBUyxDQUFDO1lBQ25CLEtBQUssa0JBQWtCLENBQUMsR0FBRztnQkFDekIsT0FBTyxLQUFLLENBQUM7WUFDZjtnQkFDRSxPQUFPLFNBQVMsQ0FBQztRQUNyQixDQUFDO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxNQUFpQztRQUN6RCxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDWixPQUFPLFNBQVMsQ0FBQztRQUNuQixDQUFDO1FBQ0QsUUFBUSxNQUFNLEVBQUUsQ0FBQztZQUNmLEtBQUssa0JBQWtCLENBQUMsR0FBRztnQkFDekIsT0FBTyxjQUFjLENBQUMsR0FBRyxDQUFDO1lBQzVCLEtBQUssa0JBQWtCLENBQUMsT0FBTztnQkFDN0IsT0FBTyxjQUFjLENBQUMsT0FBTyxDQUFDO1lBQ2hDLEtBQUssa0JBQWtCLENBQUMsS0FBSztnQkFDM0IsT0FBTyxjQUFjLENBQUMsS0FBSyxDQUFDO1lBQzlCLEtBQUssa0JBQWtCLENBQUMsU0FBUztnQkFDL0IsT0FBTyxjQUFjLENBQUMsU0FBUyxDQUFDO1lBQ2xDLEtBQUssa0JBQWtCLENBQUMsT0FBTztnQkFDN0IsT0FBTyxjQUFjLENBQUMsT0FBTyxDQUFDO1lBQ2hDO2dCQUNFLE9BQU8sU0FBUyxDQUFDO1FBQ3JCLENBQUM7SUFDSCxDQUFDO0lBRUQsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUErQjtRQUNqRCxRQUFRLE1BQU0sRUFBRSxDQUFDO1lBQ2YsS0FBSyxjQUFjLENBQUMsR0FBRztnQkFDckIsT0FBTyxrQkFBa0IsQ0FBQyxHQUFHLENBQUM7WUFDaEMsS0FBSyxjQUFjLENBQUMsT0FBTztnQkFDekIsT0FBTyxrQkFBa0IsQ0FBQyxPQUFPLENBQUM7WUFDcEMsS0FBSyxjQUFjLENBQUMsS0FBSztnQkFDdkIsT0FBTyxrQkFBa0IsQ0FBQyxLQUFLLENBQUM7WUFDbEMsS0FBSyxjQUFjLENBQUMsU0FBUztnQkFDM0IsT0FBTyxrQkFBa0IsQ0FBQyxTQUFTLENBQUM7WUFDdEMsS0FBSyxjQUFjLENBQUMsT0FBTztnQkFDekIsT0FBTyxrQkFBa0IsQ0FBQyxPQUFPLENBQUM7WUFDcEM7Z0JBQ0UsT0FBTyxTQUFTLENBQUM7UUFDckIsQ0FBQztJQUNILENBQUM7SUFFRCxNQUFNLENBQUMsOEJBQThCLENBQ25DLEtBQW1DLEVBQ25DLHVCQUFpQztRQUVqQyxPQUFPLEVBQUUsQ0FBQyx1QkFBdUIsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBZ0MsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwSCxDQUFDO0lBRUQsTUFBTSxDQUFDLHFCQUFxQixDQUMxQixXQUF5QyxFQUN6QyxTQUF1QztRQUV2QyxPQUFPLENBQ0wsV0FBVztZQUNYLFNBQVMsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxXQUFXLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQ3hHLENBQUM7SUFDSixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgVGltZXNsb3RNb21lbnQsIFRpbWVzbG90TW9tZW50RW51bSB9IGZyb20gJy4uL2VudW1zJztcbmltcG9ydCB7IFRpbWVzbG90TW9tZW50SW50ZXJmYWNlIH0gZnJvbSAnLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBBcHBvaW50bWVudFRyYW5zZm9ybWVyU2xvdCB9IGZyb20gJy4uL21vZGVscyc7XG5cbmV4cG9ydCBjbGFzcyBUaW1lc2xvdFV0aWwge1xuICBzdGF0aWMgc3RyaW5nVG9FbnVtKG1vbWVudDogc3RyaW5nKTogVGltZXNsb3RNb21lbnRFbnVtIHwgdW5kZWZpbmVkIHtcbiAgICBzd2l0Y2ggKG1vbWVudCkge1xuICAgICAgY2FzZSAnTU9STklORyc6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudEVudW0uTU9STklORztcbiAgICAgIGNhc2UgJ0xVTkNIJzpcbiAgICAgICAgcmV0dXJuIFRpbWVzbG90TW9tZW50RW51bS5MVU5DSDtcbiAgICAgIGNhc2UgJ0FGVEVSTk9PTic6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudEVudW0uQUZURVJOT09OO1xuICAgICAgY2FzZSAnRVZFTklORyc6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudEVudW0uRVZFTklORztcbiAgICAgIGNhc2UgJ0RBWSc6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudEVudW0uREFZO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZW51bVRvU3RyaW5nKG1vbWVudDogVGltZXNsb3RNb21lbnRFbnVtKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgICBzd2l0Y2ggKG1vbWVudCkge1xuICAgICAgY2FzZSBUaW1lc2xvdE1vbWVudEVudW0uTU9STklORzpcbiAgICAgICAgcmV0dXJuICdNT1JOSU5HJztcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLkxVTkNIOlxuICAgICAgICByZXR1cm4gJ0xVTkNIJztcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLkFGVEVSTk9PTjpcbiAgICAgICAgcmV0dXJuICdBRlRFUk5PT04nO1xuICAgICAgY2FzZSBUaW1lc2xvdE1vbWVudEVudW0uRVZFTklORzpcbiAgICAgICAgcmV0dXJuICdFVkVOSU5HJztcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLkRBWTpcbiAgICAgICAgcmV0dXJuICdEQVknO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZW51bVRvTW9tZW50T2JqZWN0KG1vbWVudDogVGltZXNsb3RNb21lbnRFbnVtIHwgbnVsbCk6IFRpbWVzbG90TW9tZW50SW50ZXJmYWNlIHwgdW5kZWZpbmVkIHtcbiAgICBpZiAoIW1vbWVudCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgc3dpdGNoIChtb21lbnQpIHtcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLkRBWTpcbiAgICAgICAgcmV0dXJuIFRpbWVzbG90TW9tZW50LkRBWTtcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLk1PUk5JTkc6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudC5NT1JOSU5HO1xuICAgICAgY2FzZSBUaW1lc2xvdE1vbWVudEVudW0uTFVOQ0g6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudC5MVU5DSDtcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLkFGVEVSTk9PTjpcbiAgICAgICAgcmV0dXJuIFRpbWVzbG90TW9tZW50LkFGVEVSTk9PTjtcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLkVWRU5JTkc6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudC5FVkVOSU5HO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgb2JqZWN0VG9FbnVtKG1vbWVudDogVGltZXNsb3RNb21lbnRJbnRlcmZhY2UpOiBUaW1lc2xvdE1vbWVudEVudW0gfCB1bmRlZmluZWQge1xuICAgIHN3aXRjaCAobW9tZW50KSB7XG4gICAgICBjYXNlIFRpbWVzbG90TW9tZW50LkRBWTpcbiAgICAgICAgcmV0dXJuIFRpbWVzbG90TW9tZW50RW51bS5EQVk7XG4gICAgICBjYXNlIFRpbWVzbG90TW9tZW50Lk1PUk5JTkc6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudEVudW0uTU9STklORztcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnQuTFVOQ0g6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudEVudW0uTFVOQ0g7XG4gICAgICBjYXNlIFRpbWVzbG90TW9tZW50LkFGVEVSTk9PTjpcbiAgICAgICAgcmV0dXJuIFRpbWVzbG90TW9tZW50RW51bS5BRlRFUk5PT047XG4gICAgICBjYXNlIFRpbWVzbG90TW9tZW50LkVWRU5JTkc6XG4gICAgICAgIHJldHVybiBUaW1lc2xvdE1vbWVudEVudW0uRVZFTklORztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGNhbGN1bGF0ZVRpbWVTbG90c0F2YWlsYWJpbGl0eShcbiAgICBzbG90czogQXBwb2ludG1lbnRUcmFuc2Zvcm1lclNsb3RbXSxcbiAgICBkaXNhYmxlTm9BdmFpbGFibGVTbG90cz86IGJvb2xlYW5cbiAgKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIG9mKGRpc2FibGVOb0F2YWlsYWJsZVNsb3RzIHx8IHNsb3RzLnNvbWUoKHNsb3Q6IEFwcG9pbnRtZW50VHJhbnNmb3JtZXJTbG90KSA9PiBzbG90LnRpbWVTbG90cy5sZW5ndGggPiAwKSk7XG4gIH1cblxuICBzdGF0aWMgc2hvdWxkVXBkYXRlVGltZVNsb3RzKFxuICAgIHVwZGF0ZVNsb3RzOiBBcHBvaW50bWVudFRyYW5zZm9ybWVyU2xvdFtdLFxuICAgIHRpbWVTbG90czogQXBwb2ludG1lbnRUcmFuc2Zvcm1lclNsb3RbXVxuICApOiBib29sZWFuIHtcbiAgICByZXR1cm4gKFxuICAgICAgdXBkYXRlU2xvdHMgJiZcbiAgICAgIHRpbWVTbG90c1t0aW1lU2xvdHMubGVuZ3RoIC0gMV0/LmRhdGUuZ2V0VGltZSgpICE9PSB1cGRhdGVTbG90c1t1cGRhdGVTbG90cy5sZW5ndGggLSAxXT8uZGF0ZS5nZXRUaW1lKClcbiAgICApO1xuICB9XG59XG4iXX0=