import { floor } from 'lodash-es';
import { TimeslotMomentEnum } from '../../../enums';
import { LabelUtil } from '../../../utils';
export class AppointmentPickerUtil {
    static compareDate(appointmentA, appointmentB) {
        return !(appointmentA.date < appointmentB.date || appointmentA.date > appointmentB.date);
    }
    static getInitialSlideIndex(selectedSlotIndex, slidesToScroll) {
        return floor(selectedSlotIndex / slidesToScroll) * slidesToScroll;
    }
    static getSelectedDateSlotIndex(timeslots, selectedTimeslot) {
        return timeslots.findIndex((slot) => {
            return slot.date.getTime() === selectedTimeslot.date.getTime();
        });
    }
    static getTimeslotLabel(timeslot, messageGroup, suffix) {
        const labelKeys = [];
        if (messageGroup) {
            labelKeys.push(messageGroup);
        }
        labelKeys.push('timeslots');
        switch (timeslot) {
            case TimeslotMomentEnum.DAY:
                labelKeys.push('day');
                break;
            case TimeslotMomentEnum.ALL_DAY:
                labelKeys.push('all-day');
                break;
            case TimeslotMomentEnum.MORNING:
                labelKeys.push('morning');
                break;
            case TimeslotMomentEnum.LUNCH:
                labelKeys.push('lunch');
                break;
            case TimeslotMomentEnum.EVENING:
                labelKeys.push('evening');
                break;
            case TimeslotMomentEnum.AFTERNOON:
                labelKeys.push('afternoon');
                break;
        }
        if (suffix) {
            labelKeys.push(suffix);
        }
        return LabelUtil.getLabelKeyWithTypeLabel(labelKeys.join('.'));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwb2ludG1lbnQtcGlja2VyLnV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29udHJvbHMvbmV3LWFwcG9pbnRtZW50LXBpY2tlci91dGlscy9hcHBvaW50bWVudC1waWNrZXIudXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRWxDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzQyxNQUFNLE9BQU8scUJBQXFCO0lBQ2hDLE1BQU0sQ0FBQyxXQUFXLENBQUMsWUFBd0MsRUFBRSxZQUF3QztRQUNuRyxPQUFPLENBQUMsQ0FBQyxZQUFZLENBQUMsSUFBSSxHQUFHLFlBQVksQ0FBQyxJQUFJLElBQUksWUFBWSxDQUFDLElBQUksR0FBRyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0YsQ0FBQztJQUVELE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxpQkFBeUIsRUFBRSxjQUFzQjtRQUMzRSxPQUFPLEtBQUssQ0FBQyxpQkFBaUIsR0FBRyxjQUFjLENBQUMsR0FBRyxjQUFjLENBQUM7SUFDcEUsQ0FBQztJQUVELE1BQU0sQ0FBQyx3QkFBd0IsQ0FDN0IsU0FBdUMsRUFDdkMsZ0JBQTRDO1FBRTVDLE9BQU8sU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFFBQTRCLEVBQUUsWUFBcUIsRUFBRSxNQUFlO1FBQzFGLE1BQU0sU0FBUyxHQUFhLEVBQUUsQ0FBQztRQUMvQixJQUFJLFlBQVksRUFBRSxDQUFDO1lBQ2pCLFNBQVMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDL0IsQ0FBQztRQUNELFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFNUIsUUFBUSxRQUFRLEVBQUUsQ0FBQztZQUNqQixLQUFLLGtCQUFrQixDQUFDLEdBQUc7Z0JBQ3pCLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ3RCLE1BQU07WUFDUixLQUFLLGtCQUFrQixDQUFDLE9BQU87Z0JBQzdCLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQzFCLE1BQU07WUFDUixLQUFLLGtCQUFrQixDQUFDLE9BQU87Z0JBQzdCLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQzFCLE1BQU07WUFDUixLQUFLLGtCQUFrQixDQUFDLEtBQUs7Z0JBQzNCLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ3hCLE1BQU07WUFDUixLQUFLLGtCQUFrQixDQUFDLE9BQU87Z0JBQzdCLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQzFCLE1BQU07WUFDUixLQUFLLGtCQUFrQixDQUFDLFNBQVM7Z0JBQy9CLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQzVCLE1BQU07UUFDVixDQUFDO1FBRUQsSUFBSSxNQUFNLEVBQUUsQ0FBQztZQUNYLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekIsQ0FBQztRQUVELE9BQU8sU0FBUyxDQUFDLHdCQUF3QixDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNqRSxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmbG9vciB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBBcHBvaW50bWVudFRyYW5zZm9ybWVyU2xvdCB9IGZyb20gJy4uLy4uLy4uL21vZGVscyc7XG5pbXBvcnQgeyBUaW1lc2xvdE1vbWVudEVudW0gfSBmcm9tICcuLi8uLi8uLi9lbnVtcyc7XG5pbXBvcnQgeyBMYWJlbFV0aWwgfSBmcm9tICcuLi8uLi8uLi91dGlscyc7XG5cbmV4cG9ydCBjbGFzcyBBcHBvaW50bWVudFBpY2tlclV0aWwge1xuICBzdGF0aWMgY29tcGFyZURhdGUoYXBwb2ludG1lbnRBOiBBcHBvaW50bWVudFRyYW5zZm9ybWVyU2xvdCwgYXBwb2ludG1lbnRCOiBBcHBvaW50bWVudFRyYW5zZm9ybWVyU2xvdCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhKGFwcG9pbnRtZW50QS5kYXRlIDwgYXBwb2ludG1lbnRCLmRhdGUgfHwgYXBwb2ludG1lbnRBLmRhdGUgPiBhcHBvaW50bWVudEIuZGF0ZSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0SW5pdGlhbFNsaWRlSW5kZXgoc2VsZWN0ZWRTbG90SW5kZXg6IG51bWJlciwgc2xpZGVzVG9TY3JvbGw6IG51bWJlcik6IG51bWJlciB7XG4gICAgcmV0dXJuIGZsb29yKHNlbGVjdGVkU2xvdEluZGV4IC8gc2xpZGVzVG9TY3JvbGwpICogc2xpZGVzVG9TY3JvbGw7XG4gIH1cblxuICBzdGF0aWMgZ2V0U2VsZWN0ZWREYXRlU2xvdEluZGV4KFxuICAgIHRpbWVzbG90czogQXBwb2ludG1lbnRUcmFuc2Zvcm1lclNsb3RbXSxcbiAgICBzZWxlY3RlZFRpbWVzbG90OiBBcHBvaW50bWVudFRyYW5zZm9ybWVyU2xvdFxuICApOiBudW1iZXIge1xuICAgIHJldHVybiB0aW1lc2xvdHMuZmluZEluZGV4KChzbG90KSA9PiB7XG4gICAgICByZXR1cm4gc2xvdC5kYXRlLmdldFRpbWUoKSA9PT0gc2VsZWN0ZWRUaW1lc2xvdC5kYXRlLmdldFRpbWUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRUaW1lc2xvdExhYmVsKHRpbWVzbG90OiBUaW1lc2xvdE1vbWVudEVudW0sIG1lc3NhZ2VHcm91cD86IHN0cmluZywgc3VmZml4Pzogc3RyaW5nKSB7XG4gICAgY29uc3QgbGFiZWxLZXlzOiBzdHJpbmdbXSA9IFtdO1xuICAgIGlmIChtZXNzYWdlR3JvdXApIHtcbiAgICAgIGxhYmVsS2V5cy5wdXNoKG1lc3NhZ2VHcm91cCk7XG4gICAgfVxuICAgIGxhYmVsS2V5cy5wdXNoKCd0aW1lc2xvdHMnKTtcblxuICAgIHN3aXRjaCAodGltZXNsb3QpIHtcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLkRBWTpcbiAgICAgICAgbGFiZWxLZXlzLnB1c2goJ2RheScpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgVGltZXNsb3RNb21lbnRFbnVtLkFMTF9EQVk6XG4gICAgICAgIGxhYmVsS2V5cy5wdXNoKCdhbGwtZGF5Jyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBUaW1lc2xvdE1vbWVudEVudW0uTU9STklORzpcbiAgICAgICAgbGFiZWxLZXlzLnB1c2goJ21vcm5pbmcnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFRpbWVzbG90TW9tZW50RW51bS5MVU5DSDpcbiAgICAgICAgbGFiZWxLZXlzLnB1c2goJ2x1bmNoJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBUaW1lc2xvdE1vbWVudEVudW0uRVZFTklORzpcbiAgICAgICAgbGFiZWxLZXlzLnB1c2goJ2V2ZW5pbmcnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFRpbWVzbG90TW9tZW50RW51bS5BRlRFUk5PT046XG4gICAgICAgIGxhYmVsS2V5cy5wdXNoKCdhZnRlcm5vb24nKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKHN1ZmZpeCkge1xuICAgICAgbGFiZWxLZXlzLnB1c2goc3VmZml4KTtcbiAgICB9XG5cbiAgICByZXR1cm4gTGFiZWxVdGlsLmdldExhYmVsS2V5V2l0aFR5cGVMYWJlbChsYWJlbEtleXMuam9pbignLicpKTtcbiAgfVxufVxuIl19