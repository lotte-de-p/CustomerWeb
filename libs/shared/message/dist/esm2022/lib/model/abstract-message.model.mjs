export class AbstractMessage {
    _messageGroupName;
    _key;
    _type;
    _subtype;
    _interpolateParams;
    constructor(type, messageGroupName, key, subtype, interpolateParams) {
        this._messageGroupName = messageGroupName;
        this._key = key;
        this._type = type;
        this._subtype = subtype;
        this._interpolateParams = interpolateParams;
    }
    get messageGroupName() {
        return this._messageGroupName;
    }
    get key() {
        return this._key;
    }
    get type() {
        return this._type;
    }
    get subtype() {
        return this._subtype;
    }
    get interpolateParams() {
        return this._interpolateParams;
    }
    getMessageLabel() {
        return 'ng.' + this.messageGroupName + '.' + this.getMessageSuffix();
    }
    getMessageSuffix() {
        return this.key + '-' + this.type;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtbWVzc2FnZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvbW9kZWwvYWJzdHJhY3QtbWVzc2FnZS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLE9BQWdCLGVBQWU7SUFDbEIsaUJBQWlCLENBQVM7SUFDMUIsSUFBSSxDQUFTO0lBQ2IsS0FBSyxDQUFjO0lBQ25CLFFBQVEsQ0FBZTtJQUN2QixrQkFBa0IsQ0FBMkI7SUFFOUQsWUFDRSxJQUFpQixFQUNqQixnQkFBd0IsRUFDeEIsR0FBVyxFQUNYLE9BQXFCLEVBQ3JCLGlCQUEyQztRQUUzQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsZ0JBQWdCLENBQUM7UUFDMUMsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7UUFDaEIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUM7UUFDeEIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGlCQUFpQixDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUFJLGdCQUFnQjtRQUNsQixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNoQyxDQUFDO0lBRUQsSUFBSSxHQUFHO1FBQ0wsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVELElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxpQkFBaUI7UUFDbkIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUM7SUFDakMsQ0FBQztJQUVELGVBQWU7UUFDYixPQUFPLEtBQUssR0FBRyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxnQkFBZ0I7UUFDZCxPQUFPLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDcEMsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWVzc2FnZVR5cGUgfSBmcm9tICcuL21lc3NhZ2UtdHlwZS5lbnVtJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFic3RyYWN0TWVzc2FnZSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgX21lc3NhZ2VHcm91cE5hbWU6IHN0cmluZztcbiAgcHJpdmF0ZSByZWFkb25seSBfa2V5OiBzdHJpbmc7XG4gIHByaXZhdGUgcmVhZG9ubHkgX3R5cGU6IE1lc3NhZ2VUeXBlO1xuICBwcml2YXRlIHJlYWRvbmx5IF9zdWJ0eXBlPzogTWVzc2FnZVR5cGU7XG4gIHByaXZhdGUgcmVhZG9ubHkgX2ludGVycG9sYXRlUGFyYW1zPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj47XG5cbiAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKFxuICAgIHR5cGU6IE1lc3NhZ2VUeXBlLFxuICAgIG1lc3NhZ2VHcm91cE5hbWU6IHN0cmluZyxcbiAgICBrZXk6IHN0cmluZyxcbiAgICBzdWJ0eXBlPzogTWVzc2FnZVR5cGUsXG4gICAgaW50ZXJwb2xhdGVQYXJhbXM/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPlxuICApIHtcbiAgICB0aGlzLl9tZXNzYWdlR3JvdXBOYW1lID0gbWVzc2FnZUdyb3VwTmFtZTtcbiAgICB0aGlzLl9rZXkgPSBrZXk7XG4gICAgdGhpcy5fdHlwZSA9IHR5cGU7XG4gICAgdGhpcy5fc3VidHlwZSA9IHN1YnR5cGU7XG4gICAgdGhpcy5faW50ZXJwb2xhdGVQYXJhbXMgPSBpbnRlcnBvbGF0ZVBhcmFtcztcbiAgfVxuXG4gIGdldCBtZXNzYWdlR3JvdXBOYW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX21lc3NhZ2VHcm91cE5hbWU7XG4gIH1cblxuICBnZXQga2V5KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2tleTtcbiAgfVxuXG4gIGdldCB0eXBlKCk6IE1lc3NhZ2VUeXBlIHtcbiAgICByZXR1cm4gdGhpcy5fdHlwZTtcbiAgfVxuXG4gIGdldCBzdWJ0eXBlKCk6IE1lc3NhZ2VUeXBlIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5fc3VidHlwZTtcbiAgfVxuXG4gIGdldCBpbnRlcnBvbGF0ZVBhcmFtcygpOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuX2ludGVycG9sYXRlUGFyYW1zO1xuICB9XG5cbiAgZ2V0TWVzc2FnZUxhYmVsKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICduZy4nICsgdGhpcy5tZXNzYWdlR3JvdXBOYW1lICsgJy4nICsgdGhpcy5nZXRNZXNzYWdlU3VmZml4KCk7XG4gIH1cblxuICBnZXRNZXNzYWdlU3VmZml4KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMua2V5ICsgJy0nICsgdGhpcy50eXBlO1xuICB9XG59XG4iXX0=