{"version":3,"file":"telenet-ng-lib-sofy.mjs","sources":["../../src/lib/constants/sofy.constants.ts","../../src/lib/constants/connect-five.constants.ts","../../src/lib/enums/ocapi-move-order.enum.ts","../../src/lib/enums/flow-type.enum.ts","../../src/lib/enums/self-install-type.enum.ts","../../src/lib/enums/service-type.enum.ts","../../src/lib/models/salesOfferCost.ts","../../src/lib/models/promo.model.ts","../../src/lib/models/period.model.ts","../../src/lib/mappers/promo.mapper.ts","../../src/lib/mappers/cost.mapper.ts","../../src/lib/models/install-type.model.ts","../../src/lib/mappers/install-type.mapper.ts","../../src/lib/models/option.model.ts","../../src/lib/mappers/option.mapper.ts","../../src/lib/models/product.model.ts","../../src/lib/mappers/product.mapper.ts","../../src/lib/models/sales-offer.model.ts","../../src/lib/mappers/sales-offer.mapper.ts","../../src/lib/models/sofy-customer-product-holding-product.ts","../../src/lib/mappers/sofy-customer-product-holding-product.mapper.ts","../../src/lib/models/sofy-modem-details.ts","../../src/lib/models/sofy-address.ts","../../src/lib/mappers/sofy-modem-details.mapper.ts","../../src/lib/models/sofy-product.ts","../../src/lib/mappers/sofy-product.mapper.ts","../../src/lib/models/request/sofy-request-product.testfactory.ts","../../src/lib/models/response/sales-offer-product.model.ts","../../src/lib/models/response/sales-offer.testfactory.ts","../../src/lib/models/promo.model.testfactory.ts","../../src/lib/models/sofy-customer-product-holding-product.testfactory.ts","../../src/lib/models/promotion.model.ts","../../src/lib/models/address.model.ts","../../src/lib/models/cafe-raw-customerproductholding.model.ts","../../src/lib/models/cafe-raw-customerproductholding-option.model.ts","../../src/lib/models/cafe-modem-details.model.ts","../../src/lib/models/cafe-modem-detail.model.ts","../../src/lib/services/sofy.service.ts","../../src/lib/utils/sales-offer-product.util.ts","../../src/lib/utils/sales-offer-promo.util.ts","../../src/lib/utils/sales-offer.util.ts","../../src/lib/utils/connect-five-price-from-flow-type.util.ts","../../src/lib/utils/sales-offer-install-type.util.ts","../../src/lib/utils/sales-offer-product-optin.util.ts","../../src/telenet-ng-lib-sofy.ts"],"sourcesContent":["export enum SofyPromoType {\n  PROMO_MOBILE = 'promo_mobile',\n  PROMO_INTERNET = 'promo_internet',\n}\n\nexport const SAFE_SPOT_PRO = '36738';\n","export class ConnectFiveConstants {\n  static MESSAGE_GROUP = 'c5-checkout';\n  static SOHO_LABEL_APPENDIX = 'tbf';\n  static MODULE_NAME = 'CONNECT_FIVE';\n  static BIRTH_DATE_MASK = '90/00/0000';\n  static ID_CARD_MASK = '900-0000000-00';\n  static MINIMUM_SOHO_SIM_TRANSFERS = 1;\n}\n","export enum InstallTypeEnum {\n  SELF_INSTALL = 'selfinstall',\n  PRE_INSTALL = 'preinstall',\n  COMFORT_INSTALL = 'comfortinstall',\n  BUSINESS_INSTALL = 'businessinstall',\n  BUSINESS_INSTALL_SWAP = 'businessinstall_swap',\n}\n","export enum FlowTypeEnum {\n  SOHO = 'soho',\n  RES = 'res',\n}\n","export enum SelfInstallTypeEnum {\n  PICKUP = 'pick_up',\n  HOME_DELIVERY = 'home_delivery',\n}\n","export enum ServiceTypeEnum {\n  MOBILE_INTERNET = 'MOBILE_INTERNET',\n  FIXED_CALLING = 'FIXED_CALLING',\n}\n","import { CostInterface } from '../interfaces/cost.interface';\nimport { PromoModel } from './promo.model';\n\nexport class SalesOfferCost implements CostInterface {\n  name: string;\n  price: number;\n  priceexclvat: number;\n  promotions: PromoModel[];\n  recurring: number;\n}\n","import { SalesOfferPromo, SalesOfferPromoPeriod } from './response';\n\nexport class PromoModel implements SalesOfferPromo {\n  backendid: number;\n  duration: number;\n  legalid: string;\n  name: string;\n  period: SalesOfferPromoPeriod;\n  price: number;\n  priceexclvat: number;\n  puk: string;\n  tags: string[];\n\n  getNormalizedName(): string {\n    if (this.name) {\n      return this.name\n        .replace(/ /g, '-')\n        .replace(/\\./g, '-')\n        .replace(/[^0-9a-zA-Z_-]/g, '')\n        .toLowerCase();\n    }\n    return '';\n  }\n\n  getAbsoluteAmount(): number {\n    return Math.abs(this.price);\n  }\n}\n","import { PeriodInterface } from '../interfaces/period.interface';\n\nexport class PeriodModel implements PeriodInterface {\n  endDate: string;\n  startDate: string;\n}\n","import { Injectable } from '@angular/core';\nimport { SalesOfferPromo } from '../models/response';\nimport { PromoModel } from '../models/promo.model';\nimport { PeriodModel } from '../models/period.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PromoMapper {\n  public map(rawPromo: SalesOfferPromo): PromoModel {\n    const promo: PromoModel = new PromoModel();\n\n    promo.backendid = rawPromo.backendid;\n    promo.duration = rawPromo.duration;\n    promo.legalid = rawPromo.legalid;\n    promo.name = rawPromo.name;\n    promo.price = rawPromo.price;\n    promo.priceexclvat = rawPromo.priceexclvat;\n    promo.puk = rawPromo.puk;\n    promo.period = Object.assign(new PeriodModel(), rawPromo.period);\n    promo.tags = rawPromo.tags;\n\n    return promo;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PromoMapper } from './promo.mapper';\nimport { CostInterface } from '../interfaces/cost.interface';\nimport { SalesOfferCost } from '../models/salesOfferCost';\nimport { SalesOfferPromo } from '../models/response';\nimport { PromoModel } from '../models/promo.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostMapper {\n  constructor(private readonly promoMapper: PromoMapper) {}\n\n  public map(rawCost: CostInterface): SalesOfferCost {\n    const cost: SalesOfferCost = new SalesOfferCost();\n\n    cost.name = rawCost.name;\n    cost.price = rawCost.price;\n    cost.priceexclvat = rawCost.priceexclvat;\n    cost.recurring = rawCost.recurring;\n    cost.promotions = this.mapPromotions(rawCost.promotions);\n\n    return cost;\n  }\n\n  private mapPromotions(rawPromotions: SalesOfferPromo[]) {\n    const promotions: PromoModel[] = [];\n\n    if (rawPromotions) {\n      rawPromotions.forEach((rawPromo) => promotions.push(this.promoMapper.map(rawPromo)));\n    }\n\n    return promotions;\n  }\n}\n","import { InstallTypeInterface } from '../interfaces/install-type.interface';\nimport { PromoModel } from './promo.model';\nimport { DeliveryOptionInterface } from '../interfaces/delivery-option.interface';\n\nexport class InstallTypeModel implements InstallTypeInterface {\n  description: string;\n  mutuallyexclusive: string;\n  price: number;\n  priceexclvat: number;\n  promos: PromoModel[];\n  selected: boolean;\n  options?: DeliveryOptionInterface[];\n\n  withSelected(): InstallTypeModel {\n    this.selected = true;\n    return this;\n  }\n\n  withDescription(description: string): InstallTypeModel {\n    this.description = description;\n    return this;\n  }\n\n  withPrice(price: number): InstallTypeModel {\n    this.price = price;\n    return this;\n  }\n\n  isPreInstall(): boolean {\n    return this.description === 'preinstall';\n  }\n\n  isComfortInstall(): boolean {\n    return this.description === 'comfortinstall';\n  }\n\n  isSelfInstall(): boolean {\n    return this.description === 'selfinstall';\n  }\n\n  isModemSwap(): boolean {\n    return !this.description.includes('_swap');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PromoMapper } from './promo.mapper';\nimport { InstallTypeInterface } from '../interfaces/install-type.interface';\nimport { InstallTypeModel } from '../models/install-type.model';\nimport { SalesOfferPromo } from '../models/response';\nimport { PromoModel } from '../models/promo.model';\n@Injectable({\n  providedIn: 'root',\n})\nexport class InstallTypeMapper {\n  constructor(private readonly promoMapper: PromoMapper) {}\n\n  public map(rawInstallType: InstallTypeInterface): InstallTypeModel {\n    const installType: InstallTypeModel = new InstallTypeModel();\n\n    installType.description = rawInstallType.description;\n    installType.mutuallyexclusive = rawInstallType.mutuallyexclusive;\n    installType.price = rawInstallType.price;\n    installType.priceexclvat = rawInstallType.priceexclvat;\n    installType.selected = rawInstallType.selected;\n\n    installType.promos = this.mapPromos(rawInstallType.promos);\n    return installType;\n  }\n\n  private mapPromos(rawPromos: SalesOfferPromo[]) {\n    const promos: PromoModel[] = [];\n\n    if (rawPromos) {\n      rawPromos.forEach((rawPromo) => promos.push(this.promoMapper.map(rawPromo)));\n    }\n\n    return promos;\n  }\n}\n","import { OptionInterface } from '../interfaces/option.interface';\nimport { PromoModel } from './promo.model';\n\nexport class OptionModel implements OptionInterface {\n  description: string;\n  mutuallyExclusive: string;\n  omapiId: string;\n  originalprice: number;\n  price: number;\n  priceexclvat: number;\n  promos: PromoModel[];\n  selected: boolean;\n  specUrl: string;\n}\n","import { Injectable } from '@angular/core';\nimport { PromoMapper } from './promo.mapper';\nimport { OptionInterface } from '../interfaces/option.interface';\nimport { OptionModel } from '../models/option.model';\nimport { SalesOfferPromo } from '../models/response';\nimport { PromoModel } from '../models/promo.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OptionMapper {\n  constructor(private readonly promoMapper: PromoMapper) {}\n\n  public map(rawOption: OptionInterface): OptionModel {\n    const option: OptionModel = new OptionModel();\n\n    option.description = rawOption.description;\n    option.mutuallyExclusive = rawOption.mutuallyExclusive;\n    option.omapiId = rawOption.omapiId;\n    option.originalprice = rawOption.originalprice;\n    option.price = rawOption.price;\n    option.priceexclvat = rawOption.priceexclvat;\n    option.selected = rawOption.selected;\n    option.specUrl = rawOption.specUrl;\n\n    option.promos = this.mapPromos(rawOption.promos);\n\n    return option;\n  }\n\n  private mapPromos(rawPromos: SalesOfferPromo[]) {\n    const promos: PromoModel[] = [];\n\n    if (rawPromos) {\n      rawPromos.forEach((rawPromo) => promos.push(this.promoMapper.map(rawPromo)));\n    }\n\n    return promos;\n  }\n}\n","import { SalesOfferCost } from './salesOfferCost';\nimport { OptionModel } from './option.model';\nimport { InstallTypeModel } from './install-type.model';\nimport { PromoModel } from './promo.model';\n\nexport class ProductModel {\n  correlationId: string;\n  costs: SalesOfferCost[];\n  description: string;\n  installtypes: InstallTypeModel[];\n  omapiId: string;\n  options: OptionModel[];\n  price: number;\n  priceexclvat: number;\n  promos: PromoModel[];\n  specUrl: string;\n\n  getMonthlyTotalCost(): number {\n    return this.price;\n  }\n\n  hasCompatibleModem(): boolean {\n    return this.installtypes.length > 0 ? this.installtypes[0].isModemSwap() : true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CostMapper } from './cost.mapper';\nimport { InstallTypeMapper } from './install-type.mapper';\nimport { OptionMapper } from './option.mapper';\nimport { PromoMapper } from './promo.mapper';\nimport { ProductInterface } from '../interfaces/product.interface';\nimport { ProductModel } from '../models/product.model';\nimport { InstallTypeInterface } from '../interfaces/install-type.interface';\nimport { InstallTypeModel } from '../models/install-type.model';\nimport { OptionInterface } from '../interfaces/option.interface';\nimport { OptionModel } from '../models/option.model';\nimport { SalesOfferPromo } from '../models/response';\nimport { PromoModel } from '../models/promo.model';\nimport { CostInterface } from '../interfaces/cost.interface';\nimport { SalesOfferCost } from '../models/salesOfferCost';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductMapper {\n  constructor(\n    private readonly costMapper: CostMapper,\n    private readonly installTypeMapper: InstallTypeMapper,\n    private readonly optionMapper: OptionMapper,\n    private readonly promoMapper: PromoMapper\n  ) {}\n\n  public map(rawProduct: ProductInterface): ProductModel {\n    const product: ProductModel = new ProductModel();\n\n    product.correlationId = rawProduct.correlationId;\n    product.description = rawProduct.description;\n    product.omapiId = rawProduct.omapiid;\n    product.price = rawProduct.price;\n    product.priceexclvat = rawProduct.priceexclvat;\n    product.specUrl = rawProduct.specUrl;\n\n    product.costs = this.mapCosts(rawProduct.costs);\n    product.installtypes = this.mapInstallTypes(rawProduct.installtypes);\n    product.options = this.mapOptions(rawProduct.options);\n    product.promos = this.mapPromos(rawProduct.promos);\n\n    return product;\n  }\n\n  private mapCosts(rawCosts: CostInterface[]) {\n    const costs: SalesOfferCost[] = [];\n\n    if (rawCosts) {\n      rawCosts.forEach((rawCost) => costs.push(this.costMapper.map(rawCost)));\n    }\n\n    return costs;\n  }\n\n  private mapInstallTypes(rawInstallTypes: InstallTypeInterface[]) {\n    const installTypes: InstallTypeModel[] = [];\n\n    if (rawInstallTypes) {\n      rawInstallTypes.forEach((rawInstallType) => installTypes.push(this.installTypeMapper.map(rawInstallType)));\n    }\n\n    return installTypes;\n  }\n\n  private mapOptions(rawOptions: OptionInterface[]) {\n    const options: OptionModel[] = [];\n\n    if (rawOptions) {\n      rawOptions.forEach((rawOption) => options.push(this.optionMapper.map(rawOption)));\n    }\n\n    return options;\n  }\n\n  private mapPromos(rawPromos: SalesOfferPromo[]) {\n    const promos: PromoModel[] = [];\n\n    if (rawPromos) {\n      rawPromos.forEach((rawPromo) => promos.push(this.promoMapper.map(rawPromo)));\n    }\n\n    return promos;\n  }\n}\n","import { ProductModel } from './product.model';\n\nexport class SalesOfferModel {\n  public products: ProductModel[];\n  public standaloneOptions: ProductModel[];\n  public ownedProducts: ProductModel[];\n}\n","import { Injectable } from '@angular/core';\nimport { ProductMapper } from './product.mapper';\nimport { SalesOfferInterface } from '../interfaces/sales-offer.interface';\nimport { SalesOfferModel } from '../models/sales-offer.model';\nimport { ProductInterface } from '../interfaces/product.interface';\nimport { ProductModel } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SalesOfferMapper {\n  constructor(private readonly productMapper: ProductMapper) {}\n\n  public map(rawSalesOffer: SalesOfferInterface): SalesOfferModel {\n    const salesOffer: SalesOfferModel = new SalesOfferModel();\n\n    salesOffer.products = this.mapProducts(rawSalesOffer.products);\n    salesOffer.ownedProducts = this.mapProducts(rawSalesOffer.ownedProducts);\n    salesOffer.standaloneOptions = this.mapProducts(rawSalesOffer.standaloneOptions);\n\n    return salesOffer;\n  }\n\n  private mapProducts(rawProducts: ProductInterface[]) {\n    const products: ProductModel[] = [];\n\n    if (rawProducts) {\n      rawProducts.forEach((rawProduct) => products.push(this.productMapper.map(rawProduct)));\n    }\n\n    return products;\n  }\n}\n","import { SofyAddress } from './sofy-address';\n\nexport class SofyCustomerProductHoldingProduct {\n  specurl: string;\n  address: SofyAddress;\n  identifier: string;\n  products: SofyCustomerProductHoldingProduct[];\n  options: SofyCustomerProductHoldingProduct[];\n}\n","import { Injectable } from '@angular/core';\nimport { SofyCustomerProductHoldingProduct } from '../models/sofy-customer-product-holding-product';\nimport { CafeRawCustomerproductholdingModel } from '../models/cafe-raw-customerproductholding.model';\nimport { map } from 'lodash-es';\nimport { CafeRawCustomerproductholdingOptionModel } from '../models/cafe-raw-customerproductholding-option.model';\nimport { SofyAddress } from '../models/sofy-address';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SofyCustomerProductHoldingProductMapper {\n  public mapToSofyCustomerProductHoldingProduct(\n    rawProductHoldings: CafeRawCustomerproductholdingModel[]\n  ): SofyCustomerProductHoldingProduct[] {\n    return map(rawProductHoldings, (rawProductHolding) => {\n      const sofyCustomerProductHoldingProduct = new SofyCustomerProductHoldingProduct();\n      sofyCustomerProductHoldingProduct.identifier = rawProductHolding.identifier;\n      sofyCustomerProductHoldingProduct.specurl = rawProductHolding.specurl;\n      sofyCustomerProductHoldingProduct.address = rawProductHolding.address as SofyAddress;\n      sofyCustomerProductHoldingProduct.products = this.mapToSofyCustomerProductHoldingProduct(\n        rawProductHolding.products\n      );\n      sofyCustomerProductHoldingProduct.options = this.mapOptions(rawProductHolding.options);\n\n      return sofyCustomerProductHoldingProduct;\n    });\n  }\n\n  private mapOptions(options: CafeRawCustomerproductholdingOptionModel[]): SofyCustomerProductHoldingProduct[] {\n    return map(options, (rawProductHoldingOption) => {\n      const sofyCustomerProductHoldingOption = new SofyCustomerProductHoldingProduct();\n      sofyCustomerProductHoldingOption.specurl = rawProductHoldingOption.specurl;\n      return sofyCustomerProductHoldingOption;\n    });\n  }\n}\n","import { SofyAddress } from './sofy-address';\n\nexport class SofyModemDetails {\n  macaddress: string;\n  modemtype: string;\n  hardware: string;\n  cableroutername: string;\n  internetlineidentifier: string;\n  installationaddress: SofyAddress;\n}\n","export class SofyAddress {\n  addressid: string;\n  municipality: string;\n  postalcode: string;\n  street: string;\n  housenr: string;\n  country?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { SofyModemDetails } from '../models/sofy-modem-details';\nimport { SofyAddress } from '../models/sofy-address';\nimport { CafeModemDetailsModel } from '../models/cafe-modem-details.model';\nimport { Address } from '../models/address.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SofyModemDetailsMapper {\n  public mapSofyModemDetails(modemDetails: CafeModemDetailsModel): SofyModemDetails[] {\n    const sofyModemDetails: SofyModemDetails[] = [];\n    if (modemDetails) {\n      modemDetails.modemDetails.forEach((modemDetail) => {\n        const sofyModemDetail = new SofyModemDetails();\n\n        sofyModemDetail.macaddress = modemDetail.macAddress;\n        sofyModemDetail.cableroutername = modemDetail.cableRouterName;\n        sofyModemDetail.hardware = modemDetail.hardwareType;\n        sofyModemDetail.installationaddress = this.mapInstallationAddress(modemDetail.installationAddress);\n        sofyModemDetail.internetlineidentifier = modemDetail.internetLineIdentifier;\n        sofyModemDetail.modemtype = modemDetail.modemType;\n\n        sofyModemDetails.push(sofyModemDetail);\n      });\n    }\n    return sofyModemDetails;\n  }\n\n  private mapInstallationAddress(address: Address): SofyAddress {\n    const sofyAddress = new SofyAddress();\n\n    sofyAddress.housenr = address.houseNumber;\n    sofyAddress.street = address.street;\n    sofyAddress.postalcode = address.postalCode;\n    sofyAddress.municipality = address.municipality;\n    sofyAddress.addressid = address.addressId;\n    sofyAddress.country = address.country;\n\n    return sofyAddress;\n  }\n}\n","import { OptionInterface } from '../interfaces/option.interface';\nimport { SofyAddress } from './sofy-address';\n\nexport class SofyProduct {\n  omapiid?: string;\n  options: OptionInterface[];\n  isnewline: boolean;\n  installationaddress: SofyAddress;\n  move: boolean;\n  needscableinstallation: boolean;\n  installtype: string;\n}\n","import { Injectable } from '@angular/core';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport { SofyProduct } from '../models/sofy-product';\nimport { SofyAddress } from '../models/sofy-address';\nimport { Address } from '../models/address.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SofyProductMapper {\n  public mapSelectedProductToSofyProduct(omapiProduct: OmapiProduct, address: Address, installType: string) {\n    const sofyProducts: SofyProduct[] = [];\n    const sofyProduct = new SofyProduct();\n\n    sofyProduct.omapiid = omapiProduct?.productId;\n    sofyProduct.options = [];\n    sofyProduct.needscableinstallation = !!installType;\n    sofyProduct.installtype = installType;\n    sofyProduct.installationaddress = this.mapAddress(address);\n    sofyProduct.isnewline = false;\n    sofyProduct.move = false;\n\n    sofyProducts.push(sofyProduct);\n    return sofyProducts;\n  }\n\n  private mapAddress(address: Address): SofyAddress {\n    const sofyAddress = new SofyAddress();\n\n    if (address) {\n      sofyAddress.addressid = address.addressId;\n      sofyAddress.municipality = address.municipality;\n      sofyAddress.postalcode = address.postalCode;\n      sofyAddress.street = address.street;\n      sofyAddress.housenr = address.houseNumber;\n    }\n\n    return sofyAddress;\n  }\n}\n","import * as Factory from 'factory.ts';\nimport { SofyRequestAddress } from './sofy-request-address';\nimport { SofyRequestProduct } from './sofy-request-product';\n\nexport const sofyRequestAddressBuilder = Factory.Sync.makeFactory<SofyRequestAddress>({\n  addressid: 'adress-id',\n  municipality: 'Merksplas',\n  postalcode: '2330',\n  street: 'Steenweg op Beerse',\n  housenr: '123',\n  country: 'Belgie',\n});\n\nexport const sofyRequestProductFactory = Factory.Sync.makeFactory<SofyRequestProduct>({\n  correlationid: '1',\n  omapiid: '568',\n  options: [],\n  streamingservices: [],\n  optinproducts: [],\n  installationaddress: sofyRequestAddressBuilder.build(),\n});\n","import { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport { SalesOfferProductOption } from './sales-offer-product-option.model';\nimport { SalesOfferCost } from '../salesOfferCost';\nimport { SalesOfferProductInstallType } from './sales-offer-product-install-type';\nimport { SalesOfferPromo } from './sales-offer-promo.model';\nimport { SalesOfferProductOptin } from './sales-offer-product-optin.model';\nimport { SalesOfferPricedItem } from './sales-offer-priced-item.model';\nimport { SalesOfferProductStreamingService } from './sales-offer-product-streaming-service.model';\n\nexport enum SalesOfferProductType {\n  OPTIONS = 'options',\n  OPTINS = 'optinproducts',\n  STREAMING_SERVICES = 'streamingservices',\n}\n\nexport interface SalesOfferProduct extends SalesOfferPricedItem {\n  omapiid: string;\n  correlationid: string;\n  specurl: string;\n  productInfo?: OmapiProduct;\n  description: string;\n  options: SalesOfferProductOption[];\n  streamingservices: SalesOfferProductStreamingService[];\n  optinproducts: SalesOfferProductOptin[];\n  promos: SalesOfferPromo[];\n  installtypes: SalesOfferProductInstallType[];\n  costs?: SalesOfferCost[];\n}\n","import * as Factory from 'factory.ts';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport { SalesOfferPromoPeriod } from './sales-offer-promo-period.model';\nimport { SalesOfferPromo } from './sales-offer-promo.model';\nimport { SalesOfferProductOption } from './sales-offer-product-option.model';\nimport { SalesOfferProductOptin } from './sales-offer-product-optin.model';\nimport { SalesOfferSetupModel } from './sales-offer-setup.model';\nimport { SalesOfferProductInstallType } from './sales-offer-product-install-type';\nimport { SalesOfferCost } from '../salesOfferCost';\nimport { SalesOfferProduct } from './sales-offer-product.model';\nimport { SalesOffer } from './sales-offer.model';\nimport { InstallTypeEnum } from '../../enums/ocapi-move-order.enum';\nimport { SalesOfferProductStreamingService } from './sales-offer-product-streaming-service.model';\n\nexport const salesOfferPromoPeriodFactory = Factory.Sync.makeFactory<SalesOfferPromoPeriod>({\n  startDate: '12/01/2020',\n  endDate: '12/03/2020',\n});\n\nexport const salesOfferPromoFactory = Factory.Sync.makeFactory<SalesOfferPromo>({\n  backendid: 123,\n  duration: 3,\n  legalid: 'legal-id',\n  name: 'promo-one',\n  period: salesOfferPromoPeriodFactory.build(),\n  price: -5,\n  priceexclvat: -3,\n  puk: '1234',\n  tags: [],\n  legalInformation: undefined,\n});\n\nexport const salesOfferProductOptionFactory = Factory.Sync.makeFactory<SalesOfferProductOption>({\n  specurl: 'url/100',\n  omapiid: '100',\n  mutuallyexclusive: 'none',\n  mutuallyexclusivelist: [],\n  selected: true,\n  description: 'description',\n  price: 20,\n  priceexclvat: 18,\n  originalprice: 15,\n  productInfo: {} as OmapiProduct,\n  promos: [salesOfferPromoFactory.build()],\n});\nexport const salesOfferProductStreamingServiceFactory = Factory.Sync.makeFactory<SalesOfferProductStreamingService>({\n  options: [salesOfferProductOptionFactory.build()],\n  specurl: 'url/100',\n  omapiid: '100',\n  mutuallyexclusive: 'none',\n  mutuallyexclusivelist: [],\n  selected: true,\n  description: 'description',\n  price: 20,\n  priceexclvat: 18,\n  originalprice: 15,\n  productInfo: {} as OmapiProduct,\n  promos: [salesOfferPromoFactory.build()],\n});\nexport const salesOfferProductOptinFactory = Factory.Sync.makeFactory<SalesOfferProductOptin>({\n  specurl: 'url/100',\n  omapiid: '100',\n  mutuallyexclusive: 'none',\n  selected: true,\n  description: 'description',\n  price: 0,\n  priceexclvat: 0,\n  originalprice: 15,\n  productInfo: {\n    hasServiceType(_: string): boolean {\n      return false;\n    },\n  } as OmapiProduct,\n  promos: [],\n});\nexport const SalesOfferSetupModelFactory = Factory.Sync.makeFactory<SalesOfferSetupModel>({\n  easyswitcheligible: true,\n});\n\nexport const salesOfferProductPreInstallTypeFactory = Factory.Sync.makeFactory<SalesOfferProductInstallType>({\n  description: InstallTypeEnum.PRE_INSTALL,\n  price: 0,\n  mutuallyexclusive: '',\n  priceexclvat: 0,\n  selected: false,\n  promos: [],\n});\n\nexport const salesOfferProductComfortInstallTypeFactory = Factory.Sync.makeFactory<SalesOfferProductInstallType>({\n  description: InstallTypeEnum.COMFORT_INSTALL,\n  price: 85,\n  mutuallyexclusive: '',\n  priceexclvat: 70.25,\n  selected: false,\n  promos: [],\n});\n\nexport const salesOfferProductSelfInstallTypeFactory = Factory.Sync.makeFactory<SalesOfferProductInstallType>({\n  description: InstallTypeEnum.SELF_INSTALL,\n  price: 0,\n  mutuallyexclusive: '',\n  priceexclvat: 0,\n  selected: false,\n  promos: [],\n});\n\nexport const salesOfferCostFactory = Factory.Sync.makeFactory<SalesOfferCost>({\n  name: 'cable-installation',\n  price: 50,\n  priceexclvat: 45,\n  promotions: [],\n  recurring: 0,\n});\n\nexport const salesOfferProductFactory = Factory.Sync.makeFactory<SalesOfferProduct>({\n  omapiid: '87',\n  correlationid: 'id',\n  specurl: 'url/123',\n  description: 'description',\n  price: 100,\n  priceexclvat: 89,\n  options: [salesOfferProductOptionFactory.build()],\n  optinproducts: [salesOfferProductOptinFactory.build()],\n  productInfo: {} as OmapiProduct,\n  promos: [],\n  installtypes: [salesOfferProductComfortInstallTypeFactory.build(), salesOfferProductSelfInstallTypeFactory.build()],\n  costs: [salesOfferCostFactory.build()],\n  streamingservices: [],\n});\n\nexport const salesOfferStandaloneOptionsFactory = Factory.Sync.makeFactory<SalesOfferProduct>({\n  omapiid: '100',\n  correlationid: 'id',\n  specurl: 'url/100',\n  description: 'description',\n  price: 100,\n  priceexclvat: 89,\n  options: [],\n  optinproducts: [salesOfferProductOptinFactory.build()],\n  productInfo: {} as OmapiProduct,\n  promos: [salesOfferPromoFactory.build()],\n  installtypes: [salesOfferProductComfortInstallTypeFactory.build(), salesOfferProductSelfInstallTypeFactory.build()],\n  costs: [salesOfferCostFactory.build()],\n  streamingservices: [],\n});\n\nexport const salesOfferTestFactory = Factory.Sync.makeFactory<SalesOffer>({\n  products: [salesOfferProductFactory.build()],\n  setup: SalesOfferSetupModelFactory.build(),\n  standaloneoptions: [],\n});\n\nexport const salesOfferTestStandaloneOptionsFactory = Factory.Sync.makeFactory<SalesOffer>({\n  products: [],\n  setup: SalesOfferSetupModelFactory.build(),\n  standaloneoptions: [salesOfferStandaloneOptionsFactory.build()],\n});\n\nexport const salesOfferError = { error: { type: 'error' } };\n","import { PromoModel } from './promo.model';\nimport { PeriodModel } from './period.model';\nimport { KeyValuePair } from '../interfaces/key-value.interface';\n\nexport class PromoModelTestfactory {\n  static build(properties?: KeyValuePair): PromoModel {\n    const promo = new PromoModel();\n    promo.backendid = 1;\n    promo.duration = 1;\n    promo.legalid = 'test-promo';\n    promo.name = 'test-promo';\n    promo.period = new PeriodModel();\n    promo.period.startDate = '2020-01-01';\n    promo.period.endDate = '2050-01-01';\n    promo.price = 50;\n    promo.priceexclvat = 40;\n    promo.puk = '123456';\n\n    if (properties) {\n      Object.keys(properties).forEach((key) => {\n        if (properties[key] === null) {\n          delete (promo as unknown as KeyValuePair)[key];\n        } else {\n          (promo as unknown as KeyValuePair)[key] = properties[key];\n        }\n      });\n    }\n    return promo;\n  }\n}\n","import * as Factory from 'factory.ts';\nimport { SofyAddress } from './sofy-address';\nimport { SofyCustomerProductHoldingProduct } from './sofy-customer-product-holding-product';\n\nexport const sofyAddressFactory = Factory.Sync.makeFactory<SofyAddress>({\n  addressid: 'adress-id',\n  municipality: 'Merksplas',\n  postalcode: '2330',\n  street: 'Steenweg op Beerse',\n  housenr: '123',\n  country: 'Belgie',\n});\n\nexport const sofyCustomerProductHoldingProductFactory = Factory.Sync.makeFactory<SofyCustomerProductHoldingProduct>({\n  specurl: '568',\n  address: sofyAddressFactory.build(),\n  identifier: '123',\n  products: [],\n  options: [],\n});\n","export class Promotion {\n  description: string;\n  startdate: string;\n  enddate: string;\n}\n","export class Address {\n  addressId: string;\n  type: string;\n  houseNumber: string;\n  boxNumber: string;\n  subHouseNumber: string;\n  street: string;\n  streetId: string;\n  postalCode: string;\n  municipality: string;\n  country?: string;\n  countryCode?: string;\n  floorNumber?: string;\n  addressType?: string;\n  tinaLocationId?: string;\n  plannedMaintenance?: unknown[];\n}\n","import { OmapiProductType } from '@telenet/ng-lib-omapi';\nimport { SofyAddress } from './sofy-address';\nimport { CafeRawCustomerproductholdingOptionModel } from './cafe-raw-customerproductholding-option.model';\n\nexport class CafeRawCustomerproductholdingModel {\n  identifier: string;\n  customerproductid: string;\n  accountnumber: string;\n  label: string;\n  rateclassid: string;\n  rateclassdescription: string;\n  specurl: string;\n  products: CafeRawCustomerproductholdingModel[];\n  options: CafeRawCustomerproductholdingOptionModel[];\n  address: unknown | SofyAddress;\n  rawOmapi: CafeRawCustomerproductholdingRawomapiProductModel;\n\n  isProductTypeBundle(): boolean {\n    return OmapiProductType.BUNDLE === this.rawOmapi?.product?.producttype;\n  }\n}\n\nexport class CafeRawCustomerproductholdingRawomapiProductModel {\n  product: CafeRawCustomerproductholdingRawomapiModel;\n}\n\nexport class CafeRawCustomerproductholdingRawomapiModel {\n  productid: string;\n  externalProductCode: string;\n  labelkey: string;\n  visible: boolean;\n  family: string;\n  salesofferingid: string;\n  producttype: string;\n  weight: number;\n  apps: unknown[];\n  services: unknown[];\n  characteristics: unknown;\n  customercategories: string[];\n  category: string[];\n  subcategory: unknown;\n  localizedcontent: unknown[];\n  shortdescription: unknown;\n  rates: unknown[];\n  visibilityrules: unknown;\n  unlimited: boolean;\n  priceType: string;\n}\n","export class CafeRawCustomerproductholdingOptionModel {\n  specurl: string;\n  label: string;\n  rawOmapi: unknown;\n}\n","import { CafeModemDetailModel } from './cafe-modem-detail.model';\n\nexport class CafeModemDetailsModel {\n  modemDetails: CafeModemDetailModel[];\n\n  public withModemDetails(modemDetails: CafeModemDetailModel[]): CafeModemDetailsModel {\n    this.modemDetails = modemDetails;\n    return this;\n  }\n}\n","import { Address } from './address.model';\n\nexport class CafeModemDetailModel {\n  macAddress: string;\n  modemType: string;\n  hardwareType: string;\n  cableRouterName: string;\n  internetLineIdentifier: string;\n  installationAddress: Address;\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { CustomerBrandEnum, PathCategorisationService, UrlService } from '@telenet/ng-lib-page';\nimport { ConfigConstants, ConfigService } from '@telenet/ng-lib-config';\nimport { Injectable } from '@angular/core';\nimport { SofyProduct } from '../models/sofy-product';\nimport { SofyCustomerProductHoldingProduct } from '../models/sofy-customer-product-holding-product';\nimport { SofyModemDetails } from '../models/sofy-modem-details';\nimport { SofyRequestProduct } from '../models/request';\nimport { SalesOfferData } from '../interfaces/sales-offer.interface';\nimport { CustomerInstallationDetailsInterface } from '../interfaces/installation-details-response.interface';\nimport { isEmpty } from 'lodash-es';\nimport { Promotion } from '../models/promotion.model';\nimport { KeyValuePair } from '../interfaces/key-value.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SofyService {\n  private readonly PARAM_DATE = 'date';\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly urlService: UrlService,\n    private readonly configService: ConfigService,\n    private readonly pathCategorisationService: PathCategorisationService\n  ) {}\n\n  // Deprecated,\n  // products model is the same as the one used in the response\n  // makes no sense to have the exact same model as it's just not the same\n  // Use getSalesOffer instead\n  public sofyProducts(\n    products: SofyProduct[],\n    rawCustomerProductHolding: SofyCustomerProductHoldingProduct[],\n\n    targetGroups: Promotion[],\n    rawModemDetails: SofyModemDetails[],\n    voucherPromo: string,\n    campaignCode: string,\n    messageGroup: string\n  ) {\n    const data: SalesOfferData = {\n      products: products,\n      promotions: targetGroups,\n      customerproductholding: rawCustomerProductHolding,\n      modemdetails: rawModemDetails,\n      voucherpromo: voucherPromo,\n      campaigncode: campaignCode,\n    };\n    return this.doPost(data, messageGroup);\n  }\n\n  public getSalesOfferWithOmapiId(products: SofyRequestProduct[] | SofyProduct[], messageGroup: string) {\n    const data: SalesOfferData = {\n      products: products,\n      promotions: [],\n      customerproductholding: [],\n      modemdetails: [],\n    };\n    return this.doPost(data, messageGroup);\n  }\n\n  public getSalesOffer(\n    products: SofyRequestProduct[],\n    promotions: Promotion[],\n    rawModemDetails: SofyModemDetails[],\n    rawCustomerProductHolding: SofyCustomerProductHoldingProduct[],\n    voucherPromo: string,\n    campaignCode: string,\n    messageGroup: string,\n    installationDetails?: CustomerInstallationDetailsInterface,\n    standaloneOptions?: SofyRequestProduct[]\n  ) {\n    const data: SalesOfferData = {\n      promotions: promotions,\n      customerproductholding: rawCustomerProductHolding,\n      modemdetails: rawModemDetails,\n      voucherpromo: voucherPromo,\n      campaigncode: campaignCode,\n      customerinstallationdetails: installationDetails,\n      products: products,\n      standaloneoptions: standaloneOptions,\n    };\n\n    if (!isEmpty(this.getDateFromUrl())) {\n      (data as unknown as KeyValuePair)['salesofferdate'] = this.getDateFromUrl();\n    }\n\n    return this.doPost(data, messageGroup);\n  }\n\n  private doPost(data: SalesOfferData, _: string): Observable<unknown> {\n    const options = this.getHttpOptions();\n    return this.http.post(this.getSofyUrl(), data, options).pipe(\n      take(1),\n      catchError((error: unknown) => {\n        return of(error);\n      })\n    );\n  }\n\n  private getHttpOptions() {\n    return {\n      headers: this.createHttpHeaders(),\n      timeout: 10000,\n      cache: true,\n    };\n  }\n\n  private createHttpHeaders() {\n    return {\n      'x-alt-referer': this.urlService.getCurrentUrl(),\n      'X-Requested-With': 'XMLHttpRequest',\n    };\n  }\n\n  private getSofyUrl(): string {\n    if (this.isBaseCustomer()) {\n      return this.configService.getConfig(ConfigConstants.SOFY_URL) + '/sofy/base/public/';\n    }\n    return this.configService.getConfig(ConfigConstants.SOFY_URL) + '/sofy/public/';\n  }\n\n  isBaseCustomer(): boolean {\n    return this.pathCategorisationService.getCustomerBrand() === CustomerBrandEnum.BRAND_BASE;\n  }\n\n  private getDateFromUrl(): string {\n    return this.urlService.getRequestParamValue(this.PARAM_DATE, '');\n  }\n}\n","import { SalesOfferProduct } from '../models/response';\n\nexport class SalesOfferProductUtil {\n  static RMD_PRODUCT = 'RMD';\n  static SOHO_PRODUCT = 'TB';\n\n  public static isResidentialProduct(product: SalesOfferProduct) {\n    return product.productInfo?.getCharacteristic('productSegment') === SalesOfferProductUtil.RMD_PRODUCT;\n  }\n\n  public static isSohoProduct(product: SalesOfferProduct) {\n    return product.productInfo?.getCharacteristic('productSegment') === SalesOfferProductUtil.SOHO_PRODUCT;\n  }\n\n  public static hasAnyInstallTypes(product: SalesOfferProduct): boolean {\n    return product.installtypes && product.installtypes.length > 0;\n  }\n}\n","import { TranslateService } from '@ngx-translate/core';\nimport { SalesOfferPromo } from '../models/response';\nimport { isNil } from 'lodash-es';\nimport { ConnectFiveConstants } from '../constants/connect-five.constants';\nimport { LabelUtil } from '@telenet/ng-lib-page';\n\nexport class SalesOfferPromoUtil {\n  private static readonly PROMOTION_DICTIONARY = 'promotions';\n  private static readonly DEFAULT_LABEL = 'default';\n  private static readonly DEFAULT_PERMANENT_LABEL = 'default-permanent';\n\n  public static containsTag(promo: SalesOfferPromo[], tag: string): boolean {\n    return promo.some((promo: SalesOfferPromo) => promo.tags.some((promoTag: string) => promoTag === tag));\n  }\n\n  public static hasDiscount(promo: SalesOfferPromo): boolean {\n    return promo && promo.duration > 0 && promo.price < 0;\n  }\n\n  public static getShortestPromoExcludingZeroDurations(promos: SalesOfferPromo[]): SalesOfferPromo | undefined {\n    const nonZeroDurationPromos = promos.filter((promo: SalesOfferPromo) => promo.duration > 0);\n\n    return nonZeroDurationPromos.length === 0\n      ? undefined\n      : nonZeroDurationPromos.reduce((prev, curr) => (prev.duration < curr.duration ? prev : curr));\n  }\n\n  public static getPromoWithZeroDurationAndZeroDiscount(promos: SalesOfferPromo[]): SalesOfferPromo | undefined {\n    return promos.find((promo: SalesOfferPromo) => promo.duration === 0 && promo.price === 0);\n  }\n\n  public static getTotalDiscountWithZeroDuration(promos: SalesOfferPromo[], sohoFlow: boolean): number {\n    return promos\n      .filter((promo: SalesOfferPromo) => promo.duration === 0)\n      .map((promo) => (sohoFlow ? promo.priceexclvat : promo.price))\n      .reduce((curr: number, prev: number) => curr + prev, 0);\n  }\n\n  static getOverviewLabel(\n    promo: SalesOfferPromo,\n    product: string,\n    translateService: TranslateService,\n    isSoho: boolean,\n    discount: number\n  ): string {\n    const labelKey = SalesOfferPromoUtil.getLabelKey(\n      [SalesOfferPromoUtil.PROMOTION_DICTIONARY, LabelUtil.normalizeKey(promo.name)],\n      isSoho\n    );\n    const params = { amount: this.transformPrice(discount), product: product, duration: promo.duration };\n\n    let copy = translateService.instant(labelKey, params);\n    if (copy === undefined || copy === null || copy === '' || copy === labelKey) {\n      copy = this.getDefaultCopy(promo, isSoho, translateService, params, labelKey);\n    }\n    return copy;\n  }\n\n  private static getDefaultCopy<T extends object>(\n    promo: SalesOfferPromo,\n    isSoho: boolean,\n    translateService: TranslateService,\n    params: T,\n    labelKey: string\n  ) {\n    const defaultKeyWord = SalesOfferPromoUtil.isPermanentPromotion(promo)\n      ? SalesOfferPromoUtil.DEFAULT_PERMANENT_LABEL\n      : SalesOfferPromoUtil.DEFAULT_LABEL;\n    const defaultLabelKey = SalesOfferPromoUtil.getLabelKey(\n      [SalesOfferPromoUtil.PROMOTION_DICTIONARY, defaultKeyWord],\n      isSoho\n    );\n    let copy = translateService.instant(defaultLabelKey, params);\n\n    if (copy === undefined || copy === null || copy === '' || copy === defaultLabelKey) {\n      copy = labelKey;\n    }\n    return copy;\n  }\n\n  private static getLabelKey(keyWords: string[], isSoho: boolean): string {\n    if (isSoho) {\n      keyWords.push(ConnectFiveConstants.SOHO_LABEL_APPENDIX);\n    }\n    return LabelUtil.getLabelKeyWithTypeText(keyWords.join('.'));\n  }\n\n  private static isPermanentPromotion(promo: SalesOfferPromo): boolean {\n    return promo.duration === 0 && promo.price < 0;\n  }\n\n  private static transformPrice(price: number): string {\n    return !isNil(price) ? price.toFixed(2).replace('.', ',') : '';\n  }\n}\n","import { SalesOfferProductUtil } from './sales-offer-product.util';\nimport { SAFE_SPOT_PRO } from '../constants/sofy.constants';\nimport {\n  SalesOffer,\n  SalesOfferPricedItem,\n  SalesOfferProduct,\n  SalesOfferProductInstallType,\n  SalesOfferProductOptin,\n  SalesOfferProductOption,\n  SalesOfferProductType,\n  SalesOfferPromo,\n  SalesOfferPromoDurationGroup,\n} from '../models/response';\nimport { SalesOfferCost } from '../models/salesOfferCost';\nimport { concat, filter, flatMap, flatten, groupBy, isUndefined, map, min, minBy, sum, sumBy, uniqBy } from 'lodash-es';\nimport { SalesOfferProductStreamingService } from '../models/response/sales-offer-product-streaming-service.model';\nimport { SalesOfferPromoUtil } from './sales-offer-promo.util';\n\nexport class SalesOfferUtil {\n  public static getTotalMonthlyPrice(offer: SalesOffer, exclusiveVat?: boolean): number {\n    return sum([\n      SalesOfferUtil.getMonthlyPriceForProducts(offer, exclusiveVat),\n      SalesOfferUtil.getMonthlyPriceForSelectedProductOptions(offer, exclusiveVat),\n      SalesOfferUtil.getMonthlyPriceForStandaloneOptions(offer, exclusiveVat),\n    ]);\n  }\n\n  public static getTotalMonthlyPriceInclPromos(offer: SalesOffer, exclusiveVat?: boolean): number {\n    return sum([this.getTotalMonthlyPrice(offer, exclusiveVat), this.getTotalMonthlyPromoPrice(offer, exclusiveVat)]);\n  }\n\n  public static getSafeSpotProOption(offer: SalesOffer): SalesOfferProductOption | undefined {\n    const allSelectedProductOptions = SalesOfferUtil.getAllSelectedProductOptions(offer);\n    return allSelectedProductOptions.find((option) => option.omapiid === SAFE_SPOT_PRO);\n  }\n\n  public static getAllSelectedProductOptions(offer?: SalesOffer): SalesOfferProductOption[] {\n    return filter(this.getAllProductOptions(offer), (o) => o.selected);\n  }\n\n  public static getAllProductOptions(offer?: SalesOffer): SalesOfferProductOption[] {\n    if (offer === undefined) {\n      return [];\n    }\n    return SalesOfferUtil.getAllProductItemsByType(offer, SalesOfferProductType.OPTIONS);\n  }\n\n  public static getAllSelectedProductStreamingServices(offer?: SalesOffer): SalesOfferProductStreamingService[] {\n    return filter(this.getAllProductStreamingServices(offer), (o) => o.selected);\n  }\n\n  public static getAllProductStreamingServices(offer?: SalesOffer): SalesOfferProductStreamingService[] {\n    if (offer === undefined) {\n      return [];\n    }\n    return SalesOfferUtil.getAllProductItemsByType(\n      offer,\n      SalesOfferProductType.STREAMING_SERVICES\n    ) as SalesOfferProductStreamingService[];\n  }\n\n  public static getAllSelectedProductOptins(offer?: SalesOffer): SalesOfferProductOptin[] {\n    return filter(this.getAllProductOptins(offer), (o) => o.selected);\n  }\n\n  public static getAllProductOptins(offer?: SalesOffer): SalesOfferProductOptin[] {\n    if (offer === undefined) {\n      return [];\n    }\n    return SalesOfferUtil.getAllProductItemsByType(offer, SalesOfferProductType.OPTINS);\n  }\n\n  private static getAllProductItemsByType(\n    offer: SalesOffer,\n    type: SalesOfferProductType\n  ): SalesOfferProductOption[] | SalesOfferProductOptin[] | SalesOfferProductStreamingService[] {\n    return uniqBy(flatten(map(offer.products, (product) => product[type])), (o) => o.omapiid);\n  }\n\n  public static getMonthlyPriceForSelectedProductOptions(offer: SalesOffer, exclusiveVat?: boolean): number {\n    const allSelectedProductOptions = SalesOfferUtil.getAllSelectedProductOptions(offer);\n    return (\n      SalesOfferUtil.getMonthlyPriceForItems(allSelectedProductOptions, !!exclusiveVat) +\n      SalesOfferUtil.getMonthlyPermanentPromoDiscountForItems(allSelectedProductOptions, !!exclusiveVat)\n    );\n  }\n\n  public static getMonthlyPriceForProducts(offer: SalesOffer, exclusiveVat?: boolean): number {\n    return (\n      SalesOfferUtil.getMonthlyPriceForItems(offer.products, !!exclusiveVat) +\n      SalesOfferUtil.getMonthlyPermanentPromoDiscountForItems(offer.products, !!exclusiveVat)\n    );\n  }\n\n  public static getMonthlyPriceForStandaloneOptions(offer: SalesOffer, exclusiveVat?: boolean): number {\n    return (\n      SalesOfferUtil.getMonthlyPriceForItems(offer.standaloneoptions, !!exclusiveVat) +\n      SalesOfferUtil.getMonthlyPermanentPromoDiscountForItems(offer.standaloneoptions, !!exclusiveVat)\n    );\n  }\n\n  public static getMonthlyPromosForSelectedProductOptions(offer: SalesOffer, exclusiveVat?: boolean): number {\n    return sum(\n      map(\n        SalesOfferUtil.getMonthlyPromotions(SalesOfferUtil.getAllSelectedProductOptions(offer)),\n        (p: SalesOfferPromo) => (exclusiveVat ? p.priceexclvat : p.price)\n      )\n    );\n  }\n\n  public static getMonthlyPromosForProducts(offer: SalesOffer, exclusiveVat?: boolean): number {\n    return sum(\n      map(SalesOfferUtil.getMonthlyPromotions(offer.products), (p: SalesOfferPromo) =>\n        exclusiveVat ? p.priceexclvat : p.price\n      )\n    );\n  }\n\n  public static getMonthlyPromosForStandaloneOptions(offer: SalesOffer, exclusiveVat?: boolean): number {\n    return sum(\n      map(SalesOfferUtil.getMonthlyPromotions(offer.standaloneoptions), (p: SalesOfferPromo) =>\n        exclusiveVat ? p.priceexclvat : p.price\n      )\n    );\n  }\n\n  public static getMonthlyPromos(offer: SalesOffer): SalesOfferPromo[] {\n    return flatMap(offer.products, (product) => SalesOfferUtil.getMonthlyProductPromos(product));\n  }\n\n  public static getAllPromos(offer: SalesOffer): SalesOfferPromo[] {\n    return concat(\n      SalesOfferUtil.getMonthlyPromos(offer),\n      flatMap(offer.products, (product) => SalesOfferUtil.getCostPromos(product)),\n      flatMap(offer.products, (product) => SalesOfferUtil.getInstallPromos(product))\n    );\n  }\n\n  public static findProduct(offer: SalesOffer, omapiId: string): SalesOfferProduct | undefined {\n    return offer && offer.products ? offer.products.find((product) => product.omapiid === omapiId) : undefined;\n  }\n\n  private static getCostPromos(product: SalesOfferProduct): SalesOfferPromo[] {\n    return flatMap(product.costs, (cost) => cost.promotions);\n  }\n\n  private static getInstallPromos(product: SalesOfferProduct): SalesOfferPromo[] {\n    return flatMap(\n      product.installtypes.filter((installType) => installType.selected),\n      (installType) => installType.promos\n    );\n  }\n\n  private static getMonthlyProductPromos(product: SalesOfferProduct): SalesOfferPromo[] {\n    return concat(\n      product.promos,\n      flatMap(product.optinproducts, (optin) => optin.promos),\n      flatMap(\n        product.options.filter((option) => option.selected),\n        (option) => option.promos\n      )\n    );\n  }\n\n  public static getMonthlyPromosGroupedByDuration(offer: SalesOffer): SalesOfferPromoDurationGroup[] {\n    return map(\n      groupBy(\n        SalesOfferUtil.getMonthlyPromos(offer).filter((promo) => promo.duration > 0),\n        (promo: SalesOfferPromo) => promo.duration\n      ),\n      (promos: SalesOfferPromo[], key: string) => {\n        return {\n          duration: Number(key),\n          promos: promos,\n        } as SalesOfferPromoDurationGroup;\n      }\n    );\n  }\n\n  public static getPromoDurationGroupsTotal(\n    salesOfferPromoGroups: SalesOfferPromoDurationGroup[],\n    exclusiveVat?: boolean\n  ): number {\n    return sum(\n      map(\n        flatMap(salesOfferPromoGroups, (group: SalesOfferPromoDurationGroup) => group.promos),\n        (promo: SalesOfferPromo) => (exclusiveVat ? promo.priceexclvat : promo.price)\n      )\n    );\n  }\n\n  public static getBundle(offer: SalesOffer): SalesOfferProduct {\n    const bundle = offer.products.find((product) => {\n      return product.productInfo && product.productInfo.isBundle();\n    });\n\n    if (!bundle) {\n      throw new Error('Salesoffer does not contain a bundle');\n    }\n\n    return bundle;\n  }\n\n  public static containsResidentialProduct(offer: SalesOffer): boolean {\n    return offer.products.some((product) => SalesOfferProductUtil.isResidentialProduct(product));\n  }\n\n  public static containsSohoProduct(offer: SalesOffer): boolean {\n    return offer.products.some((product) => SalesOfferProductUtil.isSohoProduct(product));\n  }\n\n  public static containsPromoTag(offer: SalesOfferProduct, tag: string): boolean {\n    return SalesOfferPromoUtil.containsTag(offer.promos, tag);\n  }\n\n  private static getMonthlyPriceForItems(items: SalesOfferPricedItem[], exclusiveVat: boolean): number {\n    return sum(map(items, (p) => (exclusiveVat ? p.priceexclvat : p.price)));\n  }\n\n  private static getMonthlyPermanentPromoDiscountForItems(\n    items: SalesOfferProduct[] | SalesOfferProductOption[],\n    exclusiveVat: boolean\n  ): number {\n    return SalesOfferUtil.getPermanentPromotions(items)\n      .map((promo) => SalesOfferUtil.getPrice(promo, exclusiveVat))\n      .reduce((curr, previous) => curr + previous, 0);\n  }\n\n  private static getPermanentPromotions(items: SalesOfferProduct[] | SalesOfferProductOption[]): SalesOfferPromo[] {\n    return SalesOfferUtil.getPromotionsWithDuration(items, (promo: SalesOfferPromo): boolean => promo?.duration === 0);\n  }\n\n  private static getMonthlyPromotions(items: SalesOfferProduct[] | SalesOfferProductOption[]): SalesOfferPromo[] {\n    return SalesOfferUtil.getPromotionsWithDuration(items, (promo: SalesOfferPromo): boolean => promo?.duration > 0);\n  }\n\n  private static getPromotionsWithDuration(\n    items: SalesOfferProduct[] | SalesOfferProductOption[],\n    durationFilter: (promo: SalesOfferPromo) => boolean\n  ): SalesOfferPromo[] {\n    return (items || [])\n      .map((item: SalesOfferProductOption | SalesOfferProduct) => item.promos)\n      .reduce((accumulator, value) => accumulator.concat(value), [])\n      .filter(durationFilter);\n  }\n\n  public static getShortestDurationOfAllPromos(salesOffer: SalesOffer): number {\n    return min([\n      this.getShortestPromoDurationOfProducts(salesOffer),\n      this.getShortestPromoDurationOfProductOptions(salesOffer),\n      this.getShortestPromoDurationOfStandaloneOptions(salesOffer),\n    ]) as number;\n  }\n\n  public static getPriceInclPromo(\n    salesOfferProduct: SalesOfferProduct | SalesOfferProductOption | SalesOfferProductOptin,\n    business: boolean\n  ): number {\n    return this.getPrice(salesOfferProduct, business) + sumBy(salesOfferProduct.promos, this.getPriceTag(business));\n  }\n\n  public static getTotalTemporaryDiscount(salesOfferProduct: SalesOfferProduct, business: boolean): number {\n    const temporaryPromos = salesOfferProduct.promos.filter((promo) => promo.duration !== 0);\n    return sumBy(temporaryPromos, this.getPriceTag(business));\n  }\n\n  public static getShortestPromoDuration(\n    salesOfferProduct: SalesOfferProduct | SalesOfferProductOption | SalesOfferProductOptin\n  ): number {\n    return this.calculateShortestPromoDuration(salesOfferProduct.promos);\n  }\n\n  private static getTotalMonthlyPromoPrice(offer: SalesOffer, exclusiveVat?: boolean): number {\n    return sum([\n      SalesOfferUtil.getMonthlyPromosForProducts(offer, exclusiveVat),\n      SalesOfferUtil.getMonthlyPromosForSelectedProductOptions(offer, exclusiveVat),\n      SalesOfferUtil.getMonthlyPromosForStandaloneOptions(offer, exclusiveVat),\n    ]);\n  }\n\n  public static getPrice(\n    salesOfferProduct: SalesOfferProduct | SalesOfferProductOption | SalesOfferProductOptin | SalesOfferPromo,\n    business: boolean\n  ): number {\n    return business ? salesOfferProduct.priceexclvat : salesOfferProduct.price;\n  }\n\n  private static getPriceTag(business: boolean): string {\n    return business ? 'priceexclvat' : 'price';\n  }\n\n  private static calculateShortestPromoDuration(salesOfferPromos: SalesOfferPromo[]): number {\n    const shortestDurationPromo = minBy(salesOfferPromos, 'duration');\n\n    return !isUndefined(shortestDurationPromo) ? shortestDurationPromo.duration : 0;\n  }\n\n  private static getShortestPromoDurationOfProducts(salesOffer: SalesOffer): number {\n    return min(map(SalesOfferUtil.getMonthlyPromotions(salesOffer.products), (promo) => promo.duration)) as number;\n  }\n\n  private static getShortestPromoDurationOfStandaloneOptions(salesOffer: SalesOffer): number {\n    return min(\n      map(SalesOfferUtil.getMonthlyPromotions(salesOffer.standaloneoptions), (promo) => promo.duration)\n    ) as number;\n  }\n\n  private static getShortestPromoDurationOfProductOptions(salesOffer: SalesOffer): number {\n    return min(\n      map(SalesOfferUtil.getMonthlyPromotions(this.getAllSelectedProductOptions(salesOffer)), (promo) => promo.duration)\n    ) as number;\n  }\n\n  public static getCosts(salesOffer: SalesOffer, nameFilter: string | null = null): SalesOfferCost[] {\n    const flat = (someFunction: (product: SalesOfferProduct) => SalesOfferCost[], arr: SalesOfferProduct[]) =>\n      arr.reduce(\n        (salesOfferCosts: SalesOfferCost[], salesOfferProduct: SalesOfferProduct) => [\n          ...salesOfferCosts,\n          ...someFunction(salesOfferProduct),\n        ],\n        []\n      );\n    const costs = flat((product: SalesOfferProduct) => {\n      if (product.costs) {\n        return product.costs;\n      } else {\n        return [];\n      }\n    }, salesOffer.products);\n    if (nameFilter) {\n      return costs.filter((cost) => cost.name === nameFilter);\n    }\n    return costs;\n  }\n\n  public static getInstallTypes(salesOffer: SalesOffer): SalesOfferProductInstallType[] {\n    return flatMap(salesOffer.products, (product) => product.installtypes);\n  }\n\n  public static isOrderingHighTier(salesOffer: SalesOffer): boolean {\n    return salesOffer.products.some((product) => {\n      return product.productInfo && product.productInfo.isHighTier();\n    });\n  }\n\n  static containsAll(offer: SalesOffer, omapiIds: string[]): boolean {\n    return omapiIds.every((omapiId) => this.contains(offer, omapiId));\n  }\n\n  static containsAny(offer: SalesOffer, omapiIds: string[]): boolean {\n    return omapiIds.some((omapiId) => this.contains(offer, omapiId));\n  }\n\n  static contains(offer: SalesOffer, omapiId: string): boolean {\n    return offer.products.some((product) => product.omapiid === omapiId);\n  }\n}\n","import { FlowTypeEnum } from '../enums/flow-type.enum';\nimport { SalesOfferPricedItem } from '../models/response';\n\nexport class ConnectFivePriceFromFlowTypeUtil {\n  static connectFivePriceWithFlowTypeConsidered<T extends SalesOfferPricedItem>(\n    flowType: FlowTypeEnum,\n    objectContainingPriceWithVatAndPriceWithoutVat: T\n  ): number {\n    if (flowType === FlowTypeEnum.SOHO) {\n      return objectContainingPriceWithVatAndPriceWithoutVat.priceexclvat;\n    } else {\n      return objectContainingPriceWithVatAndPriceWithoutVat.price;\n    }\n  }\n}\n","import { SalesOfferProductInstallType, SalesOfferPromo } from '../models/response';\nimport { SelfInstallTypeEnum } from '../enums/self-install-type.enum';\nimport { DeliveryOptionInterface } from '../interfaces/delivery-option.interface';\nimport { InstallTypeEnum } from '../enums/ocapi-move-order.enum';\nimport { FlowTypeEnum } from '../enums/flow-type.enum';\nimport { ConnectFivePriceFromFlowTypeUtil } from './connect-five-price-from-flow-type.util';\n\nexport class SalesOfferInstallTypeUtil {\n  public static getInstallType(\n    type: InstallTypeEnum,\n    installTypes: SalesOfferProductInstallType[]\n  ): SalesOfferProductInstallType | undefined {\n    return installTypes.find((installType) => installType.description === type);\n  }\n\n  public static getInstallTypeForFlowType(\n    type: InstallTypeEnum,\n    installTypes: SalesOfferProductInstallType[],\n    flowType: FlowTypeEnum\n  ): SalesOfferProductInstallType | undefined {\n    const foundInstallType = this.getInstallType(type, installTypes);\n    if (typeof foundInstallType === 'undefined') {\n      return undefined;\n    }\n    const installType: SalesOfferProductInstallType = JSON.parse(JSON.stringify(foundInstallType));\n    installType.price = ConnectFivePriceFromFlowTypeUtil.connectFivePriceWithFlowTypeConsidered(flowType, installType);\n    installType.promos.forEach(\n      (promo: SalesOfferPromo) =>\n        (promo.price = ConnectFivePriceFromFlowTypeUtil.connectFivePriceWithFlowTypeConsidered(flowType, promo))\n    );\n    return installType;\n  }\n\n  public static getDeliveryOption(\n    type: SelfInstallTypeEnum,\n    installType: SalesOfferProductInstallType\n  ): DeliveryOptionInterface | undefined {\n    return installType?.options\n      ? installType.options.find(\n          (installTypeOption: DeliveryOptionInterface) => installTypeOption?.description === type\n        )\n      : undefined;\n  }\n\n  public static hasHomeDelivery(installType: SalesOfferProductInstallType): boolean {\n    return !!installType.options?.some(\n      (installTypeOption) => installTypeOption?.description === SelfInstallTypeEnum.HOME_DELIVERY\n    );\n  }\n\n  public static hasPickup(installType: SalesOfferProductInstallType): boolean {\n    return !!installType.options?.some(\n      (installTypeOption) => installTypeOption?.description === SelfInstallTypeEnum.PICKUP\n    );\n  }\n}\n","import { SalesOfferProductOptin } from '../models';\nimport { ServiceTypeEnum } from '../enums/service-type.enum';\n\nexport class SalesOfferProductOptinUtil {\n  public static hasMobileInternetOptin(optins: SalesOfferProductOptin[]): boolean {\n    return SalesOfferProductOptinUtil.hasOptinWithServiceType(optins, ServiceTypeEnum.MOBILE_INTERNET);\n  }\n\n  public static hasOptinWithServiceType(optins: SalesOfferProductOptin[], serviceType: ServiceTypeEnum): boolean {\n    return optins && optins.some((optin) => optin.productInfo && optin.productInfo.hasServiceType(serviceType));\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.PromoMapper","i1.CostMapper","i2.InstallTypeMapper","i3.OptionMapper","i4.PromoMapper","i1.ProductMapper"],"mappings":"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"}