import * as Factory from 'factory.ts';
import { InstallTypeEnum } from '../../enums/ocapi-move-order.enum';
export const salesOfferPromoPeriodFactory = Factory.Sync.makeFactory({
    startDate: '12/01/2020',
    endDate: '12/03/2020',
});
export const salesOfferPromoFactory = Factory.Sync.makeFactory({
    backendid: 123,
    duration: 3,
    legalid: 'legal-id',
    name: 'promo-one',
    period: salesOfferPromoPeriodFactory.build(),
    price: -5,
    priceexclvat: -3,
    puk: '1234',
    tags: [],
    legalInformation: undefined,
});
export const salesOfferProductOptionFactory = Factory.Sync.makeFactory({
    specurl: 'url/100',
    omapiid: '100',
    mutuallyexclusive: 'none',
    mutuallyexclusivelist: [],
    selected: true,
    description: 'description',
    price: 20,
    priceexclvat: 18,
    originalprice: 15,
    productInfo: {},
    promos: [salesOfferPromoFactory.build()],
});
export const salesOfferProductStreamingServiceFactory = Factory.Sync.makeFactory({
    options: [salesOfferProductOptionFactory.build()],
    specurl: 'url/100',
    omapiid: '100',
    mutuallyexclusive: 'none',
    mutuallyexclusivelist: [],
    selected: true,
    description: 'description',
    price: 20,
    priceexclvat: 18,
    originalprice: 15,
    productInfo: {},
    promos: [salesOfferPromoFactory.build()],
});
export const salesOfferProductOptinFactory = Factory.Sync.makeFactory({
    specurl: 'url/100',
    omapiid: '100',
    mutuallyexclusive: 'none',
    selected: true,
    description: 'description',
    price: 0,
    priceexclvat: 0,
    originalprice: 15,
    productInfo: {
        hasServiceType(_) {
            return false;
        },
    },
    promos: [],
});
export const SalesOfferSetupModelFactory = Factory.Sync.makeFactory({
    easyswitcheligible: true,
});
export const salesOfferProductPreInstallTypeFactory = Factory.Sync.makeFactory({
    description: InstallTypeEnum.PRE_INSTALL,
    price: 0,
    mutuallyexclusive: '',
    priceexclvat: 0,
    selected: false,
    promos: [],
});
export const salesOfferProductComfortInstallTypeFactory = Factory.Sync.makeFactory({
    description: InstallTypeEnum.COMFORT_INSTALL,
    price: 85,
    mutuallyexclusive: '',
    priceexclvat: 70.25,
    selected: false,
    promos: [],
});
export const salesOfferProductSelfInstallTypeFactory = Factory.Sync.makeFactory({
    description: InstallTypeEnum.SELF_INSTALL,
    price: 0,
    mutuallyexclusive: '',
    priceexclvat: 0,
    selected: false,
    promos: [],
});
export const salesOfferCostFactory = Factory.Sync.makeFactory({
    name: 'cable-installation',
    price: 50,
    priceexclvat: 45,
    promotions: [],
    recurring: 0,
});
export const salesOfferProductFactory = Factory.Sync.makeFactory({
    omapiid: '87',
    correlationid: 'id',
    specurl: 'url/123',
    description: 'description',
    price: 100,
    priceexclvat: 89,
    options: [salesOfferProductOptionFactory.build()],
    optinproducts: [salesOfferProductOptinFactory.build()],
    productInfo: {},
    promos: [],
    installtypes: [salesOfferProductComfortInstallTypeFactory.build(), salesOfferProductSelfInstallTypeFactory.build()],
    costs: [salesOfferCostFactory.build()],
    streamingservices: [],
});
export const salesOfferStandaloneOptionsFactory = Factory.Sync.makeFactory({
    omapiid: '100',
    correlationid: 'id',
    specurl: 'url/100',
    description: 'description',
    price: 100,
    priceexclvat: 89,
    options: [],
    optinproducts: [salesOfferProductOptinFactory.build()],
    productInfo: {},
    promos: [salesOfferPromoFactory.build()],
    installtypes: [salesOfferProductComfortInstallTypeFactory.build(), salesOfferProductSelfInstallTypeFactory.build()],
    costs: [salesOfferCostFactory.build()],
    streamingservices: [],
});
export const salesOfferTestFactory = Factory.Sync.makeFactory({
    products: [salesOfferProductFactory.build()],
    setup: SalesOfferSetupModelFactory.build(),
    standaloneoptions: [],
});
export const salesOfferTestStandaloneOptionsFactory = Factory.Sync.makeFactory({
    products: [],
    setup: SalesOfferSetupModelFactory.build(),
    standaloneoptions: [salesOfferStandaloneOptionsFactory.build()],
});
export const salesOfferError = { error: { type: 'error' } };
//# sourceMappingURL=data:application/json;base64,