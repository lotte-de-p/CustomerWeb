import { SelfInstallTypeEnum } from '../enums/self-install-type.enum';
import { ConnectFivePriceFromFlowTypeUtil } from './connect-five-price-from-flow-type.util';
export class SalesOfferInstallTypeUtil {
    static getInstallType(type, installTypes) {
        return installTypes.find((installType) => installType.description === type);
    }
    static getInstallTypeForFlowType(type, installTypes, flowType) {
        const foundInstallType = this.getInstallType(type, installTypes);
        if (typeof foundInstallType === 'undefined') {
            return undefined;
        }
        const installType = JSON.parse(JSON.stringify(foundInstallType));
        installType.price = ConnectFivePriceFromFlowTypeUtil.connectFivePriceWithFlowTypeConsidered(flowType, installType);
        installType.promos.forEach((promo) => (promo.price = ConnectFivePriceFromFlowTypeUtil.connectFivePriceWithFlowTypeConsidered(flowType, promo)));
        return installType;
    }
    static getDeliveryOption(type, installType) {
        return installType?.options
            ? installType.options.find((installTypeOption) => installTypeOption?.description === type)
            : undefined;
    }
    static hasHomeDelivery(installType) {
        return !!installType.options?.some((installTypeOption) => installTypeOption?.description === SelfInstallTypeEnum.HOME_DELIVERY);
    }
    static hasPickup(installType) {
        return !!installType.options?.some((installTypeOption) => installTypeOption?.description === SelfInstallTypeEnum.PICKUP);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FsZXMtb2ZmZXItaW5zdGFsbC10eXBlLnV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL3V0aWxzL3NhbGVzLW9mZmVyLWluc3RhbGwtdHlwZS51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBSXRFLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBRTVGLE1BQU0sT0FBTyx5QkFBeUI7SUFDN0IsTUFBTSxDQUFDLGNBQWMsQ0FDMUIsSUFBcUIsRUFDckIsWUFBNEM7UUFFNUMsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsV0FBVyxLQUFLLElBQUksQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFTSxNQUFNLENBQUMseUJBQXlCLENBQ3JDLElBQXFCLEVBQ3JCLFlBQTRDLEVBQzVDLFFBQXNCO1FBRXRCLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDakUsSUFBSSxPQUFPLGdCQUFnQixLQUFLLFdBQVcsRUFBRSxDQUFDO1lBQzVDLE9BQU8sU0FBUyxDQUFDO1FBQ25CLENBQUM7UUFDRCxNQUFNLFdBQVcsR0FBaUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUMvRixXQUFXLENBQUMsS0FBSyxHQUFHLGdDQUFnQyxDQUFDLHNDQUFzQyxDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUNuSCxXQUFXLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FDeEIsQ0FBQyxLQUFzQixFQUFFLEVBQUUsQ0FDekIsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLGdDQUFnQyxDQUFDLHNDQUFzQyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUMzRyxDQUFDO1FBQ0YsT0FBTyxXQUFXLENBQUM7SUFDckIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxpQkFBaUIsQ0FDN0IsSUFBeUIsRUFDekIsV0FBeUM7UUFFekMsT0FBTyxXQUFXLEVBQUUsT0FBTztZQUN6QixDQUFDLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQ3RCLENBQUMsaUJBQTBDLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixFQUFFLFdBQVcsS0FBSyxJQUFJLENBQ3hGO1lBQ0gsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUNoQixDQUFDO0lBRU0sTUFBTSxDQUFDLGVBQWUsQ0FBQyxXQUF5QztRQUNyRSxPQUFPLENBQUMsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksQ0FDaEMsQ0FBQyxpQkFBaUIsRUFBRSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsV0FBVyxLQUFLLG1CQUFtQixDQUFDLGFBQWEsQ0FDNUYsQ0FBQztJQUNKLENBQUM7SUFFTSxNQUFNLENBQUMsU0FBUyxDQUFDLFdBQXlDO1FBQy9ELE9BQU8sQ0FBQyxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUNoQyxDQUFDLGlCQUFpQixFQUFFLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxXQUFXLEtBQUssbUJBQW1CLENBQUMsTUFBTSxDQUNyRixDQUFDO0lBQ0osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2FsZXNPZmZlclByb2R1Y3RJbnN0YWxsVHlwZSwgU2FsZXNPZmZlclByb21vIH0gZnJvbSAnLi4vbW9kZWxzL3Jlc3BvbnNlJztcbmltcG9ydCB7IFNlbGZJbnN0YWxsVHlwZUVudW0gfSBmcm9tICcuLi9lbnVtcy9zZWxmLWluc3RhbGwtdHlwZS5lbnVtJztcbmltcG9ydCB7IERlbGl2ZXJ5T3B0aW9uSW50ZXJmYWNlIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9kZWxpdmVyeS1vcHRpb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IEluc3RhbGxUeXBlRW51bSB9IGZyb20gJy4uL2VudW1zL29jYXBpLW1vdmUtb3JkZXIuZW51bSc7XG5pbXBvcnQgeyBGbG93VHlwZUVudW0gfSBmcm9tICcuLi9lbnVtcy9mbG93LXR5cGUuZW51bSc7XG5pbXBvcnQgeyBDb25uZWN0Rml2ZVByaWNlRnJvbUZsb3dUeXBlVXRpbCB9IGZyb20gJy4vY29ubmVjdC1maXZlLXByaWNlLWZyb20tZmxvdy10eXBlLnV0aWwnO1xuXG5leHBvcnQgY2xhc3MgU2FsZXNPZmZlckluc3RhbGxUeXBlVXRpbCB7XG4gIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFsbFR5cGUoXG4gICAgdHlwZTogSW5zdGFsbFR5cGVFbnVtLFxuICAgIGluc3RhbGxUeXBlczogU2FsZXNPZmZlclByb2R1Y3RJbnN0YWxsVHlwZVtdXG4gICk6IFNhbGVzT2ZmZXJQcm9kdWN0SW5zdGFsbFR5cGUgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBpbnN0YWxsVHlwZXMuZmluZCgoaW5zdGFsbFR5cGUpID0+IGluc3RhbGxUeXBlLmRlc2NyaXB0aW9uID09PSB0eXBlKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFsbFR5cGVGb3JGbG93VHlwZShcbiAgICB0eXBlOiBJbnN0YWxsVHlwZUVudW0sXG4gICAgaW5zdGFsbFR5cGVzOiBTYWxlc09mZmVyUHJvZHVjdEluc3RhbGxUeXBlW10sXG4gICAgZmxvd1R5cGU6IEZsb3dUeXBlRW51bVxuICApOiBTYWxlc09mZmVyUHJvZHVjdEluc3RhbGxUeXBlIHwgdW5kZWZpbmVkIHtcbiAgICBjb25zdCBmb3VuZEluc3RhbGxUeXBlID0gdGhpcy5nZXRJbnN0YWxsVHlwZSh0eXBlLCBpbnN0YWxsVHlwZXMpO1xuICAgIGlmICh0eXBlb2YgZm91bmRJbnN0YWxsVHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGluc3RhbGxUeXBlOiBTYWxlc09mZmVyUHJvZHVjdEluc3RhbGxUeXBlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShmb3VuZEluc3RhbGxUeXBlKSk7XG4gICAgaW5zdGFsbFR5cGUucHJpY2UgPSBDb25uZWN0Rml2ZVByaWNlRnJvbUZsb3dUeXBlVXRpbC5jb25uZWN0Rml2ZVByaWNlV2l0aEZsb3dUeXBlQ29uc2lkZXJlZChmbG93VHlwZSwgaW5zdGFsbFR5cGUpO1xuICAgIGluc3RhbGxUeXBlLnByb21vcy5mb3JFYWNoKFxuICAgICAgKHByb21vOiBTYWxlc09mZmVyUHJvbW8pID0+XG4gICAgICAgIChwcm9tby5wcmljZSA9IENvbm5lY3RGaXZlUHJpY2VGcm9tRmxvd1R5cGVVdGlsLmNvbm5lY3RGaXZlUHJpY2VXaXRoRmxvd1R5cGVDb25zaWRlcmVkKGZsb3dUeXBlLCBwcm9tbykpXG4gICAgKTtcbiAgICByZXR1cm4gaW5zdGFsbFR5cGU7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGdldERlbGl2ZXJ5T3B0aW9uKFxuICAgIHR5cGU6IFNlbGZJbnN0YWxsVHlwZUVudW0sXG4gICAgaW5zdGFsbFR5cGU6IFNhbGVzT2ZmZXJQcm9kdWN0SW5zdGFsbFR5cGVcbiAgKTogRGVsaXZlcnlPcHRpb25JbnRlcmZhY2UgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBpbnN0YWxsVHlwZT8ub3B0aW9uc1xuICAgICAgPyBpbnN0YWxsVHlwZS5vcHRpb25zLmZpbmQoXG4gICAgICAgICAgKGluc3RhbGxUeXBlT3B0aW9uOiBEZWxpdmVyeU9wdGlvbkludGVyZmFjZSkgPT4gaW5zdGFsbFR5cGVPcHRpb24/LmRlc2NyaXB0aW9uID09PSB0eXBlXG4gICAgICAgIClcbiAgICAgIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBoYXNIb21lRGVsaXZlcnkoaW5zdGFsbFR5cGU6IFNhbGVzT2ZmZXJQcm9kdWN0SW5zdGFsbFR5cGUpOiBib29sZWFuIHtcbiAgICByZXR1cm4gISFpbnN0YWxsVHlwZS5vcHRpb25zPy5zb21lKFxuICAgICAgKGluc3RhbGxUeXBlT3B0aW9uKSA9PiBpbnN0YWxsVHlwZU9wdGlvbj8uZGVzY3JpcHRpb24gPT09IFNlbGZJbnN0YWxsVHlwZUVudW0uSE9NRV9ERUxJVkVSWVxuICAgICk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGhhc1BpY2t1cChpbnN0YWxsVHlwZTogU2FsZXNPZmZlclByb2R1Y3RJbnN0YWxsVHlwZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhIWluc3RhbGxUeXBlLm9wdGlvbnM/LnNvbWUoXG4gICAgICAoaW5zdGFsbFR5cGVPcHRpb24pID0+IGluc3RhbGxUeXBlT3B0aW9uPy5kZXNjcmlwdGlvbiA9PT0gU2VsZkluc3RhbGxUeXBlRW51bS5QSUNLVVBcbiAgICApO1xuICB9XG59XG4iXX0=