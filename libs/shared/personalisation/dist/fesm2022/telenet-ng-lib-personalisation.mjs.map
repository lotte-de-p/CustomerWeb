{"version":3,"file":"telenet-ng-lib-personalisation.mjs","sources":["../../src/sales/models/sales-data.model.ts","../../src/sales/models/sales-data.type.ts","../../src/sales/mappers/sales-data.mapper.ts","../../src/sales/service/message-bus.service.ts","../../src/sales/service/sales-data.service.ts","../../src/pega/nba/v1/models/nba.model.ts","../../src/pega/nba/v1/models/nba-list.model.ts","../../src/pega/nba/v1/models/selling-argument.model.ts","../../src/pega/nba/v1/mappers/nba-list.mapper.ts","../../src/pega/nba/v1/interfaces/request-param.ts","../../src/pega/nba/v1/models/nba-request-parameters.ts","../../src/pega/nba/constants/nba.constant.ts","../../src/pega/nba/v1/services/pega.service.ts","../../src/pega/nba/v1/models/product.interface.testfactory.ts","../../src/pega/services/pega-store.service.ts","../../src/customer-input/models/customer-input-store.model.ts","../../src/customer-input/services/customer-input.store.service.ts","../../src/telenet-ng-lib-personalisation.ts"],"sourcesContent":["import { isEmpty } from 'lodash-es';\nimport { SalesDataType } from './sales-data.type';\n\nexport interface RawSalesData {\n  products: string[];\n  options: string[];\n  optins: string[];\n}\n\nexport class SalesData {\n  private offers: SalesDataOffer[];\n\n  constructor(salesData?: SalesData) {\n    Object.assign(this, salesData);\n  }\n\n  hasOffers(): boolean {\n    return !isEmpty(this.offers);\n  }\n\n  setOffers(offers: SalesDataOffer[]) {\n    this.offers = offers;\n  }\n\n  getOffers(): SalesDataOffer[] {\n    return this.offers;\n  }\n\n  flatten(): SalesData {\n    if (!this.offers) {\n      return this;\n    }\n    const offers = this.offers.flatMap((offer: SalesDataOffer) => SalesDataOffer.flattenSalesDataOffer(offer));\n    const salesData: SalesData = new SalesData();\n    salesData.setOffers(offers);\n    return salesData;\n  }\n}\n\nexport class SalesDataOffer {\n  id: string;\n  type: SalesDataType;\n  offers?: SalesDataOffer[];\n  amountOfLimitedSims?: number;\n\n  static flattenSalesDataOffer(salesDataOffer: SalesDataOffer): SalesDataOffer[] {\n    const salesDataOfferWithoutOffers: SalesDataOffer = Object.assign(new SalesDataOffer(), salesDataOffer, {\n      offers: [],\n    });\n    return [salesDataOfferWithoutOffers].concat(\n      (salesDataOffer?.offers ?? []).flatMap((offer: SalesDataOffer) => SalesDataOffer.flattenSalesDataOffer(offer))\n    );\n  }\n\n  static of(id: string, type: SalesDataType, offers?: SalesDataOffer[]): SalesDataOffer {\n    const salesDataOffer: SalesDataOffer = new SalesDataOffer();\n    salesDataOffer.id = id;\n    salesDataOffer.type = type;\n    salesDataOffer.offers = offers;\n    return salesDataOffer;\n  }\n}\n","export enum SalesDataType {\n  TYPE_PRODUCT = 'Product',\n  TYPE_OPTION = 'Option',\n  TYPE_OPTION_DWN = 'OPTION',\n  TYPE_STREAMING_SERVICE = 'StreamingService',\n  TYPE_OPTIN = 'Optin',\n  TYPE_MOBILE = 'Mobile',\n  TYPE_SMARTPHONE = 'Smartphone',\n  TYPE_BUNDLE = 'BUNDLE',\n  TYPE_OTT_LINE = 'OTT LINE',\n  TYPE_IDTV_LINE = 'IDTV LINE',\n  TYPE_DATA_ONLY_MOBILE_LINE = 'DATA ONLY MOBILE LINE',\n  TYPE_FIXED_LINE = 'FIXED LINE',\n  TYPE_MOBILE_LINE = 'MOBILE LINE',\n  TYPE_TELEPHONE = 'TELEPHONE',\n  TYPE_INTERNET = 'INTERNET',\n  TYPE_DTV = 'DTV',\n  TYPE_INTERNET_BASE = 'Internet',\n  TYPE_DTV_BASE = 'Dtv',\n  TYPE_TV_BOX_BASE = 'TV_BOX',\n}\n\nexport enum SalesDataProductType {\n  TYPE_PRODUCT = 'Product',\n  TYPE_MOBILE = 'Mobile',\n  TYPE_BUNDLE = 'BUNDLE',\n  TYPE_INTERNET = 'INTERNET',\n  TYPE_TELEPHONE = 'TELEPHONE',\n  TYPE_DTV = 'DTV',\n  TYPE_IDTV_LINE = 'IDTV LINE',\n  TYPE_OTT_LINE = 'OTT LINE',\n}\n\nexport enum SalesDataOptionType {\n  TYPE_OPTION = 'Option',\n  TYPE_OPTION_DWN = 'OPTION',\n}\n\nexport enum SalesDataOptinType {\n  TYPE_OPTIN = 'Optin',\n  TYPE_DATA_ONLY_MOBILE_LINE = 'DATA ONLY MOBILE LINE',\n  TYPE_FIXED_LINE = 'FIXED LINE',\n  TYPE_MOBILE_LINE = 'MOBILE LINE',\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'lodash-es';\nimport { RawSalesData, SalesData, SalesDataOffer } from '../models/sales-data.model';\nimport { SalesDataType } from '../models/sales-data.type';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SalesDataMapper {\n  public mapSalesData(rawSalesData: RawSalesData): SalesData {\n    const salesData = new SalesData();\n    salesData.setOffers(map(rawSalesData.products, (id) => this.mapSalesDataOffer(id, rawSalesData)));\n    return salesData;\n  }\n\n  private mapSalesDataOffer(id: string, rawSalesData: RawSalesData): SalesDataOffer {\n    return {\n      id,\n      type: SalesDataType.TYPE_PRODUCT,\n      offers: this.mapSalesDataSubOffers(rawSalesData),\n    } as SalesDataOffer;\n  }\n\n  private mapSalesDataSubOffers(rawSalesData: RawSalesData): SalesDataOffer[] {\n    return [\n      ...this.mapSubOffers(rawSalesData.options, SalesDataType.TYPE_OPTION),\n      ...this.mapSubOffers(rawSalesData.optins, SalesDataType.TYPE_OPTIN),\n    ];\n  }\n\n  private mapSubOffers(subProducts: string[], type: SalesDataType): SalesDataOffer[] {\n    return map(subProducts, (id) => {\n      return {\n        id,\n        type,\n      } as SalesDataOffer;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n// this service is used by ONE configurator to sync state between monorepo and tcp.angular (https://jira.rel.apps.telenet.be/browse/DIGSALE1TM-1140)\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageBusService {\n  messageBus$ = new ReplaySubject<Message>(1_000);\n}\n\nexport interface Message {\n  type: string;\n  payloadAsJson: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { JsonUrlService } from '@telenet/ng-lib-page';\nimport { RawSalesData, SalesData } from '../models/sales-data.model';\nimport { SalesDataMapper } from '../mappers/sales-data.mapper';\n\n@Injectable({ providedIn: 'root' })\nexport class SalesDataService {\n  constructor(\n    private readonly jsonUrlService: JsonUrlService,\n    private readonly salesDataMapper: SalesDataMapper\n  ) {}\n\n  public getCompressedSalesData(salesData: SalesData): Observable<string> {\n    return this.jsonUrlService.compress(salesData);\n  }\n\n  public getDecompressedSalesData(compressedSalesData: string): Observable<SalesData> {\n    if (compressedSalesData) {\n      return this.jsonUrlService.decompress(compressedSalesData).pipe(\n        // @ts-ignore\n        catchError(() => of(new SalesData())),\n        map((salesData: SalesData) => {\n          return new SalesData(salesData);\n        })\n      );\n    }\n    return of(new SalesData());\n  }\n\n  public mapSalesData(rawSalesData: RawSalesData): SalesData {\n    return this.salesDataMapper.mapSalesData(rawSalesData);\n  }\n}\n","import { SellingArgument } from './selling-argument.model';\nimport { filter, isNil, map } from 'lodash-es';\nimport {\n  RawSalesData,\n  SalesData,\n  SalesDataOffer,\n  SalesDataOptinType,\n  SalesDataOptionType,\n  SalesDataProductType,\n} from '../../../../sales';\n\nexport class NBA {\n  public readonly rank: string;\n  public readonly group: string;\n  public readonly issue: string;\n  public readonly name: string;\n  public readonly treatment: string;\n  public readonly campaignId: string;\n  public readonly productType: string;\n  public readonly sellingArguments: readonly SellingArgument[];\n  public readonly sdata: SalesData;\n\n  constructor(nba?: NBA) {\n    if (nba) {\n      Object.assign(this, nba);\n      this.sdata = new SalesData(nba.sdata);\n    }\n  }\n\n  hasTreatment(): boolean {\n    return this.treatment ? this.treatment.length > 0 : false;\n  }\n\n  hasProductType(): boolean {\n    return this.productType ? this.productType.length > 0 : false;\n  }\n\n  isSalesDataEmpty(): boolean {\n    return !this.sdata || !this.sdata.hasOffers();\n  }\n\n  getRawSalesData(): RawSalesData {\n    if (this.isSalesDataEmpty()) {\n      return {\n        products: [],\n        options: [],\n        optins: [],\n      };\n    }\n\n    const offers = this.sdata.flatten().getOffers();\n\n    return {\n      products: this.extractProductIds(offers),\n      options: this.extractOptionIds(offers),\n      optins: this.extractOptinIds(offers),\n    };\n  }\n\n  private extractProductIds(offers: SalesDataOffer[]): string[] {\n    return [...this.extractFlatOmapiIdList(this.getNBOElementByType(offers, Object.values(SalesDataProductType)))];\n  }\n\n  private extractOptionIds(offers: SalesDataOffer[]): string[] {\n    return [...this.extractFlatOmapiIdList(this.getNBOElementByType(offers, Object.values(SalesDataOptionType)))];\n  }\n\n  private extractOptinIds(offers: SalesDataOffer[]): string[] {\n    return [...this.extractFlatOmapiIdList(this.getNBOElementByType(offers, Object.values(SalesDataOptinType)))];\n  }\n\n  private getNBOElementByType(products: SalesDataOffer[], types: string[]): SalesDataOffer[] {\n    return products.filter((product) => product && types.includes(product.type));\n  }\n\n  private extractFlatOmapiIdList(products: SalesDataOffer[]): string[] {\n    return map(\n      filter(products, (p) => !isNil(p)),\n      (o) => o.id\n    );\n  }\n}\n","import { ContextHubModelInterface } from '@telenet/ng-lib-page';\nimport { NBA } from './nba.model';\n\nexport class NBAList implements ContextHubModelInterface<NBAList> {\n  public readonly customerNumber: string;\n  public readonly interactionId: string;\n  public readonly channel: string;\n  public readonly containerName: string;\n  public readonly v: string;\n  public readonly actions: readonly NBA[] = [];\n  public readonly isSuccess: boolean = false;\n\n  constructor(nbaList?: unknown) {\n    if (nbaList) {\n      this.isSuccess = true;\n      Object.assign(this, nbaList);\n      if (nbaList['actions'] && nbaList['actions'][0]) {\n        this.actions = nbaList['actions'].map((nba: NBA) => new NBA(nba));\n      }\n    }\n  }\n\n  enrich(json: unknown): NBAList {\n    return new NBAList(json);\n  }\n\n  getNBA(): NBA {\n    return this.actions && this.actions[0];\n  }\n}\n","export class SellingArgument {\n  constructor(\n    public readonly key: string,\n    public readonly rank: number\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Builder, MapperInterface } from '@telenet/ng-lib-shared';\nimport { NBAList } from '../models/nba-list.model';\nimport {\n  RawNBAInterface,\n  RawNBAListInterface,\n  RawNBAResponseInterface,\n  RawSellingArgument,\n} from '../interfaces/raw-nba-list.interface';\nimport { SellingArgument } from '../models/selling-argument.model';\nimport { NBA } from '../models/nba.model';\nimport { SalesData } from '../../../../sales';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NBAListMapper implements MapperInterface<RawNBAResponseInterface, NBAList> {\n  toModel(response: RawNBAResponseInterface): NBAList {\n    if (response && response.nextBestActions) {\n      return this.createNBAListResponse(response.nextBestActions);\n    }\n\n    return new NBAList();\n  }\n\n  public createNBAListResponse(rawNbaList: RawNBAListInterface): NBAList {\n    return (\n      Builder(NBAList)\n        // @ts-ignore\n        .actions(this.createNBAs(rawNbaList.actions))\n        .customerNumber(rawNbaList.customerNumber)\n        .interactionId(rawNbaList.interactionId)\n        .channel(rawNbaList.channel)\n        .containerName(rawNbaList.containerName)\n        .v(rawNbaList.v)\n        .isSuccess(true)\n        .build()\n    );\n  }\n\n  private createNBAs(rawActions: RawNBAInterface[]): NBA[] {\n    if (!rawActions) {\n      return [new NBA()];\n    }\n\n    return rawActions.map((rawAction) => {\n      return (\n        Builder(NBA)\n          // @ts-ignore\n          .sdata(new SalesData(rawAction.sdata))\n          .rank(rawAction.rank)\n          .group(rawAction.group)\n          .issue(rawAction.issue)\n          .name(rawAction.name)\n          .treatment(rawAction.treatment)\n          .campaignId(rawAction.campaignId)\n          .productType(rawAction.productType)\n          .sellingArguments(this.createSellingArguments(rawAction.sellingArguments))\n          .build()\n      );\n    });\n  }\n\n  private createSellingArguments(rawSellingArguments: RawSellingArgument[]): SellingArgument[] {\n    return (\n      rawSellingArguments &&\n      rawSellingArguments.map((rawSellingArgument) => {\n        return new SellingArgument(rawSellingArgument.key, rawSellingArgument.rank);\n      })\n    );\n  }\n}\n","export class RequestParam {\n  constructor(\n    public key: string,\n    public value: string\n  ) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\nexport enum Param {\n  sdata = 'sdata',\n  src = 'src',\n  cid = 'cid',\n  sa = 'sa',\n  did = 'did',\n  tid = 'tid',\n  pt = 'pt',\n  aid = 'aid',\n  v = 'v',\n  t = 't',\n}\n","import { forkJoin, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Param, RequestParam } from '../interfaces/request-param';\nimport { Injectable } from '@angular/core';\nimport { JsonUrlService } from '@telenet/ng-lib-page';\nimport { NBAList } from './nba-list.model';\nimport { NBA } from './nba.model';\nimport { SellingArgument } from './selling-argument.model';\nimport { SalesDataService } from '../../../../sales/service/sales-data.service';\nimport { Builder } from '@telenet/ng-lib-shared';\nimport { SalesData } from '../../../../sales/models/sales-data.model';\n\n@Injectable({ providedIn: 'root' })\nexport class NBARequestParameters {\n  private readonly nbaRequestParameters: RequestParam[];\n  private requestObservables: Observable<unknown>[];\n\n  constructor(\n    private readonly salesDataService: SalesDataService,\n    private readonly jsonUrlService: JsonUrlService\n  ) {\n    const url = window.location.href;\n    this.nbaRequestParameters = Object.keys(Param)\n      .map((param) => {\n        const value = new URL(url).searchParams.get(param);\n        return value ? new RequestParam(param, value) : undefined;\n      })\n      .filter((el) => el !== undefined) as RequestParam[];\n  }\n\n  public toNBAList(): Observable<NBAList> {\n    if (this.getRequestParamValue(Param.t) !== 'nbo') {\n      return of(new NBAList());\n    } else {\n      this.requestObservables = [];\n      this.requestObservables.push(\n        this.salesDataService.getDecompressedSalesData(this.getRequestParamValue(Param.sdata))\n      );\n      if (this.getRequestParamValue(Param.tid)) {\n        this.requestObservables.push(\n          this.deCompressRequestParamValue(this.getRequestParamValue(Param.tid)).pipe(\n            map((treatmentId: unknown) => treatmentId)\n          )\n        );\n      }\n      if (this.getRequestParamValue(Param.pt)) {\n        this.requestObservables.push(\n          this.deCompressRequestParamValue(this.getRequestParamValue(Param.pt)).pipe(\n            map((productType: unknown) => productType)\n          )\n        );\n      }\n      if (this.getRequestParamValue(Param.aid)) {\n        this.requestObservables.push(\n          this.deCompressRequestParamValue(this.getRequestParamValue(Param.aid)).pipe(map((name: unknown) => name))\n        );\n      }\n      return this.constructNbaListFromRequestParam();\n    }\n  }\n\n  private constructNbaListFromRequestParam(): Observable<NBAList> {\n    return forkJoin(this.requestObservables).pipe(\n      map(([salesDataDecompressed, treatmentId, productType, name]) => {\n        const nba = Builder(NBA)\n          // @ts-ignore\n          .sdata(salesDataDecompressed as SalesData)\n          .sellingArguments(this.createSellingArguments(this.getRequestParamValueAsArray(Param.sa)))\n          .campaignId(this.getRequestParamValue(Param.cid))\n          .treatment(treatmentId ? (treatmentId as string)['tid'] : '')\n          .productType(productType ? (productType as string)['pt'] : '')\n          .name(name ? (name as string)['aid'] : '')\n          .build();\n\n        return (\n          Builder(NBAList)\n            // @ts-ignore\n            .actions([nba])\n            .channel(this.getRequestParamValue(Param.src))\n            .interactionId(this.getRequestParamValue(Param.did))\n            .v(this.getRequestParamValue(Param.v))\n            .isSuccess(true)\n            .build()\n        );\n      })\n    );\n  }\n\n  private getRequestParam(key: Param): RequestParam {\n    return this.nbaRequestParameters.find((param) => param.key === key) as RequestParam;\n  }\n\n  private getRequestParamValue(key: Param): string {\n    const requestParam = this.getRequestParam(key);\n    return requestParam ? requestParam.value : '';\n  }\n\n  private getRequestParamValueAsArray(key: Param): string[] {\n    const requestParam = this.getRequestParam(key);\n    return requestParam ? requestParam.value.split(',') : [];\n  }\n\n  private createSellingArguments(sa: string[]): SellingArgument[] {\n    let rank = 1;\n    const sellingArguments: SellingArgument[] = [];\n    sa.forEach((saParam) => sellingArguments.push(new SellingArgument(saParam, rank++)));\n\n    return sellingArguments;\n  }\n\n  private deCompressRequestParamValue(paramValue: string): Observable<unknown> {\n    return this.jsonUrlService.decompress(paramValue) as Observable<unknown>;\n  }\n}\n","export class NBAConstants {\n  static API_VERSION_V1 = '/v1';\n  static CONTEXT = '/nba-service';\n  static PEGA_NBA_ENDPOINT = '/next-best-actions';\n  static SERVICE_PREFIX = '/public/api';\n  static CHANNEL = 'Web';\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { iif, Observable, of } from 'rxjs';\nimport { catchError, mergeMap } from 'rxjs/operators';\nimport { NBARequestParameters } from '../models/nba-request-parameters';\nimport { NBAList } from '../models/nba-list.model';\nimport { LoginService, OcapiCallConfig, OcapiService } from '@telenet/ng-lib-ocapi';\nimport { NBAListMapper } from '../mappers/nba-list.mapper';\nimport { NBAConstants } from '../../constants/nba.constant';\nimport { ContexthubConstants } from '@telenet/ng-lib-page';\nimport { Log, LogFactory } from '@telenet/ng-lib-shared';\n\nexport interface ContextHubConstants {\n  ContextHub: {\n    Constants: {\n      PROP_ENABLE_PEGA_PERSONALIZATION: string;\n    };\n  };\n}\n\n@Injectable({ providedIn: 'root' })\nexport class PegaService {\n  private readonly log: Log = LogFactory.createLogger(PegaService);\n\n  constructor(\n    @Inject('Window') private readonly window: ContextHubConstants,\n    private readonly nbaRequestParameters: NBARequestParameters,\n    private readonly nbaListMapper: NBAListMapper,\n    private readonly ocapiService: OcapiService,\n    private readonly loginService: LoginService\n  ) {}\n\n  public getNBAList(): Observable<NBAList> {\n    const nbaFromRequest$ = this.getNBAFromRequest();\n    return nbaFromRequest$.pipe(\n      mergeMap((requestNbaList: NBAList) =>\n        iif(() => !!requestNbaList.getNBA(), nbaFromRequest$, this.getNBAFromPegaAPI())\n      )\n    );\n  }\n\n  private getNBAFromRequest(): Observable<NBAList> {\n    return this.nbaRequestParameters.toNBAList();\n  }\n\n  private getNBAFromPegaAPI(): Observable<NBAList> {\n    const enablePegaPersonalisation = this.window['ContextHub']['Constants']['PROP_ENABLE_PEGA_PERSONALIZATION'];\n    return enablePegaPersonalisation === 'true' ? this.getAuthenticatedPegaNBAList() : of(new NBAList());\n  }\n\n  private getAuthenticatedPegaNBAList(): Observable<NBAList> {\n    return this.loginService\n      .getLoginDetails()\n      .pipe(mergeMap((loginDetails) => (loginDetails.isLoggedIn() ? this.getPegaNBAList() : of(new NBAList()))));\n  }\n\n  private getPegaNBAList(): Observable<NBAList> {\n    const endpoint = this.getServiceURI(NBAConstants.PEGA_NBA_ENDPOINT);\n    const ocapiCallConfig = new OcapiCallConfig(\n      ContexthubConstants.MESSAGE_GROUP_NBALIST,\n      endpoint,\n      this.nbaListMapper\n    );\n\n    return this.ocapiService.doGet(ocapiCallConfig).pipe(catchError((err: unknown) => this.handlePegaNbaError(err)));\n  }\n\n  private handlePegaNbaError(err: unknown) {\n    this.log.logError('Error while fetching NBA list from Pega.', err);\n\n    return of(new NBAList());\n  }\n\n  private getServiceURI(endpoint: string): string {\n    return NBAConstants.SERVICE_PREFIX.concat(NBAConstants.CONTEXT)\n      .concat(NBAConstants.API_VERSION_V1)\n      .concat(endpoint)\n      .concat('?channel=')\n      .concat(NBAConstants.CHANNEL);\n  }\n}\n","import * as Factory from 'factory.ts';\nimport { SalesDataOffer, SalesDataType } from '../../../../sales';\n\nexport const productTestFactory = Factory.Sync.makeFactory<SalesDataOffer>({\n  id: '36860',\n  offers: [],\n  type: SalesDataType.TYPE_PRODUCT,\n});\n","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport {\n  ContexthubConstants,\n  ContextHubGenericStoreService,\n  ContextHubStoreConfigInterface,\n} from '@telenet/ng-lib-page';\nimport { NBAList } from '../nba/v1/models/nba-list.model';\nimport { PegaService } from '../nba/v1/services/pega.service';\nimport { Builder } from '@telenet/ng-lib-shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PegaStoreService extends ContextHubGenericStoreService<NBAList> {\n  constructor(\n    _ngZone: NgZone,\n    @Inject('Window') window: Window,\n    private readonly pegaService: PegaService,\n    protected dataLayerService: DataLayerService\n  ) {\n    super(\n      _ngZone,\n      window,\n      dataLayerService,\n      Builder<ContextHubStoreConfigInterface<NBAList>>()\n        .storeModel(new NBAList())\n        .storeName(ContexthubConstants.STORE_NAME_PEGA)\n        .serviceName('PegaStoreService')\n        .build()\n    );\n  }\n\n  onLoadData(): Observable<NBAList> {\n    return this.pegaService.getNBAList();\n  }\n}\n","import { ContextHubModelInterface } from '@telenet/ng-lib-page';\n\nexport class CustomerInputStore implements ContextHubModelInterface<CustomerInputStore> {\n  public readonly isSuccess: boolean;\n\n  constructor(customerInputStore?: CustomerInputStore) {\n    this.isSuccess = true;\n    if (customerInputStore) {\n      Object.assign(this, customerInputStore);\n    }\n  }\n\n  enrich(objStore: CustomerInputStore): CustomerInputStore {\n    return new CustomerInputStore(objStore);\n  }\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport {\n  ContexthubConstants,\n  ContextHubGenericStoreService,\n  ContextHubStoreConfigInterface,\n} from '@telenet/ng-lib-page';\nimport { Builder } from '@telenet/ng-lib-shared';\nimport { CustomerInputStore } from '../models/customer-input-store.model';\n\n@Injectable({ providedIn: 'root' })\nexport class CustomerInputStoreService extends ContextHubGenericStoreService<CustomerInputStore> {\n  constructor(\n    _ngZone: NgZone,\n    @Inject('Window') window: Window,\n    protected dataLayerService: DataLayerService\n  ) {\n    super(\n      _ngZone,\n      window,\n      dataLayerService,\n      Builder<ContextHubStoreConfigInterface<CustomerInputStore>>()\n        .storeModel(new CustomerInputStore())\n        .storeName('customerinput')\n        .serviceName('CustomerInputStoreService')\n        .build()\n    );\n  }\n\n  enrichStoreData(fieldName: string, fieldData: unknown): void {\n    const customerInputStoreData = this.#getStoreData();\n\n    if (customerInputStoreData) {\n      customerInputStoreData[fieldName] = fieldData;\n      this.#updateStoreData(customerInputStoreData);\n    } else {\n      console.error('Store data not found');\n    }\n  }\n\n  #updateStoreData(storeData: unknown): void {\n    const store: CustomerInputStore = new CustomerInputStore();\n\n    Object.assign(store, storeData);\n\n    this.updateStoreData(store);\n  }\n\n  #getStoreData(): CustomerInputStore | undefined {\n    const contextHub = this.window[ContexthubConstants.CONTEXTHUB];\n\n    return contextHub?.getStore(this.storeConfig.storeName)?.getData();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["map","i2.SalesDataMapper","i1.SalesDataService","i2","i1.NBARequestParameters","i2.NBAListMapper","i1.PegaService","i1"],"mappings":"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"}