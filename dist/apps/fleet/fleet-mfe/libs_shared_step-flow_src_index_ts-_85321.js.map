{"version":3,"file":"libs_shared_step-flow_src_index_ts-_85321.js","mappings":"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","sources":["./libs/shared/step-flow/src/lib/factories/index.ts","./libs/shared/step-flow/src/lib/factories/step.factory.ts","./libs/shared/step-flow/src/lib/factories/template.factory.ts","./libs/shared/step-flow/src/lib/index.ts","./libs/shared/step-flow/src/lib/interfaces/index.ts","./libs/shared/step-flow/src/lib/interfaces/step-decision.interface.ts","./libs/shared/step-flow/src/lib/navigation-bar/index.ts","./libs/shared/step-flow/src/lib/navigation-bar/navigation-bar-next-label.enum.ts","./libs/shared/step-flow/src/lib/navigation-bar/navigation-bar.component.ts","./libs/shared/step-flow/src/lib/navigation-bar/navigation-bar.component.html","./libs/shared/step-flow/src/lib/step-container/directives/step-host.directive.ts","./libs/shared/step-flow/src/lib/step-container/index.ts","./libs/shared/step-flow/src/lib/step-container/step-container.component.ts","./libs/shared/step-flow/src/lib/step-container/step-container.component.html","./libs/shared/step-flow/src/lib/step-container/step-container.directive.ts","./libs/shared/step-flow/src/lib/step-flow-lib.module.ts","./libs/shared/step-flow/src/lib/step.builder.ts","./libs/shared/step-flow/src/lib/step.enum.ts","./libs/shared/step-flow/src/lib/step.model.ts","./libs/shared/step-flow/src/lib/store/index.ts","./libs/shared/step-flow/src/lib/store/step-flow.actions.ts","./libs/shared/step-flow/src/lib/store/step-flow.state.ts","./libs/shared/step-flow/src/lib/store/step-flow.util.ts"],"sourcesContent":["export * from './step.factory';\nexport * from './template.factory';\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { StepFlowConfig } from '../interfaces/step-flow-config.interface';\nimport { Step } from '../step.model';\nimport { StepConfig } from '../interfaces/step-config.interface';\nimport { instanceOfStepDecision, StepDecision } from '../interfaces/step-decision.interface';\nimport { StepBuilder } from '../step.builder';\nimport { SetCurrentDecisionOnStepFlowConfig } from '../store/step-flow.actions';\nimport { TemplateFactory } from './template.factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StepFactory {\n  constructor(private readonly templateFactory: TemplateFactory) {}\n\n  createFlow(store: Store, stepFlowConfig: StepFlowConfig): Step[] {\n    let steps: Step[] = [];\n    stepFlowConfig.steps.forEach((stepConfig: StepConfig | StepDecision) => {\n      if (instanceOfStepDecision(stepConfig)) {\n        steps = steps.concat(this.decideFlow(store, stepConfig as StepDecision));\n      } else {\n        steps.push(this.createStep(stepConfig as StepConfig));\n      }\n    });\n    return steps;\n  }\n\n  createStep(stepConfig: StepConfig) {\n    const stepBuilder = StepBuilder.builder(stepConfig.key)\n      .withLayoutOptions(stepConfig.layoutOptions)\n      .withAnalyticsOptions(stepConfig.analyticsOptions)\n      .withComponent(stepConfig.component)\n      .withImage(stepConfig.imagePath);\n    this.templateFactory.determineTemplate(stepBuilder, stepConfig);\n    if (stepConfig.isFinalState) {\n      stepBuilder.withFinalState();\n    }\n    return stepBuilder.build();\n  }\n\n  decideFlow(store: Store, stepDecision: StepDecision): Step[] {\n    const decidedFlow = stepDecision.decisionFunction(\n      store,\n      stepDecision.possibleResults,\n      stepDecision.currentDecision\n    );\n    store.dispatch(new SetCurrentDecisionOnStepFlowConfig(stepDecision, decidedFlow));\n    if (stepDecision.currentDecision !== decidedFlow && typeof decidedFlow.initFlowAction === 'function') {\n      decidedFlow.initFlowAction(store);\n    }\n    return this.createFlow(store, decidedFlow);\n  }\n}\n","import { StepBuilder } from '../step.builder';\nimport { StepConfig } from '../interfaces/step-config.interface';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class TemplateFactory {\n  determineTemplate(_stepBuilder: StepBuilder, _stepConfig: StepConfig): void {\n    // default is empty\n  }\n}\n","export * from './factories';\nexport * from './interfaces';\nexport * from './step-container';\nexport * from './store';\nexport * from './step.enum';\nexport * from './step.model';\nexport * from './step-flow-lib.module';\nexport * from './step-layout-options.interface';\nexport * from './step.builder';\nexport * from './navigation-bar';\n","export * from './author-configuration.interface';\nexport * from './step-analytics-options.interface';\nexport * from './step-config.interface';\nexport * from './step-decision.interface';\nexport * from './step-flow-analytics-config.interface';\nexport * from './step-flow-config.interface';\nexport * from './step-view-analytics-event.interface';\n","import { Store } from '@ngxs/store';\nimport { StepFlowConfig } from './step-flow-config.interface';\nimport { StepConfig } from './step-config.interface';\n\nexport type StepDecisionType = (\n  store: Store,\n  possibleResults: StepFlowConfig[],\n  currentDecision?: StepFlowConfig\n) => StepFlowConfig;\n\nexport interface StepDecision {\n  currentDecision?: StepFlowConfig;\n  decisionFunction: StepDecisionType;\n  possibleResults: StepFlowConfig[];\n}\n\nexport function instanceOfStepDecision(stepConfig: StepConfig | StepDecision) {\n  return 'decisionFunction' in stepConfig;\n}\n","export * from './navigation-bar.component';\nexport * from './navigation-bar-next-label.enum';\n","export enum NavigationBarNextLabelEnum {\n  START = 'ng.step-flow.start-step-label',\n  NEXT = 'ng.step-flow.next-step-label',\n  FINAL = 'ng.step-flow.close-label',\n  CONFIRM = 'ng.step-flow.confirm-label',\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { FormErrorService } from '@telenet/ng-lib-form';\nimport { Store } from '@ngxs/store';\nimport { NavigationBarNextLabelEnum } from './navigation-bar-next-label.enum';\nimport { GoToNextStepAction, GoToPreviousStepAction, StepFlowState, StepFlowUtil } from '../store';\nimport { Step } from '../step.model';\nimport { take, tap } from 'rxjs/operators';\nimport { LoaderData, LoaderService } from '@telenet/ng-lib-page';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-step-navigation-bar-monorepo',\n  templateUrl: './navigation-bar.component.html',\n})\nexport class NavigationBarComponent implements OnInit {\n  @Input() dynamicShadow: boolean;\n  @Input() showStepCounter: boolean;\n  @Input() showStepProgressBar: boolean;\n  @Input() showSalesContactNumber: boolean;\n  @Input() styling: 'default' | 'buttons' = 'default';\n  @Input() buttonTextOverride: string;\n  @Input() messageGroup = '';\n  currentStep: Step;\n  isConfirmationStep: boolean;\n  stepCount: number;\n  currentStepNumber: number;\n  progressPercentage: string;\n  hasNextStep = false;\n  hasPreviousStep = false;\n  previousStepDisabled = false;\n  isLoading = false;\n  nextStepLabel: NavigationBarNextLabelEnum = NavigationBarNextLabelEnum.START;\n  alternativeFirstStep = false;\n  buttonTypeOverride: NavigationBarNextLabelEnum;\n\n  constructor(\n    private readonly store: Store,\n    private readonly formErrorService: FormErrorService,\n    private readonly loaderService: LoaderService,\n    private readonly changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.store\n      .select(StepFlowState.currentStep)\n      .pipe(\n        untilDestroyed(this),\n        tap((currentStep?: Step) => {\n          if (currentStep) {\n            this.alternativeFirstStep = currentStep.asAlternativeFirstStep;\n          }\n        })\n      )\n      .subscribe((currentStep?: Step) => {\n        if (!currentStep) {\n          throw Error('Could not initialise stepper navigation bar');\n        } else {\n          this.currentStep = currentStep;\n        }\n        this.isConfirmationStep = currentStep.isConfirm();\n        const steps = this.store.selectSnapshot(StepFlowState.steps);\n        this.stepCount = StepFlowUtil.getStepCount(steps);\n        this.currentStepNumber = StepFlowUtil.getStepIndex(currentStep, steps) + 1;\n        this.hasNextStep = StepFlowUtil.hasNextStep(currentStep, steps);\n        this.hasPreviousStep = StepFlowUtil.hasPreviousStep(currentStep, steps);\n        this.previousStepDisabled = currentStep.previousStepDisabled;\n        this.nextStepLabel = this.getNextLabel();\n        this.progressPercentage = this.calculateProgress();\n      });\n    this.loaderService.loadingStatus.pipe(untilDestroyed(this)).subscribe((loaderData: LoaderData) => {\n      this.isLoading = !!loaderData.isAPIExecutionInProgress;\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  goToNextStep(): void {\n    if (!this.isLoading) {\n      this.formErrorService.submit$.next(null);\n      if (this.currentStep.nextButtonCallback) {\n        this.currentStep\n          .nextButtonCallback()\n          .pipe(take(1))\n          .subscribe((response: unknown) => {\n            if (response) {\n              this.store.dispatch(new GoToNextStepAction());\n            }\n          });\n      } else {\n        this.store.dispatch(new GoToNextStepAction());\n      }\n    }\n  }\n\n  private calculateProgress(): string {\n    return ((this.currentStepNumber / this.stepCount) * 100).toFixed(0);\n  }\n\n  getNextLabel(): NavigationBarNextLabelEnum {\n    if (this.buttonTypeOverride) {\n      return this.buttonTypeOverride;\n    } else if (this.isCurrentStepAlternativeFirstStep() || this.currentStep.isConfirm()) {\n      return NavigationBarNextLabelEnum.CONFIRM;\n    } else if (this.isCurrentStepFirstStep()) {\n      return NavigationBarNextLabelEnum.START;\n    } else if (this.currentStep.isFinal()) {\n      return NavigationBarNextLabelEnum.FINAL;\n    } else {\n      return NavigationBarNextLabelEnum.NEXT;\n    }\n  }\n\n  private isCurrentStepFirstStep() {\n    return this.currentStepNumber === 1;\n  }\n\n  goToPreviousStep(): void {\n    if (this.currentStep.prevButtonCallback) {\n      this.currentStep\n        .prevButtonCallback()\n        .pipe(take(1))\n        .subscribe((response: unknown) => {\n          if (response) {\n            this.store.dispatch(new GoToPreviousStepAction());\n          }\n        });\n    } else {\n      this.store.dispatch(new GoToPreviousStepAction());\n    }\n  }\n\n  isCurrentStepAlternativeFirstStep(): boolean {\n    return this.isCurrentStepFirstStep() && this.alternativeFirstStep;\n  }\n}\n","<div\n  [class.disabled]=\"isLoading\"\n  [class.sticky-footer--flow__dynamic-shadow]=\"dynamicShadow\"\n  class=\"sticky-footer-v2 position--fixed background-white width--full py--m px--xm p--xm--md display--flex justify-content--center align-items--center box-sizing--inherit shadow--xs-inverse position--bottom position--left\">\n  <div\n    class=\"sticky-footer-v2__container width--full default-max-site-width display--flex justify-content--between align-items--center\">\n    <!-- left arrow and back text-->\n    <div class=\"back-section\">\n      <ng-template [ngIf]=\"styling === 'default'\">\n        <a\n          (click)=\"goToPreviousStep()\"\n          [class.disabled]=\"isLoading\"\n          [class.visibility--hide]=\"(!hasPreviousStep || previousStepDisabled) && !isCurrentStepAlternativeFirstStep()\"\n          class=\"link link--with-icon link--subtle\">\n          {{ 'ng.step-flow.previous-step-label' | translate }}\n        </a>\n      </ng-template>\n      <ng-template [ngIf]=\"styling === 'buttons'\">\n        <button\n          class=\"button button--secondary button__icon--position-left\"\n          (click)=\"goToPreviousStep()\"\n          [class.disabled]=\"isLoading\"\n          [class.display--none-important]=\"\n            (!hasPreviousStep || previousStepDisabled) && !isCurrentStepAlternativeFirstStep()\n          \">\n          <i class=\"icon icon-chevron-left\"></i>\n          <span>{{ 'ng.step-flow.previous-step-label' | translate }}</span>\n        </button>\n      </ng-template>\n    </div>\n    <div *ngIf=\"this.showStepCounter\" class=\"progress-paging\">\n      <p>{{ currentStepNumber }}/{{ stepCount }}</p>\n    </div>\n    <div\n      *ngIf=\"this.showSalesContactNumber\"\n      class=\"display--flex flex-direction--column font-weight--bold align-items--center\">\n      <div>\n        <span>{{ messageGroup + '.info.free-sales-number' }}</span>\n      </div>\n      <a\n        ><span>{{ messageGroup + '.free-sales-number' | translate }}</span></a\n      >\n      <div>\n        <span>{{ messageGroup + '.info.free-sales-number' }}</span>\n      </div>\n      <a>{{ messageGroup + '.free-sales-number' | translate }}</a>\n    </div>\n    <div [class.next-section]=\"currentStepNumber !== 1 && !isConfirmationStep\">\n      <ng-template [ngIf]=\"styling === 'default'\">\n        <a\n          (click)=\"goToNextStep()\"\n          [class.disabled]=\"isLoading\"\n          [class.visibility--hide]=\"!hasNextStep\"\n          [ngClass]=\"\n            (currentStepNumber === 1 && !isCurrentStepAlternativeFirstStep()) || isConfirmationStep\n              ? 'button button--primary'\n              : 'link link--chevron'\n          \">\n          {{ this.nextStepLabel | translate }}\n        </a>\n      </ng-template>\n      <ng-template [ngIf]=\"styling === 'buttons'\">\n        <button\n          class=\"button button--primary button__icon--position-right\"\n          (click)=\"goToNextStep()\"\n          [class.disabled]=\"isLoading\"\n          [class.visibility--hide]=\"!hasNextStep\">\n          <ng-container *ngIf=\"buttonTextOverride; else defaultLabel\">\n            <span>{{ this.buttonTextOverride | translate }}</span>\n          </ng-container>\n          <ng-template #defaultLabel>\n            <span>{{ this.nextStepLabel | translate }}</span> </ng-template\n          ><i class=\"icon icon-chevron-right\"></i>\n        </button>\n      </ng-template>\n    </div>\n  </div>\n  <div *ngIf=\"this.showStepProgressBar\" class=\"progress-bar\">\n    <div class=\"indicator-progress ready-{{ this.progressPercentage }}\"></div>\n  </div>\n</div>\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[step-host]',\n})\nexport class StepHostDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","export * from './directives';\nexport * from './step-container.directive';\nexport * from './step-container.component';\nexport * from './step.interface';\n","import { Store } from '@ngxs/store';\nimport { StepInterface } from './step.interface';\nimport { StepContainerDirective } from './step-container.directive';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { DataLayerAttributes, DataLayerService } from '@telenet/ng-lib-datalayer';\nimport { StepFlowUtil } from '../store/step-flow.util';\nimport { Step } from '../step.model';\nimport { isEmpty } from 'lodash-es';\nimport { AbstractBaseComponent, LoaderData, LoaderService } from '@telenet/ng-lib-page';\nimport { StepFlowAnalyticsConfig } from '../interfaces/step-flow-analytics-config.interface';\nimport { StepFlowState } from '../store/step-flow.state';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-step-container',\n  templateUrl: 'step-container.component.html',\n})\nexport class StepContainerComponent extends AbstractBaseComponent implements OnInit {\n  @Input() stepFlowAnalyticsConfig: StepFlowAnalyticsConfig;\n  @Input() messageGroup: string;\n  @ViewChild(StepContainerDirective, { static: true }) stepContainer: StepContainerDirective;\n  previousStep: Step;\n  stepNavigationEndTime: number;\n\n  constructor(\n    private readonly store: Store,\n    private readonly loaderService: LoaderService,\n    private readonly dataLayerService: DataLayerService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.obs(this.store.select(StepFlowState.currentStep))\n      .pipe(untilDestroyed(this))\n      .subscribe((currentStep: Step | undefined) => {\n        if (currentStep) {\n          this.stepNavigationEndTime = new Date().getTime();\n          this.reportStepLoadTime(currentStep);\n          const viewContainerRef = this.stepContainer.viewContainerRef;\n          viewContainerRef.clear();\n          const componentRef = viewContainerRef.createComponent(currentStep.template);\n          (componentRef.instance as StepInterface).store = this.store;\n          (componentRef.instance as StepInterface).currentStep = currentStep;\n          if (this.messageGroup) {\n            (componentRef.instance as StepInterface).messageGroup = this.messageGroup;\n          }\n\n          if (!isEmpty(this.stepFlowAnalyticsConfig)) {\n            const attributes: DataLayerAttributes = {\n              stepId: this.getAnalyticsStepName(),\n              intent: this.stepFlowAnalyticsConfig.analyticsIntent,\n              flowType: this.stepFlowAnalyticsConfig.analyticsFlowType,\n              cart: this.stepFlowAnalyticsConfig.cart,\n            };\n            this.dataLayerService.addStepViewEvent(attributes);\n          }\n        }\n      });\n    this.getLastAPIExecutionTime();\n  }\n\n  private getLastAPIExecutionTime(): void {\n    this.loaderService.loadingStatus.pipe(untilDestroyed(this)).subscribe((loaderData: LoaderData) => {\n      if (loaderData.isAPIExecutionInProgress) {\n        this.stepNavigationEndTime = 0;\n      } else {\n        this.stepNavigationEndTime = loaderData.dataCapturedOn;\n      }\n    });\n  }\n\n  private reportStepLoadTime(currentStep: Step): void {\n    const reportStepLoadTiming = this.store.selectSnapshot(StepFlowState.reportStepLoadTiming);\n    if (reportStepLoadTiming) {\n      const steps = this.store.selectSnapshot(StepFlowState.steps);\n\n      const currentStepIndex = StepFlowUtil.getStepIndex(currentStep, steps);\n      const previousStepIndex = this.previousStep ? StepFlowUtil.getStepIndex(this.previousStep, steps) : 0;\n      if (currentStepIndex - previousStepIndex >= 0) {\n        this.delayStepLoadTime();\n      }\n      this.previousStep = currentStep;\n    }\n  }\n\n  private delayStepLoadTime(): void {\n    setTimeout(\n      (stepNavigationEndTime: number) => {\n        if (stepNavigationEndTime === this.stepNavigationEndTime && this.stepNavigationEndTime !== 0) {\n          this.fireStepLoadTimeEvent();\n        } else {\n          this.delayStepLoadTime();\n        }\n      },\n      10,\n      this.stepNavigationEndTime\n    );\n  }\n\n  private fireStepLoadTimeEvent(): void {\n    const stepNavigationStartTime = this.store.selectSnapshot(StepFlowState.stepNavigationStartTime);\n\n    const attributes: DataLayerAttributes = {\n      itemName:\n        stepNavigationStartTime > 0\n          ? ((this.stepNavigationEndTime - stepNavigationStartTime) / 1000).toFixed(2).toString()\n          : (\n              (this.stepNavigationEndTime -\n                (window.performance.getEntries()[0] as PerformanceNavigationTiming).fetchStart) /\n              1000\n            )\n              .toFixed(2)\n              .toString(),\n    };\n    this.dataLayerService.addStepLoadTimeEvent(attributes);\n  }\n\n  private getAnalyticsStepName(): string {\n    const currentStep = this.store.selectSnapshot(StepFlowState.currentStep);\n    if (currentStep?.analyticsOptions?.name) {\n      return `${currentStep.analyticsOptions.name}`;\n    }\n    return `${currentStep?.key}`;\n  }\n}\n","<ng-container appStepContainer></ng-container>\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appStepContainer]',\n})\nexport class StepContainerDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StepContainerDirective, StepHostDirective, StepContainerComponent } from './step-container';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { NavigationBarComponent } from './navigation-bar/navigation-bar.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule],\n  declarations: [StepContainerDirective, StepHostDirective, StepContainerComponent, NavigationBarComponent],\n  exports: [StepContainerComponent, StepContainerDirective, StepHostDirective, NavigationBarComponent],\n  providers: [TranslateService],\n})\nexport class StepFlowLibModule {}\n","import { Step } from './step.model';\nimport { StepEnum } from './step.enum';\nimport { Observable } from 'rxjs';\nimport { StepLayoutOptionsInterface } from './step-layout-options.interface';\nimport { StepAnalyticsOptions } from './interfaces/step-analytics-options.interface';\nimport { Type } from '@angular/core';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\n\nexport class StepBuilder {\n  private readonly _step: Step;\n\n  private constructor(key: string) {\n    this._step = new Step(key);\n  }\n\n  public static builder(key: string): StepBuilder {\n    return new StepBuilder(key);\n  }\n\n  public withLayoutOptions(layout?: StepLayoutOptionsInterface): StepBuilder {\n    if (layout) {\n      this._step.layoutOptions = layout;\n    }\n    return this;\n  }\n\n  public withAnalyticsOptions(analyticsOptions?: StepAnalyticsOptions): StepBuilder {\n    if (analyticsOptions) {\n      this._step.analyticsOptions = analyticsOptions;\n    }\n    return this;\n  }\n\n  public withImage(image?: string): StepBuilder {\n    if (image) {\n      this._step.image = image;\n    }\n    return this;\n  }\n\n  public withComponent(selector: unknown): StepBuilder {\n    this._step.component = { selector: selector };\n    return this;\n  }\n\n  public withOrder(order: number): StepBuilder {\n    this._step.order = order;\n    return this;\n  }\n\n  public withEnabledState(state = true): StepBuilder {\n    this._step.isEnabled = state;\n    return this;\n  }\n\n  public withTemplate(template: Type<unknown>): StepBuilder {\n    this._step.template = template;\n    return this;\n  }\n\n  public withCompletedState(state = true): StepBuilder {\n    this._step.setCompleted(state);\n    return this;\n  }\n\n  public withPreviousStepDisabled(state = false): StepBuilder {\n    this._step.previousStepDisabled = state;\n    return this;\n  }\n\n  public withFinalState(): StepBuilder {\n    this._step.type = StepEnum.FINAL;\n    return this;\n  }\n\n  public withConfirmState(): StepBuilder {\n    this._step.type = StepEnum.CONFIRM;\n    return this;\n  }\n\n  public withOverwriteFlowLabel(flowLabel: string): StepBuilder {\n    this._step.overwriteFlowLabel = flowLabel;\n    return this;\n  }\n\n  public withTitleParameterValue(value: Observable<string>): StepBuilder {\n    this._step.titleParameterValue = value;\n    return this;\n  }\n\n  public withChosenProductValue(value: Observable<OmapiProduct | unknown>): StepBuilder {\n    this._step.chosenProduct$ = value;\n    return this;\n  }\n\n  public withMobileImage(value: string): StepBuilder {\n    this._step.imageMobile = value;\n    return this;\n  }\n\n  public withScrollableImage(scrollable = true): StepBuilder {\n    this._step.isImageScrollable = scrollable;\n    return this;\n  }\n\n  public withAsAlternativeFirstStep(): StepBuilder {\n    this._step.asAlternativeFirstStep = true;\n    return this;\n  }\n\n  public build(): Step {\n    return this._step;\n  }\n}\n","export enum StepEnum {\n  DEFAULT,\n  FINAL,\n  CONFIRM,\n}\n","import { Type } from '@angular/core';\nimport { StepEnum } from './step.enum';\nimport { StepLayoutOptionsInterface } from './step-layout-options.interface';\nimport { Observable } from 'rxjs';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport { StepAnalyticsOptions } from './interfaces/step-analytics-options.interface';\n\ntype ButtonCallBack = () => Observable<boolean | Record<string, unknown>>;\nexport class Step {\n  key: string;\n  type: StepEnum = StepEnum.DEFAULT;\n  template: Type<unknown>;\n  titleParameterValue: Observable<string>;\n  component: { selector: unknown };\n  withNextButton: boolean;\n  nextButtonLabel = 'btn.steps.next';\n  nextButtonCallback: ButtonCallBack;\n  prevButtonCallback: ButtonCallBack;\n  previousStepDisabled: boolean;\n  asAlternativeFirstStep: boolean;\n  image: string;\n  imageMobile: string;\n  isImageScrollable: boolean;\n  isEnabled = true;\n  isCompleted = false;\n  layoutOptions?: StepLayoutOptionsInterface;\n  overwriteFlowLabel?: string;\n  chosenProduct$?: Observable<OmapiProduct | unknown>;\n  order: number;\n\n  analyticsOptions?: StepAnalyticsOptions;\n\n  constructor(key: string) {\n    this.key = key;\n    this.withNextButton = true;\n  }\n\n  public isFinal(): boolean {\n    return this.type === StepEnum.FINAL;\n  }\n\n  public setCompleted(completedState: boolean) {\n    this.isCompleted = completedState;\n  }\n\n  public isConfirm() {\n    return this.type === StepEnum.CONFIRM;\n  }\n}\n","export * from './step-flow.actions';\nexport * from './step-flow.state';\nexport * from './step-flow.util';\n","import { Step } from '../step.model';\nimport { StepFlowConfig } from '../interfaces/step-flow-config.interface';\nimport { StepDecision } from '../interfaces/step-decision.interface';\n\nexport interface StepEnabledActionState {\n  stepKey: string;\n  state: boolean;\n}\n\nexport class SetStepConfigurationAction {\n  public static readonly type = '[StepFlow] set the step configuration';\n\n  constructor(public stepFlowConfig: StepFlowConfig) {}\n}\n\nexport class ReportStepLoadTimingAction {\n  public static readonly type = '[StepFlow] set whether to capture step load time or not';\n\n  constructor(public reportStepLoadTime: boolean) {}\n}\n\nexport class SetStepNavigationStartTimeAction {\n  public static readonly type = '[StepFlow] set step navigation start time in milliseconds';\n}\n\nexport class SetStepsAction {\n  public static readonly type = '[StepFlow] set the steps for the stepflow';\n\n  constructor(public steps: Step[]) {}\n}\n\nexport class GoToNextStepAction {\n  public static readonly type = '[StepFlow] Go to next step';\n\n  constructor(public isStepComplete?: boolean) {}\n}\n\nexport class GoToFinalStepAction {\n  public static readonly type = '[StepFlow] Go to final step';\n}\n\nexport class GoToPreviousStepAction {\n  public static readonly type = '[StepFlow] Go to previous step';\n}\n\nexport class SetStepToEditAction {\n  public static readonly type = '[StepFlow] set the stepflow to a certain step so it can be edited';\n\n  constructor(public stepKey: string) {}\n}\n\nexport class SetStepIncompleteAction {\n  public static readonly type = '[StepFlow] set a certain step to the incomplete state';\n\n  constructor(public stepKey: string) {}\n}\n\nexport class SetStepCompleteAction {\n  public static readonly type = '[StepFlow] set a certain step to the complete state';\n\n  constructor(public stepKey: string) {}\n}\n\nexport class InsertStepsBeforeAction {\n  public static readonly type = '[StepFlow] Insert steps before a certain step with a certain key';\n\n  constructor(\n    public steps: Step[],\n    public stepKey: string\n  ) {}\n}\n\nexport class InsertStepsAfterAction {\n  public static readonly type = '[StepFlow] Insert steps behind a certain step with a certain key';\n\n  constructor(\n    public steps: Step[],\n    public stepKey: string\n  ) {}\n}\n\nexport class RemoveStepsWithStepKeysAction {\n  public static readonly type = '[StepFlow] Remove the steps with a key in the given list';\n\n  constructor(public stepKeys: string[]) {}\n}\n\nexport class SetStepsEnabledState {\n  public static readonly type = '[StepFlow] Set the enabled states of multiple steps';\n\n  constructor(public steps: StepEnabledActionState[]) {}\n}\n\nexport class UpdateStepAction {\n  public static readonly type = '[StepFlow] Change the properties of a certain step';\n\n  constructor(public step: Step) {}\n}\n\nexport class UpdateCurrentStepImageAction {\n  public static readonly type = '[StepFlow] Update the current step image';\n\n  constructor(public image: string) {}\n}\n\nexport class SetCurrentDecisionOnStepFlowConfig {\n  public static readonly type = '[StepFlow] Set the current decision on a step flow config';\n\n  constructor(\n    public stepDecision: StepDecision,\n    public currentFlowConfig: StepFlowConfig\n  ) {}\n}\n\nexport class ETFStepValidAction {\n  public static readonly type = '[StepFlow] Set ETF step valid';\n\n  constructor(public payload: boolean) {}\n}\n\nexport class GoToStepAction {\n  public static readonly type = '[StepFlow] Change current step with given step by key';\n\n  constructor(public stepKey: string) {}\n}\n\nexport class NotifyStepRendered {\n  public static readonly type = '[StepFlow] Notify step rendered';\n\n  constructor(public stepKey: string) {}\n}\n","import { Draft, produce } from 'immer';\nimport { Step } from '../step.model';\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\nimport {\n  ETFStepValidAction,\n  GoToFinalStepAction,\n  GoToNextStepAction,\n  GoToPreviousStepAction,\n  GoToStepAction,\n  InsertStepsAfterAction,\n  InsertStepsBeforeAction,\n  RemoveStepsWithStepKeysAction,\n  ReportStepLoadTimingAction,\n  SetCurrentDecisionOnStepFlowConfig,\n  SetStepCompleteAction,\n  SetStepConfigurationAction,\n  SetStepIncompleteAction,\n  SetStepNavigationStartTimeAction,\n  SetStepsAction,\n  SetStepsEnabledState,\n  SetStepToEditAction,\n  UpdateCurrentStepImageAction,\n  UpdateStepAction,\n} from './step-flow.actions';\nimport { Injectable } from '@angular/core';\nimport { StepFlowConfig } from '../interfaces/step-flow-config.interface';\nimport { StepFactory } from '../factories/step.factory';\nimport { StepFlowUtil } from './step-flow.util';\nimport { StepDecision } from '../interfaces/step-decision.interface';\nimport { Log, LogFactory } from '@telenet/ng-lib-shared';\n\nexport interface StepFlowStateModel {\n  initialized: boolean;\n  stepConfiguration?: StepFlowConfig;\n  steps: Step[];\n  currentStep?: Step;\n  reportStepLoadTiming: boolean;\n  stepNavigationStartTime: number;\n  isETFStepValid: boolean;\n}\n\n@State<StepFlowStateModel>({\n  name: 'stepFlow',\n  defaults: {\n    initialized: false,\n    stepConfiguration: undefined,\n    steps: [],\n    currentStep: undefined,\n    reportStepLoadTiming: false,\n    stepNavigationStartTime: 0,\n    isETFStepValid: false,\n  },\n})\n@Injectable()\nexport class StepFlowState {\n  private readonly log: Log = LogFactory.createLogger(StepFlowState);\n\n  constructor(\n    public store: Store,\n    private readonly stepFactory: StepFactory\n  ) {}\n\n  @Selector()\n  public static currentStep(state: StepFlowStateModel): Step | undefined {\n    return state.currentStep;\n  }\n\n  @Selector()\n  public static currentStepImage(state: StepFlowStateModel): string {\n    return state.currentStep?.image || '';\n  }\n\n  @Selector()\n  public static stepNumber(state: StepFlowStateModel): number {\n    if (!state?.currentStep) {\n      return 0;\n    }\n    return state.steps.indexOf(state?.currentStep) + 1;\n  }\n\n  @Selector()\n  public static key(state: StepFlowStateModel): string {\n    return state.currentStep?.key || '';\n  }\n\n  @Selector()\n  public static steps(state: StepFlowStateModel): Step[] {\n    return state && state.steps;\n  }\n\n  @Selector()\n  public static stepNavigationStartTime(state: StepFlowStateModel): number {\n    return state.stepNavigationStartTime;\n  }\n\n  @Selector()\n  public static reportStepLoadTiming(state: StepFlowStateModel): boolean {\n    return state.reportStepLoadTiming;\n  }\n\n  @Selector()\n  public static isETFStepValid(state: StepFlowStateModel): boolean {\n    return state.isETFStepValid;\n  }\n\n  static containsStep(type: string) {\n    return createSelector([StepFlowState], (state: StepFlowStateModel) => {\n      return !!state.steps.find((step) => step.key === type);\n    });\n  }\n\n  @Action(SetStepsAction)\n  public initialise(ctx: StateContext<StepFlowStateModel>, action: SetStepsAction): void {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = action.steps;\n        draft.currentStep = action.steps[0];\n      })\n    );\n  }\n\n  @Action(SetStepConfigurationAction)\n  public setStepConfigurationAction(ctx: StateContext<StepFlowStateModel>, action: SetStepConfigurationAction): void {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.stepConfiguration = action.stepFlowConfig;\n      })\n    );\n    this.decideSteps(ctx, action.stepFlowConfig);\n  }\n\n  @Action(ReportStepLoadTimingAction)\n  public ReportStepLoadTimingAction(ctx: StateContext<StepFlowStateModel>, action: ReportStepLoadTimingAction) {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.reportStepLoadTiming = action.reportStepLoadTime;\n      })\n    );\n  }\n\n  @Action(SetStepNavigationStartTimeAction)\n  public SetStepNavigationStartTimeAction(\n    ctx: StateContext<StepFlowStateModel>,\n    _action: SetStepNavigationStartTimeAction\n  ) {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.stepNavigationStartTime = new Date().getTime();\n      })\n    );\n  }\n\n  @Action(GoToFinalStepAction)\n  public goToFinalStepAction(ctx: StateContext<StepFlowStateModel>, _action: GoToFinalStepAction): void {\n    const steps = ctx.getState().steps;\n\n    let nextStep: Step | undefined;\n    steps\n      .filter((step) => step && Object.keys(step).length)\n      .forEach((step) => {\n        if (step.isFinal()) {\n          return;\n        } else {\n          if (step.isCompleted) {\n            nextStep = StepFlowUtil.getNextIncompletedStep(steps);\n          } else {\n            step.setCompleted(true);\n            nextStep = StepFlowUtil.getStepByRelativeIndexOffset(step, steps, '+', 1);\n          }\n        }\n      });\n\n    ctx.setState(produce(ctx.getState(), this.setCurrentStep(nextStep)));\n  }\n\n  @Action(GoToNextStepAction)\n  public goToNextStepAction(ctx: StateContext<StepFlowStateModel>, _action: GoToNextStepAction): void {\n    this.decideSteps(ctx, ctx.getState().stepConfiguration);\n    const currentStep = ctx.getState().currentStep;\n    const steps = ctx.getState().steps;\n    if (currentStep?.isFinal?.()) {\n      this.log.logError('The current step is of type: FINAL. It is not possible to go to the next step.');\n      return;\n    }\n\n    let nextStep: Step | undefined;\n    if (currentStep?.isCompleted) {\n      nextStep = StepFlowUtil.getNextIncompletedStep(steps);\n    } else if (currentStep) {\n      currentStep.setCompleted(_action.isStepComplete ?? true);\n      nextStep = StepFlowUtil.getStepByRelativeIndexOffset(currentStep, steps, '+', 1);\n    }\n\n    ctx.setState(produce(ctx.getState(), this.setCurrentStep(nextStep)));\n  }\n\n  @Action(GoToPreviousStepAction)\n  public goToPreviousStepAction(ctx: StateContext<StepFlowStateModel>, _action: GoToPreviousStepAction): void {\n    this.decideSteps(ctx, ctx.getState().stepConfiguration);\n\n    let previousStep: Step | undefined;\n    const currentStep = ctx.getState().currentStep;\n    const steps = ctx.getState().steps;\n\n    if (currentStep?.isCompleted) {\n      previousStep = StepFlowUtil.getNextIncompletedStep(steps);\n    } else {\n      previousStep = StepFlowUtil.getStepByRelativeIndexOffset(currentStep, steps, '-', 1);\n\n      previousStep?.setCompleted?.(false);\n    }\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        if (previousStep) {\n          draft.currentStep = previousStep;\n        }\n      })\n    );\n  }\n\n  @Action(SetStepToEditAction)\n  public setStepToEdit(ctx: StateContext<StepFlowStateModel>, action: SetStepToEditAction) {\n    const nextStep = ctx.getState().steps.find((step) => step.key === action.stepKey);\n    ctx.setState(produce(ctx.getState(), this.setCurrentStep(nextStep)));\n  }\n\n  @Action(SetStepIncompleteAction)\n  public setStepIncomplete(ctx: StateContext<StepFlowStateModel>, action: SetStepIncompleteAction) {\n    const updatedSteps = ctx.getState().steps.map((step) => {\n      if (step.key === action.stepKey) {\n        step.isCompleted = false;\n      }\n      return step;\n    });\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = updatedSteps;\n      })\n    );\n  }\n\n  @Action(SetStepCompleteAction)\n  public setStepCompleteAction(ctx: StateContext<StepFlowStateModel>, action: SetStepCompleteAction) {\n    const updatedSteps = ctx.getState().steps.map((step) => {\n      if (step.key === action.stepKey) {\n        step.isCompleted = true;\n      }\n      return step;\n    });\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = updatedSteps;\n      })\n    );\n  }\n\n  @Action(InsertStepsBeforeAction)\n  public InsertStepsBeforeAction(ctx: StateContext<StepFlowStateModel>, action: InsertStepsBeforeAction) {\n    const stepIndex = ctx.getState().steps.findIndex((step) => step.key === action.stepKey);\n    const steps = [...ctx.getState().steps];\n    steps.splice(stepIndex, 0, ...action.steps);\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = steps;\n      })\n    );\n  }\n\n  @Action(InsertStepsAfterAction)\n  public InsertStepsAfterAction(ctx: StateContext<StepFlowStateModel>, action: InsertStepsAfterAction) {\n    const stepIndex = ctx.getState().steps.findIndex((step) => step.key === action.stepKey) + 1;\n    const steps = [...ctx.getState().steps];\n    steps.splice(stepIndex, 0, ...action.steps);\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = steps;\n      })\n    );\n  }\n\n  @Action(RemoveStepsWithStepKeysAction)\n  public RemoveStepsWithStepKeysAction(ctx: StateContext<StepFlowStateModel>, action: RemoveStepsWithStepKeysAction) {\n    const steps = ctx.getState().steps.filter((step: Step) => {\n      return !action.stepKeys.includes(step.key);\n    });\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = steps;\n      })\n    );\n  }\n\n  @Action(SetStepsEnabledState)\n  public setStepsEnabledState(ctx: StateContext<StepFlowStateModel>, action: SetStepsEnabledState) {\n    const updatedSteps = ctx.getState().steps.map((step) => {\n      const foundStep = action.steps.find((s) => s.stepKey === step.key);\n      if (foundStep) {\n        step.isEnabled = foundStep.state;\n      }\n      return step;\n    });\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = updatedSteps;\n      })\n    );\n  }\n\n  @Action(UpdateStepAction)\n  public updateStepAction(ctx: StateContext<StepFlowStateModel>, action: UpdateStepAction) {\n    const updatedSteps = ctx.getState().steps.map((step) => {\n      if (step.key === action.step.key) {\n        return action.step;\n      }\n      return step;\n    });\n\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.steps = updatedSteps;\n      })\n    );\n  }\n\n  @Action(UpdateCurrentStepImageAction)\n  public updateCurrentStepImageAction(ctx: StateContext<StepFlowStateModel>, action: UpdateCurrentStepImageAction) {\n    if (ctx.getState().currentStep) {\n      ctx.setState(\n        produce(ctx.getState(), (draft) => {\n          if (draft.currentStep) {\n            draft.currentStep.image = action.image;\n          }\n        })\n      );\n    }\n  }\n\n  @Action(SetCurrentDecisionOnStepFlowConfig)\n  public setCurrentDecisionOnStepFlowConfig(\n    ctx: StateContext<StepFlowStateModel>,\n    action: SetCurrentDecisionOnStepFlowConfig\n  ) {\n    const stepDecisionIndex = ctx.getState().stepConfiguration?.steps?.findIndex((step) => {\n      return step === action.stepDecision;\n    });\n    if (stepDecisionIndex) {\n      ctx.setState(\n        produce(ctx.getState(), (draft) => {\n          if (draft.stepConfiguration?.steps[stepDecisionIndex]) {\n            (draft.stepConfiguration.steps[stepDecisionIndex] as StepDecision).currentDecision =\n              action.currentFlowConfig;\n          }\n        })\n      );\n    }\n  }\n\n  @Action(ETFStepValidAction)\n  public isETFStepValid(ctx: StateContext<StepFlowStateModel>, action: ETFStepValidAction) {\n    ctx.setState(\n      produce(ctx.getState(), (draft) => {\n        draft.isETFStepValid = action.payload;\n      })\n    );\n  }\n\n  @Action(GoToStepAction)\n  public goToStepAction(ctx: StateContext<StepFlowStateModel>, action: GoToStepAction): void {\n    this.decideSteps(ctx, ctx.getState().stepConfiguration);\n    const steps = ctx.getState().steps;\n    const nextStep = StepFlowUtil.getActiveStep(steps, action.stepKey);\n\n    ctx.setState(produce(ctx.getState(), this.setCurrentStep(nextStep)));\n  }\n\n  private decideSteps(ctx: StateContext<StepFlowStateModel>, stepFlowConfig?: StepFlowConfig) {\n    if (stepFlowConfig) {\n      const steps = this.stepFactory.createFlow(this.store, stepFlowConfig);\n      ctx.setState(\n        produce(ctx.getState(), (draft) => {\n          draft.steps = steps;\n          if (!ctx.getState().currentStep) {\n            draft.currentStep = steps[0];\n          }\n        })\n      );\n    }\n  }\n\n  private setCurrentStep(nextStep: Step | undefined) {\n    return (draft: Draft<StepFlowStateModel>) => {\n      if (nextStep) {\n        draft.currentStep = nextStep;\n      }\n    };\n  }\n}\n","import { Step } from '../step.model';\nimport { findIndex } from 'lodash-es';\n\nexport class StepFlowUtil {\n  public static hasNextStep(currentStep: Step, steps: Step[]): boolean {\n    if (currentStep?.isFinal?.()) {\n      return true;\n    }\n    return this.getStepByRelativeIndexOffset(currentStep, steps, '+', 1) !== undefined;\n  }\n\n  public static hasPreviousStep(currentStep: Step, steps: Step[]): boolean {\n    if (currentStep?.isFinal?.()) {\n      return false;\n    }\n    return this.getStepByRelativeIndexOffset(currentStep, steps, '-', 1) !== undefined;\n  }\n\n  public static getStepCount(steps: Step[]): number {\n    return this.getActiveSteps(steps).length;\n  }\n\n  public static getActiveSteps(steps: Step[]): Step[] {\n    return steps.filter((step) => {\n      return step.isEnabled;\n    });\n  }\n\n  public static getStepIndex(currentStep: Step, steps: Step[]): number {\n    const activeSteps = this.getActiveSteps(steps);\n    return findIndex(activeSteps, (step) => step.key === currentStep.key);\n  }\n\n  public static getStepByRelativeIndexOffset(\n    currentStep: Step | undefined,\n    steps: Step[],\n    operator: string,\n    offset: number\n  ): Step | undefined {\n    const activeSteps = this.getActiveSteps(steps);\n    const currentStepIndex = findIndex(activeSteps, (step: Step) => step.key === currentStep?.key);\n    switch (operator) {\n      case '+':\n        return currentStepIndex === undefined ? undefined : activeSteps[currentStepIndex + offset];\n      case '-':\n        return currentStepIndex === undefined ? undefined : activeSteps[currentStepIndex - offset];\n      default:\n        throw new Error(`${operator} is not a correct operator`);\n    }\n  }\n\n  public static getNextIncompletedStep(steps: Step[]): Step | undefined {\n    return this.getActiveSteps(steps).find((step) => !step.isCompleted);\n  }\n\n  public static getActiveStep(steps: Step[], stepKey: string): Step | undefined {\n    return this.getActiveSteps(steps).find((step) => step.key === stepKey);\n  }\n}\n"],"names":["instanceOfStepDecision","StepBuilder","SetCurrentDecisionOnStepFlowConfig","TemplateFactory","StepFactory","templateFactory","constructor","createFlow","store","stepFlowConfig","steps","forEach","stepConfig","concat","decideFlow","push","createStep","stepBuilder","builder","key","withLayoutOptions","layoutOptions","withAnalyticsOptions","analyticsOptions","withComponent","component","withImage","imagePath","determineTemplate","isFinalState","withFinalState","build","stepDecision","decidedFlow","decisionFunction","possibleResults","currentDecision","dispatch","initFlowAction","i0","ɵɵinject","i1","factory","ɵfac","providedIn","_stepBuilder","_stepConfig","NavigationBarNextLabelEnum","ChangeDetectorRef","FormErrorService","Store","GoToNextStepAction","GoToPreviousStepAction","StepFlowState","StepFlowUtil","take","tap","LoaderService","UntilDestroy","untilDestroyed","ɵɵelementStart","ɵɵlistener","NavigationBarComponent_ng_template_3_Template_a_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","goToPreviousStep","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r0","isLoading","hasPreviousStep","previousStepDisabled","isCurrentStepAlternativeFirstStep","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","NavigationBarComponent_ng_template_4_Template_button_click_0_listener","_r10","ctx_r9","ɵɵelement","ctx_r1","ɵɵtextInterpolate","ɵɵtextInterpolate2","ctx_r2","currentStepNumber","stepCount","ctx_r3","messageGroup","NavigationBarComponent_ng_template_8_Template_a_click_0_listener","_r12","ctx_r11","goToNextStep","ctx_r4","hasNextStep","ɵɵproperty","isConfirmationStep","nextStepLabel","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r13","buttonTextOverride","ctx_r14","NavigationBarComponent_ng_template_9_Template_button_click_0_listener","_r17","ctx_r16","ɵɵtemplate","NavigationBarComponent_ng_template_9_ng_container_1_Template","NavigationBarComponent_ng_template_9_ng_template_2_Template","ɵɵtemplateRefExtractor","ctx_r5","_r15","ɵɵclassMapInterpolate1","ctx_r6","progressPercentage","NavigationBarComponent","formErrorService","loaderService","changeDetectorRef","dynamicShadow","showStepCounter","showStepProgressBar","showSalesContactNumber","styling","currentStep","START","alternativeFirstStep","buttonTypeOverride","ngOnInit","select","pipe","asAlternativeFirstStep","subscribe","Error","isConfirm","selectSnapshot","getStepCount","getStepIndex","getNextLabel","calculateProgress","loadingStatus","loaderData","isAPIExecutionInProgress","detectChanges","submit$","next","nextButtonCallback","response","toFixed","CONFIRM","isCurrentStepFirstStep","isFinal","FINAL","NEXT","prevButtonCallback","ɵɵdirectiveInject","i2","i3","selectors","inputs","decls","vars","consts","template","NavigationBarComponent_Template","rf","ctx","NavigationBarComponent_ng_template_3_Template","NavigationBarComponent_ng_template_4_Template","NavigationBarComponent_div_5_Template","NavigationBarComponent_div_6_Template","NavigationBarComponent_ng_template_8_Template","NavigationBarComponent_ng_template_9_Template","NavigationBarComponent_div_10_Template","__decorate","ViewContainerRef","StepHostDirective","viewContainerRef","StepContainerDirective","DataLayerService","isEmpty","AbstractBaseComponent","StepContainerComponent","dataLayerService","stepFlowAnalyticsConfig","stepContainer","previousStep","stepNavigationEndTime","obs","Date","getTime","reportStepLoadTime","clear","componentRef","createComponent","instance","attributes","stepId","getAnalyticsStepName","intent","analyticsIntent","flowType","analyticsFlowType","cart","addStepViewEvent","getLastAPIExecutionTime","dataCapturedOn","reportStepLoadTiming","currentStepIndex","previousStepIndex","delayStepLoadTime","setTimeout","fireStepLoadTimeEvent","stepNavigationStartTime","itemName","toString","window","performance","getEntries","fetchStart","addStepLoadTimeEvent","name","viewQuery","StepContainerComponent_Query","ɵɵelementContainer","CommonModule","TranslateService","TranslateModule","StepFlowLibModule","imports","declarations","exports","Step","StepEnum","_step","layout","image","selector","withOrder","order","withEnabledState","state","isEnabled","withTemplate","withCompletedState","setCompleted","withPreviousStepDisabled","type","withConfirmState","withOverwriteFlowLabel","flowLabel","overwriteFlowLabel","withTitleParameterValue","value","titleParameterValue","withChosenProductValue","chosenProduct$","withMobileImage","imageMobile","withScrollableImage","scrollable","isImageScrollable","withAsAlternativeFirstStep","DEFAULT","withNextButton","nextButtonLabel","isCompleted","completedState","SetStepConfigurationAction","ReportStepLoadTimingAction","SetStepNavigationStartTimeAction","SetStepsAction","isStepComplete","GoToFinalStepAction","SetStepToEditAction","stepKey","SetStepIncompleteAction","SetStepCompleteAction","InsertStepsBeforeAction","InsertStepsAfterAction","RemoveStepsWithStepKeysAction","stepKeys","SetStepsEnabledState","UpdateStepAction","step","UpdateCurrentStepImageAction","currentFlowConfig","ETFStepValidAction","payload","GoToStepAction","NotifyStepRendered","produce","Action","createSelector","Selector","State","LogFactory","_","stepFactory","log","createLogger","StepFlowState_1","currentStepImage","stepNumber","indexOf","isETFStepValid","containsStep","find","initialise","action","setState","getState","draft","setStepConfigurationAction","stepConfiguration","decideSteps","_action","goToFinalStepAction","nextStep","filter","Object","keys","length","getNextIncompletedStep","getStepByRelativeIndexOffset","setCurrentStep","goToNextStepAction","logError","goToPreviousStepAction","setStepToEdit","setStepIncomplete","updatedSteps","map","setStepCompleteAction","stepIndex","findIndex","splice","includes","setStepsEnabledState","foundStep","s","updateStepAction","updateCurrentStepImageAction","setCurrentDecisionOnStepFlowConfig","stepDecisionIndex","goToStepAction","getActiveStep","defaults","initialized","undefined","getActiveSteps","activeSteps","operator","offset"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}