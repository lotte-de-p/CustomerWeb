{"version":3,"file":"node_modules_ngxs_store_fesm2015_ngxs-store_js-_471d1.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoC;AACmJ;AAC3I;AAC6F;AACtF;AAC8D;AACmE;AAC5H;;AAExD;AACA;AACA;AACA;AACA,SAAS6C,yBAAyBA,CAACC,MAAM,EAAE;EACvC,IAAIA,MAAM,CAACC,WAAW,IAAID,MAAM,CAACC,WAAW,CAACC,IAAI,EAAE;IAC/C,OAAOF,MAAM,CAACC,WAAW,CAACC,IAAI;EAClC,CAAC,MACI;IACD,OAAOF,MAAM,CAACE,IAAI;EACtB;AACJ;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,OAAO,EAAE;EAC5B,MAAMC,KAAK,GAAGN,yBAAyB,CAACK,OAAO,CAAC;EAChD,OAAO,UAAUE,OAAO,EAAE;IACtB,OAAOD,KAAK,KAAKN,yBAAyB,CAACO,OAAO,CAAC;EACvD,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,GAAG,KAAK;EACjCF,GAAG,GAAGG,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,GAAG,CAAC;EAC5B,MAAMK,KAAK,GAAGJ,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC;EAC7B,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC;EAClCF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,EAAEC,KAAK,KAAK;IAC/B,IAAIA,KAAK,KAAKL,SAAS,EAAE;MACrBG,GAAG,CAACC,IAAI,CAAC,GAAGR,GAAG;IACnB,CAAC,MACI;MACDO,GAAG,CAACC,IAAI,CAAC,GAAGE,KAAK,CAACC,OAAO,CAACJ,GAAG,CAACC,IAAI,CAAC,CAAC,GAAGD,GAAG,CAACC,IAAI,CAAC,CAACI,KAAK,CAAC,CAAC,GAAGX,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEK,GAAG,CAACC,IAAI,CAAC,CAAC;IAC3F;IACA,OAAOD,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;EAC3B,CAAC,EAAEV,GAAG,CAAC;EACP,OAAOA,GAAG;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMe,QAAQ,GAAGA,CAACf,GAAG,EAAEC,IAAI,KAAKA,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,EAAEV,GAAG,CAAC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMgB,UAAU,GAAIC,IAAI,IAAK;EACzB,OAAOA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACL,KAAK,CAACC,OAAO,CAACI,IAAI,CAAC;AACnE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAGA,CAACC,IAAI,EAAE,GAAGC,OAAO,KAAK;EACpC,IAAI,CAACA,OAAO,CAACb,MAAM,EACf,OAAOY,IAAI;EACf,MAAME,MAAM,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC;EAC9B,IAAIN,UAAU,CAACG,IAAI,CAAC,IAAIH,UAAU,CAACK,MAAM,CAAC,EAAE;IACxC,KAAK,MAAME,GAAG,IAAIF,MAAM,EAAE;MACtB,IAAIL,UAAU,CAACK,MAAM,CAACE,GAAG,CAAC,CAAC,EAAE;QACzB,IAAI,CAACJ,IAAI,CAACI,GAAG,CAAC,EACVpB,MAAM,CAACC,MAAM,CAACe,IAAI,EAAE;UAAE,CAACI,GAAG,GAAG,CAAC;QAAE,CAAC,CAAC;QACtCL,SAAS,CAACC,IAAI,CAACI,GAAG,CAAC,EAAEF,MAAM,CAACE,GAAG,CAAC,CAAC;MACrC,CAAC,MACI;QACDpB,MAAM,CAACC,MAAM,CAACe,IAAI,EAAE;UAAE,CAACI,GAAG,GAAGF,MAAM,CAACE,GAAG;QAAE,CAAC,CAAC;MAC/C;IACJ;EACJ;EACA,OAAOL,SAAS,CAACC,IAAI,EAAE,GAAGC,OAAO,CAAC;AACtC,CAAC;AAED,SAASI,mBAAmBA,CAACC,IAAI,EAAE;EAC/B,MAAM,IAAIC,KAAK,CAAE,GAAED,IAAK,0EAAyE,CAAC;AACtG;AACA,SAASE,2BAA2BA,CAAA,EAAG;EACnC,MAAM,IAAID,KAAK,CAAE,yCAAwC,CAAC;AAC9D;AACA,SAASE,qBAAqBA,CAACC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAE;EACtD,MAAM,IAAIL,KAAK,CAAE,eAAcG,OAAQ,UAASC,OAAQ,sBAAqBC,OAAQ,GAAE,CAAC;AAC5F;AACA,SAASC,wBAAwBA,CAACP,IAAI,EAAE;EACpC,MAAM,IAAIC,KAAK,CAAE,0DAAyDD,IAAK,UAAS,CAAC;AAC7F;AACA,SAASQ,yBAAyBA,CAAA,EAAG;EACjC,MAAM,IAAIP,KAAK,CAAC,yDAAyD,CAAC;AAC9E;AACA,SAASQ,2BAA2BA,CAAA,EAAG;EACnC,MAAM,IAAIR,KAAK,CAAC,iCAAiC,CAAC;AACtD;AACA,SAASS,qBAAqBA,CAAA,EAAG;EAC7B,OAAQ,6GAA6G,GACjH,wFAAwF,GACxF,8EAA8E;AACtF;AACA,SAASC,sCAAsCA,CAACX,IAAI,EAAE;EAClD,OAAQ,IAAGA,IAAK,mFAAkF;AACtG;AACA,SAASY,mCAAmCA,CAAA,EAAG;EAC3C,MAAM,IAAIX,KAAK,CAAC,+CAA+C,CAAC;AACpE;AACA,SAASY,uBAAuBA,CAAA,EAAG;EAC/B,MAAM,IAAIZ,KAAK,CAAC,mCAAmC,CAAC;AACxD;AACA,SAASa,2BAA2BA,CAAA,EAAG;EACnC,MAAM,IAAIb,KAAK,CAAC,uCAAuC,CAAC;AAC5D;AAEA,MAAMc,wCAAwC,CAAC;EAC3C/C,WAAWA,CAACgD,OAAO,EAAEC,WAAW,EAAE;IAC9B,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B;IACA;IACA,IAAI,OAAOC,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/CC,qBAAqB,CAACH,OAAO,CAAC;IAClC;EACJ;EACAI,KAAKA,CAACC,IAAI,EAAE;IACR,IAAIhF,iEAAgB,CAAC,IAAI,CAAC4E,WAAW,CAAC,EAAE;MACpC,OAAO,IAAI,CAACK,gBAAgB,CAACD,IAAI,CAAC;IACtC;IACA,OAAO,IAAI,CAACE,iBAAiB,CAACF,IAAI,CAAC;EACvC;EACAG,KAAKA,CAACH,IAAI,EAAE;IACR,OAAO,IAAI,CAACC,gBAAgB,CAACD,IAAI,CAAC;EACtC;EACAC,gBAAgBA,CAACD,IAAI,EAAE;IACnB,IAAInG,iDAAM,CAACuG,eAAe,CAAC,CAAC,EAAE;MAC1B,OAAOJ,IAAI,CAAC,CAAC;IACjB;IACA,OAAO,IAAI,CAACL,OAAO,CAACU,GAAG,CAACL,IAAI,CAAC;EACjC;EACAE,iBAAiBA,CAACF,IAAI,EAAE;IACpB,IAAInG,iDAAM,CAACuG,eAAe,CAAC,CAAC,EAAE;MAC1B,OAAO,IAAI,CAACT,OAAO,CAACO,iBAAiB,CAACF,IAAI,CAAC;IAC/C;IACA,OAAOA,IAAI,CAAC,CAAC;EACjB;AACJ;AACA;AAAmBN,wCAAwC,CAACY,IAAI,YAAAC,iDAAAC,CAAA;EAAA,YAAAA,CAAA,IAAyFd,wCAAwC,EAAlD9F,sDAAE,CAAkEA,iDAAS,GAA7EA,sDAAE,CAAwFE,sDAAW;AAAA,CAA6C;AACjS;AAAmB4F,wCAAwC,CAACgB,KAAK,kBAD8E9G,gEAAE;EAAAgH,KAAA,EACYlB,wCAAwC;EAAAmB,OAAA,EAAxCnB,wCAAwC,CAAAY,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAC5N;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAF+IjG,+DAAE,CAErD8F,wCAAwC,EAAc,CAAC;IACvI9C,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAEhD,iDAASC;IAAC,CAAC,EAAE;MAAE+C,IAAI,EAAEqE,SAAS;MAAEC,UAAU,EAAE,CAAC;QACnFtE,IAAI,EAAE5C,iDAAM;QACZgH,IAAI,EAAE,CAAClH,sDAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AACxB;AACA;AACA,SAASgG,qBAAqBA,CAACqB,MAAM,EAAE;EACnC;EACA;EACA;EACA,IAAIA,MAAM,YAAYtH,iDAAM,EAAE;IAC1B;EACJ;EACAuH,OAAO,CAACC,IAAI,CAAChC,qBAAqB,CAAC,CAAC,CAAC;AACzC;AAEA,MAAMiC,YAAY,GAAG,IAAIrH,yDAAc,CAAC,cAAc,CAAC;AACvD,MAAMsH,gBAAgB,GAAG,IAAItH,yDAAc,CAAC,kBAAkB,CAAC;AAC/D,MAAMuH,mBAAmB,GAAG,IAAIvH,yDAAc,CAAC,qBAAqB,CAAC;AACrE,MAAMwH,YAAY,GAAG,IAAIxH,yDAAc,CAAC,cAAc,CAAC;AACvD,MAAMyH,QAAQ,GAAG,WAAW;AAC5B,MAAMC,gBAAgB,GAAG,mBAAmB;AAC5C,MAAMC,iBAAiB,GAAG,oBAAoB;AAC9C;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EACblF,WAAWA,CAAA,EAAG;IACV;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACmF,aAAa,GAAG,CAAC,CAAC;IACvB;AACR;AACA;IACQ,IAAI,CAACC,eAAe,GAAG;MACnBC,oBAAoB,EAAE,IAAI;MAC1BC,cAAc,EAAE,IAAI,CAAC;IACzB,CAAC;IACD,IAAI,CAACC,aAAa,GAAG;MACjBC,2BAA2B,EAAE;IACjC,CAAC;IACD,IAAI,CAACC,iBAAiB,GAAG1C,wCAAwC;EACrE;AACJ;AACA;AAAmBmC,UAAU,CAACvB,IAAI,YAAA+B,mBAAA7B,CAAA;EAAA,YAAAA,CAAA,IAAyFqB,UAAU;AAAA,CAAoD;AACzL;AAAmBA,UAAU,CAACnB,KAAK,kBAtD4G9G,gEAAE;EAAAgH,KAAA,EAsDlBiB,UAAU;EAAAhB,OAAA,WAAAwB,mBAAA7B,CAAA;IAAA,IAAA8B,CAAA;IAAA,IAAA9B,CAAA;MAAA8B,CAAA,OAAA9B,CAAA;IAAA;MAAA8B,CAAA,IAAmCC,OAAO,IAAKnE,SAAS,CAAC,IAAIyD,UAAU,CAAC,CAAC,EAAEU,OAAO,CAAC,EAtD7E3I,sDAAE,CAsD6F0H,YAAY;IAAA;IAAA,OAAAgB,CAAA;EAAA;EAAAxB,UAAA,EAAnG;AAAM,EAAmG;AAChQ;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAvD+IjG,+DAAE,CAuDrDiI,UAAU,EAAc,CAAC;IACzGjF,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MACCF,UAAU,EAAE,MAAM;MAClB0B,UAAU,EAAGD,OAAO,IAAKnE,SAAS,CAAC,IAAIyD,UAAU,CAAC,CAAC,EAAEU,OAAO,CAAC;MAC7DE,IAAI,EAAE,CAACnB,YAAY;IACvB,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC;AAAA;AACtD;AACA;AACA;AACA;AACA,MAAMoB,gBAAgB,CAAC;EACnB/F,WAAWA,CAACgG,aAAa,EAAEC,YAAY,EAAEC,WAAW,EAAE;IAClD,IAAI,CAACF,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,WAAW,GAAGA,WAAW;EAClC;AACJ;AAEA,MAAMC,yBAAyB,CAAC;EAC5B/C,KAAKA,CAACC,IAAI,EAAE;IACR,OAAOA,IAAI,CAAC,CAAC;EACjB;EACAG,KAAKA,CAACH,IAAI,EAAE;IACR,OAAOA,IAAI,CAAC,CAAC;EACjB;AACJ;AACA;AAAmB8C,yBAAyB,CAACxC,IAAI,YAAAyC,kCAAAvC,CAAA;EAAA,YAAAA,CAAA,IAAyFsC,yBAAyB;AAAA,CAAoD;AACvN;AAAmBA,yBAAyB,CAACpC,KAAK,kBApF6F9G,gEAAE;EAAAgH,KAAA,EAoFHkC,yBAAyB;EAAAjC,OAAA,EAAzBiC,yBAAyB,CAAAxC,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAC9L;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KArF+IjG,+DAAE,CAqFrDkJ,yBAAyB,EAAc,CAAC;IACxHlG,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA,MAAMkC,qCAAqC,GAAG,IAAI/I,yDAAc,CAAC,uCAAuC,CAAC;AACzG;AACA;AACA;AACA,MAAMgJ,uBAAuB,GAAG,IAAIhJ,yDAAc,CAAC,yBAAyB,EAAE;EAC1E6G,UAAU,EAAE,MAAM;EAClBD,OAAO,EAAEA,CAAA,KAAM;IACX,MAAMqC,QAAQ,GAAGhJ,qDAAM,CAACC,mDAAQ,CAAC;IACjC,MAAMiI,iBAAiB,GAAGc,QAAQ,CAACC,GAAG,CAACH,qCAAqC,CAAC;IAC7E,OAAOZ,iBAAiB,GAClBc,QAAQ,CAACC,GAAG,CAACf,iBAAiB,CAAC,GAC/Bc,QAAQ,CAACC,GAAG,CAAC,OAAO/I,qDAAO,CAACgJ,IAAI,KAAK,WAAW,GAC5C1D,wCAAwC,GACxCoD,yBAAyB,CAAC;EACxC;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,SAASO,qBAAqBA,CAACC,MAAM,EAAE;EACnC,IAAI,CAACA,MAAM,CAACC,cAAc,CAAC7B,QAAQ,CAAC,EAAE;IAClC,MAAM8B,eAAe,GAAG;MACpB7E,IAAI,EAAE,IAAI;MACV8E,OAAO,EAAE,CAAC,CAAC;MACXC,QAAQ,EAAE,CAAC,CAAC;MACZC,IAAI,EAAE,IAAI;MACVC,gBAAgBA,CAACC,OAAO,EAAE;QACtB,OAAOA,OAAO,CAACC,cAAc,CAACN,eAAe,CAAC7E,IAAI,CAAC;MACvD,CAAC;MACDoF,QAAQ,EAAE;IACd,CAAC;IACD1G,MAAM,CAAC2G,cAAc,CAACV,MAAM,EAAE5B,QAAQ,EAAE;MAAEuC,KAAK,EAAET;IAAgB,CAAC,CAAC;EACvE;EACA,OAAOU,kBAAkB,CAACZ,MAAM,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,SAASY,kBAAkBA,CAACZ,MAAM,EAAE;EAChC,OAAOA,MAAM,CAAC5B,QAAQ,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAASyC,wBAAwBA,CAACb,MAAM,EAAE;EACtC,IAAI,CAACA,MAAM,CAACC,cAAc,CAAC3B,iBAAiB,CAAC,EAAE;IAC3C,MAAM4B,eAAe,GAAG;MACpBI,gBAAgB,EAAE,IAAI;MACtBQ,UAAU,EAAE,IAAI;MAChBC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE,IAAI;MAClBC,kBAAkB,EAAEA,CAAA,MAAO,CAAC,CAAC;IACjC,CAAC;IACDlH,MAAM,CAAC2G,cAAc,CAACV,MAAM,EAAE1B,iBAAiB,EAAE;MAAEqC,KAAK,EAAET;IAAgB,CAAC,CAAC;EAChF;EACA,OAAOgB,qBAAqB,CAAClB,MAAM,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAASkB,qBAAqBA,CAAClB,MAAM,EAAE;EACnC,OAAOA,MAAM,CAAC1B,iBAAiB,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6C,mBAAmBA,CAACC,KAAK,EAAE;EAChC,MAAMC,WAAW,GAAGD,KAAK,CAAC1G,KAAK,CAAC,CAAC;EACjC,OAAOd,GAAG,IAAIyH,WAAW,CAACjH,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,EAAEV,GAAG,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS0H,cAAcA,CAACF,KAAK,EAAE;EAC3B,MAAMG,QAAQ,GAAGH,KAAK;EACtB,IAAII,GAAG,GAAG,QAAQ,GAAGD,QAAQ,CAAC,CAAC,CAAC;EAChC,IAAIE,CAAC,GAAG,CAAC;EACT,MAAMC,CAAC,GAAGH,QAAQ,CAACpH,MAAM;EACzB,IAAIwH,IAAI,GAAGH,GAAG;EACd,OAAO,EAAEC,CAAC,GAAGC,CAAC,EAAE;IACZC,IAAI,GAAGA,IAAI,GAAG,MAAM,IAAIH,GAAG,GAAGA,GAAG,GAAG,GAAG,GAAGD,QAAQ,CAACE,CAAC,CAAC,CAAC;EAC1D;EACA,MAAMG,EAAE,GAAG,IAAIC,QAAQ,CAAC,OAAO,EAAE,SAAS,GAAGF,IAAI,GAAG,GAAG,CAAC;EACxD,OAAOC,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,UAAUA,CAACV,KAAK,EAAEW,MAAM,EAAE;EAC/B,IAAIA,MAAM,IAAIA,MAAM,CAACnD,aAAa,IAAImD,MAAM,CAACnD,aAAa,CAACC,2BAA2B,EAAE;IACpF,OAAOsC,mBAAmB,CAACC,KAAK,CAAC;EACrC,CAAC,MACI;IACD,OAAOE,cAAc,CAACF,KAAK,CAAC;EAChC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASY,UAAUA,CAACC,YAAY,EAAE;EAC9B,MAAMC,QAAQ,GAAIC,UAAU,IAAK;IAC7B,MAAMC,IAAI,GAAGH,YAAY,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,KAAKH,UAAU,CAAC;IACrD;IACA;IACA,IAAI,CAAC,OAAO5F,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK,CAAC6F,IAAI,EAAE;MAC1D,MAAM,IAAI9G,KAAK,CAAE,0BAAyB6G,UAAW,sDAAqD,CAAC;IAC/G;IACA,OAAOC,IAAI,CAAChE,QAAQ,CAAC,CAAC/C,IAAI;EAC9B,CAAC;EACD,OAAO4G,YAAY,CAAC7H,MAAM,CAAC,CAACmI,MAAM,EAAEJ,UAAU,KAAK;IAC/C,MAAM;MAAE9G,IAAI;MAAEoF;IAAS,CAAC,GAAG0B,UAAU,CAAC/D,QAAQ,CAAC;IAC/CmE,MAAM,CAAClH,IAAI,CAAC,GAAG,CAACoF,QAAQ,IAAI,EAAE,EAAEpI,GAAG,CAAC6J,QAAQ,CAAC;IAC7C,OAAOK,MAAM;EACjB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,MAAM,EAAE;EACzB,OAAOA,MAAM,CAACrI,MAAM,CAAC,CAACmI,MAAM,EAAEJ,UAAU,KAAK;IACzC,MAAMC,IAAI,GAAGD,UAAU,CAAC/D,QAAQ,CAAC;IACjCmE,MAAM,CAACH,IAAI,CAAC/G,IAAI,CAAC,GAAG8G,UAAU;IAC9B,OAAOI,MAAM;EACjB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,kBAAkBA,CAAC9I,GAAG,EAAE+I,MAAM,GAAG,CAAC,CAAC,EAAE;EAC1C,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IAChC,KAAK,MAAM3H,GAAG,IAAI0H,KAAK,EAAE;MACrB,IAAIA,KAAK,CAAC5C,cAAc,CAAC9E,GAAG,CAAC,IAAI0H,KAAK,CAAC1H,GAAG,CAAC,CAAC4H,OAAO,CAACD,SAAS,CAAC,IAAI,CAAC,EAAE;QACjE,MAAME,MAAM,GAAGJ,KAAK,CAACC,KAAK,EAAE1H,GAAG,CAAC;QAChC,OAAO6H,MAAM,KAAK,IAAI,GAAI,GAAEA,MAAO,IAAG7H,GAAI,EAAC,GAAGA,GAAG;MACrD;IACJ;IACA,OAAO,IAAI;EACf,CAAC;EACD,KAAK,MAAMA,GAAG,IAAIvB,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACqG,cAAc,CAAC9E,GAAG,CAAC,EAAE;MACzB,MAAM6H,MAAM,GAAGJ,KAAK,CAAChJ,GAAG,EAAEuB,GAAG,CAAC;MAC9BwH,MAAM,CAACxH,GAAG,CAAC,GAAG6H,MAAM,GAAI,GAAEA,MAAO,IAAG7H,GAAI,EAAC,GAAGA,GAAG;IACnD;EACJ;EACA,OAAOwH,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,eAAeA,CAACC,KAAK,EAAE;EAC5B,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,OAAO,GAAG,CAAC,CAAC;EAClB,MAAMR,KAAK,GAAGA,CAACvH,IAAI,EAAEgI,SAAS,GAAG,EAAE,KAAK;IACpC,IAAI,CAAC7I,KAAK,CAACC,OAAO,CAAC4I,SAAS,CAAC,EAAE;MAC3BA,SAAS,GAAG,EAAE;IAClB;IACAA,SAAS,CAACC,IAAI,CAACjI,IAAI,CAAC;IACpB+H,OAAO,CAAC/H,IAAI,CAAC,GAAG,IAAI;IACpB6H,KAAK,CAAC7H,IAAI,CAAC,CAACkI,OAAO,CAAEC,GAAG,IAAK;MACzB;MACA;MACA,IAAI,CAAC,OAAOjH,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK8G,SAAS,CAACN,OAAO,CAACS,GAAG,CAAC,IAAI,CAAC,EAAE;QAChF,MAAM,IAAIlI,KAAK,CAAE,wBAAuBkI,GAAI,qBAAoBnI,IAAK,MAAKgI,SAAS,CAACI,IAAI,CAAC,MAAM,CAAE,EAAC,CAAC;MACvG;MACA,IAAIL,OAAO,CAACI,GAAG,CAAC,EAAE;QACd;MACJ;MACAZ,KAAK,CAACY,GAAG,EAAEH,SAAS,CAAC3I,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC;IACF,IAAIyI,MAAM,CAACJ,OAAO,CAAC1H,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B8H,MAAM,CAACG,IAAI,CAACjI,IAAI,CAAC;IACrB;EACJ,CAAC;EACDtB,MAAM,CAAC2J,IAAI,CAACR,KAAK,CAAC,CAACK,OAAO,CAACI,CAAC,IAAIf,KAAK,CAACe,CAAC,CAAC,CAAC;EACzC,OAAOR,MAAM,CAACS,OAAO,CAAC,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACjK,GAAG,EAAE;EACnB,OAAQ,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,IAAK,OAAOA,GAAG,KAAK,UAAU;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASkK,QAAQA,CAAC,GAAGC,YAAY,EAAE;EAC/B,OAAOC,gBAAgB,CAACD,YAAY,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,kBAAkBA,CAAC,GAAGF,YAAY,EAAE;EACzC,OAAOC,gBAAgB,CAACD,YAAY,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,kBAAkBA,CAAC,GAAGH,YAAY,EAAE;EACzC,OAAOC,gBAAgB,CAACD,YAAY,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,gBAAgBA,CAAC,GAAGJ,YAAY,EAAE;EACvC,OAAOC,gBAAgB,CAACD,YAAY,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,iBAAiBA,CAAC,GAAGL,YAAY,EAAE;EACxC,MAAMM,eAAe,GAAG,CACpB,YAAY,CAAC,kBACb,UAAU,CAAC,gBACX,SAAS,CAAC,cACb;EACD,OAAOL,gBAAgB,CAACD,YAAY,EAAEM,eAAe,EAAEC,eAAe,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAAC,GAAGR,YAAY,EAAE;EACtC,OAAOC,gBAAgB,CAACD,YAAY,EAAE,CAAC,SAAS,CAAC,cAAc,CAAC;AACpE;AACA,SAASC,gBAAgBA,CAACD,YAAY,EAAES,QAAQ;AAChD;AACA;AACA;AACAC,WAAW,GAAGC,SAAS,EAAE;EACrB,MAAMC,UAAU,GAAGC,2BAA2B,CAACb,YAAY,CAAC;EAC5D,MAAMc,gBAAgB,GAAGL,QAAQ,IAAIM,wBAAwB,CAACN,QAAQ,CAAC;EACvE,OAAO,UAAUO,CAAC,EAAE;IAChB,OAAOA,CAAC,CAACC,IAAI,CAACC,YAAY,CAACN,UAAU,EAAEE,gBAAgB,CAAC,EAAEJ,WAAW,CAAC,CAAC,CAAC;EAC5E,CAAC;AACL;AACA,SAASQ,YAAYA,CAAClB,YAAY,EAAEM,eAAe,EAAE;EACjD,OAAOjM,sDAAM,CAAE8M,GAAG,IAAK;IACnB,MAAMC,UAAU,GAAGhM,yBAAyB,CAAC+L,GAAG,CAAC9L,MAAM,CAAC;IACxD,MAAMgM,SAAS,GAAGrB,YAAY,CAACoB,UAAU,CAAC;IAC1C,MAAME,WAAW,GAAGhB,eAAe,GAAGA,eAAe,CAACa,GAAG,CAACI,MAAM,CAAC,GAAG,IAAI;IACxE,OAAOF,SAAS,IAAIC,WAAW;EACnC,CAAC,CAAC;AACN;AACA,SAASf,eAAeA,CAAA,EAAG;EACvB,OAAOjM,mDAAG,CAAC,CAAC;IAAEe,MAAM;IAAEkM,MAAM;IAAEC;EAAM,CAAC,KAAK;IACtC,OAAO;MACHnM,MAAM;MACNmJ,MAAM,EAAE;QACJiD,UAAU,EAAE,YAAY,CAAC,qBAAqBF,MAAM;QACpDG,QAAQ,EAAE,UAAU,CAAC,mBAAmBH,MAAM;QAC9CC;MACJ;IACJ,CAAC;EACL,CAAC,CAAC;AACN;AACA,SAASb,SAASA,CAAA,EAAG;EACjB,OAAOrM,mDAAG,CAAE6M,GAAG,IAAKA,GAAG,CAAC9L,MAAM,CAAC;AACnC;AACA,SAASwL,2BAA2BA,CAACc,KAAK,EAAE;EACxC,OAAOA,KAAK,CAACtL,MAAM,CAAC,CAACuL,SAAS,EAAEC,KAAK,KAAK;IACtCD,SAAS,CAACxM,yBAAyB,CAACyM,KAAK,CAAC,CAAC,GAAG,IAAI;IAClD,OAAOD,SAAS;EACpB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AACA,SAASb,wBAAwBA,CAACN,QAAQ,EAAE;EACxC,OAAOA,QAAQ,CAACpK,MAAM,CAAC,CAACuL,SAAS,EAAEL,MAAM,KAAK;IAC1CK,SAAS,CAACL,MAAM,CAAC,GAAG,IAAI;IACxB,OAAOK,SAAS;EACpB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA,SAASE,SAASA,CAACC,qBAAqB,EAAE;EACtC,OAAQ7K,MAAM,IAAK;IACf,OAAO,IAAItD,4CAAU,CAAEoO,IAAI,IAAK;MAC5B,OAAO9K,MAAM,CAAC+K,SAAS,CAAC;QACpBC,IAAIA,CAACtF,KAAK,EAAE;UACRmF,qBAAqB,CAACjJ,KAAK,CAAC,MAAMkJ,IAAI,CAACE,IAAI,CAACtF,KAAK,CAAC,CAAC;QACvD,CAAC;QACD4E,KAAKA,CAACA,KAAK,EAAE;UACTO,qBAAqB,CAACjJ,KAAK,CAAC,MAAMkJ,IAAI,CAACR,KAAK,CAACA,KAAK,CAAC,CAAC;QACxD,CAAC;QACDW,QAAQA,CAAA,EAAG;UACPJ,qBAAqB,CAACjJ,KAAK,CAAC,MAAMkJ,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC;QACtD;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;AACL;AAEA,MAAMC,6BAA6B,CAAC;EAChC9M,WAAWA,CAAC+M,kBAAkB,EAAE;IAC5B,IAAI,CAACA,kBAAkB,GAAGA,kBAAkB;EAChD;EACA3J,KAAKA,CAACC,IAAI,EAAE;IACR,OAAO,IAAI,CAAC0J,kBAAkB,CAAC3J,KAAK,CAACC,IAAI,CAAC;EAC9C;EACAG,KAAKA,CAACH,IAAI,EAAE;IACR,OAAO,IAAI,CAAC0J,kBAAkB,CAACvJ,KAAK,CAACH,IAAI,CAAC;EAC9C;AACJ;AACA;AAAmByJ,6BAA6B,CAACnJ,IAAI,YAAAqJ,sCAAAnJ,CAAA;EAAA,YAAAA,CAAA,IAAyFiJ,6BAA6B,EA1e5B7P,sDAAE,CA0e4CqJ,uBAAuB;AAAA,CAA6C;AACjQ;AAAmBwG,6BAA6B,CAAC/I,KAAK,kBA3eyF9G,gEAAE;EAAAgH,KAAA,EA2eC6I,6BAA6B;EAAA5I,OAAA,EAA7B4I,6BAA6B,CAAAnJ,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AACtM;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KA5e+IjG,+DAAE,CA4erD6P,6BAA6B,EAAc,CAAC;IAC5H7M,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAEqE,SAAS;MAAEC,UAAU,EAAE,CAAC;QAC9DtE,IAAI,EAAE5C,iDAAM;QACZgH,IAAI,EAAE,CAACiC,uBAAuB;MAClC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2G,qBAAqBA,CAACC,SAAS,EAAE;EACtC,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAIC,eAAe,GAAG,KAAK;EAC3B,OAAO,SAASC,aAAaA,CAAC,GAAGhJ,IAAI,EAAE;IACnC,IAAI+I,eAAe,EAAE;MACjBD,UAAU,CAACG,OAAO,CAACjJ,IAAI,CAAC;MACxB;IACJ;IACA+I,eAAe,GAAG,IAAI;IACtBF,SAAS,CAAC,GAAG7I,IAAI,CAAC;IAClB,OAAO8I,UAAU,CAACrM,MAAM,GAAG,CAAC,EAAE;MAC1B,MAAMyM,YAAY,GAAGJ,UAAU,CAACK,GAAG,CAAC,CAAC;MACrCD,YAAY,IAAIL,SAAS,CAAC,GAAGK,YAAY,CAAC;IAC9C;IACAH,eAAe,GAAG,KAAK;EAC3B,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMK,cAAc,SAASlP,yCAAO,CAAC;EACjCyB,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG0N,SAAS,CAAC;IACnB,IAAI,CAACC,YAAY,GAAGV,qBAAqB,CAAE3F,KAAK,IAAK,KAAK,CAACsF,IAAI,CAACtF,KAAK,CAAC,CAAC;EAC3E;EACAsF,IAAIA,CAACtF,KAAK,EAAE;IACR,IAAI,CAACqG,YAAY,CAACrG,KAAK,CAAC;EAC5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMsG,sBAAsB,SAASpP,iDAAe,CAAC;EACjDwB,WAAWA,CAACsH,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACqG,YAAY,GAAGV,qBAAqB,CAAE3F,KAAK,IAAK,KAAK,CAACsF,IAAI,CAACtF,KAAK,CAAC,CAAC;IACvE,IAAI,CAACuG,aAAa,GAAGvG,KAAK;EAC9B;EACAhG,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACuM,aAAa;EAC7B;EACAjB,IAAIA,CAACtF,KAAK,EAAE;IACR,IAAI,CAACuG,aAAa,GAAGvG,KAAK;IAC1B,IAAI,CAACqG,YAAY,CAACrG,KAAK,CAAC;EAC5B;AACJ;;AAEA;AACA;AACA;AACA,MAAMwG,eAAe,SAASL,cAAc,CAAC;EACzCM,WAAWA,CAAA,EAAG;IACV,IAAI,CAAClB,QAAQ,CAAC,CAAC;EACnB;AACJ;AACA;AAAmBiB,eAAe,CAACnK,IAAI;EAAA,IAAAqK,4BAAA;EAAA,gBAAAC,wBAAApK,CAAA;IAAA,QAAAmK,4BAAA,KAAAA,4BAAA,GAvlBwG/Q,mEAAE,CAulBjB6Q,eAAe,IAAAjK,CAAA,IAAfiK,eAAe;EAAA;AAAA,IAAsD;AACrM;AAAmBA,eAAe,CAAC/J,KAAK,kBAxlBuG9G,gEAAE;EAAAgH,KAAA,EAwlBb6J,eAAe;EAAA5J,OAAA,EAAf4J,eAAe,CAAAnK,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAC1K;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAzlB+IjG,+DAAE,CAylBrD6Q,eAAe,EAAc,CAAC;IAC9G7N,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC;AAAA;AACV;AACA;AACA;AACA;AACA;AACA,MAAMgK,OAAO,SAAS7P,4CAAU,CAAC;EAC7B0B,WAAWA,CAACoO,gBAAgB,EAAEC,yBAAyB,EAAE;IACrD,MAAMC,sBAAsB,GAAGF,gBAAgB,CAACzC,IAAI,CAACa,SAAS,CAAC6B,yBAAyB,CAAC;IACzF;IACA;IACA;IACA;IACApP,qDAAK,CAAC,CAAC,CAAC;IACR,KAAK,CAACsP,QAAQ,IAAI;MACd,MAAMC,iBAAiB,GAAGF,sBAAsB,CAAC3B,SAAS,CAAC;QACvDC,IAAI,EAAEf,GAAG,IAAI0C,QAAQ,CAAC3B,IAAI,CAACf,GAAG,CAAC;QAC/BK,KAAK,EAAEA,KAAK,IAAIqC,QAAQ,CAACrC,KAAK,CAACA,KAAK,CAAC;QACrCW,QAAQ,EAAEA,CAAA,KAAM0B,QAAQ,CAAC1B,QAAQ,CAAC;MACtC,CAAC,CAAC;MACF0B,QAAQ,CAACE,GAAG,CAACD,iBAAiB,CAAC;IACnC,CAAC,CAAC;EACN;AACJ;AACA;AAAmBL,OAAO,CAACxK,IAAI,YAAA+K,gBAAA7K,CAAA;EAAA,YAAAA,CAAA,IAAyFsK,OAAO,EApnBgBlR,sDAAE,CAonBA6Q,eAAe,GApnBjB7Q,sDAAE,CAonB4B6P,6BAA6B;AAAA,CAA6C;AACvP;AAAmBqB,OAAO,CAACpK,KAAK,kBArnB+G9G,gEAAE;EAAAgH,KAAA,EAqnBrBkK,OAAO;EAAAjK,OAAA,EAAPiK,OAAO,CAAAxK,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAC1J;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAtnB+IjG,+DAAE,CAsnBrDkR,OAAO,EAAc,CAAC;IACtGlO,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAE6N;IAAgB,CAAC,EAAE;MAAE7N,IAAI,EAAE6M;IAA8B,CAAC,CAAC;EAAE,CAAC;AAAA;;AAExH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM6B,OAAO,GAAIC,KAAK,IAAK,CAAC,GAAGvK,IAAI,KAAK;EACpC,MAAMwK,IAAI,GAAGD,KAAK,CAAC/M,KAAK,CAAC,CAAC;EAC1B,OAAOgN,IAAI,CAAC,GAAGxK,IAAI,EAAE,CAAC,GAAGyK,QAAQ,KAAKH,OAAO,CAACC,KAAK,CAAC,CAAC,GAAGE,QAAQ,CAAC,CAAC;AACtE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,qBAAqB,EAAEvC,qBAAqB,EAAE;EACpE,OAAQ7K,MAAM,IAAK;IACf,IAAIqN,UAAU,GAAG,KAAK;IACtBrN,MAAM,CAAC+K,SAAS,CAAC;MACbT,KAAK,EAAEA,KAAK,IAAI;QACZ;QACA;QACA;QACAO,qBAAqB,CAACrJ,KAAK,CAAC,MAAM8L,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;UAC3D,IAAI,CAACH,UAAU,EAAE;YACbxC,qBAAqB,CAACjJ,KAAK,CAAC,MAAMwL,qBAAqB,CAACK,iBAAiB,CAACnD,KAAK,CAAC,CAAC;UACrF;QACJ,CAAC,CAAC,CAAC;MACP;IACJ,CAAC,CAAC;IACF,OAAO,IAAI5N,4CAAU,CAACgR,UAAU,IAAI;MAChCL,UAAU,GAAG,IAAI;MACjB,OAAOrN,MAAM,CAAC+J,IAAI,CAACa,SAAS,CAACC,qBAAqB,CAAC,CAAC,CAACE,SAAS,CAAC2C,UAAU,CAAC;IAC9E,CAAC,CAAC;EACN,CAAC;AACL;AACA,MAAMC,qBAAqB,CAAC;EACxBvP,WAAWA,CAACwP,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B;IACA,IAAI,CAACC,aAAa,GAAG,IAAI;EAC7B;EACAJ,iBAAiBA,CAACnD,KAAK,EAAE;IACrB,IAAI,IAAI,CAACuD,aAAa,KAAK,IAAI,EAAE;MAC7B,IAAI,CAACA,aAAa,GAAG,IAAI,CAACD,SAAS,CAAChJ,GAAG,CAAC9I,uDAAY,CAAC;IACzD;IACA;IACA;IACA;IACA;IACA,IAAI;MACA,IAAI,CAAC+R,aAAa,CAACC,WAAW,CAACxD,KAAK,CAAC;IACzC,CAAC,CACD,OAAOyD,EAAE,EAAE,CAAE;EACjB;AACJ;AACA;AAAmBJ,qBAAqB,CAAC5L,IAAI,YAAAiM,8BAAA/L,CAAA;EAAA,YAAAA,CAAA,IAAyF0L,qBAAqB,EA1sBZtS,sDAAE,CA0sB4BA,mDAAW;AAAA,CAA6C;AACrO;AAAmBsS,qBAAqB,CAACxL,KAAK,kBA3sBiG9G,gEAAE;EAAAgH,KAAA,EA2sBPsL,qBAAqB;EAAArL,OAAA,EAArBqL,qBAAqB,CAAA5L,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AACtL;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KA5sB+IjG,+DAAE,CA4sBrDsS,qBAAqB,EAAc,CAAC;IACpHtP,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAEhD,mDAAW4S;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAE3E;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAASlC,sBAAsB,CAAC;EAC7C5N,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC,CAAC,CAAC;EACb;EACA+N,WAAWA,CAAA,EAAG;IACV;IACA;IACA;IACA,IAAI,CAAClB,QAAQ,CAAC,CAAC;EACnB;AACJ;AACA;AAAmBiD,WAAW,CAACnM,IAAI,YAAAoM,oBAAAlM,CAAA;EAAA,YAAAA,CAAA,IAAyFiM,WAAW;AAAA,CAAoD;AAC3L;AAAmBA,WAAW,CAAC/L,KAAK,kBAjuB2G9G,gEAAE;EAAAgH,KAAA,EAiuBjB6L,WAAW;EAAA5L,OAAA,EAAX4L,WAAW,CAAAnM,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAClK;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAluB+IjG,+DAAE,CAkuBrD6S,WAAW,EAAc,CAAC;IAC1G7P,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC;AAAA;AAEtD,MAAM6L,aAAa,CAAC;EAChBhQ,WAAWA,CAACiQ,cAAc,EAAEC,eAAe,EAAE;IACzC,IAAI,CAACD,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC3B;EACA,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAQ,IAAI,CAACJ,cAAc,IAAI,IAAI,CAACA,cAAc,CAACE,OAAO,IAAK,IAAI,CAACA,OAAO;EAC/E;EACAC,gBAAgBA,CAAA,EAAG;IACf,MAAME,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC/C,IAAI,CAACF,WAAW,CAACpG,IAAI,CAAC,GAAGqG,cAAc,CAAC;EAC5C;EACAC,iBAAiBA,CAAA,EAAG;IAChB,MAAMC,QAAQ,GAAG,IAAI,CAACN,eAAe,IAAI,EAAE;IAC3C,OAAOM,QAAQ,CAACxR,GAAG,CAAEyR,MAAM,IAAMA,MAAM,CAACC,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,GAAGA,MAAO,CAAC;EAC1F;AACJ;AACA;AAAmBT,aAAa,CAACrM,IAAI,YAAAiN,sBAAA/M,CAAA;EAAA,YAAAA,CAAA,IAAyFmM,aAAa,EA1vBI/S,sDAAE,CA0vBY+S,aAAa,OA1vB3B/S,sDAAE,CA0vBsE6H,YAAY;AAAA,CAA6D;AAChS;AAAmBkL,aAAa,CAACjM,KAAK,kBA3vByG9G,gEAAE;EAAAgH,KAAA,EA2vBf+L,aAAa;EAAA9L,OAAA,EAAb8L,aAAa,CAAArM;AAAA,EAAG;AAClJ;EAAA,QAAAT,SAAA,oBAAAA,SAAA,KA5vB+IjG,+DAAE,CA4vBrD+S,aAAa,EAAc,CAAC;IAC5G/P,IAAI,EAAE7C,qDAAUA;EACpB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE6C,IAAI,EAAE+P,aAAa;MAAEzL,UAAU,EAAE,CAAC;QAClEtE,IAAI,EAAEtC,mDAAQA;MAClB,CAAC,EAAE;QACCsC,IAAI,EAAErC,mDAAQA;MAClB,CAAC;IAAE,CAAC,EAAE;MAAEqC,IAAI,EAAEqE,SAAS;MAAEC,UAAU,EAAE,CAAC;QAClCtE,IAAI,EAAE5C,iDAAM;QACZgH,IAAI,EAAE,CAACS,YAAY;MACvB,CAAC,EAAE;QACC7E,IAAI,EAAEtC,mDAAQA;MAClB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,MAAMkT,+BAA+B,SAAStS,yCAAO,CAAC;AAEtD;AAAmBsS,+BAA+B,CAAClN,IAAI;EAAA,IAAAmN,4CAAA;EAAA,gBAAAC,wCAAAlN,CAAA;IAAA,QAAAiN,4CAAA,KAAAA,4CAAA,GAjxBwF7T,mEAAE,CAixBD4T,+BAA+B,IAAAhN,CAAA,IAA/BgN,+BAA+B;EAAA;AAAA,IAAsD;AACrO;AAAmBA,+BAA+B,CAAC9M,KAAK,kBAlxBuF9G,gEAAE;EAAAgH,KAAA,EAkxBG4M,+BAA+B;EAAA3M,OAAA,EAA/B2M,+BAA+B,CAAAlN,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAC1M;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAnxB+IjG,+DAAE,CAmxBrD4T,+BAA+B,EAAc,CAAC;IAC9H5Q,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC;AAAA;AACV,MAAM6M,kBAAkB,CAAC;EACrBhR,WAAWA,CAACiR,QAAQ,EAAEC,cAAc,EAAEC,cAAc,EAAEC,YAAY,EAAEC,sBAAsB,EAAEC,sBAAsB,EAAE;IAChH,IAAI,CAACL,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,sBAAsB,GAAGA,sBAAsB;IACpD,IAAI,CAACC,sBAAsB,GAAGA,sBAAsB;EACxD;EACA;AACJ;AACA;EACIC,QAAQA,CAACC,eAAe,EAAE;IACtB,MAAMtI,MAAM,GAAG,IAAI,CAACmI,sBAAsB,CAACjO,KAAK,CAAC,MAAM,IAAI,CAACqO,gBAAgB,CAACD,eAAe,CAAC,CAAC;IAC9F,OAAOtI,MAAM,CAACyC,IAAI,CAACoD,gBAAgB,CAAC,IAAI,CAACuC,sBAAsB,EAAE,IAAI,CAACD,sBAAsB,CAAC,CAAC;EAClG;EACAI,gBAAgBA,CAACD,eAAe,EAAE;IAC9B,IAAIrQ,KAAK,CAACC,OAAO,CAACoQ,eAAe,CAAC,EAAE;MAChC,IAAIA,eAAe,CAAC1Q,MAAM,KAAK,CAAC,EAC5B,OAAOrC,yCAAE,CAAC,IAAI,CAAC2S,YAAY,CAAC9P,QAAQ,CAAC,CAAC,CAAC;MAC3C,OAAO5C,+CAAQ,CAAC8S,eAAe,CAACxS,GAAG,CAACe,MAAM,IAAI,IAAI,CAAC2R,cAAc,CAAC3R,MAAM,CAAC,CAAC,CAAC;IAC/E,CAAC,MACI;MACD,OAAO,IAAI,CAAC2R,cAAc,CAACF,eAAe,CAAC;IAC/C;EACJ;EACAE,cAAcA,CAAC3R,MAAM,EAAE;IACnB,IAAI,OAAOmD,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C,MAAMjD,IAAI,GAAGH,yBAAyB,CAACC,MAAM,CAAC;MAC9C,IAAI,CAACE,IAAI,EAAE;QACP,MAAMiM,KAAK,GAAG,IAAIjK,KAAK,CAAE,6CAA4ClC,MAAM,CAACC,WAAW,CAACgC,IAAK,EAAC,CAAC;QAC/F,OAAOrD,iDAAU,CAACuN,KAAK,CAAC;MAC5B;IACJ;IACA,MAAMyF,SAAS,GAAG,IAAI,CAACP,YAAY,CAAC9P,QAAQ,CAAC,CAAC;IAC9C,MAAM6O,OAAO,GAAG,IAAI,CAACgB,cAAc,CAAChB,OAAO;IAC3C,OAAOxB,OAAO,CAAC,CACX,GAAGwB,OAAO,EACV,CAACyB,SAAS,EAAEC,UAAU,KAAK;MACvB,IAAID,SAAS,KAAKD,SAAS,EAAE;QACzB,IAAI,CAACP,YAAY,CAACxE,IAAI,CAACgF,SAAS,CAAC;MACrC;MACA,MAAME,aAAa,GAAG,IAAI,CAACC,qBAAqB,CAACF,UAAU,CAAC;MAC5DC,aAAa,CAACnF,SAAS,CAACd,GAAG,IAAI,IAAI,CAACoF,QAAQ,CAACrE,IAAI,CAACf,GAAG,CAAC,CAAC;MACvD,IAAI,CAACoF,QAAQ,CAACrE,IAAI,CAAC;QAAE7M,MAAM,EAAE8R,UAAU;QAAE5F,MAAM,EAAE,YAAY,CAAC;MAAiB,CAAC,CAAC;MACjF,OAAO,IAAI,CAAC+F,wBAAwB,CAACF,aAAa,CAAC;IACvD,CAAC,CACJ,CAAC,CAACH,SAAS,EAAE5R,MAAM,CAAC,CAAC4L,IAAI,CAACzM,4DAAW,CAAC,CAAC,CAAC;EAC7C;EACA6S,qBAAqBA,CAAChS,MAAM,EAAE;IAC1B,OAAO,IAAI,CAACmR,cAAc,CAACvF,IAAI,CAAC5M,sDAAM,CAAE8M,GAAG,IAAKA,GAAG,CAAC9L,MAAM,KAAKA,MAAM,IAAI8L,GAAG,CAACI,MAAM,KAAK,YAAY,CAAC,gBAAgB,CAAC,EAAE9M,qDAAI,CAAC,CAAC,CAAC,EAAED,4DAAW,CAAC,CAAC,CAAC;EACnJ;EACA8S,wBAAwBA,CAACF,aAAa,EAAE;IACpC,OAAOA,aAAa,CACfnG,IAAI,CAACvM,2DAAU,CAAEyM,GAAG,IAAK;MAC1B,QAAQA,GAAG,CAACI,MAAM;QACd,KAAK,YAAY,CAAC;UACd,OAAOxN,yCAAE,CAAC,IAAI,CAAC2S,YAAY,CAAC9P,QAAQ,CAAC,CAAC,CAAC;QAC3C,KAAK,SAAS,CAAC;UACX,OAAO3C,iDAAU,CAACkN,GAAG,CAACK,KAAK,CAAC;QAChC;UACI,OAAOtN,wCAAK;MACpB;IACJ,CAAC,CAAC,CAAC,CACE+M,IAAI,CAACzM,4DAAW,CAAC,CAAC,CAAC;EAC5B;AACJ;AACA;AAAmB8R,kBAAkB,CAACrN,IAAI,YAAAsO,2BAAApO,CAAA;EAAA,YAAAA,CAAA,IAAyFmN,kBAAkB,EA11BN/T,sDAAE,CA01BsB6Q,eAAe,GA11BvC7Q,sDAAE,CA01BkD4T,+BAA+B,GA11BnF5T,sDAAE,CA01B8F+S,aAAa,GA11B7G/S,sDAAE,CA01BwH6S,WAAW,GA11BrI7S,sDAAE,CA01BgJ6P,6BAA6B,GA11B/K7P,sDAAE,CA01B0LsS,qBAAqB;AAAA,CAA6C;AAC7Y;AAAmByB,kBAAkB,CAACjN,KAAK,kBA31BoG9G,gEAAE;EAAAgH,KAAA,EA21BV+M,kBAAkB;EAAA9M,OAAA,EAAlB8M,kBAAkB,CAAArN,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAChL;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KA51B+IjG,+DAAE,CA41BrD+T,kBAAkB,EAAc,CAAC;IACjH/Q,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAE6N;IAAgB,CAAC,EAAE;MAAE7N,IAAI,EAAE4Q;IAAgC,CAAC,EAAE;MAAE5Q,IAAI,EAAE+P;IAAc,CAAC,EAAE;MAAE/P,IAAI,EAAE6P;IAAY,CAAC,EAAE;MAAE7P,IAAI,EAAE6M;IAA8B,CAAC,EAAE;MAAE7M,IAAI,EAAEsP;IAAsB,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEpP;AACA;AACA;AACA;AACA,MAAM2C,UAAU,GAAIxG,CAAC,IAAK;EACtBhL,MAAM,CAACyR,MAAM,CAACzG,CAAC,CAAC;EAChB,MAAM0G,WAAW,GAAG,OAAO1G,CAAC,KAAK,UAAU;EAC3C,MAAM2G,UAAU,GAAG3R,MAAM,CAAC4R,SAAS,CAAC1L,cAAc;EAClDlG,MAAM,CAAC6R,mBAAmB,CAAC7G,CAAC,CAAC,CAACxB,OAAO,CAAC,UAAU1J,IAAI,EAAE;IAClD,IAAI6R,UAAU,CAACG,IAAI,CAAC9G,CAAC,EAAElL,IAAI,CAAC,KACvB4R,WAAW,GAAG5R,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,WAAW,GAAG,IAAI,CAAC,IACrFkL,CAAC,CAAClL,IAAI,CAAC,KAAK,IAAI,KACf,OAAOkL,CAAC,CAAClL,IAAI,CAAC,KAAK,QAAQ,IAAI,OAAOkL,CAAC,CAAClL,IAAI,CAAC,KAAK,UAAU,CAAC,IAC9D,CAACE,MAAM,CAAC+R,QAAQ,CAAC/G,CAAC,CAAClL,IAAI,CAAC,CAAC,EAAE;MAC3B0R,UAAU,CAACxG,CAAC,CAAClL,IAAI,CAAC,CAAC;IACvB;EACJ,CAAC,CAAC;EACF,OAAOkL,CAAC;AACZ,CAAC;;AAED;AACA;AACA;AACA,MAAMgH,uBAAuB,CAAC;EAC1B1S,WAAWA,CAACoR,YAAY,EAAEuB,WAAW,EAAEC,OAAO,EAAE;IAC5C,IAAI,CAACxB,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACuB,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EACA;AACJ;AACA;EACIC,sBAAsBA,CAAA,EAAG;IACrB,MAAMC,mBAAmB,GAAG;MACxBC,QAAQ,EAAEA,CAAA,KAAM,IAAI,CAAC3B,YAAY,CAAC9P,QAAQ,CAAC,CAAC;MAC5C0R,QAAQ,EAAGC,QAAQ,IAAK,IAAI,CAAC7B,YAAY,CAACxE,IAAI,CAACqG,QAAQ,CAAC;MACxD1B,QAAQ,EAAGC,eAAe,IAAK,IAAI,CAACmB,WAAW,CAACpB,QAAQ,CAACC,eAAe;IAC5E,CAAC;IACD,IAAI,OAAOtO,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C,OAAO,IAAI,CAAC0P,OAAO,CAACM,eAAe,GAC7BC,iCAAiC,CAACL,mBAAmB,CAAC,GACtDA,mBAAmB;IAC7B,CAAC,MACI;MACD,OAAOA,mBAAmB;IAC9B;EACJ;EACAM,2BAA2BA,CAACC,OAAO,EAAE;IACjC,MAAMC,eAAe,GAAG,IAAI,CAACT,sBAAsB,CAAC,CAAC;IACrD;IACA,MAAMU,YAAY,GAAGD,eAAe,CAACP,QAAQ,CAAC,CAAC;IAC/C;IACAO,eAAe,CAACN,QAAQ,CAACtS,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE4S,YAAY,CAAC,EAAEF,OAAO,CAACtM,QAAQ,CAAC,CAAC;EAC9F;AACJ;AACA;AAAmB2L,uBAAuB,CAAC/O,IAAI,YAAA6P,gCAAA3P,CAAA;EAAA,YAAAA,CAAA,IAAyF6O,uBAAuB,EAx5BhBzV,sDAAE,CAw5BgC6S,WAAW,GAx5B7C7S,sDAAE,CAw5BwD+T,kBAAkB,GAx5B5E/T,sDAAE,CAw5BuFiI,UAAU;AAAA,CAA6C;AAC/R;AAAmBwN,uBAAuB,CAAC3O,KAAK,kBAz5B+F9G,gEAAE;EAAAgH,KAAA,EAy5BLyO,uBAAuB;EAAAxO,OAAA,EAAvBwO,uBAAuB,CAAA/O,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAC1L;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KA15B+IjG,+DAAE,CA05BrDyV,uBAAuB,EAAc,CAAC;IACtHzS,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAE6P;IAAY,CAAC,EAAE;MAAE7P,IAAI,EAAE+Q;IAAmB,CAAC,EAAE;MAAE/Q,IAAI,EAAEiF;IAAW,CAAC,CAAC;EAAE,CAAC;AAAA;AAC/H,SAASiO,iCAAiCA,CAACM,IAAI,EAAE;EAC7C,OAAO;IACHV,QAAQ,EAAEA,CAAA,KAAMU,IAAI,CAACV,QAAQ,CAAC,CAAC;IAC/BC,QAAQ,EAAE1L,KAAK,IAAI;MACf,MAAMoM,WAAW,GAAGxB,UAAU,CAAC5K,KAAK,CAAC;MACrC,OAAOmM,IAAI,CAACT,QAAQ,CAACU,WAAW,CAAC;IACrC,CAAC;IACDnC,QAAQ,EAAEzK,OAAO,IAAI;MACjB,OAAO2M,IAAI,CAAClC,QAAQ,CAACzK,OAAO,CAAC;IACjC;EACJ,CAAC;AACL;AAEA,SAAS6M,WAAWA,CAACrM,KAAK,EAAE;EACxB,OAAQsM,aAAa,IAAK;IACtB,IAAI,OAAO1Q,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C,IAAI/B,KAAK,CAACC,OAAO,CAACkG,KAAK,CAAC,EAAE;QACtBzE,uBAAuB,CAAC,CAAC;MAC7B,CAAC,MACI,IAAI,OAAOyE,KAAK,KAAK,QAAQ,EAAE;QAChCxE,2BAA2B,CAAC,CAAC;MACjC;IACJ;IACA,MAAMmQ,QAAQ,GAAGvS,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEiT,aAAa,CAAC;IACjD,KAAK,MAAM9R,GAAG,IAAIwF,KAAK,EAAE;MACrB;MACA2L,QAAQ,CAACnR,GAAG,CAAC,GAAGwF,KAAK,CAACxF,GAAG,CAAC;IAC9B;IACA,OAAOmR,QAAQ;EACnB,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAMY,mBAAmB,CAAC;EACtB7T,WAAWA,CAAC8T,wBAAwB,EAAE;IAClC,IAAI,CAACA,wBAAwB,GAAGA,wBAAwB;EAC5D;EACA;AACJ;AACA;EACIC,kBAAkBA,CAACC,WAAW,EAAE;IAC5B,MAAMP,IAAI,GAAG,IAAI,CAACK,wBAAwB,CAACjB,sBAAsB,CAAC,CAAC;IACnE,OAAO;MACHE,QAAQA,CAAA,EAAG;QACP,MAAMkB,eAAe,GAAGR,IAAI,CAACV,QAAQ,CAAC,CAAC;QACvC,OAAOA,QAAQ,CAACkB,eAAe,EAAED,WAAW,CAAChN,IAAI,CAAC;MACtD,CAAC;MACDkN,UAAUA,CAACzT,GAAG,EAAE;QACZ,MAAMwT,eAAe,GAAGR,IAAI,CAACV,QAAQ,CAAC,CAAC;QACvC,MAAMoB,aAAa,GAAGR,WAAW,CAAClT,GAAG,CAAC;QACtC,OAAO2T,oBAAoB,CAACX,IAAI,EAAEQ,eAAe,EAAEE,aAAa,EAAEH,WAAW,CAAChN,IAAI,CAAC;MACvF,CAAC;MACDgM,QAAQA,CAACvS,GAAG,EAAE;QACV,MAAMwT,eAAe,GAAGR,IAAI,CAACV,QAAQ,CAAC,CAAC;QACvC,OAAOlT,sEAAe,CAACY,GAAG,CAAC,GACrB2T,oBAAoB,CAACX,IAAI,EAAEQ,eAAe,EAAExT,GAAG,EAAEuT,WAAW,CAAChN,IAAI,CAAC,GAClEqN,aAAa,CAACZ,IAAI,EAAEQ,eAAe,EAAExT,GAAG,EAAEuT,WAAW,CAAChN,IAAI,CAAC;MACrE,CAAC;MACDuK,QAAQA,CAACzK,OAAO,EAAE;QACd,OAAO2M,IAAI,CAAClC,QAAQ,CAACzK,OAAO,CAAC;MACjC;IACJ,CAAC;EACL;AACJ;AACA;AAAmB+M,mBAAmB,CAAClQ,IAAI,YAAA2Q,4BAAAzQ,CAAA;EAAA,YAAAA,CAAA,IAAyFgQ,mBAAmB,EAj+BR5W,sDAAE,CAi+BwByV,uBAAuB;AAAA,CAA6C;AAC7O;AAAmBmB,mBAAmB,CAAC9P,KAAK,kBAl+BmG9G,gEAAE;EAAAgH,KAAA,EAk+BT4P,mBAAmB;EAAA3P,OAAA,EAAnB2P,mBAAmB,CAAAlQ,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AAClL;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAn+B+IjG,+DAAE,CAm+BrD4W,mBAAmB,EAAc,CAAC;IAClH5T,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAEyS;IAAwB,CAAC,CAAC;EAAE,CAAC;AAAA;AACvF,SAAS2B,aAAaA,CAACZ,IAAI,EAAEQ,eAAe,EAAEM,QAAQ,EAAEvN,IAAI,EAAE;EAC1D,MAAMwN,WAAW,GAAGlU,QAAQ,CAAC2T,eAAe,EAAEjN,IAAI,EAAEuN,QAAQ,CAAC;EAC7Dd,IAAI,CAACT,QAAQ,CAACwB,WAAW,CAAC;EAC1B,OAAOA,WAAW;EAClB;EACA;EACA;EACA;EACA;EACA;AACJ;AACA,SAASJ,oBAAoBA,CAACX,IAAI,EAAEQ,eAAe,EAAEQ,aAAa,EAAEzN,IAAI,EAAE;EACtE,MAAM0N,KAAK,GAAG3B,QAAQ,CAACkB,eAAe,EAAEjN,IAAI,CAAC;EAC7C,MAAMuN,QAAQ,GAAGE,aAAa,CAACC,KAAK,CAAC;EACrC,OAAOL,aAAa,CAACZ,IAAI,EAAEQ,eAAe,EAAEM,QAAQ,EAAEvN,IAAI,CAAC;AAC/D;AACA,SAAS+L,QAAQA,CAACkB,eAAe,EAAEjN,IAAI,EAAE;EACrC,OAAO1F,QAAQ,CAAC2S,eAAe,EAAEjN,IAAI,CAAC;AAC1C;AAEA,MAAM2N,cAAc,GAAG,IAAIC,MAAM,CAAC,iBAAiB,CAAC;AACpD,SAASC,sBAAsBA,CAAC7S,IAAI,EAAE;EAClC,IAAI,CAACA,IAAI,EAAE;IACPE,2BAA2B,CAAC,CAAC;EACjC,CAAC,MACI,IAAI,CAACyS,cAAc,CAACG,IAAI,CAAC9S,IAAI,CAAC,EAAE;IACjCD,mBAAmB,CAACC,IAAI,CAAC;EAC7B;AACJ;AACA,SAAS+S,uBAAuBA,CAACC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAE;EAC7D,MAAMtB,aAAa,GAAGsB,YAAY,CAACF,SAAS,CAAC;EAC7C,IAAIpB,aAAa,IAAIA,aAAa,KAAKqB,KAAK,EAAE;IAC1C9S,qBAAqB,CAAC6S,SAAS,EAAEC,KAAK,CAACjT,IAAI,EAAE4R,aAAa,CAAC5R,IAAI,CAAC;EACpE;AACJ;AACA,SAASmT,wBAAwBA,CAACvM,YAAY,EAAE;EAC5CA,YAAY,CAACsB,OAAO,CAAEpB,UAAU,IAAK;IACjC,IAAI,CAACvB,kBAAkB,CAACuB,UAAU,CAAC,EAAE;MACjCvG,wBAAwB,CAACuG,UAAU,CAAC9G,IAAI,CAAC;IAC7C;EACJ,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASoT,4BAA4BA,CAACtM,UAAU,EAAE;EAC9C,IAAIuM,2BAA2B,CAACvM,UAAU,CAAC,IAAIwM,sBAAsB,CAACxM,UAAU,CAAC,EAAE;IAC/E;EACJ;EACArE,OAAO,CAACC,IAAI,CAAC/B,sCAAsC,CAACmG,UAAU,CAAC9G,IAAI,CAAC,CAAC;AACzE;AACA,SAASsT,sBAAsBA,CAACxM,UAAU,EAAE;EACxC;EACA;EACA;EACA;EACA,OAAO,CAAC,CAACA,UAAU,CAAC/E,KAAK;AAC7B;AACA,SAASsR,2BAA2BA,CAACvM,UAAU,EAAE;EAC7C;EACA,MAAMyM,WAAW,GAAGzM,UAAU,CAAC0M,eAAe,IAAI,EAAE;EACpD,OAAOD,WAAW,CAACE,IAAI,CAAEC,UAAU,IAAK,CAACA,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACC,cAAc,MAAM,YAAY,CAAC;AACjJ;;AAEA;AACA;AACA;AACA,MAAMC,SAAS,CAAC;AAEhBA,SAAS,CAAC3V,IAAI,GAAG,QAAQ;AACzB;AACA;AACA;AACA,MAAM4V,WAAW,CAAC;EACd7V,WAAWA,CAAC8V,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;AACJ;AACAD,WAAW,CAAC5V,IAAI,GAAG,gBAAgB;AAEnC,MAAM8V,wBAAwB,GAAG,IAAIzY,yDAAc,CAAC,0BAA0B,EAAE;EAC5E6G,UAAU,EAAE,MAAM;EAClBD,OAAO,EAAEA,CAAA,MAAO;IAAE8R,sBAAsB,EAAE;EAAK,CAAC;AACpD,CAAC,CAAC;AAEF,MAAMC,0BAA0B,CAAC;EAC7BjW,WAAWA,CAAC4F,OAAO,EAAE;IACjB;AACR;AACA;AACA;IACQ,IAAI,CAACsQ,eAAe,GAAG,IAAIC,GAAG,CAAC,CAACP,SAAS,CAAC3V,IAAI,EAAE4V,WAAW,CAAC5V,IAAI,CAAC,CAAC;IAClE,IAAI,OAAO2F,OAAO,CAACoQ,sBAAsB,KAAK,QAAQ,EAAE;MACpD,IAAI,CAACI,aAAa,CAAC,GAAGxQ,OAAO,CAACoQ,sBAAsB,CAACK,MAAM,CAAC;IAChE;EACJ;EACA;AACJ;AACA;EACID,aAAaA,CAAC,GAAGtP,OAAO,EAAE;IACtB,KAAK,MAAM/G,MAAM,IAAI+G,OAAO,EAAE;MAC1B,IAAI,CAACoP,eAAe,CAACzH,GAAG,CAAC1O,MAAM,CAACE,IAAI,CAAC;IACzC;EACJ;EACA;EACAyE,IAAIA,CAAC3E,MAAM,EAAE;IACT,MAAMuW,qBAAqB,GAAGnV,KAAK,CAACtC,IAAI,CAAC,IAAI,CAACqX,eAAe,CAAC,CAACT,IAAI,CAACxV,IAAI,IAAIA,IAAI,KAAKH,yBAAyB,CAACC,MAAM,CAAC,CAAC;IACvH,IAAIuW,qBAAqB,EAAE;MACvB;IACJ;IACAvW,MAAM,GACFA,MAAM,CAACC,WAAW,IAAID,MAAM,CAACC,WAAW,CAACgC,IAAI,KAAK,QAAQ,GACpDjC,MAAM,CAACC,WAAW,CAACgC,IAAI,GACvBjC,MAAM,CAACE,IAAI;IACrBwE,OAAO,CAACC,IAAI,CAAE,OAAM3E,MAAO,6IAA4I,CAAC;EAC5K;AACJ;AACA;AAAmBkW,0BAA0B,CAACtS,IAAI,YAAA4S,mCAAA1S,CAAA;EAAA,YAAAA,CAAA,IAAyFoS,0BAA0B,EA/lCtBhZ,sDAAE,CA+lCsC8Y,wBAAwB;AAAA,CAA6C;AAC5P;AAAmBE,0BAA0B,CAAClS,KAAK,kBAhmC4F9G,gEAAE;EAAAgH,KAAA,EAgmCFgS,0BAA0B;EAAA/R,OAAA,EAA1B+R,0BAA0B,CAAAtS;AAAA,EAAG;AAC5K;EAAA,QAAAT,SAAA,oBAAAA,SAAA,KAjmC+IjG,+DAAE,CAimCrDgZ,0BAA0B,EAAc,CAAC;IACzHhW,IAAI,EAAE7C,qDAAUA;EACpB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE6C,IAAI,EAAEqE,SAAS;MAAEC,UAAU,EAAE,CAAC;QAC9DtE,IAAI,EAAE5C,iDAAM;QACZgH,IAAI,EAAE,CAAC0R,wBAAwB;MACnC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AAExB,MAAMS,WAAW,GAAG,OAAOtT,SAAS,KAAK,WAAW,IAAIA,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMuT,YAAY,CAAC;EACfzW,WAAWA,CAACwP,SAAS,EAAEoD,OAAO,EAAE8D,cAAc,EAAEzF,QAAQ,EAAEC,cAAc,EAAEyF,oBAAoB,EAAEC,aAAa,EAAE;IAC3G,IAAI,CAACpH,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACoD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC8D,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACzF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACyF,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,oBAAoB,GAAG,IAAI;IAChC,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;IACvB,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;IACrB,IAAI,CAACC,yBAAyB,GAAGjZ,8DAAO,CAAC,MAAM;MAC3C;MACA,MAAMkZ,YAAY,GAAG,IAAI;MACzB,SAASC,aAAaA,CAACrV,GAAG,EAAE;QACxB,MAAMkF,IAAI,GAAGkQ,YAAY,CAACE,UAAU,CAACtV,GAAG,CAAC;QACzC,OAAOkF,IAAI,GAAGyB,UAAU,CAACzB,IAAI,CAACpG,KAAK,CAAC,GAAG,CAAC,EAAEsW,YAAY,CAACtE,OAAO,CAAC,GAAG,IAAI;MAC1E;MACA,MAAM1L,OAAO,GAAG,IAAI,CAACwP,cAAc,GAC7B,IAAI,CAACA,cAAc,CAACO,yBAAyB,CAAC,CAAC,GAC/C;QACE9P,cAAcA,CAACrF,GAAG,EAAE;UAChB,IAAIuV,MAAM,GAAGF,aAAa,CAACrV,GAAG,CAAC;UAC/B,IAAIuV,MAAM,EAAE;YACR,OAAOA,MAAM;UACjB;UACA,OAAO,CAAC,GAAGhT,IAAI,KAAK;YAChB;YACA,IAAI,CAACgT,MAAM,EAAE;cACTA,MAAM,GAAGF,aAAa,CAACrV,GAAG,CAAC;YAC/B;YACA,OAAOuV,MAAM,GAAGA,MAAM,CAAC,GAAGhT,IAAI,CAAC,GAAGC,SAAS;UAC/C,CAAC;QACL,CAAC;QACDsD,kBAAkBA,CAAC0P,YAAY,EAAE;UAC7B,MAAMC,qBAAqB,GAAGL,YAAY,CAACtE,OAAO,CAACxN,eAAe;UAClE,OAAO1E,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE4W,qBAAqB,CAAC,EAAGD,YAAY,IAAI,CAAC,CAAE,CAAC;QACxF;MACJ,CAAC;MACL,OAAOpQ,OAAO;IAClB,CAAC,CAAC;EACN;EACA,IAAIkC,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACsN,cAAc,GAAG,IAAI,CAACA,cAAc,CAACtN,MAAM,GAAG,IAAI,CAAC0N,OAAO;EAC1E;EACA,IAAI5B,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACwB,cAAc,GAAG,IAAI,CAACA,cAAc,CAACxB,YAAY,GAAG,IAAI,CAAC6B,aAAa;EACtF;EACA,IAAIK,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACV,cAAc,GAAG,IAAI,CAACA,cAAc,CAACU,UAAU,GAAG,IAAI,CAACJ,WAAW;EAClF;EACA,OAAOQ,cAAcA,CAACzQ,QAAQ,EAAE;IAC5B,IAAIO,KAAK,GAAGP,QAAQ;IACpB,IAAI5F,KAAK,CAACC,OAAO,CAAC2F,QAAQ,CAAC,EAAE;MACzBO,KAAK,GAAGP,QAAQ,CAAC1F,KAAK,CAAC,CAAC;IAC5B,CAAC,MACI,IAAImJ,QAAQ,CAACzD,QAAQ,CAAC,EAAE;MACzBO,KAAK,GAAG5G,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEoG,QAAQ,CAAC;IACvC,CAAC,MACI,IAAIA,QAAQ,KAAKzC,SAAS,EAAE;MAC7BgD,KAAK,GAAG,CAAC,CAAC;IACd;IACA,OAAOA,KAAK;EAChB;EACAyG,WAAWA,CAAA,EAAG;IACV,IAAI4B,EAAE;IACN,CAACA,EAAE,GAAG,IAAI,CAACkH,oBAAoB,MAAM,IAAI,IAAIlH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC8H,WAAW,CAAC,CAAC;EAC1F;EACA;AACJ;AACA;EACIhJ,GAAGA,CAAC7F,YAAY,EAAE;IACd,IAAI4N,WAAW,EAAE;MACbrB,wBAAwB,CAACvM,YAAY,CAAC;IAC1C;IACA,MAAM;MAAE8O;IAAU,CAAC,GAAG,IAAI,CAACC,cAAc,CAAC/O,YAAY,CAAC;IACvD,IAAI,CAAC8O,SAAS,CAAC5W,MAAM,EACjB,OAAO,EAAE;IACb,MAAM8W,UAAU,GAAGjP,UAAU,CAAC+O,SAAS,CAAC;IACxC,MAAMG,YAAY,GAAGjO,eAAe,CAACgO,UAAU,CAAC;IAChD,MAAM7P,KAAK,GAAGsB,kBAAkB,CAACuO,UAAU,CAAC;IAC5C,MAAME,SAAS,GAAG3O,WAAW,CAACuO,SAAS,CAAC;IACxC,MAAMK,kBAAkB,GAAG,EAAE;IAC7B,KAAK,MAAM/V,IAAI,IAAI6V,YAAY,EAAE;MAC7B,MAAM/O,UAAU,GAAGgP,SAAS,CAAC9V,IAAI,CAAC;MAClC,MAAMgF,IAAI,GAAGe,KAAK,CAAC/F,IAAI,CAAC;MACxB,MAAM+G,IAAI,GAAGD,UAAU,CAAC/D,QAAQ,CAAC;MACjC,IAAI,CAACiT,oBAAoB,CAACjP,IAAI,EAAE/B,IAAI,CAAC;MACrC;MACA;MACA;MACA;MACA,IAAIwP,WAAW,EAAE;QACbpB,4BAA4B,CAACtM,UAAU,CAAC;MAC5C;MACA,MAAMmP,QAAQ,GAAG;QACbjW,IAAI;QACJgF,IAAI;QACJkR,aAAa,EAAE,KAAK;QACpBpR,OAAO,EAAEiC,IAAI,CAACjC,OAAO;QACrBqR,QAAQ,EAAE,IAAI,CAAC3I,SAAS,CAAChJ,GAAG,CAACsC,UAAU,CAAC;QACxC/B,QAAQ,EAAE0P,YAAY,CAACe,cAAc,CAACzO,IAAI,CAAChC,QAAQ;MACvD,CAAC;MACD;MACA;MACA;MACA,IAAI,CAAC,IAAI,CAACqR,6BAA6B,CAACpW,IAAI,EAAEgF,IAAI,CAAC,EAAE;QACjD+Q,kBAAkB,CAAC9N,IAAI,CAACgO,QAAQ,CAAC;MACrC;MACA,IAAI,CAAC7O,MAAM,CAACa,IAAI,CAACgO,QAAQ,CAAC;IAC9B;IACA,OAAOF,kBAAkB;EAC7B;EACA;AACJ;AACA;EACIM,oBAAoBA,CAACzP,YAAY,EAAE;IAC/B,MAAM0P,OAAO,GAAG1P,YAAY,IAAI,EAAE;IAClC,MAAM2P,YAAY,GAAG,IAAI,CAAC9J,GAAG,CAAC6J,OAAO,CAAC;IACtC,MAAMvR,QAAQ,GAAGwR,YAAY,CAACxX,MAAM,CAAC,CAACmI,MAAM,EAAE8K,WAAW,KAAK1T,QAAQ,CAAC4I,MAAM,EAAE8K,WAAW,CAAChN,IAAI,EAAEgN,WAAW,CAACjN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3H,OAAO;MAAEA,QAAQ;MAAEqC,MAAM,EAAEmP;IAAa,CAAC;EAC7C;EACAC,qBAAqBA,CAAA,EAAG;IACpB;IACA;IACA;IACA,IAAI,IAAI,CAAC9B,cAAc,IAAI,IAAI,CAACG,oBAAoB,KAAK,IAAI,EAAE;MAC3D;IACJ;IACA,MAAM4B,WAAW,GAAG,IAAIla,yCAAO,CAAC,CAAC;IACjC,IAAI,CAACsY,oBAAoB,GAAG,IAAI,CAAC5F,QAAQ,CACpCtF,IAAI,CAAC5M,sDAAM,CAAE8M,GAAG,IAAKA,GAAG,CAACI,MAAM,KAAK,YAAY,CAAC,gBAAgB,CAAC,EAAE5M,yDAAQ,CAACwM,GAAG,IAAI;MACrF4M,WAAW,CAAC7L,IAAI,CAACf,GAAG,CAAC;MACrB,MAAM9L,MAAM,GAAG8L,GAAG,CAAC9L,MAAM;MACzB,OAAO,IAAI,CAAC2Y,aAAa,CAACD,WAAW,EAAE1Y,MAAM,CAAC,CAAC4L,IAAI,CAAC3M,mDAAG,CAAC,OAAO;QAAEe,MAAM;QAAEkM,MAAM,EAAE,YAAY,CAAC;MAAiB,CAAC,CAAC,CAAC,EAAE3M,+DAAc,CAAC;QAAES,MAAM;QAAEkM,MAAM,EAAE,UAAU,CAAC;MAAe,CAAC,CAAC,EAAE1M,2DAAU,CAAC2M,KAAK,IAAIzN,yCAAE,CAAC;QAAEsB,MAAM;QAAEkM,MAAM,EAAE,SAAS,CAAC;QAAeC;MAAM,CAAC,CAAC,CAAC,CAAC;IACnQ,CAAC,CAAC,CAAC,CACES,SAAS,CAACd,GAAG,IAAI,IAAI,CAACqF,cAAc,CAACtE,IAAI,CAACf,GAAG,CAAC,CAAC;EACxD;EACA;AACJ;AACA;EACI6M,aAAaA,CAACD,WAAW,EAAE1Y,MAAM,EAAE;IAC/B,MAAME,IAAI,GAAGH,yBAAyB,CAACC,MAAM,CAAC;IAC9C,MAAMsT,OAAO,GAAG,EAAE;IAClB;IACA;IACA,IAAIsF,oBAAoB,GAAG,KAAK;IAChC,KAAK,MAAMC,QAAQ,IAAI,IAAI,CAACxP,MAAM,EAAE;MAChC,MAAMyP,WAAW,GAAGD,QAAQ,CAAC9R,OAAO,CAAC7G,IAAI,CAAC;MAC1C,IAAI4Y,WAAW,EAAE;QACb,KAAK,MAAMC,UAAU,IAAID,WAAW,EAAE;UAClC,MAAME,YAAY,GAAG,IAAI,CAACpC,oBAAoB,CAAC5C,kBAAkB,CAAC6E,QAAQ,CAAC;UAC3E,IAAI;YACA,IAAI1P,MAAM,GAAG0P,QAAQ,CAACT,QAAQ,CAACW,UAAU,CAACvQ,EAAE,CAAC,CAACwQ,YAAY,EAAEhZ,MAAM,CAAC;YACnE,IAAImJ,MAAM,YAAYgG,OAAO,EAAE;cAC3BhG,MAAM,GAAGrK,2CAAI,CAACqK,MAAM,CAAC;YACzB;YACA,IAAIpK,mDAAY,CAACoK,MAAM,CAAC,EAAE;cACtB;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACAA,MAAM,GAAGA,MAAM,CAACyC,IAAI,CAACtM,yDAAQ,CAAEiI,KAAK,IAAK;gBACrC,IAAIA,KAAK,YAAY4H,OAAO,EAAE;kBAC1B,OAAOrQ,2CAAI,CAACyI,KAAK,CAAC;gBACtB;gBACA,IAAIxI,mDAAY,CAACwI,KAAK,CAAC,EAAE;kBACrB,OAAOA,KAAK;gBAChB;gBACA,OAAO7I,yCAAE,CAAC6I,KAAK,CAAC;cACpB,CAAC,CAAC,EAAEhI,+DAAc,CAAC,CAAC,CAAC,CAAC,CAAC;cACvB,IAAIwZ,UAAU,CAAClT,OAAO,CAACoT,iBAAiB,EAAE;gBACtC;gBACA9P,MAAM,GAAGA,MAAM,CAACyC,IAAI,CAACnM,0DAAS,CAACiZ,WAAW,CAAC9M,IAAI,CAACf,kBAAkB,CAAC7K,MAAM,CAAC,CAAC,CAAC,CAAC;cACjF;YACJ,CAAC,MACI;cACDmJ,MAAM,GAAGzK,yCAAE,CAAC,CAAC,CAAC,CAAC,CAACkN,IAAI,CAACzM,4DAAW,CAAC,CAAC,CAAC;YACvC;YACAmU,OAAO,CAACpJ,IAAI,CAACf,MAAM,CAAC;UACxB,CAAC,CACD,OAAO+P,CAAC,EAAE;YACN5F,OAAO,CAACpJ,IAAI,CAACtL,iDAAU,CAACsa,CAAC,CAAC,CAAC;UAC/B;UACAN,oBAAoB,GAAG,IAAI;QAC/B;MACJ;IACJ;IACA;IACA;IACA,IAAInC,WAAW,IAAI,CAACmC,oBAAoB,EAAE;MACtC,MAAMO,sBAAsB,GAAG,IAAI,CAAC1J,SAAS,CAAChJ,GAAG,CAACyP,0BAA0B,EAAE,IAAI,CAAC;MACnF;MACA;MACA;MACA,IAAIiD,sBAAsB,EAAE;QACxBA,sBAAsB,CAACxU,IAAI,CAAC3E,MAAM,CAAC;MACvC;IACJ;IACA,IAAI,CAACsT,OAAO,CAACvS,MAAM,EAAE;MACjBuS,OAAO,CAACpJ,IAAI,CAACxL,yCAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB;IACA,OAAOC,+CAAQ,CAAC2U,OAAO,CAAC;EAC5B;EACAsE,cAAcA,CAAC/O,YAAY,EAAE;IACzB,MAAM8O,SAAS,GAAG,EAAE;IACpB,MAAMyB,SAAS,GAAG,IAAI,CAACjE,YAAY;IACnC,KAAK,MAAMpM,UAAU,IAAIF,YAAY,EAAE;MACnC,MAAMoM,SAAS,GAAGzN,kBAAkB,CAACuB,UAAU,CAAC,CAAC9G,IAAI;MACrD,IAAIwU,WAAW,EAAE;QACbzB,uBAAuB,CAACC,SAAS,EAAElM,UAAU,EAAEqQ,SAAS,CAAC;MAC7D;MACA,MAAMC,cAAc,GAAG,CAACD,SAAS,CAACnE,SAAS,CAAC;MAC5C,IAAIoE,cAAc,EAAE;QAChB1B,SAAS,CAACzN,IAAI,CAACnB,UAAU,CAAC;QAC1BqQ,SAAS,CAACnE,SAAS,CAAC,GAAGlM,UAAU;MACrC;IACJ;IACA,OAAO;MAAE4O;IAAU,CAAC;EACxB;EACAM,oBAAoBA,CAACjP,IAAI,EAAE/B,IAAI,EAAE;IAC7B,IAAI,CAACoQ,UAAU,CAACrO,IAAI,CAAC/G,IAAI,CAAC,GAAGgF,IAAI;IACjC;IACA;IACA;IACA+B,IAAI,CAAC/B,IAAI,GAAGA,IAAI;EACpB;EACAoR,6BAA6BA,CAACpW,IAAI,EAAEgF,IAAI,EAAE;IACtC,MAAMqS,iCAAiC,GAAG/X,QAAQ,CAAC,IAAI,CAACsV,aAAa,EAAE5P,IAAI,CAAC,KAAK1C,SAAS;IAC1F;IACA;IACA,OAAO,IAAI,CAAC4Q,YAAY,CAAClT,IAAI,CAAC,IAAIqX,iCAAiC;EACvE;AACJ;AACA;AAAmB5C,YAAY,CAAC9S,IAAI,YAAA2V,qBAAAzV,CAAA;EAAA,YAAAA,CAAA,IAAyF4S,YAAY,EAt2CMxZ,sDAAE,CAs2CUA,mDAAW,GAt2CvBA,sDAAE,CAs2CkCiI,UAAU,GAt2C9CjI,sDAAE,CAs2CyDwZ,YAAY,OAt2CvExZ,sDAAE,CAs2CkH6Q,eAAe,GAt2CnI7Q,sDAAE,CAs2C8I4T,+BAA+B,GAt2C/K5T,sDAAE,CAs2C0L4W,mBAAmB,GAt2C/M5W,sDAAE,CAs2C0NgB,sEAAmB;AAAA,CAA6D;AAC3b;AAAmBwY,YAAY,CAAC1S,KAAK,kBAv2C0G9G,gEAAE;EAAAgH,KAAA,EAu2ChBwS,YAAY;EAAAvS,OAAA,EAAZuS,YAAY,CAAA9S;AAAA,EAAG;AAChJ;EAAA,QAAAT,SAAA,oBAAAA,SAAA,KAx2C+IjG,+DAAE,CAw2CrDwZ,YAAY,EAAc,CAAC;IAC3GxW,IAAI,EAAE7C,qDAAUA;EACpB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE6C,IAAI,EAAEhD,mDAAW4S;IAAC,CAAC,EAAE;MAAE5P,IAAI,EAAEiF;IAAW,CAAC,EAAE;MAAEjF,IAAI,EAAEwW,YAAY;MAAElS,UAAU,EAAE,CAAC;QAC9GtE,IAAI,EAAEtC,mDAAQA;MAClB,CAAC,EAAE;QACCsC,IAAI,EAAErC,mDAAQA;MAClB,CAAC;IAAE,CAAC,EAAE;MAAEqC,IAAI,EAAE6N;IAAgB,CAAC,EAAE;MAAE7N,IAAI,EAAE4Q;IAAgC,CAAC,EAAE;MAAE5Q,IAAI,EAAE4T;IAAoB,CAAC,EAAE;MAAE5T,IAAI,EAAEqE,SAAS;MAAEC,UAAU,EAAE,CAAC;QACvItE,IAAI,EAAEtC,mDAAQA;MAClB,CAAC,EAAE;QACCsC,IAAI,EAAE5C,iDAAM;QACZgH,IAAI,EAAE,CAACpG,sEAAmB;MAC9B,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AAExB,SAASsb,yBAAyBA,CAACC,gBAAgB,EAAEC,SAAS,EAAEC,kBAAkB,EAAE;EAChF,OAAQxS,OAAO,IAAK;IAChB,MAAM;MAAEyS,yBAAyB;MAAEvU;IAAgB,CAAC,GAAGwU,sBAAsB,CAAC1S,OAAO,EAAEsS,gBAAgB,EAAEC,SAAS,CAAC;IACnH,OAAO,SAASI,cAAcA,CAACC,SAAS,EAAE;MACtC;MACA,MAAMzG,OAAO,GAAGsG,yBAAyB,CAAC3a,GAAG,CAAE+a,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC,CAAC;MAC1E;MACA;MACA;MACA,IAAI;QACA,OAAOJ,kBAAkB,CAAC,GAAGrG,OAAO,CAAC;MACzC,CAAC,CACD,OAAO2G,EAAE,EAAE;QACP,IAAIA,EAAE,YAAYC,SAAS,IAAI7U,eAAe,CAACE,cAAc,EAAE;UAC3D,OAAOhB,SAAS;QACpB;QACA,MAAM0V,EAAE;MACZ;IACJ,CAAC;EACL,CAAC;AACL;AACA,SAASE,wBAAwBA,CAACzS,UAAU,EAAE0S,gBAAgB,EAAE;EAC5D,MAAMzS,cAAc,GAAGyS,gBAAgB,IAAIA,gBAAgB,CAACzS,cAAc;EAC1E,MAAM0S,SAAS,GAAG,SAASC,iBAAiBA,CAAC,GAAGhW,IAAI,EAAE;IAClD,MAAMiW,WAAW,GAAG7S,UAAU,CAAC8S,KAAK,CAAC7S,cAAc,EAAErD,IAAI,CAAC;IAC1D,IAAIiW,WAAW,YAAY9R,QAAQ,EAAE;MACjC,MAAMgS,eAAe,GAAGxc,0DAAO,CAACuc,KAAK,CAAC,IAAI,EAAE,CAACD,WAAW,CAAC,CAAC;MAC1D,OAAOE,eAAe;IAC1B;IACA,OAAOF,WAAW;EACtB,CAAC;EACD,MAAMG,UAAU,GAAGzc,8DAAO,CAACoc,SAAS,CAAC;EACrC1Z,MAAM,CAACga,cAAc,CAACD,UAAU,EAAEhT,UAAU,CAAC;EAC7C,OAAOgT,UAAU;AACrB;AACA,SAASb,sBAAsBA,CAAC1S,OAAO,EAAEsS,gBAAgB,EAAEC,SAAS,GAAG,EAAE,EAAE;EACvE,MAAMkB,oBAAoB,GAAGnB,gBAAgB,CAAC5R,kBAAkB,CAAC,CAAC;EAClE,MAAMxC,eAAe,GAAG8B,OAAO,CAACU,kBAAkB,CAAC+S,oBAAoB,CAAC;EACxE,MAAMC,gBAAgB,GAAGC,mBAAmB,CAACpB,SAAS,EAAErU,eAAe,EAAEoU,gBAAgB,CAAC9R,cAAc,CAAC;EACzG,MAAMiS,yBAAyB,GAAGiB,gBAAgB,CAAC5b,GAAG,CAAE8b,QAAQ,IAAK;IACjE,MAAM5W,OAAO,GAAG6W,sBAAsB,CAACD,QAAQ,CAAC;IAChD,OAAO5W,OAAO,CAACgD,OAAO,CAAC;EAC3B,CAAC,CAAC;EACF,OAAO;IACH9B,eAAe;IACfuU;EACJ,CAAC;AACL;AACA,SAASkB,mBAAmBA,CAACpB,SAAS,GAAG,EAAE,EAAErU,eAAe,EAAEsC,cAAc,EAAE;EAC1E,MAAMkT,gBAAgB,GAAG,EAAE;EAC3B,MAAMI,uBAAuB,GAAGvB,SAAS,CAAC3Y,MAAM,KAAK,CAAC,IAAIsE,eAAe,CAACC,oBAAoB;EAC9F,IAAIqC,cAAc,IAAIsT,uBAAuB,EAAE;IAC3C;IACA,MAAMpC,QAAQ,GAAGrR,kBAAkB,CAACG,cAAc,CAAC;IACnD,IAAIkR,QAAQ,EAAE;MACVgC,gBAAgB,CAAC3Q,IAAI,CAACvC,cAAc,CAAC;IACzC;EACJ;EACA,IAAI+R,SAAS,EAAE;IACXmB,gBAAgB,CAAC3Q,IAAI,CAAC,GAAGwP,SAAS,CAAC;EACvC;EACA,OAAOmB,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,SAASG,sBAAsBA,CAACD,QAAQ,EAAE;EACtC,MAAMlC,QAAQ,GAAG/Q,qBAAqB,CAACiT,QAAQ,CAAC,IAAIvT,kBAAkB,CAACuT,QAAQ,CAAC;EAChF,OAAQlC,QAAQ,IAAIA,QAAQ,CAAC3R,gBAAgB,KAAM,MAAM6T,QAAQ,CAAC;AACtE;;AAEA;AACA,MAAMG,KAAK,CAAC;EACRjb,WAAWA,CAACoR,YAAY,EAAE0C,wBAAwB,EAAElB,OAAO,EAAEsI,0BAA0B,EAAEC,aAAa,EAAEC,iBAAiB,EAAE;IACvH,IAAI,CAAChK,YAAY,GAAGA,YAAY;IAChC,IAAI,CAAC0C,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAAClB,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACsI,0BAA0B,GAAGA,0BAA0B;IAC5D,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACE,sBAAsB,GAAG,IAAI,CAACjK,YAAY,CAACzF,IAAI,CAACa,SAAS,CAAC,IAAI,CAAC0O,0BAA0B,CAAC,EAAEhc,4DAAW,CAAC;MAAEoc,UAAU,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC,CAAC;IAChJ,IAAI,CAACC,eAAe,CAACJ,iBAAiB,CAAC;EAC3C;EACA;AACJ;AACA;EACI7J,QAAQA,CAACC,eAAe,EAAE;IACtB,OAAO,IAAI,CAACsC,wBAAwB,CAACjB,sBAAsB,CAAC,CAAC,CAACtB,QAAQ,CAACC,eAAe,CAAC;EAC3F;EACAiK,MAAMA,CAACX,QAAQ,EAAE;IACb,MAAMY,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAACb,QAAQ,CAAC;IACzD,OAAO,IAAI,CAACO,sBAAsB,CAAC1P,IAAI,CAAC3M,mDAAG,CAAC0c,UAAU,CAAC,EAAEnc,2DAAU,CAAEqc,GAAG,IAAK;MACzE;MACA,MAAM;QAAEtW;MAAe,CAAC,GAAG,IAAI,CAACsN,OAAO,CAACxN,eAAe;MACvD,IAAIwW,GAAG,YAAY3B,SAAS,IAAI3U,cAAc,EAAE;QAC5C,OAAO7G,yCAAE,CAAC6F,SAAS,CAAC;MACxB;MACA;MACA,OAAO3F,iDAAU,CAACid,GAAG,CAAC;IAC1B,CAAC,CAAC,EAAEnc,qEAAoB,CAAC,CAAC,EAAE+M,SAAS,CAAC,IAAI,CAAC0O,0BAA0B,CAAC,CAAC;EAC3E;EACAW,UAAUA,CAACf,QAAQ,EAAE;IACjB,OAAO,IAAI,CAACW,MAAM,CAACX,QAAQ,CAAC,CAACnP,IAAI,CAACxM,qDAAI,CAAC,CAAC,CAAC,CAAC;EAC9C;EACA2c,cAAcA,CAAChB,QAAQ,EAAE;IACrB,MAAMY,UAAU,GAAG,IAAI,CAACC,uBAAuB,CAACb,QAAQ,CAAC;IACzD,OAAOY,UAAU,CAAC,IAAI,CAACtK,YAAY,CAAC9P,QAAQ,CAAC,CAAC,CAAC;EACnD;EACA;AACJ;AACA;EACIqL,SAASA,CAACpE,EAAE,EAAE;IACV,OAAO,IAAI,CAAC8S,sBAAsB,CAC7B1P,IAAI,CAACa,SAAS,CAAC,IAAI,CAAC0O,0BAA0B,CAAC,CAAC,CAChDvO,SAAS,CAACpE,EAAE,CAAC;EACtB;EACA;AACJ;AACA;EACIwT,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACjI,wBAAwB,CAACjB,sBAAsB,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC;EAC5E;EACA;AACJ;AACA;AACA;EACIiJ,KAAKA,CAAC/G,KAAK,EAAE;IACT,OAAO,IAAI,CAACnB,wBAAwB,CAACjB,sBAAsB,CAAC,CAAC,CAACG,QAAQ,CAACiC,KAAK,CAAC;EACjF;EACA0G,uBAAuBA,CAACb,QAAQ,EAAE;IAC9B,MAAMmB,cAAc,GAAGlB,sBAAsB,CAACD,QAAQ,CAAC;IACvD,MAAMoB,cAAc,GAAG,IAAI,CAACf,aAAa,CAAClE,yBAAyB,CAAC,CAAC;IACrE,OAAOgF,cAAc,CAACC,cAAc,CAAC;EACzC;EACAV,eAAeA,CAACJ,iBAAiB,EAAE;IAC/B,MAAM9T,KAAK,GAAG,IAAI,CAAC8J,YAAY,CAAC9J,KAAK;IACrC,MAAM6U,YAAY,GAAG,CAAC7U,KAAK,IAAI5G,MAAM,CAAC2J,IAAI,CAAC/C,KAAK,CAAC,CAACxG,MAAM,KAAK,CAAC;IAC9D,IAAIqb,YAAY,EAAE;MACd,MAAMC,oBAAoB,GAAG1b,MAAM,CAAC2J,IAAI,CAAC,IAAI,CAACuI,OAAO,CAACzN,aAAa,CAAC,CAACrE,MAAM,GAAG,CAAC;MAC/E,MAAMub,WAAW,GAAGD,oBAAoB,GAClC1b,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACiS,OAAO,CAACzN,aAAa,CAAC,EAAEiW,iBAAiB,CAAC,GAAGA,iBAAiB;MACzG,IAAI,CAAChK,YAAY,CAACxE,IAAI,CAACyP,WAAW,CAAC;IACvC;EACJ;AACJ;AACA;AAAmBpB,KAAK,CAACtX,IAAI,YAAA2Y,cAAAzY,CAAA;EAAA,YAAAA,CAAA,IAAyFoX,KAAK,EA3gDoBhe,sDAAE,CA2gDJ6S,WAAW,GA3gDT7S,sDAAE,CA2gDoByV,uBAAuB,GA3gD7CzV,sDAAE,CA2gDwDiI,UAAU,GA3gDpEjI,sDAAE,CA2gD+E6P,6BAA6B,GA3gD9G7P,sDAAE,CA2gDyHwZ,YAAY,GA3gDvIxZ,sDAAE,CA2gDkJgB,sEAAmB;AAAA,CAA6D;AACnX;AAAmBgd,KAAK,CAAClX,KAAK,kBA5gDiH9G,gEAAE;EAAAgH,KAAA,EA4gDvBgX,KAAK;EAAA/W,OAAA,EAAL+W,KAAK,CAAAtX,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AACtJ;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KA7gD+IjG,+DAAE,CA6gDrDge,KAAK,EAAc,CAAC;IACpGhb,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAE6P;IAAY,CAAC,EAAE;MAAE7P,IAAI,EAAEyS;IAAwB,CAAC,EAAE;MAAEzS,IAAI,EAAEiF;IAAW,CAAC,EAAE;MAAEjF,IAAI,EAAE6M;IAA8B,CAAC,EAAE;MAAE7M,IAAI,EAAEwW;IAAa,CAAC,EAAE;MAAExW,IAAI,EAAEqE,SAAS;MAAEC,UAAU,EAAE,CAAC;QAC/MtE,IAAI,EAAEtC,mDAAQA;MAClB,CAAC,EAAE;QACCsC,IAAI,EAAE5C,iDAAM;QACZgH,IAAI,EAAE,CAACpG,sEAAmB;MAC9B,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;;AAExB;AACA;AACA;AACA;AACA,MAAMse,aAAa,CAAC;EAChBvc,WAAWA,CAACwc,KAAK,EAAE9T,MAAM,EAAE;IACvB6T,aAAa,CAACC,KAAK,GAAGA,KAAK;IAC3BD,aAAa,CAAC7T,MAAM,GAAGA,MAAM;EACjC;EACAqF,WAAWA,CAAA,EAAG;IACVwO,aAAa,CAACC,KAAK,GAAG,IAAI;IAC1BD,aAAa,CAAC7T,MAAM,GAAG,IAAI;EAC/B;AACJ;AACA6T,aAAa,CAACC,KAAK,GAAG,IAAI;AAC1BD,aAAa,CAAC7T,MAAM,GAAG,IAAI;AAC3B;AAAmB6T,aAAa,CAAC5Y,IAAI,YAAA8Y,sBAAA5Y,CAAA;EAAA,YAAAA,CAAA,IAAyF0Y,aAAa,EAviDItf,sDAAE,CAuiDYge,KAAK,GAviDnBhe,sDAAE,CAuiD8BiI,UAAU;AAAA,CAA6C;AACtO;AAAmBqX,aAAa,CAACxY,KAAK,kBAxiDyG9G,gEAAE;EAAAgH,KAAA,EAwiDfsY,aAAa;EAAArY,OAAA,EAAbqY,aAAa,CAAA5Y,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AACtK;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAziD+IjG,+DAAE,CAyiDrDsf,aAAa,EAAc,CAAC;IAC5Gtc,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAEgb;IAAM,CAAC,EAAE;MAAEhb,IAAI,EAAEiF;IAAW,CAAC,CAAC;EAAE,CAAC;AAAA;AAE3F,MAAMwX,qBAAqB,CAAC;EACxB1c,WAAWA,CAAC2c,MAAM,EAAErL,sBAAsB,EAAEwC,wBAAwB,EAAE6C,oBAAoB,EAAEiG,aAAa,EAAE;IACvG,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACrL,sBAAsB,GAAGA,sBAAsB;IACpD,IAAI,CAACwC,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAAC6C,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACiG,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,SAAS,GAAG,IAAIte,yCAAO,CAAC,CAAC;EAClC;EACAwP,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC8O,SAAS,CAACjQ,IAAI,CAAC,CAAC;EACzB;EACAkQ,aAAaA,CAAC/c,MAAM,EAAEsT,OAAO,EAAE;IAC3B,IAAI,CAACS,wBAAwB,CACxBjB,sBAAsB,CAAC,CAAC,CACxBtB,QAAQ,CAACxR,MAAM,CAAC,CAChB4L,IAAI,CAAC5M,sDAAM,CAAC,MAAM,CAAC,CAACsU,OAAO,CAAC,EAAE3T,oDAAG,CAAC,MAAM,IAAI,CAACqd,mBAAmB,CAAC1J,OAAO,CAACjK,MAAM,CAAC,CAAC,EAAE/J,yDAAQ,CAAC,MAAM,IAAI,CAACud,aAAa,CAACI,gBAAgB,CAAC,EAAEje,sDAAM,CAACke,eAAe,IAAI,CAAC,CAACA,eAAe,CAAC,EAAE1d,2DAAU,CAAC2M,KAAK,IAAI;MAC3M;MACA;MACA;MACA;MACA,IAAI,CAACoF,sBAAsB,CAACjC,iBAAiB,CAACnD,KAAK,CAAC;MACpD,OAAOtN,wCAAK;IAChB,CAAC,CAAC,EAAEY,0DAAS,CAAC,IAAI,CAACqd,SAAS,CAAC,CAAC,CACzBlQ,SAAS,CAAC,MAAM,IAAI,CAACuQ,wBAAwB,CAAC7J,OAAO,CAACjK,MAAM,CAAC,CAAC;EACvE;EACA2T,mBAAmBA,CAACxE,YAAY,EAAE;IAC9B,KAAK,MAAMvE,WAAW,IAAIuE,YAAY,EAAE;MACpC,MAAMJ,QAAQ,GAAGnE,WAAW,CAACmE,QAAQ;MACrC,IAAIA,QAAQ,CAACgF,aAAa,EAAE;QACxB,IAAI,CAACR,MAAM,CACNlB,MAAM,CAACxG,KAAK,IAAI3T,QAAQ,CAAC2T,KAAK,EAAEjB,WAAW,CAAChN,IAAI,CAAC,CAAC,CAClD2E,IAAI,CAAChM,0DAAS,CAAC2E,SAAS,CAAC,EAAE1E,yDAAQ,CAAC,CAAC,EAAEJ,0DAAS,CAAC,IAAI,CAACqd,SAAS,CAAC,CAAC,CACjElQ,SAAS,CAAC,CAAC,CAAC3G,aAAa,EAAEC,YAAY,CAAC,KAAK;UAC9C,MAAMmX,MAAM,GAAG,IAAIrX,gBAAgB,CAACC,aAAa,EAAEC,YAAY,EAAE,CAAC+N,WAAW,CAACkE,aAAa,CAAC;UAC5FC,QAAQ,CAACgF,aAAa,CAACC,MAAM,CAAC;QAClC,CAAC,CAAC;MACN;MACA,IAAIjF,QAAQ,CAACkF,UAAU,EAAE;QACrBlF,QAAQ,CAACkF,UAAU,CAAC,IAAI,CAACC,gBAAgB,CAACtJ,WAAW,CAAC,CAAC;MAC3D;MACAA,WAAW,CAACkE,aAAa,GAAG,IAAI;IACpC;EACJ;EACAgF,wBAAwBA,CAAC3E,YAAY,EAAE;IACnC,KAAK,MAAMvE,WAAW,IAAIuE,YAAY,EAAE;MACpC,MAAMJ,QAAQ,GAAGnE,WAAW,CAACmE,QAAQ;MACrC,IAAIA,QAAQ,CAACoF,kBAAkB,EAAE;QAC7BpF,QAAQ,CAACoF,kBAAkB,CAAC,IAAI,CAACD,gBAAgB,CAACtJ,WAAW,CAAC,CAAC;MACnE;IACJ;EACJ;EACAsJ,gBAAgBA,CAACtJ,WAAW,EAAE;IAC1B,OAAO,IAAI,CAAC2C,oBAAoB,CAAC5C,kBAAkB,CAACC,WAAW,CAAC;EACpE;AACJ;AACA;AAAmB0I,qBAAqB,CAAC/Y,IAAI,YAAA6Z,8BAAA3Z,CAAA;EAAA,YAAAA,CAAA,IAAyF6Y,qBAAqB,EAtmDZzf,sDAAE,CAsmD4Bge,KAAK,GAtmDnChe,sDAAE,CAsmD8CsS,qBAAqB,GAtmDrEtS,sDAAE,CAsmDgFyV,uBAAuB,GAtmDzGzV,sDAAE,CAsmDoH4W,mBAAmB,GAtmDzI5W,sDAAE,CAsmDoJc,mEAAmB;AAAA,CAA6C;AACrW;AAAmB2e,qBAAqB,CAAC3Y,KAAK,kBAvmDiG9G,gEAAE;EAAAgH,KAAA,EAumDPyY,qBAAqB;EAAAxY,OAAA,EAArBwY,qBAAqB,CAAA/Y,IAAA;EAAAQ,UAAA,EAAc;AAAM,EAAG;AACtL;EAAA,QAAAjB,SAAA,oBAAAA,SAAA,KAxmD+IjG,+DAAE,CAwmDrDyf,qBAAqB,EAAc,CAAC;IACpHzc,IAAI,EAAE7C,qDAAU;IAChBiH,IAAI,EAAE,CAAC;MAAEF,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElE,IAAI,EAAEgb;IAAM,CAAC,EAAE;MAAEhb,IAAI,EAAEsP;IAAsB,CAAC,EAAE;MAAEtP,IAAI,EAAEyS;IAAwB,CAAC,EAAE;MAAEzS,IAAI,EAAE4T;IAAoB,CAAC,EAAE;MAAE5T,IAAI,EAAElC,mEAAmBG;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEvM;AACA;AACA;AACA;AACA,MAAMuf,cAAc,CAAC;EACjBzd,WAAWA,CAACkE,OAAO,EAAEwZ,uBAAuB,EAAEf,MAAM,EAAEgB,OAAO,EAAEvU,MAAM,GAAG,EAAE,EAAEwU,qBAAqB,EAAE;IAC/F;IACA,MAAMvK,OAAO,GAAGnP,OAAO,CAACmU,oBAAoB,CAACjP,MAAM,CAAC;IACpDsU,uBAAuB,CAACtK,2BAA2B,CAACC,OAAO,CAAC;IAC5D;IACAnP,OAAO,CAACsU,qBAAqB,CAAC,CAAC;IAC/B;IACAoF,qBAAqB,CAACd,aAAa,CAAC,IAAIlH,SAAS,CAAC,CAAC,EAAEvC,OAAO,CAAC;EACjE;AACJ;AACA;AAAmBoK,cAAc,CAAC9Z,IAAI,YAAAka,uBAAAha,CAAA;EAAA,YAAAA,CAAA,IAAyF4Z,cAAc,EA5nDExgB,sDAAE,CA4nDcwZ,YAAY,GA5nD5BxZ,sDAAE,CA4nDuCyV,uBAAuB,GA5nDhEzV,sDAAE,CA4nD2Ege,KAAK,GA5nDlFhe,sDAAE,CA4nD6Fsf,aAAa,GA5nD5Gtf,sDAAE,CA4nDuH2H,gBAAgB,MA5nDzI3H,sDAAE,CA4nDoKyf,qBAAqB;AAAA,CAA2C;AACrX;AAAmBe,cAAc,CAACK,IAAI,kBA7nDyG7gB,8DAAE;EAAAgD,IAAA,EA6nDjBwd;AAAc,EAAG;AACjJ;AAAmBA,cAAc,CAACO,IAAI,kBA9nDyG/gB,8DAAE,IA8nDA;AACjJ;EAAA,QAAAiG,SAAA,oBAAAA,SAAA,KA/nD+IjG,+DAAE,CA+nDrDwgB,cAAc,EAAc,CAAC;IAC7Gxd,IAAI,EAAEpC,mDAAQA;EAClB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEoC,IAAI,EAAEwW;IAAa,CAAC,EAAE;MAAExW,IAAI,EAAEyS;IAAwB,CAAC,EAAE;MAAEzS,IAAI,EAAEgb;IAAM,CAAC,EAAE;MAAEhb,IAAI,EAAEsc;IAAc,CAAC,EAAE;MAAEtc,IAAI,EAAEqE,SAAS;MAAEC,UAAU,EAAE,CAAC;QACnKtE,IAAI,EAAEtC,mDAAQA;MAClB,CAAC,EAAE;QACCsC,IAAI,EAAE5C,iDAAM;QACZgH,IAAI,EAAE,CAACO,gBAAgB;MAC3B,CAAC;IAAE,CAAC,EAAE;MAAE3E,IAAI,EAAEyc;IAAsB,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEzD;AACA;AACA;AACA;AACA,MAAMwB,iBAAiB,CAAC;EACpBle,WAAWA,CAAC2c,MAAM,EAAEe,uBAAuB,EAAExZ,OAAO,EAAEkF,MAAM,GAAG,EAAE,EAAEwU,qBAAqB,EAAE;IACtF;IACA;IACA,MAAMO,eAAe,GAAGD,iBAAiB,CAACE,aAAa,CAAChV,MAAM,CAAC;IAC/D;IACA,MAAMiK,OAAO,GAAGnP,OAAO,CAACmU,oBAAoB,CAAC8F,eAAe,CAAC;IAC7D,IAAI9K,OAAO,CAACjK,MAAM,CAACtI,MAAM,EAAE;MACvB4c,uBAAuB,CAACtK,2BAA2B,CAACC,OAAO,CAAC;MAC5D;MACAuK,qBAAqB,CAACd,aAAa,CAAC,IAAIjH,WAAW,CAACxC,OAAO,CAACtM,QAAQ,CAAC,EAAEsM,OAAO,CAAC;IACnF;EACJ;EACA,OAAO+K,aAAaA,CAAChV,MAAM,GAAG,EAAE,EAAE;IAC9B,OAAOA,MAAM,CAACrI,MAAM,CAAC,CAACsd,KAAK,EAAEC,MAAM,KAAKD,KAAK,CAACE,MAAM,CAACD,MAAM,CAAC,EAAE,EAAE,CAAC;EACrE;AACJ;AACA;AAAmBJ,iBAAiB,CAACva,IAAI,YAAA6a,0BAAA3a,CAAA;EAAA,YAAAA,CAAA,IAAyFqa,iBAAiB,EA7pDJjhB,sDAAE,CA6pDoBge,KAAK,GA7pD3Bhe,sDAAE,CA6pDsCyV,uBAAuB,GA7pD/DzV,sDAAE,CA6pD0EwZ,YAAY,GA7pDxFxZ,sDAAE,CA6pDmG4H,mBAAmB,MA7pDxH5H,sDAAE,CA6pDmJyf,qBAAqB;AAAA,CAA2C;AACpW;AAAmBwB,iBAAiB,CAACJ,IAAI,kBA9pDsG7gB,8DAAE;EAAAgD,IAAA,EA8pDdie;AAAiB,EAAG;AACvJ;AAAmBA,iBAAiB,CAACF,IAAI,kBA/pDsG/gB,8DAAE,IA+pDM;AACvJ;EAAA,QAAAiG,SAAA,oBAAAA,SAAA,KAhqD+IjG,+DAAE,CAgqDrDihB,iBAAiB,EAAc,CAAC;IAChHje,IAAI,EAAEpC,mDAAQA;EAClB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEoC,IAAI,EAAEgb;IAAM,CAAC,EAAE;MAAEhb,IAAI,EAAEyS;IAAwB,CAAC,EAAE;MAAEzS,IAAI,EAAEwW;IAAa,CAAC,EAAE;MAAExW,IAAI,EAAEqE,SAAS;MAAEC,UAAU,EAAE,CAAC;QAC1ItE,IAAI,EAAEtC,mDAAQA;MAClB,CAAC,EAAE;QACCsC,IAAI,EAAE5C,iDAAM;QACZgH,IAAI,EAAE,CAACQ,mBAAmB;MAC9B,CAAC;IAAE,CAAC,EAAE;MAAE5E,IAAI,EAAEyc;IAAsB,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEzD;AACA;AACA;AACA,MAAM+B,UAAU,CAAC;EACb;AACJ;AACA;EACI,OAAOC,OAAOA,CAACtV,MAAM,GAAG,EAAE,EAAExD,OAAO,GAAG,CAAC,CAAC,EAAE;IACtC,OAAO;MACH+Y,QAAQ,EAAElB,cAAc;MACxBmB,SAAS,EAAE,CACPnI,YAAY,EACZzG,aAAa,EACb,GAAG5G,MAAM,EACT,GAAGqV,UAAU,CAACI,kBAAkB,CAACzV,MAAM,EAAExD,OAAO,CAAC;IAEzD,CAAC;EACL;EACA;AACJ;AACA;EACI,OAAOkZ,UAAUA,CAAC1V,MAAM,GAAG,EAAE,EAAE;IAC3B,OAAO;MACHuV,QAAQ,EAAET,iBAAiB;MAC3BU,SAAS,EAAE;MACP;MACAnI,YAAY,EACZzG,aAAa,EACb,GAAG5G,MAAM,EACT;QACI2V,OAAO,EAAEla,mBAAmB;QAC5Bma,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAE7V;MACd,CAAC;IAET,CAAC;EACL;EACA,OAAOyV,kBAAkBA,CAACzV,MAAM,EAAExD,OAAO,EAAE;IACvC,OAAO,CACH;MACImZ,OAAO,EAAE1Y,qCAAqC;MAC9C4Y,QAAQ,EAAErZ,OAAO,CAACH;IACtB,CAAC,EACD;MACIsZ,OAAO,EAAEna,gBAAgB;MACzBqa,QAAQ,EAAE7V;IACd,CAAC,EACD;MACI2V,OAAO,EAAEpa,YAAY;MACrBsa,QAAQ,EAAErZ;IACd,CAAC,EACD;MACImZ,OAAO,EAAEjhB,iEAAsB;MAC/B+H,UAAU,EAAE4Y,UAAU,CAACS,2BAA2B;MAClDF,KAAK,EAAE,IAAI;MACXlZ,IAAI,EAAE,CAAC5H,mEAAgB;IAC3B,CAAC,EACD;MACI6gB,OAAO,EAAE5gB,iFAA2B;MACpCghB,WAAW,EAAEtL;IACjB,CAAC,EACD;MACIkL,OAAO,EAAE3gB,yEAAmB;MAC5B+gB,WAAW,EAAE1I;IACjB,CAAC,CACJ;EACL;EACA,OAAOyI,2BAA2BA,CAACE,YAAY,EAAE;IAC7C,OAAO,MAAMA,YAAY,CAACC,SAAS,CAAC,CAAC;EACzC;AACJ;AACA;AAAmBZ,UAAU,CAAC9a,IAAI,YAAA2b,mBAAAzb,CAAA;EAAA,YAAAA,CAAA,IAAyF4a,UAAU;AAAA,CAAkD;AACvL;AAAmBA,UAAU,CAACX,IAAI,kBAjvD6G7gB,8DAAE;EAAAgD,IAAA,EAivDrBwe;AAAU,EAAG;AACzI;AAAmBA,UAAU,CAACT,IAAI,kBAlvD6G/gB,8DAAE,IAkvDR;AACzI;EAAA,QAAAiG,SAAA,oBAAAA,SAAA,KAnvD+IjG,+DAAE,CAmvDrDwhB,UAAU,EAAc,CAAC;IACzGxe,IAAI,EAAEpC,mDAAQA;EAClB,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA,SAAS0hB,MAAMA,CAACzY,OAAO,EAAElB,OAAO,EAAE;EAC9B,OAAO,CAACe,MAAM,EAAE3E,IAAI,KAAK;IACrB;IACA;IACA,IAAI,OAAOkB,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C,MAAMsc,cAAc,GAAG7Y,MAAM,CAACC,cAAc,CAAC,WAAW,CAAC;MACzD,IAAI4Y,cAAc,EAAE;QAChBhd,yBAAyB,CAAC,CAAC;MAC/B;IACJ;IACA,MAAMuG,IAAI,GAAGrC,qBAAqB,CAACC,MAAM,CAAC3G,WAAW,CAAC;IACtD,IAAI,CAACmB,KAAK,CAACC,OAAO,CAAC0F,OAAO,CAAC,EAAE;MACzBA,OAAO,GAAG,CAACA,OAAO,CAAC;IACvB;IACA,KAAK,MAAM/G,MAAM,IAAI+G,OAAO,EAAE;MAC1B,MAAM7G,IAAI,GAAGF,MAAM,CAACE,IAAI;MACxB,IAAI,CAAC8I,IAAI,CAACjC,OAAO,CAAC7G,IAAI,CAAC,EAAE;QACrB8I,IAAI,CAACjC,OAAO,CAAC7G,IAAI,CAAC,GAAG,EAAE;MAC3B;MACA8I,IAAI,CAACjC,OAAO,CAAC7G,IAAI,CAAC,CAACgK,IAAI,CAAC;QACpB1B,EAAE,EAAEvG,IAAI;QACR4D,OAAO,EAAEA,OAAO,IAAI,CAAC,CAAC;QACtB3F;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;AACL;;AAEA;AACA;AACA;AACA,SAASwf,KAAKA,CAAC7Z,OAAO,EAAE;EACpB,OAAQe,MAAM,IAAK;IACf,MAAMmC,UAAU,GAAGnC,MAAM;IACzB,MAAMoC,IAAI,GAAGrC,qBAAqB,CAACoC,UAAU,CAAC;IAC9C,MAAM4W,mBAAmB,GAAGhf,MAAM,CAACif,cAAc,CAAC7W,UAAU,CAAC;IAC7D,MAAM8W,sBAAsB,GAAGC,eAAe,CAACH,mBAAmB,EAAE9Z,OAAO,CAAC;IAC5Eka,cAAc,CAAC;MAAE/W,IAAI;MAAE2W,mBAAmB;MAAEE;IAAuB,CAAC,CAAC;IACrE9W,UAAU,CAAC9D,gBAAgB,CAAC,GAAG4a,sBAAsB;EACzD,CAAC;AACL;AACA,SAASC,eAAeA,CAACH,mBAAmB,EAAE9Z,OAAO,EAAE;EACnD,MAAMma,kBAAkB,GAAGL,mBAAmB,CAAC1a,gBAAgB,CAAC,IAAI,CAAC,CAAC;EACtE,OAAOtE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEof,kBAAkB,CAAC,EAAEna,OAAO,CAAC;AACxE;AACA,SAASka,cAAcA,CAACE,MAAM,EAAE;EAC5B,MAAM;IAAEjX,IAAI;IAAE2W,mBAAmB;IAAEE;EAAuB,CAAC,GAAGI,MAAM;EACpE,MAAM;IAAE5Y,QAAQ;IAAEL,QAAQ;IAAE/E;EAAK,CAAC,GAAG4d,sBAAsB;EAC3D,MAAM5K,SAAS,GAAG,OAAOhT,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAIA,IAAI,IAAIA,IAAI,CAACie,OAAO,CAAC,CAAC,IAAK,IAAI;EACpF,IAAI,OAAO/c,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;IAC/C2R,sBAAsB,CAACG,SAAS,CAAC;EACrC;EACA,IAAI0K,mBAAmB,CAAC9Y,cAAc,CAAC7B,QAAQ,CAAC,EAAE;IAC9C,MAAMmb,aAAa,GAAGR,mBAAmB,CAAC3a,QAAQ,CAAC,IAAI,CAAC,CAAC;IACzDgE,IAAI,CAACjC,OAAO,GAAGpG,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEoI,IAAI,CAACjC,OAAO,CAAC,EAAEoZ,aAAa,CAACpZ,OAAO,CAAC;EACxF;EACAiC,IAAI,CAAC3B,QAAQ,GAAGA,QAAQ;EACxB2B,IAAI,CAAChC,QAAQ,GAAGA,QAAQ;EACxBgC,IAAI,CAAC/G,IAAI,GAAGgT,SAAS;AACzB;AAEA,MAAMmL,gBAAgB,GAAG,EAAE;AAC3B,SAASC,sBAAsBA,CAACtF,QAAQ,EAAE;EACtC,IAAI,CAACyB,aAAa,CAACC,KAAK,EAAE;IACtB5Z,mCAAmC,CAAC,CAAC;EACzC;EACA,OAAO2Z,aAAa,CAACC,KAAK,CAACf,MAAM,CAACX,QAAQ,CAAC;AAC/C;AACA,SAASuF,gBAAgBA,CAACre,IAAI,EAAEse,WAAW,EAAEvY,KAAK,GAAG,EAAE,EAAE;EACrDuY,WAAW,GAAG,CAACA,WAAW,GAAGC,oBAAoB,CAACve,IAAI,CAAC,GAAGse,WAAW;EACrE,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;IACjC,MAAME,UAAU,GAAGzY,KAAK,CAACjH,MAAM,GACzB,CAACwf,WAAW,EAAE,GAAGvY,KAAK,CAAC,GACvBuY,WAAW,CAAC1f,KAAK,CAAC,GAAG,CAAC;IAC5B,OAAO6H,UAAU,CAAC+X,UAAU,EAAEjE,aAAa,CAAC7T,MAAM,CAAC;EACvD;EACA,OAAO4X,WAAW;AACtB;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACve,IAAI,EAAE;EAChC,MAAMye,aAAa,GAAGze,IAAI,CAAClB,MAAM,GAAG,CAAC;EACrC,MAAM4f,cAAc,GAAG1e,IAAI,CAAC2e,UAAU,CAACF,aAAa,CAAC,KAAKN,gBAAgB;EAC1E,OAAOO,cAAc,GAAG1e,IAAI,CAACX,KAAK,CAAC,CAAC,EAAEof,aAAa,CAAC,GAAGze,IAAI;AAC/D;;AAEA;AACA;AACA;AACA,SAAS4e,MAAMA,CAACN,WAAW,EAAE,GAAGvY,KAAK,EAAE;EACnC,OAAO,UAAUpB,MAAM,EAAE7E,GAAG,EAAE;IAC1B,MAAME,IAAI,GAAGF,GAAG,CAAC+e,QAAQ,CAAC,CAAC;IAC3B,MAAMC,UAAU,GAAI,KAAI9e,IAAK,YAAW;IACxC,MAAM8Y,QAAQ,GAAGuF,gBAAgB,CAACre,IAAI,EAAEse,WAAW,EAAEvY,KAAK,CAAC;IAC3DrH,MAAM,CAACqgB,gBAAgB,CAACpa,MAAM,EAAE;MAC5B,CAACma,UAAU,GAAG;QACVE,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,KAAK;QACjBC,YAAY,EAAE;MAClB,CAAC;MACD,CAAClf,IAAI,GAAG;QACJif,UAAU,EAAE,IAAI;QAChBC,YAAY,EAAE,IAAI;QAClB1a,GAAGA,CAAA,EAAG;UACF,OAAO,IAAI,CAACsa,UAAU,CAAC,KAAK,IAAI,CAACA,UAAU,CAAC,GAAGV,sBAAsB,CAACtF,QAAQ,CAAC,CAAC;QACpF;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;AACL;AAEA,MAAMqG,yBAAyB,GAAG,4BAA4B;AAC9D,MAAMC,2BAA2B,GAAG;EAChCC,UAAU,EAAG1a,MAAM,IAAK;IACpB,OAAQA,MAAM,IAAIA,MAAM,CAACwa,yBAAyB,CAAC,IAAK,CAAC,CAAC;EAC9D,CAAC;EACDG,aAAa,EAAEA,CAAC3a,MAAM,EAAEf,OAAO,KAAK;IAChC,IAAI,CAACe,MAAM,EACP;IACJA,MAAM,CAACwa,yBAAyB,CAAC,GAAGvb,OAAO;EAC/C;AACJ,CAAC;AACD,SAAS2b,qBAAqBA,CAAC9Z,UAAU,EAAE0S,gBAAgB,EAAE;EACzD,MAAMX,gBAAgB,GAAGhS,wBAAwB,CAACC,UAAU,CAAC;EAC7D+R,gBAAgB,CAAC/R,UAAU,GAAGA,UAAU;EACxC,IAAI+Z,0BAA0B,GAAGA,CAAA,MAAO,CAAC,CAAC,CAAC;EAC3C,IAAIrH,gBAAgB,EAAE;IAClBX,gBAAgB,CAAC9R,cAAc,GAAGyS,gBAAgB,CAACzS,cAAc;IACjE8R,gBAAgB,CAAC7R,YAAY,GAAGwS,gBAAgB,CAACxS,YAAY,IAAI,IAAI;IACrE6Z,0BAA0B,GACtBrH,gBAAgB,CAACvS,kBAAkB,IAAI4Z,0BAA0B;EACzE;EACA,MAAMC,qBAAqB,GAAG/gB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE6Y,gBAAgB,CAAC;EACjEA,gBAAgB,CAAC5R,kBAAkB,GAAG,MAAM8Z,uBAAuB,CAACD,qBAAqB,EAAED,0BAA0B,CAAC,CAAC,CAAC;EACxH,OAAOhI,gBAAgB;AAC3B;AACA,SAASkI,uBAAuBA,CAAClI,gBAAgB,EAAEmI,eAAe,EAAE;EAChE,OAAOjhB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAGygB,2BAA2B,CAACC,UAAU,CAAC7H,gBAAgB,CAAC9R,cAAc,CAAC,IAAI,CAAC,CAAE,CAAC,EAAG0Z,2BAA2B,CAACC,UAAU,CAAC7H,gBAAgB,CAAC/R,UAAU,CAAC,IAAI,CAAC,CAAE,CAAC,EAAG+R,gBAAgB,CAAC5R,kBAAkB,CAAC,CAAC,IAAI,CAAC,CAAE,CAAC,EAAE+Z,eAAe,CAAC;AACvS;;AAEA;AACA;AACA;AACA,SAASC,eAAeA,CAAChc,OAAO,EAAE;EAC9B,OAAQ,SAASic,QAAQA,CAAClb,MAAM,EAAEmb,UAAU,EAAEC,UAAU,EAAE;IACtD,IAAID,UAAU,EAAE;MACZC,UAAU,KAAKA,UAAU,GAAGrhB,MAAM,CAACshB,wBAAwB,CAACrb,MAAM,EAAEmb,UAAU,CAAC,CAAC;MAChF;MACA,MAAMra,UAAU,GAAGsa,UAAU,CAACza,KAAK,IAAIya,UAAU,CAACta,UAAU;MAC5D,IAAIA,UAAU,EAAE;QACZ2Z,2BAA2B,CAACE,aAAa,CAAC7Z,UAAU,EAAE7B,OAAO,CAAC;MAClE;IACJ,CAAC,MACI;MACD;MACAwb,2BAA2B,CAACE,aAAa,CAAC3a,MAAM,EAAEf,OAAO,CAAC;IAC9D;EACJ,CAAC;AACL;AAEA,SAASqc,mBAAmBA,CAACtb,MAAM,EAAE;EACjC,OAAOD,qBAAqB,CAACC,MAAM,CAAC;AACxC;AACA,SAASub,gBAAgBA,CAACvb,MAAM,EAAE;EAC9B,OAAOY,kBAAkB,CAACZ,MAAM,CAAC;AACrC;AACA,SAASwb,sBAAsBA,CAACxb,MAAM,EAAE;EACpC,OAAOa,wBAAwB,CAACb,MAAM,CAAC;AAC3C;AACA,SAASyb,mBAAmBA,CAACzb,MAAM,EAAE;EACjC,OAAOkB,qBAAqB,CAAClB,MAAM,CAAC;AACxC;AAEA,SAAS0b,cAAcA,CAAC5I,SAAS,EAAE6I,SAAS,EAAEnI,gBAAgB,EAAE;EAC5D,MAAMM,UAAU,GAAGP,wBAAwB,CAACoI,SAAS,EAAEnI,gBAAgB,CAAC;EACxE,MAAMX,gBAAgB,GAAG+H,qBAAqB,CAACe,SAAS,EAAEnI,gBAAgB,CAAC;EAC3EX,gBAAgB,CAACvS,gBAAgB,GAAGsS,yBAAyB,CAACC,gBAAgB,EAAEC,SAAS,EAAEgB,UAAU,CAAC;EACtG,OAAOA,UAAU;AACrB;AAEA,SAAS8H,QAAQA,CAAC9I,SAAS,EAAE;EACzB,OAAO,CAAC9S,MAAM,EAAE7E,GAAG,EAAEigB,UAAU,KAAK;IAChCA,UAAU,KAAKA,UAAU,GAAGrhB,MAAM,CAACshB,wBAAwB,CAACrb,MAAM,EAAE7E,GAAG,CAAC,CAAC;IACzE,MAAM2F,UAAU,GAAGsa,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACza,KAAK;IAC3F;IACA;IACA,IAAI,OAAOpE,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/C,IAAIuE,UAAU,IAAI,OAAOA,UAAU,KAAK,UAAU,EAAE;QAChDhF,2BAA2B,CAAC,CAAC;MACjC;IACJ;IACA,MAAMgY,UAAU,GAAG4H,cAAc,CAAC5I,SAAS,EAAEhS,UAAU,EAAE;MACrDC,cAAc,EAAEf,MAAM;MACtBgB,YAAY,EAAE7F,GAAG,CAAC+e,QAAQ,CAAC,CAAC;MAC5BjZ,kBAAkBA,CAAA,EAAG;QACjB,OAAO,CAAC,CAAC;MACb;IACJ,CAAC,CAAC;IACF,MAAM4a,aAAa,GAAG;MAClBtB,YAAY,EAAE,IAAI;MAClB1a,GAAGA,CAAA,EAAG;QACF,OAAOiU,UAAU;MACrB;IACJ,CAAC;IACD;IACA+H,aAAa,CAAC,YAAY,CAAC,GAAG/a,UAAU;IACxC,OAAO+a,aAAa;EACxB,CAAC;AACL;AAEA,MAAMC,UAAU,CAAC;EACbziB,WAAWA,CAACgC,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,MAAM0gB,gBAAgB,GAAGlb,wBAAwB,CAAC,IAAI,CAAC;IACvDkb,gBAAgB,CAACzb,gBAAgB,GAAIiV,cAAc,IAAK;MACpD,OAAOA,cAAc,CAAC/U,cAAc,CAAC,IAAI,CAACnF,IAAI,CAAC;IACnD,CAAC;EACL;EACAie,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACje,IAAI;EACpB;EACA6e,QAAQA,CAAA,EAAG;IACP,OAAQ,cAAa,IAAI,CAAC7e,IAAK,GAAE;EACrC;AACJ;AAEA,MAAM2gB,qBAAqB,CAAC;EACxB,OAAOjE,OAAOA,CAAC9Y,OAAO,EAAE;IACpB,OAAO;MACH+Y,QAAQ,EAAEgE,qBAAqB;MAC/B/D,SAAS,EAAE,CACP3I,0BAA0B,EAC1B;QAAE8I,OAAO,EAAEhJ,wBAAwB;QAAEkJ,QAAQ,EAAErZ;MAAQ,CAAC;IAEhE,CAAC;EACL;AACJ;AACA;AAAmB+c,qBAAqB,CAAChf,IAAI,YAAAif,8BAAA/e,CAAA;EAAA,YAAAA,CAAA,IAAyF8e,qBAAqB;AAAA,CAAkD;AAC7M;AAAmBA,qBAAqB,CAAC7E,IAAI,kBAz+DkG7gB,8DAAE;EAAAgD,IAAA,EAy+DV0iB;AAAqB,EAAG;AAC/J;AAAmBA,qBAAqB,CAAC3E,IAAI,kBA1+DkG/gB,8DAAE,IA0+Dc;AAC/J;EAAA,QAAAiG,SAAA,oBAAAA,SAAA,KA3+D+IjG,+DAAE,CA2+DrD0lB,qBAAqB,EAAc,CAAC;IACpH1iB,IAAI,EAAEpC,mDAAQA;EAClB,CAAC,CAAC;AAAA;AAEV,SAASglB,mBAAmBA,CAAC/H,QAAQ,EAAE5T,OAAO,GAAG,CAAC,CAAC,EAAE;EACjD,MAAM4b,IAAI,GAAG5b,OAAO,CAAC4b,IAAI,IAAI,UAAU;EACvC,MAAMC,MAAM,GAAG7b,OAAO,CAAC6b,MAAM,GAAG7b,OAAO,CAAC6b,MAAM,GAAG,IAAI,GAAG,EAAE;EAC1DC,mBAAmB,CAAClI,QAAQ,EAAE;IAAEgI,IAAI;IAAEC,MAAM,EAAE7b,OAAO,CAAC6b;EAAO,CAAC,CAAC;EAC/D,MAAMnK,QAAQ,GAAG/Q,qBAAqB,CAACiT,QAAQ,CAAC,IAAIvT,kBAAkB,CAACuT,QAAQ,CAAC;EAChF,IAAI,CAAClC,QAAQ,EAAE;IACX,MAAM,IAAI3W,KAAK,CAAE,GAAE8gB,MAAO,6BAA4BD,IAAK,2BAA0B,CAAC;EAC1F;AACJ;AACA,SAASE,mBAAmBA,CAAC1b,KAAK,EAAEJ,OAAO,GAAG,CAAC,CAAC,EAAE;EAC9C,MAAM4b,IAAI,GAAG5b,OAAO,CAAC4b,IAAI,IAAI,OAAO;EACpC,MAAMC,MAAM,GAAG7b,OAAO,CAAC6b,MAAM,GAAG7b,OAAO,CAAC6b,MAAM,GAAG,IAAI,GAAG,EAAE;EAC1D,IAAI,CAACzb,KAAK,EAAE;IACR,MAAM,IAAIrF,KAAK,CAAE,GAAE8gB,MAAO,KAAID,IAAK,oBAAmB,CAAC;EAC3D;AACJ;AAEA,SAASG,mBAAmBA,CAACC,WAAW,EAAE;EACtC,MAAMC,YAAY,GAAGziB,MAAM,CAAC2J,IAAI,CAAC6Y,WAAW,CAAC;EAC7C,MAAMzJ,SAAS,GAAG/Y,MAAM,CAAC4d,MAAM,CAAC4E,WAAW,CAAC;EAC5C,IAAI,OAAOhgB,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;IAC/CkgB,sBAAsB,CAAC;MACnBL,MAAM,EAAE,uBAAuB;MAC/BG,WAAW;MACXC,YAAY;MACZ1J;IACJ,CAAC,CAAC;EACN;EACA,OAAO4I,cAAc,CAAC5I,SAAS,EAAE,CAAC,GAAGpV,IAAI,KAAK;IAC1C,OAAO8e,YAAY,CAACpiB,MAAM,CAAC,CAACR,GAAG,EAAEuB,GAAG,EAAEZ,KAAK,KAAK;MAC5CX,GAAG,CAACuB,GAAG,CAAC,GAAGuC,IAAI,CAACnD,KAAK,CAAC;MACtB,OAAOX,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC;AACN;AACA,SAAS6iB,sBAAsBA,CAAC;EAAEL,MAAM;EAAEG,WAAW;EAAEC,YAAY;EAAE1J;AAAU,CAAC,EAAE;EAC9EuJ,mBAAmB,CAACE,WAAW,EAAE;IAAEH,MAAM;IAAED,IAAI,EAAE;EAAe,CAAC,CAAC;EAClEE,mBAAmB,CAAC,OAAOE,WAAW,KAAK,QAAQ,EAAE;IAAEH,MAAM;IAAED,IAAI,EAAE;EAAqB,CAAC,CAAC;EAC5FE,mBAAmB,CAACG,YAAY,CAACriB,MAAM,EAAE;IAAEiiB,MAAM;IAAED,IAAI,EAAE;EAAyB,CAAC,CAAC;EACpFrJ,SAAS,CAACvP,OAAO,CAAC,CAAC4Q,QAAQ,EAAE5Z,KAAK,KAAK2hB,mBAAmB,CAAC/H,QAAQ,EAAE;IACjEiI,MAAM;IACND,IAAI,EAAG,qBAAoBK,YAAY,CAACjiB,KAAK,CAAE;EACnD,CAAC,CAAC,CAAC;AACP;AAEA,SAASmiB,kBAAkBA,CAACvI,QAAQ,EAAEzQ,IAAI,EAAE;EACxC,IAAI,OAAOnH,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;IAC/C2f,mBAAmB,CAAC/H,QAAQ,EAAE;MAAEiI,MAAM,EAAE;IAAuB,CAAC,CAAC;EACrE;EACA,MAAMO,SAAS,GAAGjZ,IAAI,CAACtL,MAAM,CAACwkB,OAAO,CAAC;EACtC,MAAM9J,SAAS,GAAG6J,SAAS,CAACtkB,GAAG,CAAC8C,GAAG,IAAIugB,cAAc,CAAC,CAACvH,QAAQ,CAAC,EAAG0I,CAAC,IAAKA,CAAC,CAAC1hB,GAAG,CAAC,CAAC,CAAC;EACjF,OAAOugB,cAAc,CAAC,CAAC,GAAG5I,SAAS,CAAC,EAAE,CAAC,GAAGgK,KAAK,KAAK;IAChD,OAAOH,SAAS,CAACviB,MAAM,CAAC,CAACC,GAAG,EAAEc,GAAG,EAAEZ,KAAK,KAAK;MACzCF,GAAG,CAACc,GAAG,CAAC,GAAG2hB,KAAK,CAACviB,KAAK,CAAC;MACvB,OAAOF,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC;AACN;AAEA,SAAS0iB,uBAAuBA,CAACC,cAAc,EAAE;EAC7C,IAAI,OAAOzgB,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;IAC/C2f,mBAAmB,CAACc,cAAc,EAAE;MAChCZ,MAAM,EAAE,2BAA2B;MACnCD,IAAI,EAAE;IACV,CAAC,CAAC;EACN;EACA,MAAMc,KAAK,GAAG,CAAC,CAAC;EAChB,OAAO,IAAIC,KAAK,CAAC,CAAC,CAAC,EAAE;IACjBrd,GAAGA,CAACsd,OAAO,EAAEtjB,IAAI,EAAE;MACf,MAAMsa,QAAQ,GAAG8I,KAAK,CAACpjB,IAAI,CAAC,IACxB6hB,cAAc,CAAC,CAACsB,cAAc,CAAC,EAAGH,CAAC,IAAKA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,CAAC,CAAChjB,IAAI,CAAC,CAAC;MAC1FojB,KAAK,CAACpjB,IAAI,CAAC,GAAGsa,QAAQ;MACtB,OAAOA,QAAQ;IACnB;EACJ,CAAC,CAAC;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC3uEoC;AAC7B,MAAMtc,eAAe,SAASD,6CAAO,CAAC;EACzCyB,WAAWA,CAACikB,MAAM,EAAE;IAChB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACA,IAAI3c,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAAChG,QAAQ,CAAC,CAAC;EAC1B;EACA4iB,UAAUA,CAAC5U,UAAU,EAAE;IACnB,MAAM6U,YAAY,GAAG,KAAK,CAACD,UAAU,CAAC5U,UAAU,CAAC;IACjD,CAAC6U,YAAY,CAACC,MAAM,IAAI9U,UAAU,CAAC1C,IAAI,CAAC,IAAI,CAACqX,MAAM,CAAC;IACpD,OAAOE,YAAY;EACvB;EACA7iB,QAAQA,CAAA,EAAG;IACP,MAAM;MAAE+iB,QAAQ;MAAEC,WAAW;MAAEL;IAAO,CAAC,GAAG,IAAI;IAC9C,IAAII,QAAQ,EAAE;MACV,MAAMC,WAAW;IACrB;IACA,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,OAAON,MAAM;EACjB;EACArX,IAAIA,CAACtF,KAAK,EAAE;IACR,KAAK,CAACsF,IAAI,CAAE,IAAI,CAACqX,MAAM,GAAG3c,KAAM,CAAC;EACrC;AACJ;;;;;;;;;;;;;;;;ACzBoC;AACsC;AACnE,MAAMmd,aAAa,SAASlmB,6CAAO,CAAC;EACvCyB,WAAWA,CAAC0kB,WAAW,GAAGC,QAAQ,EAAEC,WAAW,GAAGD,QAAQ,EAAEE,kBAAkB,GAAGL,mFAAqB,EAAE;IACpG,KAAK,CAAC,CAAC;IACP,IAAI,CAACE,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACA,mBAAmB,GAAGH,WAAW,KAAKD,QAAQ;IACnD,IAAI,CAACD,WAAW,GAAGM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,WAAW,CAAC;IAC3C,IAAI,CAACE,WAAW,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,WAAW,CAAC;EAC/C;EACAhY,IAAIA,CAACtF,KAAK,EAAE;IACR,MAAM;MAAE4d,SAAS;MAAEJ,OAAO;MAAEC,mBAAmB;MAAEF,kBAAkB;MAAED;IAAY,CAAC,GAAG,IAAI;IACzF,IAAI,CAACM,SAAS,EAAE;MACZJ,OAAO,CAAC7a,IAAI,CAAC3C,KAAK,CAAC;MACnB,CAACyd,mBAAmB,IAAID,OAAO,CAAC7a,IAAI,CAAC4a,kBAAkB,CAACM,GAAG,CAAC,CAAC,GAAGP,WAAW,CAAC;IAChF;IACA,IAAI,CAACQ,WAAW,CAAC,CAAC;IAClB,KAAK,CAACxY,IAAI,CAACtF,KAAK,CAAC;EACrB;EACA4c,UAAUA,CAAC5U,UAAU,EAAE;IACnB,IAAI,CAACiV,cAAc,CAAC,CAAC;IACrB,IAAI,CAACa,WAAW,CAAC,CAAC;IAClB,MAAMjB,YAAY,GAAG,IAAI,CAACkB,eAAe,CAAC/V,UAAU,CAAC;IACrD,MAAM;MAAEyV,mBAAmB;MAAED;IAAQ,CAAC,GAAG,IAAI;IAC7C,MAAMQ,IAAI,GAAGR,OAAO,CAACzjB,KAAK,CAAC,CAAC;IAC5B,KAAK,IAAI+G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkd,IAAI,CAACxkB,MAAM,IAAI,CAACwO,UAAU,CAAC8U,MAAM,EAAEhc,CAAC,IAAI2c,mBAAmB,GAAG,CAAC,GAAG,CAAC,EAAE;MACrFzV,UAAU,CAAC1C,IAAI,CAAC0Y,IAAI,CAACld,CAAC,CAAC,CAAC;IAC5B;IACA,IAAI,CAACmd,uBAAuB,CAACjW,UAAU,CAAC;IACxC,OAAO6U,YAAY;EACvB;EACAiB,WAAWA,CAAA,EAAG;IACV,MAAM;MAAEV,WAAW;MAAEG,kBAAkB;MAAEC,OAAO;MAAEC;IAAoB,CAAC,GAAG,IAAI;IAC9E,MAAMS,kBAAkB,GAAG,CAACT,mBAAmB,GAAG,CAAC,GAAG,CAAC,IAAIL,WAAW;IACtEA,WAAW,GAAGC,QAAQ,IAAIa,kBAAkB,GAAGV,OAAO,CAAChkB,MAAM,IAAIgkB,OAAO,CAACW,MAAM,CAAC,CAAC,EAAEX,OAAO,CAAChkB,MAAM,GAAG0kB,kBAAkB,CAAC;IACvH,IAAI,CAACT,mBAAmB,EAAE;MACtB,MAAMI,GAAG,GAAGN,kBAAkB,CAACM,GAAG,CAAC,CAAC;MACpC,IAAIO,IAAI,GAAG,CAAC;MACZ,KAAK,IAAItd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0c,OAAO,CAAChkB,MAAM,IAAIgkB,OAAO,CAAC1c,CAAC,CAAC,IAAI+c,GAAG,EAAE/c,CAAC,IAAI,CAAC,EAAE;QAC7Dsd,IAAI,GAAGtd,CAAC;MACZ;MACAsd,IAAI,IAAIZ,OAAO,CAACW,MAAM,CAAC,CAAC,EAAEC,IAAI,GAAG,CAAC,CAAC;IACvC;EACJ;AACJ;;;;;;;;;;;;;;;;;AChDmD;AACP;AACd;AACvB,SAASnH,MAAMA,CAAC,GAAGla,IAAI,EAAE;EAC5B,OAAOshB,+DAAS,CAAC,CAAC,CAAC9mB,2CAAI,CAACwF,IAAI,EAAEuhB,wDAAY,CAACvhB,IAAI,CAAC,CAAC,CAAC;AACtD;;;;;;;;;;;;;;;;;;;;;ACL2C;AACyB;AAC5B;AACS;AAC0B;AACf;AACR;AAC7C,SAAS3F,QAAQA,CAAC,GAAG2F,IAAI,EAAE;EAC9B,MAAM8hB,cAAc,GAAGJ,6DAAiB,CAAC1hB,IAAI,CAAC;EAC9C,MAAM;IAAEA,IAAI,EAAE1C,OAAO;IAAE0I;EAAK,CAAC,GAAGwb,gFAAoB,CAACxhB,IAAI,CAAC;EAC1D,MAAM6E,MAAM,GAAG,IAAI5K,mDAAU,CAAEgR,UAAU,IAAK;IAC1C,MAAM;MAAExO;IAAO,CAAC,GAAGa,OAAO;IAC1B,IAAI,CAACb,MAAM,EAAE;MACTwO,UAAU,CAACzC,QAAQ,CAAC,CAAC;MACrB;IACJ;IACA,MAAMyR,MAAM,GAAG,IAAInd,KAAK,CAACL,MAAM,CAAC;IAChC,IAAIslB,oBAAoB,GAAGtlB,MAAM;IACjC,IAAIulB,kBAAkB,GAAGvlB,MAAM;IAC/B,KAAK,IAAIwlB,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAGxlB,MAAM,EAAEwlB,WAAW,EAAE,EAAE;MAC3D,IAAIC,QAAQ,GAAG,KAAK;MACpBT,qDAAS,CAACnkB,OAAO,CAAC2kB,WAAW,CAAC,CAAC,CAAC3Z,SAAS,CAACqZ,uFAAwB,CAAC1W,UAAU,EAAGhI,KAAK,IAAK;QACtF,IAAI,CAACif,QAAQ,EAAE;UACXA,QAAQ,GAAG,IAAI;UACfF,kBAAkB,EAAE;QACxB;QACA/H,MAAM,CAACgI,WAAW,CAAC,GAAGhf,KAAK;MAC/B,CAAC,EAAE,MAAM8e,oBAAoB,EAAE,EAAE9hB,SAAS,EAAE,MAAM;QAC9C,IAAI,CAAC8hB,oBAAoB,IAAI,CAACG,QAAQ,EAAE;UACpC,IAAI,CAACF,kBAAkB,EAAE;YACrB/W,UAAU,CAAC1C,IAAI,CAACvC,IAAI,GAAG6b,gEAAY,CAAC7b,IAAI,EAAEiU,MAAM,CAAC,GAAGA,MAAM,CAAC;UAC/D;UACAhP,UAAU,CAACzC,QAAQ,CAAC,CAAC;QACzB;MACJ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,CAAC;EACF,OAAOsZ,cAAc,GAAGjd,MAAM,CAACyC,IAAI,CAACsa,wEAAgB,CAACE,cAAc,CAAC,CAAC,GAAGjd,MAAM;AAClF;;;;;;;;;;;;;;;;ACtC4C;AACd;AACvB,SAASzK,EAAEA,CAAC,GAAG4F,IAAI,EAAE;EACxB,MAAMmiB,SAAS,GAAGZ,wDAAY,CAACvhB,IAAI,CAAC;EACpC,OAAOxF,2CAAI,CAACwF,IAAI,EAAEmiB,SAAS,CAAC;AAChC;;;;;;;;;;;;;;;;ACL2C;AACK;AACzC,SAAS7nB,UAAUA,CAAC+nB,mBAAmB,EAAEF,SAAS,EAAE;EACvD,MAAMG,YAAY,GAAGF,4DAAU,CAACC,mBAAmB,CAAC,GAAGA,mBAAmB,GAAG,MAAMA,mBAAmB;EACtG,MAAME,IAAI,GAAItX,UAAU,IAAKA,UAAU,CAACpD,KAAK,CAACya,YAAY,CAAC,CAAC,CAAC;EAC7D,OAAO,IAAIroB,mDAAU,CAACkoB,SAAS,GAAIlX,UAAU,IAAKkX,SAAS,CAACK,QAAQ,CAACD,IAAI,EAAE,CAAC,EAAEtX,UAAU,CAAC,GAAGsX,IAAI,CAAC;AACrG;;;;;;;;;;;;;;;;;ACNoD;AACY;AACzB;AAChC,SAASrnB,UAAUA,CAACub,QAAQ,EAAE;EACjC,OAAOgM,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;IACnC,IAAIyX,QAAQ,GAAG,IAAI;IACnB,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAIC,aAAa;IACjBF,QAAQ,GAAGnlB,MAAM,CAAC+K,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAEhL,SAAS,EAAEA,SAAS,EAAGsX,GAAG,IAAK;MAC5FqL,aAAa,GAAGnB,gEAAS,CAAChL,QAAQ,CAACc,GAAG,EAAErc,UAAU,CAACub,QAAQ,CAAC,CAAClZ,MAAM,CAAC,CAAC,CAAC;MACtE,IAAImlB,QAAQ,EAAE;QACVA,QAAQ,CAACtP,WAAW,CAAC,CAAC;QACtBsP,QAAQ,GAAG,IAAI;QACfE,aAAa,CAACta,SAAS,CAAC2C,UAAU,CAAC;MACvC,CAAC,MACI;QACD0X,SAAS,GAAG,IAAI;MACpB;IACJ,CAAC,CAAC,CAAC;IACH,IAAIA,SAAS,EAAE;MACXD,QAAQ,CAACtP,WAAW,CAAC,CAAC;MACtBsP,QAAQ,GAAG,IAAI;MACfE,aAAa,CAACta,SAAS,CAAC2C,UAAU,CAAC;IACvC;EACJ,CAAC,CAAC;AACN;;;;;;;;;;;;;;;ACzBsC;AAC/B,SAASqW,SAASA,CAAA,EAAG;EACxB,OAAOuB,mDAAQ,CAAC,CAAC,CAAC;AACtB;;;;;;;;;;;;;;;;ACHuC;AACyB;AACzD,SAAS5nB,cAAcA,CAAC6nB,YAAY,EAAE;EACzC,OAAOL,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;IACnC,IAAIiX,QAAQ,GAAG,KAAK;IACpB3kB,MAAM,CAAC+K,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAGhI,KAAK,IAAK;MAC7Dif,QAAQ,GAAG,IAAI;MACfjX,UAAU,CAAC1C,IAAI,CAACtF,KAAK,CAAC;IAC1B,CAAC,EAAE,MAAM;MACL,IAAI,CAACif,QAAQ,EAAE;QACXjX,UAAU,CAAC1C,IAAI,CAACua,YAAY,CAAC;MACjC;MACA7X,UAAU,CAACzC,QAAQ,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;EACP,CAAC,CAAC;AACN;;;;;;;;;;;;;;;;;ACf4C;AACL;AACyB;AACzD,SAASpN,oBAAoBA,CAAC4nB,UAAU,EAAEC,WAAW,GAAGF,oDAAQ,EAAE;EACrEC,UAAU,GAAGA,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAGA,UAAU,GAAGE,cAAc;EACvF,OAAOT,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;IACnC,IAAIkY,WAAW;IACf,IAAIC,KAAK,GAAG,IAAI;IAChB7lB,MAAM,CAAC+K,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAGhI,KAAK,IAAK;MAC7D,MAAMogB,UAAU,GAAGJ,WAAW,CAAChgB,KAAK,CAAC;MACrC,IAAImgB,KAAK,IAAI,CAACJ,UAAU,CAACG,WAAW,EAAEE,UAAU,CAAC,EAAE;QAC/CD,KAAK,GAAG,KAAK;QACbD,WAAW,GAAGE,UAAU;QACxBpY,UAAU,CAAC1C,IAAI,CAACtF,KAAK,CAAC;MAC1B;IACJ,CAAC,CAAC,CAAC;EACP,CAAC,CAAC;AACN;AACA,SAASigB,cAAcA,CAACI,CAAC,EAAEC,CAAC,EAAE;EAC1B,OAAOD,CAAC,KAAKC,CAAC;AAClB;;;;;;;;;;;;;;;;;;ACpB4B;AACwB;AACb;AACyB;AACzD,SAASxoB,UAAUA,CAACyoB,OAAO,EAAE1B,cAAc,EAAE;EAChD,IAAIA,cAAc,EAAE;IAChB,OAAQvkB,MAAM,IAAKA,MAAM,CAAC+J,IAAI,CAACvM,UAAU,CAAC,CAACuoB,CAAC,EAAEvf,CAAC,KAAK0d,gEAAS,CAAC+B,OAAO,CAACF,CAAC,EAAEvf,CAAC,CAAC,CAAC,CAACuD,IAAI,CAAC3M,yCAAG,CAAC,CAAC4oB,CAAC,EAAEE,EAAE,KAAK3B,cAAc,CAACwB,CAAC,EAAEC,CAAC,EAAExf,CAAC,EAAE0f,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACpI;EACA,OAAOhB,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;IACnC,IAAIpO,KAAK,GAAG,CAAC;IACb,IAAI6lB,QAAQ,GAAG,IAAI;IACnB,IAAIgB,UAAU,GAAG,KAAK;IACtBnmB,MAAM,CAAC+K,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAG0Y,UAAU,IAAK;MAClE,IAAI,CAACjB,QAAQ,EAAE;QACXA,QAAQ,GAAGf,6EAAwB,CAAC1W,UAAU,EAAEhL,SAAS,EAAE,MAAM;UAC7DyiB,QAAQ,GAAG,IAAI;UACfgB,UAAU,IAAIzY,UAAU,CAACzC,QAAQ,CAAC,CAAC;QACvC,CAAC,CAAC;QACFiZ,gEAAS,CAAC+B,OAAO,CAACG,UAAU,EAAE9mB,KAAK,EAAE,CAAC,CAAC,CAACyL,SAAS,CAACoa,QAAQ,CAAC;MAC/D;IACJ,CAAC,EAAE,MAAM;MACLgB,UAAU,GAAG,IAAI;MACjB,CAAChB,QAAQ,IAAIzX,UAAU,CAACzC,QAAQ,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC;AACN;;;;;;;;;;;;;;;;ACzBuC;AACyB;AACzD,SAAS9N,MAAMA,CAACkpB,SAAS,EAAEC,OAAO,EAAE;EACvC,OAAOpB,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;IACnC,IAAIpO,KAAK,GAAG,CAAC;IACbU,MAAM,CAAC+K,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAGhI,KAAK,IAAK2gB,SAAS,CAACzV,IAAI,CAAC0V,OAAO,EAAE5gB,KAAK,EAAEpG,KAAK,EAAE,CAAC,IAAIoO,UAAU,CAAC1C,IAAI,CAACtF,KAAK,CAAC,CAAC,CAAC;EACxI,CAAC,CAAC;AACN;;;;;;;;;;;;;;;;ACPsC;AACM;AACrC,SAAS4f,QAAQA,CAACiB,UAAU,GAAGxD,QAAQ,EAAE;EAC5C,OAAOtlB,mDAAQ,CAAC+nB,oDAAQ,EAAEe,UAAU,CAAC;AACzC;;;;;;;;;;;;;;;;;ACJoD;AACM;AACM;AACzD,SAASE,cAAcA,CAACzmB,MAAM,EAAE0N,UAAU,EAAEuY,OAAO,EAAEM,UAAU,EAAEG,YAAY,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,mBAAmB,EAAE;EAClI,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIznB,KAAK,GAAG,CAAC;EACb,IAAI6mB,UAAU,GAAG,KAAK;EACtB,MAAMa,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIb,UAAU,IAAI,CAACW,MAAM,CAAC5nB,MAAM,IAAI,CAAC6nB,MAAM,EAAE;MACzCrZ,UAAU,CAACzC,QAAQ,CAAC,CAAC;IACzB;EACJ,CAAC;EACD,MAAMgc,SAAS,GAAIvhB,KAAK,IAAMqhB,MAAM,GAAGR,UAAU,GAAGW,UAAU,CAACxhB,KAAK,CAAC,GAAGohB,MAAM,CAACze,IAAI,CAAC3C,KAAK,CAAE;EAC3F,MAAMwhB,UAAU,GAAIxhB,KAAK,IAAK;IAC1BihB,MAAM,IAAIjZ,UAAU,CAAC1C,IAAI,CAACtF,KAAK,CAAC;IAChCqhB,MAAM,EAAE;IACR,IAAII,aAAa,GAAG,KAAK;IACzBjD,gEAAS,CAAC+B,OAAO,CAACvgB,KAAK,EAAEpG,KAAK,EAAE,CAAC,CAAC,CAACyL,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAG0Z,UAAU,IAAK;MAC9FV,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACU,UAAU,CAAC;MACpF,IAAIT,MAAM,EAAE;QACRM,SAAS,CAACG,UAAU,CAAC;MACzB,CAAC,MACI;QACD1Z,UAAU,CAAC1C,IAAI,CAACoc,UAAU,CAAC;MAC/B;IACJ,CAAC,EAAE,MAAM;MACLD,aAAa,GAAG,IAAI;IACxB,CAAC,EAAEzkB,SAAS,EAAE,MAAM;MAChB,IAAIykB,aAAa,EAAE;QACf,IAAI;UACAJ,MAAM,EAAE;UACR,OAAOD,MAAM,CAAC5nB,MAAM,IAAI6nB,MAAM,GAAGR,UAAU,EAAE;YACzC,MAAMc,aAAa,GAAGP,MAAM,CAAC7mB,KAAK,CAAC,CAAC;YACpC,IAAI2mB,iBAAiB,EAAE;cACnBJ,sEAAe,CAAC9Y,UAAU,EAAEkZ,iBAAiB,EAAE,MAAMM,UAAU,CAACG,aAAa,CAAC,CAAC;YACnF,CAAC,MACI;cACDH,UAAU,CAACG,aAAa,CAAC;YAC7B;UACJ;UACAL,aAAa,CAAC,CAAC;QACnB,CAAC,CACD,OAAOhN,GAAG,EAAE;UACRtM,UAAU,CAACpD,KAAK,CAAC0P,GAAG,CAAC;QACzB;MACJ;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EACDha,MAAM,CAAC+K,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAEuZ,SAAS,EAAE,MAAM;IACnEd,UAAU,GAAG,IAAI;IACjBa,aAAa,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC;EACH,OAAO,MAAM;IACTH,mBAAmB,KAAK,IAAI,IAAIA,mBAAmB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,mBAAmB,CAAC,CAAC;EACnG,CAAC;AACL;;;;;;;;;;;;;;;;;;;ACxD4B;AACwB;AACb;AACW;AACF;AACzC,SAASppB,QAAQA,CAACwoB,OAAO,EAAE1B,cAAc,EAAEgC,UAAU,GAAGxD,QAAQ,EAAE;EACrE,IAAI8B,4DAAU,CAACN,cAAc,CAAC,EAAE;IAC5B,OAAO9mB,QAAQ,CAAC,CAACsoB,CAAC,EAAEvf,CAAC,KAAKpJ,yCAAG,CAAC,CAAC4oB,CAAC,EAAEE,EAAE,KAAK3B,cAAc,CAACwB,CAAC,EAAEC,CAAC,EAAExf,CAAC,EAAE0f,EAAE,CAAC,CAAC,CAAChC,gEAAS,CAAC+B,OAAO,CAACF,CAAC,EAAEvf,CAAC,CAAC,CAAC,CAAC,EAAE+f,UAAU,CAAC;EAChH,CAAC,MACI,IAAI,OAAOhC,cAAc,KAAK,QAAQ,EAAE;IACzCgC,UAAU,GAAGhC,cAAc;EAC/B;EACA,OAAOW,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK+Y,+DAAc,CAACzmB,MAAM,EAAE0N,UAAU,EAAEuY,OAAO,EAAEM,UAAU,CAAC,CAAC;AACnG;;;;;;;;;;;;;;;;ACbuC;AACyB;AACzD,SAASvoB,QAAQA,CAAA,EAAG;EACvB,OAAOknB,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;IACnC,IAAI4Z,IAAI;IACR,IAAIC,OAAO,GAAG,KAAK;IACnBvnB,MAAM,CAAC+K,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAGhI,KAAK,IAAK;MAC7D,MAAM8hB,CAAC,GAAGF,IAAI;MACdA,IAAI,GAAG5hB,KAAK;MACZ6hB,OAAO,IAAI7Z,UAAU,CAAC1C,IAAI,CAAC,CAACwc,CAAC,EAAE9hB,KAAK,CAAC,CAAC;MACtC6hB,OAAO,GAAG,IAAI;IAClB,CAAC,CAAC,CAAC;EACP,CAAC,CAAC;AACN;;;;;;;;;;;;;;;;;;ACboD;AACf;AACU;AACR;AAChC,SAASlqB,KAAKA,CAAC2G,OAAO,GAAG,CAAC,CAAC,EAAE;EAChC,MAAM;IAAE0jB,SAAS,GAAGA,CAAA,KAAM,IAAI/qB,6CAAO,CAAC,CAAC;IAAEgrB,YAAY,GAAG,IAAI;IAAEC,eAAe,GAAG,IAAI;IAAEC,mBAAmB,GAAG;EAAK,CAAC,GAAG7jB,OAAO;EAC5H,OAAQ8jB,aAAa,IAAK;IACtB,IAAIC,UAAU;IACd,IAAIC,eAAe;IACnB,IAAIC,OAAO;IACX,IAAItO,QAAQ,GAAG,CAAC;IAChB,IAAIuO,YAAY,GAAG,KAAK;IACxB,IAAIC,UAAU,GAAG,KAAK;IACtB,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACtBJ,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACnS,WAAW,CAAC,CAAC;MAC/FmS,eAAe,GAAGtlB,SAAS;IAC/B,CAAC;IACD,MAAM0X,KAAK,GAAGA,CAAA,KAAM;MAChBgO,WAAW,CAAC,CAAC;MACbL,UAAU,GAAGE,OAAO,GAAGvlB,SAAS;MAChCwlB,YAAY,GAAGC,UAAU,GAAG,KAAK;IACrC,CAAC;IACD,MAAME,mBAAmB,GAAGA,CAAA,KAAM;MAC9B,MAAMC,IAAI,GAAGP,UAAU;MACvB3N,KAAK,CAAC,CAAC;MACPkO,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACzS,WAAW,CAAC,CAAC;IAClE,CAAC;IACD,OAAOqP,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;MACnCiM,QAAQ,EAAE;MACV,IAAI,CAACwO,UAAU,IAAI,CAACD,YAAY,EAAE;QAC9BE,WAAW,CAAC,CAAC;MACjB;MACA,MAAMG,IAAI,GAAIN,OAAO,GAAGA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAGP,SAAS,CAAC,CAAE;MACvFha,UAAU,CAACb,GAAG,CAAC,MAAM;QACjB8M,QAAQ,EAAE;QACV,IAAIA,QAAQ,KAAK,CAAC,IAAI,CAACwO,UAAU,IAAI,CAACD,YAAY,EAAE;UAChDF,eAAe,GAAGQ,WAAW,CAACH,mBAAmB,EAAER,mBAAmB,CAAC;QAC3E;MACJ,CAAC,CAAC;MACFU,IAAI,CAACxd,SAAS,CAAC2C,UAAU,CAAC;MAC1B,IAAI,CAACqa,UAAU,IACXpO,QAAQ,GAAG,CAAC,EAAE;QACdoO,UAAU,GAAG,IAAIN,uDAAc,CAAC;UAC5Bzc,IAAI,EAAGtF,KAAK,IAAK6iB,IAAI,CAACvd,IAAI,CAACtF,KAAK,CAAC;UACjC4E,KAAK,EAAG0P,GAAG,IAAK;YACZmO,UAAU,GAAG,IAAI;YACjBC,WAAW,CAAC,CAAC;YACbJ,eAAe,GAAGQ,WAAW,CAACpO,KAAK,EAAEuN,YAAY,EAAE3N,GAAG,CAAC;YACvDuO,IAAI,CAACje,KAAK,CAAC0P,GAAG,CAAC;UACnB,CAAC;UACD/O,QAAQ,EAAEA,CAAA,KAAM;YACZid,YAAY,GAAG,IAAI;YACnBE,WAAW,CAAC,CAAC;YACbJ,eAAe,GAAGQ,WAAW,CAACpO,KAAK,EAAEwN,eAAe,CAAC;YACrDW,IAAI,CAACtd,QAAQ,CAAC,CAAC;UACnB;QACJ,CAAC,CAAC;QACFiZ,gEAAS,CAAClkB,MAAM,CAAC,CAAC+K,SAAS,CAACgd,UAAU,CAAC;MAC3C;IACJ,CAAC,CAAC,CAACD,aAAa,CAAC;EACrB,CAAC;AACL;AACA,SAASU,WAAWA,CAACpO,KAAK,EAAEqO,EAAE,EAAE,GAAGhmB,IAAI,EAAE;EACrC,IAAIgmB,EAAE,KAAK,IAAI,EAAE;IACbrO,KAAK,CAAC,CAAC;IACP;EACJ;EACA,IAAIqO,EAAE,KAAK,KAAK,EAAE;IACd;EACJ;EACA,MAAMC,YAAY,GAAG,IAAIjB,uDAAc,CAAC;IACpCzc,IAAI,EAAEA,CAAA,KAAM;MACR0d,YAAY,CAAC7S,WAAW,CAAC,CAAC;MAC1BuE,KAAK,CAAC,CAAC;IACX;EACJ,CAAC,CAAC;EACF,OAAO8J,gEAAS,CAACuE,EAAE,CAAC,GAAGhmB,IAAI,CAAC,CAAC,CAACsI,SAAS,CAAC2d,YAAY,CAAC;AACzD;;;;;;;;;;;;;;;;AC7EiD;AACjB;AACzB,SAASprB,WAAWA,CAACqrB,kBAAkB,EAAEC,UAAU,EAAEhE,SAAS,EAAE;EACnE,IAAIlL,UAAU;EACd,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIgP,kBAAkB,IAAI,OAAOA,kBAAkB,KAAK,QAAQ,EAAE;IAC9D,CAAC;MAAEjP,UAAU,GAAGqJ,QAAQ;MAAE6F,UAAU,GAAG7F,QAAQ;MAAEpJ,QAAQ,GAAG,KAAK;MAAEiL;IAAU,CAAC,GAAG+D,kBAAkB;EACvG,CAAC,MACI;IACDjP,UAAU,GAAIiP,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAGA,kBAAkB,GAAG5F,QAAS;EAC/G;EACA,OAAO1lB,6CAAK,CAAC;IACTqqB,SAAS,EAAEA,CAAA,KAAM,IAAI7E,yDAAa,CAACnJ,UAAU,EAAEkP,UAAU,EAAEhE,SAAS,CAAC;IACrE+C,YAAY,EAAE,IAAI;IAClBC,eAAe,EAAE,KAAK;IACtBC,mBAAmB,EAAElO;EACzB,CAAC,CAAC;AACN;;;;;;;;;;;;;;;;;ACjB8C;AACF;AACL;AAChC,SAAS5b,SAASA,CAAC,GAAG2e,MAAM,EAAE;EACjC,MAAMkI,SAAS,GAAGZ,wDAAY,CAACtH,MAAM,CAAC;EACtC,OAAOwI,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;IACnC,CAACkX,SAAS,GAAGjI,0DAAM,CAACD,MAAM,EAAE1c,MAAM,EAAE4kB,SAAS,CAAC,GAAGjI,0DAAM,CAACD,MAAM,EAAE1c,MAAM,CAAC,EAAE+K,SAAS,CAAC2C,UAAU,CAAC;EAClG,CAAC,CAAC;AACN;;;;;;;;;;;;;;;;;;ACRuC;AACyB;AACZ;AAChB;AAC7B,SAAS9P,SAASA,CAACkrB,QAAQ,EAAE;EAChC,OAAO5D,mDAAO,CAAC,CAACllB,MAAM,EAAE0N,UAAU,KAAK;IACnCwW,gEAAS,CAAC4E,QAAQ,CAAC,CAAC/d,SAAS,CAACqZ,6EAAwB,CAAC1W,UAAU,EAAE,MAAMA,UAAU,CAACzC,QAAQ,CAAC,CAAC,EAAE4d,4CAAI,CAAC,CAAC;IACtG,CAACnb,UAAU,CAAC8U,MAAM,IAAIxiB,MAAM,CAAC+K,SAAS,CAAC2C,UAAU,CAAC;EACtD,CAAC,CAAC;AACN;;;;;;;;;;;;;;ACTO,MAAMkV,qBAAqB,GAAG;EACjCW,GAAGA,CAAA,EAAG;IACF,OAAO,CAACX,qBAAqB,CAACmG,QAAQ,IAAIC,IAAI,EAAEzF,GAAG,CAAC,CAAC;EACzD,CAAC;EACDwF,QAAQ,EAAErmB;AACd,CAAC;;;;;;;;;;;;;;;;;;ACLyC;AACE;AAC5C,SAASohB,IAAIA,CAACoF,GAAG,EAAE;EACf,OAAOA,GAAG,CAACA,GAAG,CAAChqB,MAAM,GAAG,CAAC,CAAC;AAC9B;AACO,SAASilB,iBAAiBA,CAAC1hB,IAAI,EAAE;EACpC,OAAOoiB,uDAAU,CAACf,IAAI,CAACrhB,IAAI,CAAC,CAAC,GAAGA,IAAI,CAACmJ,GAAG,CAAC,CAAC,GAAGlJ,SAAS;AAC1D;AACO,SAASshB,YAAYA,CAACvhB,IAAI,EAAE;EAC/B,OAAOwmB,yDAAW,CAACnF,IAAI,CAACrhB,IAAI,CAAC,CAAC,GAAGA,IAAI,CAACmJ,GAAG,CAAC,CAAC,GAAGlJ,SAAS;AAC3D;AACO,SAASymB,SAASA,CAAC1mB,IAAI,EAAE8iB,YAAY,EAAE;EAC1C,OAAO,OAAOzB,IAAI,CAACrhB,IAAI,CAAC,KAAK,QAAQ,GAAGA,IAAI,CAACmJ,GAAG,CAAC,CAAC,GAAG2Z,YAAY;AACrE;;;;;;;;;;;;;;ACbA,MAAM;EAAE/lB;AAAQ,CAAC,GAAGD,KAAK;AACzB,MAAM;EAAEwe,cAAc;EAAErN,SAAS,EAAE0Y,WAAW;EAAE3gB,IAAI,EAAE4gB;AAAQ,CAAC,GAAGvqB,MAAM;AACjE,SAASmlB,oBAAoBA,CAACxhB,IAAI,EAAE;EACvC,IAAIA,IAAI,CAACvD,MAAM,KAAK,CAAC,EAAE;IACnB,MAAM2mB,KAAK,GAAGpjB,IAAI,CAAC,CAAC,CAAC;IACrB,IAAIjD,OAAO,CAACqmB,KAAK,CAAC,EAAE;MAChB,OAAO;QAAEpjB,IAAI,EAAEojB,KAAK;QAAEpd,IAAI,EAAE;MAAK,CAAC;IACtC;IACA,IAAI6gB,MAAM,CAACzD,KAAK,CAAC,EAAE;MACf,MAAMpd,IAAI,GAAG4gB,OAAO,CAACxD,KAAK,CAAC;MAC3B,OAAO;QACHpjB,IAAI,EAAEgG,IAAI,CAACrL,GAAG,CAAE8C,GAAG,IAAK2lB,KAAK,CAAC3lB,GAAG,CAAC,CAAC;QACnCuI;MACJ,CAAC;IACL;EACJ;EACA,OAAO;IAAEhG,IAAI,EAAEA,IAAI;IAAEgG,IAAI,EAAE;EAAK,CAAC;AACrC;AACA,SAAS6gB,MAAMA,CAAC3qB,GAAG,EAAE;EACjB,OAAOA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIof,cAAc,CAACpf,GAAG,CAAC,KAAKyqB,WAAW;AAChF;;;;;;;;;;;;;;ACpBO,SAAS9E,YAAYA,CAAC7b,IAAI,EAAEiU,MAAM,EAAE;EACvC,OAAOjU,IAAI,CAACtJ,MAAM,CAAC,CAACmI,MAAM,EAAEpH,GAAG,EAAEsG,CAAC,MAAOc,MAAM,CAACpH,GAAG,CAAC,GAAGwc,MAAM,CAAClW,CAAC,CAAC,EAAGc,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACnF;;;;;;;;;;;;;;;;ACF2C;AACD;AACnC,SAASpK,YAAYA,CAACyB,GAAG,EAAE;EAC9B,OAAO,CAAC,CAACA,GAAG,KAAKA,GAAG,YAAYjC,mDAAU,IAAKmoB,uDAAU,CAAClmB,GAAG,CAAC4qB,IAAI,CAAC,IAAI1E,uDAAU,CAAClmB,GAAG,CAACoM,SAAS,CAAE,CAAC;AACtG;;;;;;;;;;;;;;;ACJ0C;AACnC,SAASke,WAAWA,CAACvjB,KAAK,EAAE;EAC/B,OAAOA,KAAK,IAAImf,uDAAU,CAACnf,KAAK,CAACuf,QAAQ,CAAC;AAC9C;;;;;;;;;;;;;;;ACHuC;AACvC,MAAM;EAAEzlB;AAAQ,CAAC,GAAGD,KAAK;AACzB,SAASiqB,WAAWA,CAAC7iB,EAAE,EAAElE,IAAI,EAAE;EAC3B,OAAOjD,OAAO,CAACiD,IAAI,CAAC,GAAGkE,EAAE,CAAC,GAAGlE,IAAI,CAAC,GAAGkE,EAAE,CAAClE,IAAI,CAAC;AACjD;AACO,SAAS4hB,gBAAgBA,CAAC1d,EAAE,EAAE;EACjC,OAAOvJ,mDAAG,CAACqF,IAAI,IAAI+mB,WAAW,CAAC7iB,EAAE,EAAElE,IAAI,CAAC,CAAC;AAC7C","sources":["./node_modules/@ngxs/store/fesm2015/ngxs-store.js","./node_modules/rxjs/dist/esm/internal/BehaviorSubject.js","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/observable/concat.js","./node_modules/rxjs/dist/esm/internal/observable/forkJoin.js","./node_modules/rxjs/dist/esm/internal/observable/of.js","./node_modules/rxjs/dist/esm/internal/observable/throwError.js","./node_modules/rxjs/dist/esm/internal/operators/catchError.js","./node_modules/rxjs/dist/esm/internal/operators/concatAll.js","./node_modules/rxjs/dist/esm/internal/operators/defaultIfEmpty.js","./node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js","./node_modules/rxjs/dist/esm/internal/operators/exhaustMap.js","./node_modules/rxjs/dist/esm/internal/operators/filter.js","./node_modules/rxjs/dist/esm/internal/operators/mergeAll.js","./node_modules/rxjs/dist/esm/internal/operators/mergeInternals.js","./node_modules/rxjs/dist/esm/internal/operators/mergeMap.js","./node_modules/rxjs/dist/esm/internal/operators/pairwise.js","./node_modules/rxjs/dist/esm/internal/operators/share.js","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./node_modules/rxjs/dist/esm/internal/operators/startWith.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/util/args.js","./node_modules/rxjs/dist/esm/internal/util/argsArgArrayOrObject.js","./node_modules/rxjs/dist/esm/internal/util/createObject.js","./node_modules/rxjs/dist/esm/internal/util/isObservable.js","./node_modules/rxjs/dist/esm/internal/util/isScheduler.js","./node_modules/rxjs/dist/esm/internal/util/mapOneOrManyArgs.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { NgZone, PLATFORM_ID, Injectable, Inject, InjectionToken, inject, INJECTOR, ɵglobal, ErrorHandler, Optional, SkipSelf, NgModule, APP_BOOTSTRAP_LISTENER } from '@angular/core';\nimport * as i5 from '@ngxs/store/internals';\nimport { memoize, INITIAL_STATE_TOKEN, NgxsBootstrapper, ɵNGXS_STATE_CONTEXT_FACTORY, ɵNGXS_STATE_FACTORY } from '@ngxs/store/internals';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, Subject, BehaviorSubject, of, forkJoin, throwError, EMPTY, from, isObservable } from 'rxjs';\nimport { filter, map, share, shareReplay, take, exhaustMap, mergeMap, defaultIfEmpty, catchError, takeUntil, distinctUntilChanged, tap, startWith, pairwise } from 'rxjs/operators';\nimport { isStateOperator } from '@ngxs/store/operators';\n\n/**\n * Returns the type from an action instance/class.\n * @ignore\n */\nfunction getActionTypeFromInstance(action) {\n    if (action.constructor && action.constructor.type) {\n        return action.constructor.type;\n    }\n    else {\n        return action.type;\n    }\n}\n/**\n * Matches a action\n * @ignore\n */\nfunction actionMatcher(action1) {\n    const type1 = getActionTypeFromInstance(action1);\n    return function (action2) {\n        return type1 === getActionTypeFromInstance(action2);\n    };\n}\n/**\n * Set a deeply nested value. Example:\n *\n *   setValue({ foo: { bar: { eat: false } } },\n *      'foo.bar.eat', true) //=> { foo: { bar: { eat: true } } }\n *\n * While it traverses it also creates new objects from top down.\n *\n * @ignore\n */\nconst setValue = (obj, prop, val) => {\n    obj = Object.assign({}, obj);\n    const split = prop.split('.');\n    const lastIndex = split.length - 1;\n    split.reduce((acc, part, index) => {\n        if (index === lastIndex) {\n            acc[part] = val;\n        }\n        else {\n            acc[part] = Array.isArray(acc[part]) ? acc[part].slice() : Object.assign({}, acc[part]);\n        }\n        return acc && acc[part];\n    }, obj);\n    return obj;\n};\n/**\n * Get a deeply nested value. Example:\n *\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\n *\n * @ignore\n */\nconst getValue = (obj, prop) => prop.split('.').reduce((acc, part) => acc && acc[part], obj);\n/**\n * Simple object check.\n *\n *    isObject({a:1}) //=> true\n *    isObject(1) //=> false\n *\n * @ignore\n */\nconst isObject$1 = (item) => {\n    return item && typeof item === 'object' && !Array.isArray(item);\n};\n/**\n * Deep merge two objects.\n *\n *    mergeDeep({a:1, b:{x: 1, y:2}}, {b:{x: 3}, c:4}) //=> {a:1, b:{x:3, y:2}, c:4}\n *\n * @param base base object onto which `sources` will be applied\n */\nconst mergeDeep = (base, ...sources) => {\n    if (!sources.length)\n        return base;\n    const source = sources.shift();\n    if (isObject$1(base) && isObject$1(source)) {\n        for (const key in source) {\n            if (isObject$1(source[key])) {\n                if (!base[key])\n                    Object.assign(base, { [key]: {} });\n                mergeDeep(base[key], source[key]);\n            }\n            else {\n                Object.assign(base, { [key]: source[key] });\n            }\n        }\n    }\n    return mergeDeep(base, ...sources);\n};\n\nfunction throwStateNameError(name) {\n    throw new Error(`${name} is not a valid state name. It needs to be a valid object property name.`);\n}\nfunction throwStateNamePropertyError() {\n    throw new Error(`States must register a 'name' property.`);\n}\nfunction throwStateUniqueError(current, newName, oldName) {\n    throw new Error(`State name '${current}' from ${newName} already exists in ${oldName}.`);\n}\nfunction throwStateDecoratorError(name) {\n    throw new Error(`States must be decorated with @State() decorator, but \"${name}\" isn't.`);\n}\nfunction throwActionDecoratorError() {\n    throw new Error('@Action() decorator cannot be used with static methods.');\n}\nfunction throwSelectorDecoratorError() {\n    throw new Error('Selectors only work on methods.');\n}\nfunction getZoneWarningMessage() {\n    return ('Your application was bootstrapped with nooped zone and your execution strategy requires an actual NgZone!\\n' +\n        'Please set the value of the executionStrategy property to NoopNgxsExecutionStrategy.\\n' +\n        'NgxsModule.forRoot(states, { executionStrategy: NoopNgxsExecutionStrategy })');\n}\nfunction getUndecoratedStateInIvyWarningMessage(name) {\n    return `'${name}' class should be decorated with @Injectable() right after the @State() decorator`;\n}\nfunction throwSelectFactoryNotConnectedError() {\n    throw new Error('You have forgotten to import the NGXS module!');\n}\nfunction throwPatchingArrayError() {\n    throw new Error('Patching arrays is not supported.');\n}\nfunction throwPatchingPrimitiveError() {\n    throw new Error('Patching primitives is not supported.');\n}\n\nclass DispatchOutsideZoneNgxsExecutionStrategy {\n    constructor(_ngZone, _platformId) {\n        this._ngZone = _ngZone;\n        this._platformId = _platformId;\n        // Caretaker note: we have still left the `typeof` condition in order to avoid\n        // creating a breaking change for projects that still use the View Engine.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            verifyZoneIsNotNooped(_ngZone);\n        }\n    }\n    enter(func) {\n        if (isPlatformServer(this._platformId)) {\n            return this.runInsideAngular(func);\n        }\n        return this.runOutsideAngular(func);\n    }\n    leave(func) {\n        return this.runInsideAngular(func);\n    }\n    runInsideAngular(func) {\n        if (NgZone.isInAngularZone()) {\n            return func();\n        }\n        return this._ngZone.run(func);\n    }\n    runOutsideAngular(func) {\n        if (NgZone.isInAngularZone()) {\n            return this._ngZone.runOutsideAngular(func);\n        }\n        return func();\n    }\n}\n/** @nocollapse */ DispatchOutsideZoneNgxsExecutionStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DispatchOutsideZoneNgxsExecutionStrategy, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ DispatchOutsideZoneNgxsExecutionStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DispatchOutsideZoneNgxsExecutionStrategy, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: DispatchOutsideZoneNgxsExecutionStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n// Caretaker note: this should exist as a separate function and not a class method,\n// since class methods are not tree-shakable.\nfunction verifyZoneIsNotNooped(ngZone) {\n    // `NoopNgZone` is not exposed publicly as it doesn't expect\n    // to be used outside of the core Angular code, thus we just have\n    // to check if the zone doesn't extend or instanceof `NgZone`.\n    if (ngZone instanceof NgZone) {\n        return;\n    }\n    console.warn(getZoneWarningMessage());\n}\n\nconst ROOT_OPTIONS = new InjectionToken('ROOT_OPTIONS');\nconst ROOT_STATE_TOKEN = new InjectionToken('ROOT_STATE_TOKEN');\nconst FEATURE_STATE_TOKEN = new InjectionToken('FEATURE_STATE_TOKEN');\nconst NGXS_PLUGINS = new InjectionToken('NGXS_PLUGINS');\nconst META_KEY = 'NGXS_META';\nconst META_OPTIONS_KEY = 'NGXS_OPTIONS_META';\nconst SELECTOR_META_KEY = 'NGXS_SELECTOR_META';\n/**\n * The NGXS config settings.\n */\nclass NgxsConfig {\n    constructor() {\n        /**\n         * Defining the default state before module initialization\n         * This is convenient if we need to create a define our own set of states.\n         * @deprecated will be removed after v4\n         * (default: {})\n         */\n        this.defaultsState = {};\n        /**\n         * Defining shared selector options\n         */\n        this.selectorOptions = {\n            injectContainerState: true,\n            suppressErrors: true // TODO: default is true in v3, will change in v4\n        };\n        this.compatibility = {\n            strictContentSecurityPolicy: false\n        };\n        this.executionStrategy = DispatchOutsideZoneNgxsExecutionStrategy;\n    }\n}\n/** @nocollapse */ NgxsConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ NgxsConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsConfig, providedIn: 'root', useFactory: (options) => mergeDeep(new NgxsConfig(), options), deps: [{ token: ROOT_OPTIONS }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: (options) => mergeDeep(new NgxsConfig(), options),\n                    deps: [ROOT_OPTIONS]\n                }]\n        }], ctorParameters: function () { return []; } });\n/**\n * Represents a basic change from a previous to a new value for a single state instance.\n * Passed as a value in a NgxsSimpleChanges object to the ngxsOnChanges hook.\n */\nclass NgxsSimpleChange {\n    constructor(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n}\n\nclass NoopNgxsExecutionStrategy {\n    enter(func) {\n        return func();\n    }\n    leave(func) {\n        return func();\n    }\n}\n/** @nocollapse */ NoopNgxsExecutionStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NoopNgxsExecutionStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ NoopNgxsExecutionStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NoopNgxsExecutionStrategy, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NoopNgxsExecutionStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * The strategy that might be provided by users through `options.executionStrategy`.\n */\nconst USER_PROVIDED_NGXS_EXECUTION_STRATEGY = new InjectionToken('USER_PROVIDED_NGXS_EXECUTION_STRATEGY');\n/*\n * Internal execution strategy injection token\n */\nconst NGXS_EXECUTION_STRATEGY = new InjectionToken('NGXS_EXECUTION_STRATEGY', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(INJECTOR);\n        const executionStrategy = injector.get(USER_PROVIDED_NGXS_EXECUTION_STRATEGY);\n        return executionStrategy\n            ? injector.get(executionStrategy)\n            : injector.get(typeof ɵglobal.Zone !== 'undefined'\n                ? DispatchOutsideZoneNgxsExecutionStrategy\n                : NoopNgxsExecutionStrategy);\n    }\n});\n\n/**\n * Ensures metadata is attached to the class and returns it.\n *\n * @ignore\n */\nfunction ensureStoreMetadata$1(target) {\n    if (!target.hasOwnProperty(META_KEY)) {\n        const defaultMetadata = {\n            name: null,\n            actions: {},\n            defaults: {},\n            path: null,\n            makeRootSelector(context) {\n                return context.getStateGetter(defaultMetadata.name);\n            },\n            children: []\n        };\n        Object.defineProperty(target, META_KEY, { value: defaultMetadata });\n    }\n    return getStoreMetadata$1(target);\n}\n/**\n * Get the metadata attached to the state class if it exists.\n *\n * @ignore\n */\nfunction getStoreMetadata$1(target) {\n    return target[META_KEY];\n}\n/**\n * Ensures metadata is attached to the selector and returns it.\n *\n * @ignore\n */\nfunction ensureSelectorMetadata$1(target) {\n    if (!target.hasOwnProperty(SELECTOR_META_KEY)) {\n        const defaultMetadata = {\n            makeRootSelector: null,\n            originalFn: null,\n            containerClass: null,\n            selectorName: null,\n            getSelectorOptions: () => ({})\n        };\n        Object.defineProperty(target, SELECTOR_META_KEY, { value: defaultMetadata });\n    }\n    return getSelectorMetadata$1(target);\n}\n/**\n * Get the metadata attached to the selector if it exists.\n *\n * @ignore\n */\nfunction getSelectorMetadata$1(target) {\n    return target[SELECTOR_META_KEY];\n}\n/**\n * Get a deeply nested value. Example:\n *\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\n *\n * Note: This is not as fast as the `fastPropGetter` but is strict Content Security Policy compliant.\n * See perf hit: https://jsperf.com/fast-value-getter-given-path/1\n *\n * @ignore\n */\nfunction compliantPropGetter(paths) {\n    const copyOfPaths = paths.slice();\n    return obj => copyOfPaths.reduce((acc, part) => acc && acc[part], obj);\n}\n/**\n * The generated function is faster than:\n * - pluck (Observable operator)\n * - memoize\n *\n * @ignore\n */\nfunction fastPropGetter(paths) {\n    const segments = paths;\n    let seg = 'store.' + segments[0];\n    let i = 0;\n    const l = segments.length;\n    let expr = seg;\n    while (++i < l) {\n        expr = expr + ' && ' + (seg = seg + '.' + segments[i]);\n    }\n    const fn = new Function('store', 'return ' + expr + ';');\n    return fn;\n}\n/**\n * Get a deeply nested value. Example:\n *\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\n *\n * @ignore\n */\nfunction propGetter(paths, config) {\n    if (config && config.compatibility && config.compatibility.strictContentSecurityPolicy) {\n        return compliantPropGetter(paths);\n    }\n    else {\n        return fastPropGetter(paths);\n    }\n}\n/**\n * Given an array of states, it will return a object graph. Example:\n *    const states = [\n *      Cart,\n *      CartSaved,\n *      CartSavedItems\n *    ]\n *\n * would return:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * @ignore\n */\nfunction buildGraph(stateClasses) {\n    const findName = (stateClass) => {\n        const meta = stateClasses.find(g => g === stateClass);\n        // Caretaker note: we have still left the `typeof` condition in order to avoid\n        // creating a breaking change for projects that still use the View Engine.\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !meta) {\n            throw new Error(`Child state not found: ${stateClass}. \\r\\nYou may have forgotten to add states to module`);\n        }\n        return meta[META_KEY].name;\n    };\n    return stateClasses.reduce((result, stateClass) => {\n        const { name, children } = stateClass[META_KEY];\n        result[name] = (children || []).map(findName);\n        return result;\n    }, {});\n}\n/**\n * Given a states array, returns object graph\n * returning the name and state metadata. Example:\n *\n *  const graph = {\n *    cart: { metadata }\n *  };\n *\n * @ignore\n */\nfunction nameToState(states) {\n    return states.reduce((result, stateClass) => {\n        const meta = stateClass[META_KEY];\n        result[meta.name] = stateClass;\n        return result;\n    }, {});\n}\n/**\n * Given a object relationship graph will return the full path\n * for the child items. Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const r = {\n *    cart: 'cart',\n *    saved: 'cart.saved',\n *    items: 'cart.saved.items'\n *  };\n *\n * @ignore\n */\nfunction findFullParentPath(obj, newObj = {}) {\n    const visit = (child, keyToFind) => {\n        for (const key in child) {\n            if (child.hasOwnProperty(key) && child[key].indexOf(keyToFind) >= 0) {\n                const parent = visit(child, key);\n                return parent !== null ? `${parent}.${key}` : key;\n            }\n        }\n        return null;\n    };\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const parent = visit(obj, key);\n            newObj[key] = parent ? `${parent}.${key}` : key;\n        }\n    }\n    return newObj;\n}\n/**\n * Given a object graph, it will return the items topologically sorted Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const results = [\n *    'items',\n *    'saved',\n *    'cart'\n *  ];\n *\n * @ignore\n */\nfunction topologicalSort(graph) {\n    const sorted = [];\n    const visited = {};\n    const visit = (name, ancestors = []) => {\n        if (!Array.isArray(ancestors)) {\n            ancestors = [];\n        }\n        ancestors.push(name);\n        visited[name] = true;\n        graph[name].forEach((dep) => {\n            // Caretaker note: we have still left the `typeof` condition in order to avoid\n            // creating a breaking change for projects that still use the View Engine.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && ancestors.indexOf(dep) >= 0) {\n                throw new Error(`Circular dependency '${dep}' is required by '${name}': ${ancestors.join(' -> ')}`);\n            }\n            if (visited[dep]) {\n                return;\n            }\n            visit(dep, ancestors.slice(0));\n        });\n        if (sorted.indexOf(name) < 0) {\n            sorted.push(name);\n        }\n    };\n    Object.keys(graph).forEach(k => visit(k));\n    return sorted.reverse();\n}\n/**\n * Returns if the parameter is a object or not.\n *\n * @ignore\n */\nfunction isObject(obj) {\n    return (typeof obj === 'object' && obj !== null) || typeof obj === 'function';\n}\n\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will grab actions that have just been dispatched as well as actions that have completed\n */\nfunction ofAction(...allowedTypes) {\n    return ofActionOperator(allowedTypes);\n}\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just been dispatched\n */\nfunction ofActionDispatched(...allowedTypes) {\n    return ofActionOperator(allowedTypes, [\"DISPATCHED\" /* Dispatched */]);\n}\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just been successfully completed\n */\nfunction ofActionSuccessful(...allowedTypes) {\n    return ofActionOperator(allowedTypes, [\"SUCCESSFUL\" /* Successful */]);\n}\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just been canceled\n */\nfunction ofActionCanceled(...allowedTypes) {\n    return ofActionOperator(allowedTypes, [\"CANCELED\" /* Canceled */]);\n}\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just been completed\n */\nfunction ofActionCompleted(...allowedTypes) {\n    const allowedStatuses = [\n        \"SUCCESSFUL\" /* Successful */,\n        \"CANCELED\" /* Canceled */,\n        \"ERRORED\" /* Errored */\n    ];\n    return ofActionOperator(allowedTypes, allowedStatuses, mapActionResult);\n}\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just thrown an error\n */\nfunction ofActionErrored(...allowedTypes) {\n    return ofActionOperator(allowedTypes, [\"ERRORED\" /* Errored */]);\n}\nfunction ofActionOperator(allowedTypes, statuses, \n// This actually could've been `OperatorFunction<ActionContext, ActionCompletion | any>`,\n// since it maps either to `ctx.action` OR to `ActionCompletion`. But `ActionCompleteion | any`\n// defaults to `any`, thus there is no sense from union type.\nmapOperator = mapAction) {\n    const allowedMap = createAllowedActionTypesMap(allowedTypes);\n    const allowedStatusMap = statuses && createAllowedStatusesMap(statuses);\n    return function (o) {\n        return o.pipe(filterStatus(allowedMap, allowedStatusMap), mapOperator());\n    };\n}\nfunction filterStatus(allowedTypes, allowedStatuses) {\n    return filter((ctx) => {\n        const actionType = getActionTypeFromInstance(ctx.action);\n        const typeMatch = allowedTypes[actionType];\n        const statusMatch = allowedStatuses ? allowedStatuses[ctx.status] : true;\n        return typeMatch && statusMatch;\n    });\n}\nfunction mapActionResult() {\n    return map(({ action, status, error }) => {\n        return {\n            action,\n            result: {\n                successful: \"SUCCESSFUL\" /* Successful */ === status,\n                canceled: \"CANCELED\" /* Canceled */ === status,\n                error\n            }\n        };\n    });\n}\nfunction mapAction() {\n    return map((ctx) => ctx.action);\n}\nfunction createAllowedActionTypesMap(types) {\n    return types.reduce((filterMap, klass) => {\n        filterMap[getActionTypeFromInstance(klass)] = true;\n        return filterMap;\n    }, {});\n}\nfunction createAllowedStatusesMap(statuses) {\n    return statuses.reduce((filterMap, status) => {\n        filterMap[status] = true;\n        return filterMap;\n    }, {});\n}\n\n/**\n * Returns operator that will run\n * `subscribe` outside of the ngxs execution context\n */\nfunction leaveNgxs(ngxsExecutionStrategy) {\n    return (source) => {\n        return new Observable((sink) => {\n            return source.subscribe({\n                next(value) {\n                    ngxsExecutionStrategy.leave(() => sink.next(value));\n                },\n                error(error) {\n                    ngxsExecutionStrategy.leave(() => sink.error(error));\n                },\n                complete() {\n                    ngxsExecutionStrategy.leave(() => sink.complete());\n                }\n            });\n        });\n    };\n}\n\nclass InternalNgxsExecutionStrategy {\n    constructor(_executionStrategy) {\n        this._executionStrategy = _executionStrategy;\n    }\n    enter(func) {\n        return this._executionStrategy.enter(func);\n    }\n    leave(func) {\n        return this._executionStrategy.leave(func);\n    }\n}\n/** @nocollapse */ InternalNgxsExecutionStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalNgxsExecutionStrategy, deps: [{ token: NGXS_EXECUTION_STRATEGY }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InternalNgxsExecutionStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalNgxsExecutionStrategy, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalNgxsExecutionStrategy, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGXS_EXECUTION_STRATEGY]\n                }] }]; } });\n\n/**\n * This wraps the provided function, and will enforce the following:\n * - The calls will execute in the order that they are made\n * - A call will only be initiated when the previous call has completed\n * - If there is a call currently executing then the new call will be added\n *   to the queue and the function will return immediately\n *\n * NOTE: The following assumptions about the operation must hold true:\n * - The operation is synchronous in nature\n * - If any asynchronous side effects of the call exist, it should not\n *   have any bearing on the correctness of the next call in the queue\n * - The operation has a void return\n * - The caller should not assume that the call has completed upon\n *   return of the function\n * - The caller can assume that all the queued calls will complete\n *   within the current microtask\n * - The only way that a call will encounter another call in the queue\n *   would be if the call at the front of the queue initiated this call\n *   as part of its synchronous execution\n */\nfunction orderedQueueOperation(operation) {\n    const callsQueue = [];\n    let busyPushingNext = false;\n    return function callOperation(...args) {\n        if (busyPushingNext) {\n            callsQueue.unshift(args);\n            return;\n        }\n        busyPushingNext = true;\n        operation(...args);\n        while (callsQueue.length > 0) {\n            const nextCallArgs = callsQueue.pop();\n            nextCallArgs && operation(...nextCallArgs);\n        }\n        busyPushingNext = false;\n    };\n}\n/**\n * Custom Subject that ensures that subscribers are notified of values in the order that they arrived.\n * A standard Subject does not have this guarantee.\n * For example, given the following code:\n * ```typescript\n *   const subject = new Subject<string>();\n     subject.subscribe(value => {\n       if (value === 'start') subject.next('end');\n     });\n     subject.subscribe(value => { });\n     subject.next('start');\n * ```\n * When `subject` is a standard `Subject<T>` the second subscriber would recieve `end` and then `start`.\n * When `subject` is a `OrderedSubject<T>` the second subscriber would recieve `start` and then `end`.\n */\nclass OrderedSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._orderedNext = orderedQueueOperation((value) => super.next(value));\n    }\n    next(value) {\n        this._orderedNext(value);\n    }\n}\n/**\n * Custom BehaviorSubject that ensures that subscribers are notified of values in the order that they arrived.\n * A standard BehaviorSubject does not have this guarantee.\n * For example, given the following code:\n * ```typescript\n *   const subject = new BehaviorSubject<string>();\n     subject.subscribe(value => {\n       if (value === 'start') subject.next('end');\n     });\n     subject.subscribe(value => { });\n     subject.next('start');\n * ```\n * When `subject` is a standard `BehaviorSubject<T>` the second subscriber would recieve `end` and then `start`.\n * When `subject` is a `OrderedBehaviorSubject<T>` the second subscriber would recieve `start` and then `end`.\n */\nclass OrderedBehaviorSubject extends BehaviorSubject {\n    constructor(value) {\n        super(value);\n        this._orderedNext = orderedQueueOperation((value) => super.next(value));\n        this._currentValue = value;\n    }\n    getValue() {\n        return this._currentValue;\n    }\n    next(value) {\n        this._currentValue = value;\n        this._orderedNext(value);\n    }\n}\n\n/**\n * Internal Action stream that is emitted anytime an action is dispatched.\n */\nclass InternalActions extends OrderedSubject {\n    ngOnDestroy() {\n        this.complete();\n    }\n}\n/** @nocollapse */ InternalActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalActions, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InternalActions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalActions, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalActions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * Action stream that is emitted anytime an action is dispatched.\n *\n * You can listen to this in services to react without stores.\n */\nclass Actions extends Observable {\n    constructor(internalActions$, internalExecutionStrategy) {\n        const sharedInternalActions$ = internalActions$.pipe(leaveNgxs(internalExecutionStrategy), \n        // The `InternalActions` subject emits outside of the Angular zone.\n        // We have to re-enter the Angular zone for any incoming consumer.\n        // The `share()` operator reduces the number of change detections.\n        // This would call leave only once for any stream emission across all active subscribers.\n        share());\n        super(observer => {\n            const childSubscription = sharedInternalActions$.subscribe({\n                next: ctx => observer.next(ctx),\n                error: error => observer.error(error),\n                complete: () => observer.complete()\n            });\n            observer.add(childSubscription);\n        });\n    }\n}\n/** @nocollapse */ Actions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: Actions, deps: [{ token: InternalActions }, { token: InternalNgxsExecutionStrategy }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ Actions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: Actions, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: Actions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InternalActions }, { type: InternalNgxsExecutionStrategy }]; } });\n\n/**\n * Composes a array of functions from left to right. Example:\n *\n *      compose([fn, final])(state, action);\n *\n * then the funcs have a signature like:\n *\n *      function fn (state, action, next) {\n *          console.log('here', state, action, next);\n *          return next(state, action);\n *      }\n *\n *      function final (state, action) {\n *          console.log('here', state, action);\n *          return state;\n *      }\n *\n * the last function should not call `next`.\n *\n * @ignore\n */\nconst compose = (funcs) => (...args) => {\n    const curr = funcs.shift();\n    return curr(...args, (...nextArgs) => compose(funcs)(...nextArgs));\n};\n\n/**\n * This operator is used for piping the observable result\n * from the `dispatch()`. It has a \"smart\" error handling\n * strategy that allows us to decide whether we propagate\n * errors to Angular's `ErrorHandler` or enable users to\n * handle them manually. We consider following cases:\n * 1) `store.dispatch()` (no subscribe) -> call `handleError()`\n * 2) `store.dispatch().subscribe()` (no error callback) -> call `handleError()`\n * 3) `store.dispatch().subscribe({ error: ... })` -> don't call `handleError()`\n * 4) `toPromise()` without `catch` -> do `handleError()`\n * 5) `toPromise()` with `catch` -> don't `handleError()`\n */\nfunction ngxsErrorHandler(internalErrorReporter, ngxsExecutionStrategy) {\n    return (source) => {\n        let subscribed = false;\n        source.subscribe({\n            error: error => {\n                // Do not trigger change detection for a microtask. This depends on the execution\n                // strategy being used, but the default `DispatchOutsideZoneNgxsExecutionStrategy`\n                // leaves the Angular zone.\n                ngxsExecutionStrategy.enter(() => Promise.resolve().then(() => {\n                    if (!subscribed) {\n                        ngxsExecutionStrategy.leave(() => internalErrorReporter.reportErrorSafely(error));\n                    }\n                }));\n            }\n        });\n        return new Observable(subscriber => {\n            subscribed = true;\n            return source.pipe(leaveNgxs(ngxsExecutionStrategy)).subscribe(subscriber);\n        });\n    };\n}\nclass InternalErrorReporter {\n    constructor(_injector) {\n        this._injector = _injector;\n        /** Will be set lazily to be backward compatible. */\n        this._errorHandler = null;\n    }\n    reportErrorSafely(error) {\n        if (this._errorHandler === null) {\n            this._errorHandler = this._injector.get(ErrorHandler);\n        }\n        // The `try-catch` is used to avoid handling the error twice. Suppose we call\n        // `handleError` which re-throws the error internally. The re-thrown error will\n        // be caught by zone.js which will then get to the `zone.onError.emit()` and the\n        // `onError` subscriber will call `handleError` again.\n        try {\n            this._errorHandler.handleError(error);\n        }\n        catch (_a) { }\n    }\n}\n/** @nocollapse */ InternalErrorReporter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalErrorReporter, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InternalErrorReporter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalErrorReporter, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalErrorReporter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });\n\n/**\n * BehaviorSubject of the entire state.\n * @ignore\n */\nclass StateStream extends OrderedBehaviorSubject {\n    constructor() {\n        super({});\n    }\n    ngOnDestroy() {\n        // The `StateStream` should never emit values once the root view is removed, e.g. when the `NgModuleRef.destroy()` is called.\n        // This will eliminate memory leaks in server-side rendered apps where the `StateStream` is created per each HTTP request, users\n        // might forget to unsubscribe from `store.select` or `store.subscribe`, thus this will lead to huge memory leaks in SSR apps.\n        this.complete();\n    }\n}\n/** @nocollapse */ StateStream.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateStream, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ StateStream.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateStream, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateStream, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return []; } });\n\nclass PluginManager {\n    constructor(_parentManager, _pluginHandlers) {\n        this._parentManager = _parentManager;\n        this._pluginHandlers = _pluginHandlers;\n        this.plugins = [];\n        this.registerHandlers();\n    }\n    get rootPlugins() {\n        return (this._parentManager && this._parentManager.plugins) || this.plugins;\n    }\n    registerHandlers() {\n        const pluginHandlers = this.getPluginHandlers();\n        this.rootPlugins.push(...pluginHandlers);\n    }\n    getPluginHandlers() {\n        const handlers = this._pluginHandlers || [];\n        return handlers.map((plugin) => (plugin.handle ? plugin.handle.bind(plugin) : plugin));\n    }\n}\n/** @nocollapse */ PluginManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PluginManager, deps: [{ token: PluginManager, optional: true, skipSelf: true }, { token: NGXS_PLUGINS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ PluginManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PluginManager });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: PluginManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: PluginManager, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGXS_PLUGINS]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * Internal Action result stream that is emitted when an action is completed.\n * This is used as a method of returning the action result to the dispatcher\n * for the observable returned by the dispatch(...) call.\n * The dispatcher then asynchronously pushes the result from this stream onto the main action stream as a result.\n */\nclass InternalDispatchedActionResults extends Subject {\n}\n/** @nocollapse */ InternalDispatchedActionResults.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalDispatchedActionResults, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InternalDispatchedActionResults.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalDispatchedActionResults, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalDispatchedActionResults, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass InternalDispatcher {\n    constructor(_actions, _actionResults, _pluginManager, _stateStream, _ngxsExecutionStrategy, _internalErrorReporter) {\n        this._actions = _actions;\n        this._actionResults = _actionResults;\n        this._pluginManager = _pluginManager;\n        this._stateStream = _stateStream;\n        this._ngxsExecutionStrategy = _ngxsExecutionStrategy;\n        this._internalErrorReporter = _internalErrorReporter;\n    }\n    /**\n     * Dispatches event(s).\n     */\n    dispatch(actionOrActions) {\n        const result = this._ngxsExecutionStrategy.enter(() => this.dispatchByEvents(actionOrActions));\n        return result.pipe(ngxsErrorHandler(this._internalErrorReporter, this._ngxsExecutionStrategy));\n    }\n    dispatchByEvents(actionOrActions) {\n        if (Array.isArray(actionOrActions)) {\n            if (actionOrActions.length === 0)\n                return of(this._stateStream.getValue());\n            return forkJoin(actionOrActions.map(action => this.dispatchSingle(action)));\n        }\n        else {\n            return this.dispatchSingle(actionOrActions);\n        }\n    }\n    dispatchSingle(action) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const type = getActionTypeFromInstance(action);\n            if (!type) {\n                const error = new Error(`This action doesn't have a type property: ${action.constructor.name}`);\n                return throwError(error);\n            }\n        }\n        const prevState = this._stateStream.getValue();\n        const plugins = this._pluginManager.plugins;\n        return compose([\n            ...plugins,\n            (nextState, nextAction) => {\n                if (nextState !== prevState) {\n                    this._stateStream.next(nextState);\n                }\n                const actionResult$ = this.getActionResultStream(nextAction);\n                actionResult$.subscribe(ctx => this._actions.next(ctx));\n                this._actions.next({ action: nextAction, status: \"DISPATCHED\" /* Dispatched */ });\n                return this.createDispatchObservable(actionResult$);\n            }\n        ])(prevState, action).pipe(shareReplay());\n    }\n    getActionResultStream(action) {\n        return this._actionResults.pipe(filter((ctx) => ctx.action === action && ctx.status !== \"DISPATCHED\" /* Dispatched */), take(1), shareReplay());\n    }\n    createDispatchObservable(actionResult$) {\n        return actionResult$\n            .pipe(exhaustMap((ctx) => {\n            switch (ctx.status) {\n                case \"SUCCESSFUL\" /* Successful */:\n                    return of(this._stateStream.getValue());\n                case \"ERRORED\" /* Errored */:\n                    return throwError(ctx.error);\n                default:\n                    return EMPTY;\n            }\n        }))\n            .pipe(shareReplay());\n    }\n}\n/** @nocollapse */ InternalDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalDispatcher, deps: [{ token: InternalActions }, { token: InternalDispatchedActionResults }, { token: PluginManager }, { token: StateStream }, { token: InternalNgxsExecutionStrategy }, { token: InternalErrorReporter }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InternalDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InternalActions }, { type: InternalDispatchedActionResults }, { type: PluginManager }, { type: StateStream }, { type: InternalNgxsExecutionStrategy }, { type: InternalErrorReporter }]; } });\n\n/**\n * Object freeze code\n * https://github.com/jsdf/deep-freeze\n */\nconst deepFreeze = (o) => {\n    Object.freeze(o);\n    const oIsFunction = typeof o === 'function';\n    const hasOwnProp = Object.prototype.hasOwnProperty;\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (hasOwnProp.call(o, prop) &&\n            (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n            o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n};\n\n/**\n * @ignore\n */\nclass InternalStateOperations {\n    constructor(_stateStream, _dispatcher, _config) {\n        this._stateStream = _stateStream;\n        this._dispatcher = _dispatcher;\n        this._config = _config;\n    }\n    /**\n     * Returns the root state operators.\n     */\n    getRootStateOperations() {\n        const rootStateOperations = {\n            getState: () => this._stateStream.getValue(),\n            setState: (newState) => this._stateStream.next(newState),\n            dispatch: (actionOrActions) => this._dispatcher.dispatch(actionOrActions)\n        };\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            return this._config.developmentMode\n                ? ensureStateAndActionsAreImmutable(rootStateOperations)\n                : rootStateOperations;\n        }\n        else {\n            return rootStateOperations;\n        }\n    }\n    setStateToTheCurrentWithNew(results) {\n        const stateOperations = this.getRootStateOperations();\n        // Get our current stream\n        const currentState = stateOperations.getState();\n        // Set the state to the current + new\n        stateOperations.setState(Object.assign(Object.assign({}, currentState), results.defaults));\n    }\n}\n/** @nocollapse */ InternalStateOperations.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalStateOperations, deps: [{ token: StateStream }, { token: InternalDispatcher }, { token: NgxsConfig }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ InternalStateOperations.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalStateOperations, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: InternalStateOperations, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: StateStream }, { type: InternalDispatcher }, { type: NgxsConfig }]; } });\nfunction ensureStateAndActionsAreImmutable(root) {\n    return {\n        getState: () => root.getState(),\n        setState: value => {\n            const frozenValue = deepFreeze(value);\n            return root.setState(frozenValue);\n        },\n        dispatch: actions => {\n            return root.dispatch(actions);\n        }\n    };\n}\n\nfunction simplePatch(value) {\n    return (existingState) => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (Array.isArray(value)) {\n                throwPatchingArrayError();\n            }\n            else if (typeof value !== 'object') {\n                throwPatchingPrimitiveError();\n            }\n        }\n        const newState = Object.assign({}, existingState);\n        for (const key in value) {\n            // deep clone for patch compatibility\n            newState[key] = value[key];\n        }\n        return newState;\n    };\n}\n\n/**\n * State Context factory class\n * @ignore\n */\nclass StateContextFactory {\n    constructor(_internalStateOperations) {\n        this._internalStateOperations = _internalStateOperations;\n    }\n    /**\n     * Create the state context\n     */\n    createStateContext(mappedStore) {\n        const root = this._internalStateOperations.getRootStateOperations();\n        return {\n            getState() {\n                const currentAppState = root.getState();\n                return getState(currentAppState, mappedStore.path);\n            },\n            patchState(val) {\n                const currentAppState = root.getState();\n                const patchOperator = simplePatch(val);\n                return setStateFromOperator(root, currentAppState, patchOperator, mappedStore.path);\n            },\n            setState(val) {\n                const currentAppState = root.getState();\n                return isStateOperator(val)\n                    ? setStateFromOperator(root, currentAppState, val, mappedStore.path)\n                    : setStateValue(root, currentAppState, val, mappedStore.path);\n            },\n            dispatch(actions) {\n                return root.dispatch(actions);\n            }\n        };\n    }\n}\n/** @nocollapse */ StateContextFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateContextFactory, deps: [{ token: InternalStateOperations }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ StateContextFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateContextFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateContextFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InternalStateOperations }]; } });\nfunction setStateValue(root, currentAppState, newValue, path) {\n    const newAppState = setValue(currentAppState, path, newValue);\n    root.setState(newAppState);\n    return newAppState;\n    // In doing this refactoring I noticed that there is a 'bug' where the\n    // application state is returned instead of this state slice.\n    // This has worked this way since the beginning see:\n    // https://github.com/ngxs/store/blame/324c667b4b7debd8eb979006c67ca0ae347d88cd/src/state-factory.ts\n    // This needs to be fixed, but is a 'breaking' change.\n    // I will do this fix in a subsequent PR and we can decide how to handle it.\n}\nfunction setStateFromOperator(root, currentAppState, stateOperator, path) {\n    const local = getState(currentAppState, path);\n    const newValue = stateOperator(local);\n    return setStateValue(root, currentAppState, newValue, path);\n}\nfunction getState(currentAppState, path) {\n    return getValue(currentAppState, path);\n}\n\nconst stateNameRegex = new RegExp('^[a-zA-Z0-9_]+$');\nfunction ensureStateNameIsValid(name) {\n    if (!name) {\n        throwStateNamePropertyError();\n    }\n    else if (!stateNameRegex.test(name)) {\n        throwStateNameError(name);\n    }\n}\nfunction ensureStateNameIsUnique(stateName, state, statesByName) {\n    const existingState = statesByName[stateName];\n    if (existingState && existingState !== state) {\n        throwStateUniqueError(stateName, state.name, existingState.name);\n    }\n}\nfunction ensureStatesAreDecorated(stateClasses) {\n    stateClasses.forEach((stateClass) => {\n        if (!getStoreMetadata$1(stateClass)) {\n            throwStateDecoratorError(stateClass.name);\n        }\n    });\n}\n\n/**\n * All provided or injected tokens must have `@Injectable` decorator\n * (previously, injected tokens without `@Injectable` were allowed\n * if another decorator was used, e.g. pipes).\n */\nfunction ensureStateClassIsInjectable(stateClass) {\n    if (jit_hasInjectableAnnotation(stateClass) || aot_hasNgInjectableDef(stateClass)) {\n        return;\n    }\n    console.warn(getUndecoratedStateInIvyWarningMessage(stateClass.name));\n}\nfunction aot_hasNgInjectableDef(stateClass) {\n    // `ɵprov` is a static property added by the NGCC compiler. It always exists in\n    // AOT mode because this property is added before runtime. If an application is running in\n    // JIT mode then this property can be added by the `@Injectable()` decorator. The `@Injectable()`\n    // decorator has to go after the `@State()` decorator, thus we prevent users from unwanted DI errors.\n    return !!stateClass.ɵprov;\n}\nfunction jit_hasInjectableAnnotation(stateClass) {\n    // `ɵprov` doesn't exist in JIT mode (for instance when running unit tests with Jest).\n    const annotations = stateClass.__annotations__ || [];\n    return annotations.some((annotation) => (annotation === null || annotation === void 0 ? void 0 : annotation.ngMetadataName) === 'Injectable');\n}\n\n/**\n * Init action\n */\nclass InitState {\n}\nInitState.type = '@@INIT';\n/**\n * Update action\n */\nclass UpdateState {\n    constructor(addedStates) {\n        this.addedStates = addedStates;\n    }\n}\nUpdateState.type = '@@UPDATE_STATE';\n\nconst NGXS_DEVELOPMENT_OPTIONS = new InjectionToken('NGXS_DEVELOPMENT_OPTIONS', {\n    providedIn: 'root',\n    factory: () => ({ warnOnUnhandledActions: true })\n});\n\nclass NgxsUnhandledActionsLogger {\n    constructor(options) {\n        /**\n         * These actions should be ignored by default; the user can increase this\n         * list in the future via the `ignoreActions` method.\n         */\n        this._ignoredActions = new Set([InitState.type, UpdateState.type]);\n        if (typeof options.warnOnUnhandledActions === 'object') {\n            this.ignoreActions(...options.warnOnUnhandledActions.ignore);\n        }\n    }\n    /**\n     * Adds actions to the internal list of actions that should be ignored.\n     */\n    ignoreActions(...actions) {\n        for (const action of actions) {\n            this._ignoredActions.add(action.type);\n        }\n    }\n    /** @internal */\n    warn(action) {\n        const actionShouldBeIgnored = Array.from(this._ignoredActions).some(type => type === getActionTypeFromInstance(action));\n        if (actionShouldBeIgnored) {\n            return;\n        }\n        action =\n            action.constructor && action.constructor.name !== 'Object'\n                ? action.constructor.name\n                : action.type;\n        console.warn(`The ${action} action has been dispatched but hasn't been handled. This may happen if the state with an action handler for this action is not registered.`);\n    }\n}\n/** @nocollapse */ NgxsUnhandledActionsLogger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsUnhandledActionsLogger, deps: [{ token: NGXS_DEVELOPMENT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ NgxsUnhandledActionsLogger.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsUnhandledActionsLogger });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsUnhandledActionsLogger, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGXS_DEVELOPMENT_OPTIONS]\n                }] }]; } });\n\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || ngDevMode;\n/**\n * The `StateFactory` class adds root and feature states to the graph.\n * This extracts state names from state classes, checks if they already\n * exist in the global graph, throws errors if their names are invalid, etc.\n * See its constructor, state factories inject state factories that are\n * parent-level providers. This is required to get feature states from the\n * injector on the same level.\n *\n * The `NgxsModule.forFeature(...)` returns `providers: [StateFactory, ...states]`.\n * The `StateFactory` is initialized on the feature level and goes through `...states`\n * to get them from the injector through `injector.get(state)`.\n * @ignore\n */\nclass StateFactory {\n    constructor(_injector, _config, _parentFactory, _actions, _actionResults, _stateContextFactory, _initialState) {\n        this._injector = _injector;\n        this._config = _config;\n        this._parentFactory = _parentFactory;\n        this._actions = _actions;\n        this._actionResults = _actionResults;\n        this._stateContextFactory = _stateContextFactory;\n        this._initialState = _initialState;\n        this._actionsSubscription = null;\n        this._states = [];\n        this._statesByName = {};\n        this._statePaths = {};\n        this.getRuntimeSelectorContext = memoize(() => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const stateFactory = this;\n            function resolveGetter(key) {\n                const path = stateFactory.statePaths[key];\n                return path ? propGetter(path.split('.'), stateFactory._config) : null;\n            }\n            const context = this._parentFactory\n                ? this._parentFactory.getRuntimeSelectorContext()\n                : {\n                    getStateGetter(key) {\n                        let getter = resolveGetter(key);\n                        if (getter) {\n                            return getter;\n                        }\n                        return (...args) => {\n                            // Late loaded getter\n                            if (!getter) {\n                                getter = resolveGetter(key);\n                            }\n                            return getter ? getter(...args) : undefined;\n                        };\n                    },\n                    getSelectorOptions(localOptions) {\n                        const globalSelectorOptions = stateFactory._config.selectorOptions;\n                        return Object.assign(Object.assign({}, globalSelectorOptions), (localOptions || {}));\n                    }\n                };\n            return context;\n        });\n    }\n    get states() {\n        return this._parentFactory ? this._parentFactory.states : this._states;\n    }\n    get statesByName() {\n        return this._parentFactory ? this._parentFactory.statesByName : this._statesByName;\n    }\n    get statePaths() {\n        return this._parentFactory ? this._parentFactory.statePaths : this._statePaths;\n    }\n    static _cloneDefaults(defaults) {\n        let value = defaults;\n        if (Array.isArray(defaults)) {\n            value = defaults.slice();\n        }\n        else if (isObject(defaults)) {\n            value = Object.assign({}, defaults);\n        }\n        else if (defaults === undefined) {\n            value = {};\n        }\n        return value;\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this._actionsSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n    /**\n     * Add a new state to the global defs.\n     */\n    add(stateClasses) {\n        if (NG_DEV_MODE) {\n            ensureStatesAreDecorated(stateClasses);\n        }\n        const { newStates } = this.addToStatesMap(stateClasses);\n        if (!newStates.length)\n            return [];\n        const stateGraph = buildGraph(newStates);\n        const sortedStates = topologicalSort(stateGraph);\n        const paths = findFullParentPath(stateGraph);\n        const nameGraph = nameToState(newStates);\n        const bootstrappedStores = [];\n        for (const name of sortedStates) {\n            const stateClass = nameGraph[name];\n            const path = paths[name];\n            const meta = stateClass[META_KEY];\n            this.addRuntimeInfoToMeta(meta, path);\n            // Note: previously we called `ensureStateClassIsInjectable` within the\n            // `State` decorator. This check is moved here because the `ɵprov` property\n            // will not exist on the class in JIT mode (because it's set asynchronously\n            // during JIT compilation through `Object.defineProperty`).\n            if (NG_DEV_MODE) {\n                ensureStateClassIsInjectable(stateClass);\n            }\n            const stateMap = {\n                name,\n                path,\n                isInitialised: false,\n                actions: meta.actions,\n                instance: this._injector.get(stateClass),\n                defaults: StateFactory._cloneDefaults(meta.defaults)\n            };\n            // ensure our store hasn't already been added\n            // but don't throw since it could be lazy\n            // loaded from different paths\n            if (!this.hasBeenMountedAndBootstrapped(name, path)) {\n                bootstrappedStores.push(stateMap);\n            }\n            this.states.push(stateMap);\n        }\n        return bootstrappedStores;\n    }\n    /**\n     * Add a set of states to the store and return the defaults\n     */\n    addAndReturnDefaults(stateClasses) {\n        const classes = stateClasses || [];\n        const mappedStores = this.add(classes);\n        const defaults = mappedStores.reduce((result, mappedStore) => setValue(result, mappedStore.path, mappedStore.defaults), {});\n        return { defaults, states: mappedStores };\n    }\n    connectActionHandlers() {\n        // Note: We have to connect actions only once when the `StateFactory`\n        //       is being created for the first time. This checks if we're in\n        //       a child state factory and the parent state factory already exists.\n        if (this._parentFactory || this._actionsSubscription !== null) {\n            return;\n        }\n        const dispatched$ = new Subject();\n        this._actionsSubscription = this._actions\n            .pipe(filter((ctx) => ctx.status === \"DISPATCHED\" /* Dispatched */), mergeMap(ctx => {\n            dispatched$.next(ctx);\n            const action = ctx.action;\n            return this.invokeActions(dispatched$, action).pipe(map(() => ({ action, status: \"SUCCESSFUL\" /* Successful */ })), defaultIfEmpty({ action, status: \"CANCELED\" /* Canceled */ }), catchError(error => of({ action, status: \"ERRORED\" /* Errored */, error })));\n        }))\n            .subscribe(ctx => this._actionResults.next(ctx));\n    }\n    /**\n     * Invoke actions on the states.\n     */\n    invokeActions(dispatched$, action) {\n        const type = getActionTypeFromInstance(action);\n        const results = [];\n        // Determines whether the dispatched action has been handled, this is assigned\n        // to `true` within the below `for` loop if any `actionMetas` has been found.\n        let actionHasBeenHandled = false;\n        for (const metadata of this.states) {\n            const actionMetas = metadata.actions[type];\n            if (actionMetas) {\n                for (const actionMeta of actionMetas) {\n                    const stateContext = this._stateContextFactory.createStateContext(metadata);\n                    try {\n                        let result = metadata.instance[actionMeta.fn](stateContext, action);\n                        if (result instanceof Promise) {\n                            result = from(result);\n                        }\n                        if (isObservable(result)) {\n                            // If this observable has been completed w/o emitting\n                            // any value then we wouldn't want to complete the whole chain\n                            // of actions. Since if any observable completes then\n                            // action will be canceled.\n                            // For instance if any action handler would've had such statement:\n                            // `handler(ctx) { return EMPTY; }`\n                            // then the action will be canceled.\n                            // See https://github.com/ngxs/store/issues/1568\n                            result = result.pipe(mergeMap((value) => {\n                                if (value instanceof Promise) {\n                                    return from(value);\n                                }\n                                if (isObservable(value)) {\n                                    return value;\n                                }\n                                return of(value);\n                            }), defaultIfEmpty({}));\n                            if (actionMeta.options.cancelUncompleted) {\n                                // todo: ofActionDispatched should be used with action class\n                                result = result.pipe(takeUntil(dispatched$.pipe(ofActionDispatched(action))));\n                            }\n                        }\n                        else {\n                            result = of({}).pipe(shareReplay());\n                        }\n                        results.push(result);\n                    }\n                    catch (e) {\n                        results.push(throwError(e));\n                    }\n                    actionHasBeenHandled = true;\n                }\n            }\n        }\n        // The `NgxsUnhandledActionsLogger` is a tree-shakable class which functions\n        // only during development.\n        if (NG_DEV_MODE && !actionHasBeenHandled) {\n            const unhandledActionsLogger = this._injector.get(NgxsUnhandledActionsLogger, null);\n            // The `NgxsUnhandledActionsLogger` will not be resolved by the injector if the\n            // `NgxsDevelopmentModule` is not provided. It's enough to check whether the `injector.get`\n            // didn't return `null` so we may ensure the module has been imported.\n            if (unhandledActionsLogger) {\n                unhandledActionsLogger.warn(action);\n            }\n        }\n        if (!results.length) {\n            results.push(of({}));\n        }\n        return forkJoin(results);\n    }\n    addToStatesMap(stateClasses) {\n        const newStates = [];\n        const statesMap = this.statesByName;\n        for (const stateClass of stateClasses) {\n            const stateName = getStoreMetadata$1(stateClass).name;\n            if (NG_DEV_MODE) {\n                ensureStateNameIsUnique(stateName, stateClass, statesMap);\n            }\n            const unmountedState = !statesMap[stateName];\n            if (unmountedState) {\n                newStates.push(stateClass);\n                statesMap[stateName] = stateClass;\n            }\n        }\n        return { newStates };\n    }\n    addRuntimeInfoToMeta(meta, path) {\n        this.statePaths[meta.name] = path;\n        // TODO: v4 - we plan to get rid of the path property because it is non-deterministic\n        // we can do this when we get rid of the incorrectly exposed getStoreMetadata\n        // We will need to come up with an alternative in v4 because this is used by many plugins\n        meta.path = path;\n    }\n    hasBeenMountedAndBootstrapped(name, path) {\n        const valueIsBootstrappedInInitialState = getValue(this._initialState, path) !== undefined;\n        // This checks whether a state has been already added to the global graph and\n        // its lifecycle is in 'bootstrapped' state.\n        return this.statesByName[name] && valueIsBootstrappedInInitialState;\n    }\n}\n/** @nocollapse */ StateFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateFactory, deps: [{ token: i0.Injector }, { token: NgxsConfig }, { token: StateFactory, optional: true, skipSelf: true }, { token: InternalActions }, { token: InternalDispatchedActionResults }, { token: StateContextFactory }, { token: INITIAL_STATE_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ StateFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateFactory });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: StateFactory, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: NgxsConfig }, { type: StateFactory, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: InternalActions }, { type: InternalDispatchedActionResults }, { type: StateContextFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INITIAL_STATE_TOKEN]\n                }] }]; } });\n\nfunction createRootSelectorFactory(selectorMetaData, selectors, memoizedSelectorFn) {\n    return (context) => {\n        const { argumentSelectorFunctions, selectorOptions } = getRuntimeSelectorInfo(context, selectorMetaData, selectors);\n        return function selectFromRoot(rootState) {\n            // Determine arguments from the app state using the selectors\n            const results = argumentSelectorFunctions.map((argFn) => argFn(rootState));\n            // if the lambda tries to access a something on the\n            // state that doesn't exist, it will throw a TypeError.\n            // since this is quite usual behaviour, we simply return undefined if so.\n            try {\n                return memoizedSelectorFn(...results);\n            }\n            catch (ex) {\n                if (ex instanceof TypeError && selectorOptions.suppressErrors) {\n                    return undefined;\n                }\n                throw ex;\n            }\n        };\n    };\n}\nfunction createMemoizedSelectorFn(originalFn, creationMetadata) {\n    const containerClass = creationMetadata && creationMetadata.containerClass;\n    const wrappedFn = function wrappedSelectorFn(...args) {\n        const returnValue = originalFn.apply(containerClass, args);\n        if (returnValue instanceof Function) {\n            const innerMemoizedFn = memoize.apply(null, [returnValue]);\n            return innerMemoizedFn;\n        }\n        return returnValue;\n    };\n    const memoizedFn = memoize(wrappedFn);\n    Object.setPrototypeOf(memoizedFn, originalFn);\n    return memoizedFn;\n}\nfunction getRuntimeSelectorInfo(context, selectorMetaData, selectors = []) {\n    const localSelectorOptions = selectorMetaData.getSelectorOptions();\n    const selectorOptions = context.getSelectorOptions(localSelectorOptions);\n    const selectorsToApply = getSelectorsToApply(selectors, selectorOptions, selectorMetaData.containerClass);\n    const argumentSelectorFunctions = selectorsToApply.map((selector) => {\n        const factory = getRootSelectorFactory(selector);\n        return factory(context);\n    });\n    return {\n        selectorOptions,\n        argumentSelectorFunctions,\n    };\n}\nfunction getSelectorsToApply(selectors = [], selectorOptions, containerClass) {\n    const selectorsToApply = [];\n    const canInjectContainerState = selectors.length === 0 || selectorOptions.injectContainerState;\n    if (containerClass && canInjectContainerState) {\n        // If we are on a state class, add it as the first selector parameter\n        const metadata = getStoreMetadata$1(containerClass);\n        if (metadata) {\n            selectorsToApply.push(containerClass);\n        }\n    }\n    if (selectors) {\n        selectorsToApply.push(...selectors);\n    }\n    return selectorsToApply;\n}\n/**\n * This function gets the factory function to create the selector to get the selected slice from the app state\n * @ignore\n */\nfunction getRootSelectorFactory(selector) {\n    const metadata = getSelectorMetadata$1(selector) || getStoreMetadata$1(selector);\n    return (metadata && metadata.makeRootSelector) || (() => selector);\n}\n\n// tslint:disable:unified-signatures\nclass Store {\n    constructor(_stateStream, _internalStateOperations, _config, _internalExecutionStrategy, _stateFactory, initialStateValue) {\n        this._stateStream = _stateStream;\n        this._internalStateOperations = _internalStateOperations;\n        this._config = _config;\n        this._internalExecutionStrategy = _internalExecutionStrategy;\n        this._stateFactory = _stateFactory;\n        /**\n         * This is a derived state stream that leaves NGXS execution strategy to emit state changes within the Angular zone,\n         * because state is being changed actually within the `<root>` zone, see `InternalDispatcher#dispatchSingle`.\n         * All selects would use this stream, and it would call leave only once for any state change across all active selectors.\n         */\n        this._selectableStateStream = this._stateStream.pipe(leaveNgxs(this._internalExecutionStrategy), shareReplay({ bufferSize: 1, refCount: true }));\n        this.initStateStream(initialStateValue);\n    }\n    /**\n     * Dispatches event(s).\n     */\n    dispatch(actionOrActions) {\n        return this._internalStateOperations.getRootStateOperations().dispatch(actionOrActions);\n    }\n    select(selector) {\n        const selectorFn = this.getStoreBoundSelectorFn(selector);\n        return this._selectableStateStream.pipe(map(selectorFn), catchError((err) => {\n            // if error is TypeError we swallow it to prevent usual errors with property access\n            const { suppressErrors } = this._config.selectorOptions;\n            if (err instanceof TypeError && suppressErrors) {\n                return of(undefined);\n            }\n            // rethrow other errors\n            return throwError(err);\n        }), distinctUntilChanged(), leaveNgxs(this._internalExecutionStrategy));\n    }\n    selectOnce(selector) {\n        return this.select(selector).pipe(take(1));\n    }\n    selectSnapshot(selector) {\n        const selectorFn = this.getStoreBoundSelectorFn(selector);\n        return selectorFn(this._stateStream.getValue());\n    }\n    /**\n     * Allow the user to subscribe to the root of the state\n     */\n    subscribe(fn) {\n        return this._selectableStateStream\n            .pipe(leaveNgxs(this._internalExecutionStrategy))\n            .subscribe(fn);\n    }\n    /**\n     * Return the raw value of the state.\n     */\n    snapshot() {\n        return this._internalStateOperations.getRootStateOperations().getState();\n    }\n    /**\n     * Reset the state to a specific point in time. This method is useful\n     * for plugin's who need to modify the state directly or unit testing.\n     */\n    reset(state) {\n        return this._internalStateOperations.getRootStateOperations().setState(state);\n    }\n    getStoreBoundSelectorFn(selector) {\n        const makeSelectorFn = getRootSelectorFactory(selector);\n        const runtimeContext = this._stateFactory.getRuntimeSelectorContext();\n        return makeSelectorFn(runtimeContext);\n    }\n    initStateStream(initialStateValue) {\n        const value = this._stateStream.value;\n        const storeIsEmpty = !value || Object.keys(value).length === 0;\n        if (storeIsEmpty) {\n            const defaultStateNotEmpty = Object.keys(this._config.defaultsState).length > 0;\n            const storeValues = defaultStateNotEmpty\n                ? Object.assign(Object.assign({}, this._config.defaultsState), initialStateValue) : initialStateValue;\n            this._stateStream.next(storeValues);\n        }\n    }\n}\n/** @nocollapse */ Store.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: Store, deps: [{ token: StateStream }, { token: InternalStateOperations }, { token: NgxsConfig }, { token: InternalNgxsExecutionStrategy }, { token: StateFactory }, { token: INITIAL_STATE_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ Store.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: Store, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: Store, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: StateStream }, { type: InternalStateOperations }, { type: NgxsConfig }, { type: InternalNgxsExecutionStrategy }, { type: StateFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INITIAL_STATE_TOKEN]\n                }] }]; } });\n\n/**\n * Allows the select decorator to get access to the DI store, this is used internally\n * in `@Select` decorator.\n */\nclass SelectFactory {\n    constructor(store, config) {\n        SelectFactory.store = store;\n        SelectFactory.config = config;\n    }\n    ngOnDestroy() {\n        SelectFactory.store = null;\n        SelectFactory.config = null;\n    }\n}\nSelectFactory.store = null;\nSelectFactory.config = null;\n/** @nocollapse */ SelectFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SelectFactory, deps: [{ token: Store }, { token: NgxsConfig }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ SelectFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SelectFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: SelectFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Store }, { type: NgxsConfig }]; } });\n\nclass LifecycleStateManager {\n    constructor(_store, _internalErrorReporter, _internalStateOperations, _stateContextFactory, _bootstrapper) {\n        this._store = _store;\n        this._internalErrorReporter = _internalErrorReporter;\n        this._internalStateOperations = _internalStateOperations;\n        this._stateContextFactory = _stateContextFactory;\n        this._bootstrapper = _bootstrapper;\n        this._destroy$ = new Subject();\n    }\n    ngOnDestroy() {\n        this._destroy$.next();\n    }\n    ngxsBootstrap(action, results) {\n        this._internalStateOperations\n            .getRootStateOperations()\n            .dispatch(action)\n            .pipe(filter(() => !!results), tap(() => this._invokeInitOnStates(results.states)), mergeMap(() => this._bootstrapper.appBootstrapped$), filter(appBootstrapped => !!appBootstrapped), catchError(error => {\n            // The `SafeSubscriber` (which is used by most RxJS operators) re-throws\n            // errors asynchronously (`setTimeout(() => { throw error })`). This might\n            // break existing user's code or unit tests. We catch the error manually to\n            // be backward compatible with the old behavior.\n            this._internalErrorReporter.reportErrorSafely(error);\n            return EMPTY;\n        }), takeUntil(this._destroy$))\n            .subscribe(() => this._invokeBootstrapOnStates(results.states));\n    }\n    _invokeInitOnStates(mappedStores) {\n        for (const mappedStore of mappedStores) {\n            const instance = mappedStore.instance;\n            if (instance.ngxsOnChanges) {\n                this._store\n                    .select(state => getValue(state, mappedStore.path))\n                    .pipe(startWith(undefined), pairwise(), takeUntil(this._destroy$))\n                    .subscribe(([previousValue, currentValue]) => {\n                    const change = new NgxsSimpleChange(previousValue, currentValue, !mappedStore.isInitialised);\n                    instance.ngxsOnChanges(change);\n                });\n            }\n            if (instance.ngxsOnInit) {\n                instance.ngxsOnInit(this._getStateContext(mappedStore));\n            }\n            mappedStore.isInitialised = true;\n        }\n    }\n    _invokeBootstrapOnStates(mappedStores) {\n        for (const mappedStore of mappedStores) {\n            const instance = mappedStore.instance;\n            if (instance.ngxsAfterBootstrap) {\n                instance.ngxsAfterBootstrap(this._getStateContext(mappedStore));\n            }\n        }\n    }\n    _getStateContext(mappedStore) {\n        return this._stateContextFactory.createStateContext(mappedStore);\n    }\n}\n/** @nocollapse */ LifecycleStateManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LifecycleStateManager, deps: [{ token: Store }, { token: InternalErrorReporter }, { token: InternalStateOperations }, { token: StateContextFactory }, { token: i5.NgxsBootstrapper }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ LifecycleStateManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LifecycleStateManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LifecycleStateManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Store }, { type: InternalErrorReporter }, { type: InternalStateOperations }, { type: StateContextFactory }, { type: i5.NgxsBootstrapper }]; } });\n\n/**\n * Root module\n * @ignore\n */\nclass NgxsRootModule {\n    constructor(factory, internalStateOperations, _store, _select, states = [], lifecycleStateManager) {\n        // Add stores to the state graph and return their defaults\n        const results = factory.addAndReturnDefaults(states);\n        internalStateOperations.setStateToTheCurrentWithNew(results);\n        // Connect our actions stream\n        factory.connectActionHandlers();\n        // Dispatch the init action and invoke init and bootstrap functions after\n        lifecycleStateManager.ngxsBootstrap(new InitState(), results);\n    }\n}\n/** @nocollapse */ NgxsRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsRootModule, deps: [{ token: StateFactory }, { token: InternalStateOperations }, { token: Store }, { token: SelectFactory }, { token: ROOT_STATE_TOKEN, optional: true }, { token: LifecycleStateManager }], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NgxsRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsRootModule });\n/** @nocollapse */ NgxsRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsRootModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsRootModule, decorators: [{\n            type: NgModule\n        }], ctorParameters: function () { return [{ type: StateFactory }, { type: InternalStateOperations }, { type: Store }, { type: SelectFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ROOT_STATE_TOKEN]\n                }] }, { type: LifecycleStateManager }]; } });\n\n/**\n * Feature module\n * @ignore\n */\nclass NgxsFeatureModule {\n    constructor(_store, internalStateOperations, factory, states = [], lifecycleStateManager) {\n        // Since FEATURE_STATE_TOKEN is a multi token, we need to\n        // flatten it [[Feature1State, Feature2State], [Feature3State]]\n        const flattenedStates = NgxsFeatureModule.flattenStates(states);\n        // add stores to the state graph and return their defaults\n        const results = factory.addAndReturnDefaults(flattenedStates);\n        if (results.states.length) {\n            internalStateOperations.setStateToTheCurrentWithNew(results);\n            // dispatch the update action and invoke init and bootstrap functions after\n            lifecycleStateManager.ngxsBootstrap(new UpdateState(results.defaults), results);\n        }\n    }\n    static flattenStates(states = []) {\n        return states.reduce((total, values) => total.concat(values), []);\n    }\n}\n/** @nocollapse */ NgxsFeatureModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFeatureModule, deps: [{ token: Store }, { token: InternalStateOperations }, { token: StateFactory }, { token: FEATURE_STATE_TOKEN, optional: true }, { token: LifecycleStateManager }], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NgxsFeatureModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFeatureModule });\n/** @nocollapse */ NgxsFeatureModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFeatureModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsFeatureModule, decorators: [{\n            type: NgModule\n        }], ctorParameters: function () { return [{ type: Store }, { type: InternalStateOperations }, { type: StateFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FEATURE_STATE_TOKEN]\n                }] }, { type: LifecycleStateManager }]; } });\n\n/**\n * Ngxs Module\n */\nclass NgxsModule {\n    /**\n     * Root module factory\n     */\n    static forRoot(states = [], options = {}) {\n        return {\n            ngModule: NgxsRootModule,\n            providers: [\n                StateFactory,\n                PluginManager,\n                ...states,\n                ...NgxsModule.ngxsTokenProviders(states, options)\n            ]\n        };\n    }\n    /**\n     * Feature module factory\n     */\n    static forFeature(states = []) {\n        return {\n            ngModule: NgxsFeatureModule,\n            providers: [\n                // This is required on the feature level, see comments in `state-factory.ts`.\n                StateFactory,\n                PluginManager,\n                ...states,\n                {\n                    provide: FEATURE_STATE_TOKEN,\n                    multi: true,\n                    useValue: states\n                }\n            ]\n        };\n    }\n    static ngxsTokenProviders(states, options) {\n        return [\n            {\n                provide: USER_PROVIDED_NGXS_EXECUTION_STRATEGY,\n                useValue: options.executionStrategy\n            },\n            {\n                provide: ROOT_STATE_TOKEN,\n                useValue: states\n            },\n            {\n                provide: ROOT_OPTIONS,\n                useValue: options\n            },\n            {\n                provide: APP_BOOTSTRAP_LISTENER,\n                useFactory: NgxsModule.appBootstrapListenerFactory,\n                multi: true,\n                deps: [NgxsBootstrapper]\n            },\n            {\n                provide: ɵNGXS_STATE_CONTEXT_FACTORY,\n                useExisting: StateContextFactory\n            },\n            {\n                provide: ɵNGXS_STATE_FACTORY,\n                useExisting: StateFactory\n            }\n        ];\n    }\n    static appBootstrapListenerFactory(bootstrapper) {\n        return () => bootstrapper.bootstrap();\n    }\n}\n/** @nocollapse */ NgxsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NgxsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsModule });\n/** @nocollapse */ NgxsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsModule, decorators: [{\n            type: NgModule\n        }] });\n\n/**\n * Decorates a method with a action information.\n */\nfunction Action(actions, options) {\n    return (target, name) => {\n        // Caretaker note: we have still left the `typeof` condition in order to avoid\n        // creating a breaking change for projects that still use the View Engine.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const isStaticMethod = target.hasOwnProperty('prototype');\n            if (isStaticMethod) {\n                throwActionDecoratorError();\n            }\n        }\n        const meta = ensureStoreMetadata$1(target.constructor);\n        if (!Array.isArray(actions)) {\n            actions = [actions];\n        }\n        for (const action of actions) {\n            const type = action.type;\n            if (!meta.actions[type]) {\n                meta.actions[type] = [];\n            }\n            meta.actions[type].push({\n                fn: name,\n                options: options || {},\n                type\n            });\n        }\n    };\n}\n\n/**\n * Decorates a class with ngxs state information.\n */\nfunction State(options) {\n    return (target) => {\n        const stateClass = target;\n        const meta = ensureStoreMetadata$1(stateClass);\n        const inheritedStateClass = Object.getPrototypeOf(stateClass);\n        const optionsWithInheritance = getStateOptions(inheritedStateClass, options);\n        mutateMetaData({ meta, inheritedStateClass, optionsWithInheritance });\n        stateClass[META_OPTIONS_KEY] = optionsWithInheritance;\n    };\n}\nfunction getStateOptions(inheritedStateClass, options) {\n    const inheritanceOptions = inheritedStateClass[META_OPTIONS_KEY] || {};\n    return Object.assign(Object.assign({}, inheritanceOptions), options);\n}\nfunction mutateMetaData(params) {\n    const { meta, inheritedStateClass, optionsWithInheritance } = params;\n    const { children, defaults, name } = optionsWithInheritance;\n    const stateName = typeof name === 'string' ? name : (name && name.getName()) || null;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ensureStateNameIsValid(stateName);\n    }\n    if (inheritedStateClass.hasOwnProperty(META_KEY)) {\n        const inheritedMeta = inheritedStateClass[META_KEY] || {};\n        meta.actions = Object.assign(Object.assign({}, meta.actions), inheritedMeta.actions);\n    }\n    meta.children = children;\n    meta.defaults = defaults;\n    meta.name = stateName;\n}\n\nconst DOLLAR_CHAR_CODE = 36;\nfunction createSelectObservable(selector) {\n    if (!SelectFactory.store) {\n        throwSelectFactoryNotConnectedError();\n    }\n    return SelectFactory.store.select(selector);\n}\nfunction createSelectorFn(name, rawSelector, paths = []) {\n    rawSelector = !rawSelector ? removeDollarAtTheEnd(name) : rawSelector;\n    if (typeof rawSelector === 'string') {\n        const propsArray = paths.length\n            ? [rawSelector, ...paths]\n            : rawSelector.split('.');\n        return propGetter(propsArray, SelectFactory.config);\n    }\n    return rawSelector;\n}\n/**\n * @example If `foo$` => make it just `foo`\n */\nfunction removeDollarAtTheEnd(name) {\n    const lastCharIndex = name.length - 1;\n    const dollarAtTheEnd = name.charCodeAt(lastCharIndex) === DOLLAR_CHAR_CODE;\n    return dollarAtTheEnd ? name.slice(0, lastCharIndex) : name;\n}\n\n/**\n * Decorator for selecting a slice of state from the store.\n */\nfunction Select(rawSelector, ...paths) {\n    return function (target, key) {\n        const name = key.toString();\n        const selectorId = `__${name}__selector`;\n        const selector = createSelectorFn(name, rawSelector, paths);\n        Object.defineProperties(target, {\n            [selectorId]: {\n                writable: true,\n                enumerable: false,\n                configurable: true\n            },\n            [name]: {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this[selectorId] || (this[selectorId] = createSelectObservable(selector));\n                }\n            }\n        });\n    };\n}\n\nconst SELECTOR_OPTIONS_META_KEY = 'NGXS_SELECTOR_OPTIONS_META';\nconst selectorOptionsMetaAccessor = {\n    getOptions: (target) => {\n        return (target && target[SELECTOR_OPTIONS_META_KEY]) || {};\n    },\n    defineOptions: (target, options) => {\n        if (!target)\n            return;\n        target[SELECTOR_OPTIONS_META_KEY] = options;\n    },\n};\nfunction setupSelectorMetadata(originalFn, creationMetadata) {\n    const selectorMetaData = ensureSelectorMetadata$1(originalFn);\n    selectorMetaData.originalFn = originalFn;\n    let getExplicitSelectorOptions = () => ({});\n    if (creationMetadata) {\n        selectorMetaData.containerClass = creationMetadata.containerClass;\n        selectorMetaData.selectorName = creationMetadata.selectorName || null;\n        getExplicitSelectorOptions =\n            creationMetadata.getSelectorOptions || getExplicitSelectorOptions;\n    }\n    const selectorMetaDataClone = Object.assign({}, selectorMetaData);\n    selectorMetaData.getSelectorOptions = () => getLocalSelectorOptions(selectorMetaDataClone, getExplicitSelectorOptions());\n    return selectorMetaData;\n}\nfunction getLocalSelectorOptions(selectorMetaData, explicitOptions) {\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, (selectorOptionsMetaAccessor.getOptions(selectorMetaData.containerClass) || {})), (selectorOptionsMetaAccessor.getOptions(selectorMetaData.originalFn) || {})), (selectorMetaData.getSelectorOptions() || {})), explicitOptions);\n}\n\n/**\n * Decorator for setting selector options at a method or class level.\n */\nfunction SelectorOptions(options) {\n    return (function decorate(target, methodName, descriptor) {\n        if (methodName) {\n            descriptor || (descriptor = Object.getOwnPropertyDescriptor(target, methodName));\n            // Method Decorator\n            const originalFn = descriptor.value || descriptor.originalFn;\n            if (originalFn) {\n                selectorOptionsMetaAccessor.defineOptions(originalFn, options);\n            }\n        }\n        else {\n            // Class Decorator\n            selectorOptionsMetaAccessor.defineOptions(target, options);\n        }\n    });\n}\n\nfunction ensureStoreMetadata(target) {\n    return ensureStoreMetadata$1(target);\n}\nfunction getStoreMetadata(target) {\n    return getStoreMetadata$1(target);\n}\nfunction ensureSelectorMetadata(target) {\n    return ensureSelectorMetadata$1(target);\n}\nfunction getSelectorMetadata(target) {\n    return getSelectorMetadata$1(target);\n}\n\nfunction createSelector(selectors, projector, creationMetadata) {\n    const memoizedFn = createMemoizedSelectorFn(projector, creationMetadata);\n    const selectorMetaData = setupSelectorMetadata(projector, creationMetadata);\n    selectorMetaData.makeRootSelector = createRootSelectorFactory(selectorMetaData, selectors, memoizedFn);\n    return memoizedFn;\n}\n\nfunction Selector(selectors) {\n    return (target, key, descriptor) => {\n        descriptor || (descriptor = Object.getOwnPropertyDescriptor(target, key));\n        const originalFn = descriptor === null || descriptor === void 0 ? void 0 : descriptor.value;\n        // Caretaker note: we have still left the `typeof` condition in order to avoid\n        // creating a breaking change for projects that still use the View Engine.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (originalFn && typeof originalFn !== 'function') {\n                throwSelectorDecoratorError();\n            }\n        }\n        const memoizedFn = createSelector(selectors, originalFn, {\n            containerClass: target,\n            selectorName: key.toString(),\n            getSelectorOptions() {\n                return {};\n            },\n        });\n        const newDescriptor = {\n            configurable: true,\n            get() {\n                return memoizedFn;\n            },\n        };\n        // Add hidden property to descriptor\n        newDescriptor['originalFn'] = originalFn;\n        return newDescriptor;\n    };\n}\n\nclass StateToken {\n    constructor(name) {\n        this.name = name;\n        const selectorMetadata = ensureSelectorMetadata$1(this);\n        selectorMetadata.makeRootSelector = (runtimeContext) => {\n            return runtimeContext.getStateGetter(this.name);\n        };\n    }\n    getName() {\n        return this.name;\n    }\n    toString() {\n        return `StateToken[${this.name}]`;\n    }\n}\n\nclass NgxsDevelopmentModule {\n    static forRoot(options) {\n        return {\n            ngModule: NgxsDevelopmentModule,\n            providers: [\n                NgxsUnhandledActionsLogger,\n                { provide: NGXS_DEVELOPMENT_OPTIONS, useValue: options }\n            ]\n        };\n    }\n}\n/** @nocollapse */ NgxsDevelopmentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsDevelopmentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ NgxsDevelopmentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsDevelopmentModule });\n/** @nocollapse */ NgxsDevelopmentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsDevelopmentModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: NgxsDevelopmentModule, decorators: [{\n            type: NgModule\n        }] });\n\nfunction ensureValidSelector(selector, context = {}) {\n    const noun = context.noun || 'selector';\n    const prefix = context.prefix ? context.prefix + ': ' : '';\n    ensureValueProvided(selector, { noun, prefix: context.prefix });\n    const metadata = getSelectorMetadata$1(selector) || getStoreMetadata$1(selector);\n    if (!metadata) {\n        throw new Error(`${prefix}The value provided as the ${noun} is not a valid selector.`);\n    }\n}\nfunction ensureValueProvided(value, context = {}) {\n    const noun = context.noun || 'value';\n    const prefix = context.prefix ? context.prefix + ': ' : '';\n    if (!value) {\n        throw new Error(`${prefix}A ${noun} must be provided.`);\n    }\n}\n\nfunction createModelSelector(selectorMap) {\n    const selectorKeys = Object.keys(selectorMap);\n    const selectors = Object.values(selectorMap);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ensureValidSelectorMap({\n            prefix: '[createModelSelector]',\n            selectorMap,\n            selectorKeys,\n            selectors\n        });\n    }\n    return createSelector(selectors, (...args) => {\n        return selectorKeys.reduce((obj, key, index) => {\n            obj[key] = args[index];\n            return obj;\n        }, {});\n    });\n}\nfunction ensureValidSelectorMap({ prefix, selectorMap, selectorKeys, selectors }) {\n    ensureValueProvided(selectorMap, { prefix, noun: 'selector map' });\n    ensureValueProvided(typeof selectorMap === 'object', { prefix, noun: 'valid selector map' });\n    ensureValueProvided(selectorKeys.length, { prefix, noun: 'non-empty selector map' });\n    selectors.forEach((selector, index) => ensureValidSelector(selector, {\n        prefix,\n        noun: `selector for the '${selectorKeys[index]}' property`\n    }));\n}\n\nfunction createPickSelector(selector, keys) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ensureValidSelector(selector, { prefix: '[createPickSelector]' });\n    }\n    const validKeys = keys.filter(Boolean);\n    const selectors = validKeys.map(key => createSelector([selector], (s) => s[key]));\n    return createSelector([...selectors], (...props) => {\n        return validKeys.reduce((acc, key, index) => {\n            acc[key] = props[index];\n            return acc;\n        }, {});\n    });\n}\n\nfunction createPropertySelectors(parentSelector) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ensureValidSelector(parentSelector, {\n            prefix: '[createPropertySelectors]',\n            noun: 'parent selector'\n        });\n    }\n    const cache = {};\n    return new Proxy({}, {\n        get(_target, prop) {\n            const selector = cache[prop] ||\n                createSelector([parentSelector], (s) => s === null || s === void 0 ? void 0 : s[prop]);\n            cache[prop] = selector;\n            return selector;\n        }\n    });\n}\n\n/**\n * The public api for consumers of @ngxs/store\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Action, Actions, InitState, NGXS_PLUGINS, NgxsDevelopmentModule, NgxsModule, NgxsSimpleChange, NgxsUnhandledActionsLogger, NoopNgxsExecutionStrategy, Select, Selector, SelectorOptions, State, StateStream, StateToken, Store, UpdateState, actionMatcher, createModelSelector, createPickSelector, createPropertySelectors, createSelector, ensureSelectorMetadata, ensureStoreMetadata, getActionTypeFromInstance, getSelectorMetadata, getStoreMetadata, getValue, ofAction, ofActionCanceled, ofActionCompleted, ofActionDispatched, ofActionErrored, ofActionSuccessful, setValue, NgxsFeatureModule as ɵNgxsFeatureModule, NgxsRootModule as ɵNgxsRootModule };\n","import { Subject } from './Subject';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    }\n    getValue() {\n        const { hasError, thrownError, _value } = this;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    }\n    next(value) {\n        super.next((this._value = value));\n    }\n}\n","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function concat(...args) {\n    return concatAll()(from(args, popScheduler(args)));\n}\n","import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nexport function forkJoin(...args) {\n    const resultSelector = popResultSelector(args);\n    const { args: sources, keys } = argsArgArrayOrObject(args);\n    const result = new Observable((subscriber) => {\n        const { length } = sources;\n        if (!length) {\n            subscriber.complete();\n            return;\n        }\n        const values = new Array(length);\n        let remainingCompletions = length;\n        let remainingEmissions = length;\n        for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n            let hasValue = false;\n            innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (!hasValue) {\n                    hasValue = true;\n                    remainingEmissions--;\n                }\n                values[sourceIndex] = value;\n            }, () => remainingCompletions--, undefined, () => {\n                if (!remainingCompletions || !hasValue) {\n                    if (!remainingEmissions) {\n                        subscriber.next(keys ? createObject(keys, values) : values);\n                    }\n                    subscriber.complete();\n                }\n            }));\n        }\n    });\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of(...args) {\n    const scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nexport function throwError(errorOrErrorFactory, scheduler) {\n    const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n    const init = (subscriber) => subscriber.error(errorFactory());\n    return new Observable(scheduler ? (subscriber) => scheduler.schedule(init, 0, subscriber) : init);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n    return operate((source, subscriber) => {\n        let innerSub = null;\n        let syncUnsub = false;\n        let handledResult;\n        innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n            if (innerSub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                handledResult.subscribe(subscriber);\n            }\n            else {\n                syncUnsub = true;\n            }\n        }));\n        if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            handledResult.subscribe(subscriber);\n        }\n    });\n}\n","import { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function defaultIfEmpty(defaultValue) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            subscriber.next(value);\n        }, () => {\n            if (!hasValue) {\n                subscriber.next(defaultValue);\n            }\n            subscriber.complete();\n        }));\n    });\n}\n","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector = identity) {\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate((source, subscriber) => {\n        let previousKey;\n        let first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return (source) => source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return operate((source, subscriber) => {\n        let index = 0;\n        let innerSub = null;\n        let isComplete = false;\n        source.subscribe(createOperatorSubscriber(subscriber, (outerValue) => {\n            if (!innerSub) {\n                innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n                    innerSub = null;\n                    isComplete && subscriber.complete();\n                });\n                innerFrom(project(outerValue, index++)).subscribe(innerSub);\n            }\n        }, () => {\n            isComplete = true;\n            !innerSub && subscriber.complete();\n        }));\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value)));\n    });\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent = Infinity) {\n    return mergeMap(identity, concurrent);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    const buffer = [];\n    let active = 0;\n    let index = 0;\n    let isComplete = false;\n    const checkComplete = () => {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    const outerNext = (value) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n    const doInnerSub = (value) => {\n        expand && subscriber.next(value);\n        active++;\n        let innerComplete = false;\n        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, (innerValue) => {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, () => {\n            innerComplete = true;\n        }, undefined, () => {\n            if (innerComplete) {\n                try {\n                    active--;\n                    while (buffer.length && active < concurrent) {\n                        const bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, outerNext, () => {\n        isComplete = true;\n        checkComplete();\n    }));\n    return () => {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n}\n","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMap(project, resultSelector, concurrent = Infinity) {\n    if (isFunction(resultSelector)) {\n        return mergeMap((a, i) => map((b, ii) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate((source, subscriber) => {\n        let prev;\n        let hasPrev = false;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options = {}) {\n    const { connector = () => new Subject(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n    return (wrapperSource) => {\n        let connection;\n        let resetConnection;\n        let subject;\n        let refCount = 0;\n        let hasCompleted = false;\n        let hasErrored = false;\n        const cancelReset = () => {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = undefined;\n        };\n        const reset = () => {\n            cancelReset();\n            connection = subject = undefined;\n            hasCompleted = hasErrored = false;\n        };\n        const resetAndUnsubscribe = () => {\n            const conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return operate((source, subscriber) => {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            const dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n            subscriber.add(() => {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection &&\n                refCount > 0) {\n                connection = new SafeSubscriber({\n                    next: (value) => dest.next(value),\n                    error: (err) => {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: () => {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    },\n                });\n                innerFrom(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on, ...args) {\n    if (on === true) {\n        reset();\n        return;\n    }\n    if (on === false) {\n        return;\n    }\n    const onSubscriber = new SafeSubscriber({\n        next: () => {\n            onSubscriber.unsubscribe();\n            reset();\n        },\n    });\n    return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","import { concat } from '../observable/concat';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\nexport function startWith(...values) {\n    const scheduler = popScheduler(values);\n    return operate((source, subscriber) => {\n        (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\nexport function argsArgArrayOrObject(args) {\n    if (args.length === 1) {\n        const first = args[0];\n        if (isArray(first)) {\n            return { args: first, keys: null };\n        }\n        if (isPOJO(first)) {\n            const keys = getKeys(first);\n            return {\n                args: keys.map((key) => first[key]),\n                keys,\n            };\n        }\n    }\n    return { args: args, keys: null };\n}\nfunction isPOJO(obj) {\n    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","export function createObject(keys, values) {\n    return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {});\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n","import { map } from \"../operators/map\";\nconst { isArray } = Array;\nfunction callOrApply(fn, args) {\n    return isArray(args) ? fn(...args) : fn(args);\n}\nexport function mapOneOrManyArgs(fn) {\n    return map(args => callOrApply(fn, args));\n}\n"],"names":["i0","NgZone","PLATFORM_ID","Injectable","Inject","InjectionToken","inject","INJECTOR","ɵglobal","ErrorHandler","Optional","SkipSelf","NgModule","APP_BOOTSTRAP_LISTENER","i5","memoize","INITIAL_STATE_TOKEN","NgxsBootstrapper","ɵNGXS_STATE_CONTEXT_FACTORY","ɵNGXS_STATE_FACTORY","isPlatformServer","Observable","Subject","BehaviorSubject","of","forkJoin","throwError","EMPTY","from","isObservable","filter","map","share","shareReplay","take","exhaustMap","mergeMap","defaultIfEmpty","catchError","takeUntil","distinctUntilChanged","tap","startWith","pairwise","isStateOperator","getActionTypeFromInstance","action","constructor","type","actionMatcher","action1","type1","action2","setValue","obj","prop","val","Object","assign","split","lastIndex","length","reduce","acc","part","index","Array","isArray","slice","getValue","isObject$1","item","mergeDeep","base","sources","source","shift","key","throwStateNameError","name","Error","throwStateNamePropertyError","throwStateUniqueError","current","newName","oldName","throwStateDecoratorError","throwActionDecoratorError","throwSelectorDecoratorError","getZoneWarningMessage","getUndecoratedStateInIvyWarningMessage","throwSelectFactoryNotConnectedError","throwPatchingArrayError","throwPatchingPrimitiveError","DispatchOutsideZoneNgxsExecutionStrategy","_ngZone","_platformId","ngDevMode","verifyZoneIsNotNooped","enter","func","runInsideAngular","runOutsideAngular","leave","isInAngularZone","run","ɵfac","DispatchOutsideZoneNgxsExecutionStrategy_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ɵsetClassMetadata","args","undefined","decorators","ngZone","console","warn","ROOT_OPTIONS","ROOT_STATE_TOKEN","FEATURE_STATE_TOKEN","NGXS_PLUGINS","META_KEY","META_OPTIONS_KEY","SELECTOR_META_KEY","NgxsConfig","defaultsState","selectorOptions","injectContainerState","suppressErrors","compatibility","strictContentSecurityPolicy","executionStrategy","NgxsConfig_Factory","r","options","useFactory","deps","NgxsSimpleChange","previousValue","currentValue","firstChange","NoopNgxsExecutionStrategy","NoopNgxsExecutionStrategy_Factory","USER_PROVIDED_NGXS_EXECUTION_STRATEGY","NGXS_EXECUTION_STRATEGY","injector","get","Zone","ensureStoreMetadata$1","target","hasOwnProperty","defaultMetadata","actions","defaults","path","makeRootSelector","context","getStateGetter","children","defineProperty","value","getStoreMetadata$1","ensureSelectorMetadata$1","originalFn","containerClass","selectorName","getSelectorOptions","getSelectorMetadata$1","compliantPropGetter","paths","copyOfPaths","fastPropGetter","segments","seg","i","l","expr","fn","Function","propGetter","config","buildGraph","stateClasses","findName","stateClass","meta","find","g","result","nameToState","states","findFullParentPath","newObj","visit","child","keyToFind","indexOf","parent","topologicalSort","graph","sorted","visited","ancestors","push","forEach","dep","join","keys","k","reverse","isObject","ofAction","allowedTypes","ofActionOperator","ofActionDispatched","ofActionSuccessful","ofActionCanceled","ofActionCompleted","allowedStatuses","mapActionResult","ofActionErrored","statuses","mapOperator","mapAction","allowedMap","createAllowedActionTypesMap","allowedStatusMap","createAllowedStatusesMap","o","pipe","filterStatus","ctx","actionType","typeMatch","statusMatch","status","error","successful","canceled","types","filterMap","klass","leaveNgxs","ngxsExecutionStrategy","sink","subscribe","next","complete","InternalNgxsExecutionStrategy","_executionStrategy","InternalNgxsExecutionStrategy_Factory","orderedQueueOperation","operation","callsQueue","busyPushingNext","callOperation","unshift","nextCallArgs","pop","OrderedSubject","arguments","_orderedNext","OrderedBehaviorSubject","_currentValue","InternalActions","ngOnDestroy","ɵInternalActions_BaseFactory","InternalActions_Factory","ɵɵgetInheritedFactory","Actions","internalActions$","internalExecutionStrategy","sharedInternalActions$","observer","childSubscription","add","Actions_Factory","compose","funcs","curr","nextArgs","ngxsErrorHandler","internalErrorReporter","subscribed","Promise","resolve","then","reportErrorSafely","subscriber","InternalErrorReporter","_injector","_errorHandler","handleError","_a","InternalErrorReporter_Factory","Injector","StateStream","StateStream_Factory","PluginManager","_parentManager","_pluginHandlers","plugins","registerHandlers","rootPlugins","pluginHandlers","getPluginHandlers","handlers","plugin","handle","bind","PluginManager_Factory","InternalDispatchedActionResults","ɵInternalDispatchedActionResults_BaseFactory","InternalDispatchedActionResults_Factory","InternalDispatcher","_actions","_actionResults","_pluginManager","_stateStream","_ngxsExecutionStrategy","_internalErrorReporter","dispatch","actionOrActions","dispatchByEvents","dispatchSingle","prevState","nextState","nextAction","actionResult$","getActionResultStream","createDispatchObservable","InternalDispatcher_Factory","deepFreeze","freeze","oIsFunction","hasOwnProp","prototype","getOwnPropertyNames","call","isFrozen","InternalStateOperations","_dispatcher","_config","getRootStateOperations","rootStateOperations","getState","setState","newState","developmentMode","ensureStateAndActionsAreImmutable","setStateToTheCurrentWithNew","results","stateOperations","currentState","InternalStateOperations_Factory","root","frozenValue","simplePatch","existingState","StateContextFactory","_internalStateOperations","createStateContext","mappedStore","currentAppState","patchState","patchOperator","setStateFromOperator","setStateValue","StateContextFactory_Factory","newValue","newAppState","stateOperator","local","stateNameRegex","RegExp","ensureStateNameIsValid","test","ensureStateNameIsUnique","stateName","state","statesByName","ensureStatesAreDecorated","ensureStateClassIsInjectable","jit_hasInjectableAnnotation","aot_hasNgInjectableDef","annotations","__annotations__","some","annotation","ngMetadataName","InitState","UpdateState","addedStates","NGXS_DEVELOPMENT_OPTIONS","warnOnUnhandledActions","NgxsUnhandledActionsLogger","_ignoredActions","Set","ignoreActions","ignore","actionShouldBeIgnored","NgxsUnhandledActionsLogger_Factory","NG_DEV_MODE","StateFactory","_parentFactory","_stateContextFactory","_initialState","_actionsSubscription","_states","_statesByName","_statePaths","getRuntimeSelectorContext","stateFactory","resolveGetter","statePaths","getter","localOptions","globalSelectorOptions","_cloneDefaults","unsubscribe","newStates","addToStatesMap","stateGraph","sortedStates","nameGraph","bootstrappedStores","addRuntimeInfoToMeta","stateMap","isInitialised","instance","hasBeenMountedAndBootstrapped","addAndReturnDefaults","classes","mappedStores","connectActionHandlers","dispatched$","invokeActions","actionHasBeenHandled","metadata","actionMetas","actionMeta","stateContext","cancelUncompleted","e","unhandledActionsLogger","statesMap","unmountedState","valueIsBootstrappedInInitialState","StateFactory_Factory","createRootSelectorFactory","selectorMetaData","selectors","memoizedSelectorFn","argumentSelectorFunctions","getRuntimeSelectorInfo","selectFromRoot","rootState","argFn","ex","TypeError","createMemoizedSelectorFn","creationMetadata","wrappedFn","wrappedSelectorFn","returnValue","apply","innerMemoizedFn","memoizedFn","setPrototypeOf","localSelectorOptions","selectorsToApply","getSelectorsToApply","selector","getRootSelectorFactory","canInjectContainerState","Store","_internalExecutionStrategy","_stateFactory","initialStateValue","_selectableStateStream","bufferSize","refCount","initStateStream","select","selectorFn","getStoreBoundSelectorFn","err","selectOnce","selectSnapshot","snapshot","reset","makeSelectorFn","runtimeContext","storeIsEmpty","defaultStateNotEmpty","storeValues","Store_Factory","SelectFactory","store","SelectFactory_Factory","LifecycleStateManager","_store","_bootstrapper","_destroy$","ngxsBootstrap","_invokeInitOnStates","appBootstrapped$","appBootstrapped","_invokeBootstrapOnStates","ngxsOnChanges","change","ngxsOnInit","_getStateContext","ngxsAfterBootstrap","LifecycleStateManager_Factory","NgxsRootModule","internalStateOperations","_select","lifecycleStateManager","NgxsRootModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","NgxsFeatureModule","flattenedStates","flattenStates","total","values","concat","NgxsFeatureModule_Factory","NgxsModule","forRoot","ngModule","providers","ngxsTokenProviders","forFeature","provide","multi","useValue","appBootstrapListenerFactory","useExisting","bootstrapper","bootstrap","NgxsModule_Factory","Action","isStaticMethod","State","inheritedStateClass","getPrototypeOf","optionsWithInheritance","getStateOptions","mutateMetaData","inheritanceOptions","params","getName","inheritedMeta","DOLLAR_CHAR_CODE","createSelectObservable","createSelectorFn","rawSelector","removeDollarAtTheEnd","propsArray","lastCharIndex","dollarAtTheEnd","charCodeAt","Select","toString","selectorId","defineProperties","writable","enumerable","configurable","SELECTOR_OPTIONS_META_KEY","selectorOptionsMetaAccessor","getOptions","defineOptions","setupSelectorMetadata","getExplicitSelectorOptions","selectorMetaDataClone","getLocalSelectorOptions","explicitOptions","SelectorOptions","decorate","methodName","descriptor","getOwnPropertyDescriptor","ensureStoreMetadata","getStoreMetadata","ensureSelectorMetadata","getSelectorMetadata","createSelector","projector","Selector","newDescriptor","StateToken","selectorMetadata","NgxsDevelopmentModule","NgxsDevelopmentModule_Factory","ensureValidSelector","noun","prefix","ensureValueProvided","createModelSelector","selectorMap","selectorKeys","ensureValidSelectorMap","createPickSelector","validKeys","Boolean","s","props","createPropertySelectors","parentSelector","cache","Proxy","_target","ɵNgxsFeatureModule","ɵNgxsRootModule","_value","_subscribe","subscription","closed","hasError","thrownError","_throwIfClosed","dateTimestampProvider","ReplaySubject","_bufferSize","Infinity","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","Math","max","isStopped","now","_trimBuffer","_innerSubscribe","copy","_checkFinalizedStatuses","adjustedBufferSize","splice","last","concatAll","popScheduler","argsArgArrayOrObject","innerFrom","popResultSelector","createOperatorSubscriber","mapOneOrManyArgs","createObject","resultSelector","remainingCompletions","remainingEmissions","sourceIndex","hasValue","scheduler","isFunction","errorOrErrorFactory","errorFactory","init","schedule","operate","innerSub","syncUnsub","handledResult","mergeAll","defaultValue","identity","comparator","keySelector","defaultCompare","previousKey","first","currentKey","a","b","project","ii","isComplete","outerValue","predicate","thisArg","concurrent","executeSchedule","mergeInternals","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","buffer","active","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","prev","hasPrev","p","SafeSubscriber","connector","resetOnError","resetOnComplete","resetOnRefCountZero","wrapperSource","connection","resetConnection","subject","hasCompleted","hasErrored","cancelReset","resetAndUnsubscribe","conn","dest","handleReset","on","onSubscriber","configOrBufferSize","windowTime","noop","notifier","delegate","Date","isScheduler","arr","popNumber","objectProto","getKeys","isPOJO","lift","callOrApply"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}