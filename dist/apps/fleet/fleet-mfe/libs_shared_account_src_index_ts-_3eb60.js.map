{"version":3,"file":"libs_shared_account_src_index_ts-_3eb60.js","mappings":"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","sources":["./libs/shared/account/src/index.ts","./libs/shared/account/src/lib/account.module.ts","./libs/shared/account/src/lib/services/account-event.delegator.ts","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js"],"sourcesContent":["export * from './lib/services/account-event.delegator';\nexport * from './lib/account.module';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class AccountModule {}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { BasicBillingAccount } from '../interfaces/basic-billing-account.interface';\nimport { AccountError } from '../interfaces/account.error';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountEventDelegator {\n  private readonly billingAccount$: ReplaySubject<BasicBillingAccount>;\n\n  constructor() {\n    this.billingAccount$ = new ReplaySubject(1);\n  }\n\n  billingAccount(): ReplaySubject<BasicBillingAccount> {\n    return this.billingAccount$;\n  }\n\n  delegateBillingAccount(billingAccount: BasicBillingAccount): void {\n    this.billingAccount$.next(billingAccount);\n  }\n\n  delegateBillingAccountError(error: AccountError): void {\n    this.billingAccount$.error(error);\n  }\n}\n","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n"],"names":["CommonModule","AccountModule","imports","ReplaySubject","AccountEventDelegator","billingAccount$","constructor","billingAccount","delegateBillingAccount","next","delegateBillingAccountError","error","factory","ɵfac","providedIn","Subject","dateTimestampProvider","_bufferSize","Infinity","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","Math","max","value","isStopped","push","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","length","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","currentObservers","observers","hasError","thrownError","lift","operator","subject","AnonymousSubject","Array","from","observer","err","shift","complete","unsubscribe","observed","_a","_trySubscribe","asObservable","observable","source","create","destination","_b","call","subscribe","delegate","Date","undefined","createErrorClass","_super","ObjectUnsubscribedErrorImpl","name","message"],"sourceRoot":"webpack:///","x_google_ignoreList":[3,4,5,6]}