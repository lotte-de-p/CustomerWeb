{"version":3,"file":"libs_fleet_account_data-access_src_index_ts-_5d720.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC0C;AACU;AACN;AACK;;;;AAK7C,MAAOI,iBAAiB;;qBAAjBA,iBAAiB;EAAA;;UAAjBA;EAAiB;;cAFlBJ,oDAAW,CAACK,UAAU,CAACJ,6DAAc,CAAC,EAAEC,wDAAa,CAACG,UAAU,CAAC,CAACF,4DAAc,CAAC,CAAC;EAAA;;;sHAEjFC,iBAAiB;IAAAE,OAAA,GAAAC,2DAAA,EAAAE,+DAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;ACToB;AAC3C,MAAMI,WAAW,GAAGF,yDAAY,CAAC,uBAAuB,EAAEC,kDAAK,EAAoB,CAAC;AACpF,MAAME,cAAc,GAAGH,yDAAY,CAAC,0BAA0B,EAAEC,kDAAK,EAA2B,CAAC;;;;;;;;;;;;;;;;;;;;ACD1C;AACzB;AAC2B;;;AAK1D,MAAOT,cAAc;EAEIgB,QAAA;EAD7BC,YAAY;EACZC,YAA6BF,QAAiB;IAAjB,KAAAA,QAAQ,GAARA,QAAQ;IACnC,IAAI,CAACC,YAAY,GAAGJ,2DAAY,CAAC,MAC/B,IAAI,CAACG,QAAQ,CAACG,IAAI,CAChBL,qDAAM,CAACH,4DAAc,CAAC,EACtBI,mDAAG,CAAC,MAAML,6DAAW,CAAC;MAAEU,IAAI,EAAE;IAAE,CAAE,CAAC,CAAC,CACrC,CACF;EACH;;qBATWpB,cAAc,EAAAqB,sDAAA,CAAAjB,kDAAA;EAAA;;WAAdJ,cAAc;IAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;IAAAC,UAAA,EAFb;EAAM;;;;;;;;;;;;;;;;;;;;;ACNmD;AACP;AACzD,MAAMI,mBAAmB,GAAG,SAAS;AAWrC,MAAMC,YAAY,GAAiB;EACxCC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE;CACd;AAEM,MAAMlC,cAAc,GAAG4B,0DAAa,CAAC;EAC1CO,IAAI,EAAEJ,mBAAmB;EACzBK,OAAO,EAAEP,0DAAa,CACpBG,YAAY,EACZF,+CAAE,CAAClB,yDAAW,EAAE,CAACyB,KAAK,EAAEC,MAAM,KAAI;IAChC,OAAO;MAAE,GAAGD,KAAK;MAAEJ,QAAQ,EAAEK,MAAM,CAAChB;IAAI,CAAE;EAC5C,CAAC,CAAC,EACFQ,+CAAE,CAACjB,4DAAc,EAAE,CAACwB,KAAK,EAAEC,MAAM,KAAI;IACnC,OAAO;MAAE,GAAGD,KAAK;MAAEH,WAAW,EAAEI,MAAM,CAACJ;IAAW,CAAE;EACtD,CAAC,CAAC;CAEL,CAAC;AAEI,SAAUK,cAAcA,CAACF,KAAA,GAAsBL,YAAY,EAAEM,MAAc;EAC/E,OAAOtC,cAAc,CAACoC,OAAO,CAACC,KAAK,EAAEC,MAAM,CAAC;AAC9C;;;;;;;;;;;;;;;;;;;ACjCoE;AACG;AAEhE,MAAMI,aAAa,GAAGF,kEAAqB,CAAeT,kEAAmB,CAAC;AAE9E,MAAMY,cAAc,GAAGF,2DAAc,CAACC,aAAa,EAAGE,OAAO,IAAKA,OAAO,CAACX,QAAQ,CAAC;AACnF,MAAMY,iBAAiB,GAAGJ,2DAAc,CAACC,aAAa,EAAGE,OAAO,IAAKA,OAAO,CAACV,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNvD;AACC;AACC;AACE","sources":["./libs/fleet/account/data-access/src/lib/+state/account-ngrx.module.ts","./libs/fleet/account/data-access/src/lib/+state/account.actions.ts","./libs/fleet/account/data-access/src/lib/+state/account.effects.ts","./libs/fleet/account/data-access/src/lib/+state/account.reducers.ts","./libs/fleet/account/data-access/src/lib/+state/account.selectors.ts","./libs/fleet/account/data-access/src/lib/index.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { accountFeature } from './account.reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AccountEffects } from './account.effects';\n\n@NgModule({\n  imports: [StoreModule.forFeature(accountFeature), EffectsModule.forFeature([AccountEffects])],\n})\nexport class AccountNgrxModule {}\n","import { createAction, props } from '@ngrx/store';\nexport const setNextPage = createAction('[account] setNextPage', props<{ page: string }>());\nexport const setPhoneNumber = createAction('[account] setPhoneNumber', props<{ phoneNumber: string }>());\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map } from 'rxjs/operators';\nimport { setNextPage, setPhoneNumber } from './account.actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountEffects {\n  setNextPage$;\n  constructor(private readonly actions$: Actions) {\n    this.setNextPage$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(setPhoneNumber),\n        map(() => setNextPage({ page: '' }))\n      )\n    );\n  }\n}\n","import { Action, createFeature, createReducer, on } from '@ngrx/store';\nimport { setNextPage, setPhoneNumber } from './account.actions';\nexport const ACCOUNT_FEATURE_KEY = 'account';\n\nexport interface AccountSlice {\n  [ACCOUNT_FEATURE_KEY]: AccountState;\n}\n\nexport interface AccountState {\n  nextPage: string;\n  phoneNumber: string;\n}\n\nexport const initialState: AccountState = {\n  nextPage: '',\n  phoneNumber: '',\n};\n\nexport const accountFeature = createFeature({\n  name: ACCOUNT_FEATURE_KEY,\n  reducer: createReducer(\n    initialState,\n    on(setNextPage, (state, action) => {\n      return { ...state, nextPage: action.page };\n    }),\n    on(setPhoneNumber, (state, action) => {\n      return { ...state, phoneNumber: action.phoneNumber };\n    })\n  ),\n});\n\nexport function accountReducer(state: AccountState = initialState, action: Action): AccountState {\n  return accountFeature.reducer(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { AccountState, ACCOUNT_FEATURE_KEY } from './account.reducers';\n\nexport const selectAccount = createFeatureSelector<AccountState>(ACCOUNT_FEATURE_KEY);\n\nexport const selectNextPage = createSelector(selectAccount, (account) => account.nextPage);\nexport const selectPhoneNumber = createSelector(selectAccount, (account) => account.phoneNumber);\n","export * from './+state/account.actions';\nexport * from './+state/account.reducers';\nexport * from './+state/account.selectors';\nexport * from './+state/account-ngrx.module';\nexport * from './+state/account.effects';\n"],"names":["StoreModule","accountFeature","EffectsModule","AccountEffects","AccountNgrxModule","forFeature","imports","i1","StoreFeatureModule","i2","EffectsFeatureModule","createAction","props","setNextPage","setPhoneNumber","Actions","createEffect","ofType","map","actions$","setNextPage$","constructor","pipe","page","i0","ɵɵinject","factory","ɵfac","providedIn","createFeature","createReducer","on","ACCOUNT_FEATURE_KEY","initialState","nextPage","phoneNumber","name","reducer","state","action","accountReducer","createFeatureSelector","createSelector","selectAccount","selectNextPage","account","selectPhoneNumber"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}