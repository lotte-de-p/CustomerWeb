{"version":3,"file":"libs_billing_barrings_mobile-barrings_ui_src_index_ts-_9ed60.js","mappings":"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","sources":["./libs/billing/barrings/mobile-barrings/ui/src/index.ts","./libs/billing/barrings/mobile-barrings/ui/src/lib/barring-selector/barring-selector.component.ts","./libs/billing/barrings/mobile-barrings/ui/src/lib/barring-selector/barring-selector.component.html"],"sourcesContent":["export * from './lib/barring-selector/barring-selector.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SlideMenuComponent } from '@billing/shared/ui';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  ALL_INCOMING_AND_OUTGOING,\n  ALL_INCOMING_AND_OUTGOING_GROUP,\n  MobileBarringGroup,\n  MobileBarringSettings,\n  MobileBarringsDatalayer,\n} from '@billing/barrings/mobile-barrings/data-access';\nimport { AbstractBaseComponent } from '@telenet/ng-lib-page';\n\n@Component({\n  selector: 'tg-barring-selector',\n  standalone: true,\n  imports: [CommonModule, SlideMenuComponent, TranslateModule],\n  templateUrl: './barring-selector.component.html',\n  styleUrl: './barring-selector.component.scss',\n})\nexport class BarringSelectorComponent extends AbstractBaseComponent {\n  @Input() set barringSettings(mobileBarGroup: MobileBarringGroup) {\n    if (mobileBarGroup) {\n      this.barSettings = JSON.parse(JSON.stringify(mobileBarGroup.barringSettings));\n      this.groupCode = mobileBarGroup.code;\n      this.disabledByFraud = mobileBarGroup.disabledByFraud ?? false;\n    }\n  }\n  @Input() isReadOnly = false;\n  @Input() globalBarringEnabled = false;\n  @Input() suspendedNumber = false;\n  @Input() originalValueOfGeneralBarring!: boolean;\n  @Input() set bannerLinkIsClicked(bannerLinkClicked: boolean) {\n    if (bannerLinkClicked && this.globalBarringEnabled && this.groupCode === this.ALL_INCOMING_AND_OUTGOING_GROUP) {\n      this.slideMenu(true);\n    }\n  }\n\n  @Output() saveBarrings = new EventEmitter();\n  @Output() toggleBarring = new EventEmitter<MobileBarringSettings>();\n  @Output() cancel = new EventEmitter();\n  @Output() addAnalyticsEvent = new EventEmitter<MobileBarringsDatalayer>();\n\n  disabledByFraud = false;\n  showMenu = false;\n  showWarningScreen = false;\n  ALL_INCOMING_AND_OUTGOING = ALL_INCOMING_AND_OUTGOING;\n  ALL_INCOMING_AND_OUTGOING_GROUP = ALL_INCOMING_AND_OUTGOING_GROUP;\n  barSettings!: MobileBarringSettings[];\n  groupCode!: string;\n\n  slideMenu(open: boolean, event?: Event) {\n    event?.stopPropagation();\n    this.showMenu = open;\n    if (open) {\n      document.body?.classList.add('overflow--hidden');\n    } else {\n      document.body?.classList.remove('overflow--hidden');\n    }\n  }\n\n  activateBarring(setting: MobileBarringSettings) {\n    this.toggleBarring.emit(setting);\n  }\n\n  save() {\n    if (this.globalBarringEnabled !== this.originalValueOfGeneralBarring) {\n      this.showWarningScreen = true;\n    } else {\n      const analyticsEvent: MobileBarringsDatalayer = {\n        eventName: 'barring settings changed',\n        eventType: 'change-mobile-service-settings',\n        attributeName: this.groupCode,\n      };\n      this.addAnalyticsEvent.emit(analyticsEvent);\n      this.saveBarrings.emit();\n      this.slideMenu(false);\n    }\n  }\n\n  cancelWarning(event: Event) {\n    event.stopPropagation();\n    this.showWarningScreen = false;\n  }\n\n  saveWarning(event: Event) {\n    event.stopPropagation();\n    this.showWarningScreen = false;\n    this.saveBarrings.emit();\n    this.slideMenu(false);\n  }\n\n  cancelAction() {\n    if (!this.showWarningScreen) {\n      this.slideMenu(false);\n      this.cancel.emit();\n    }\n  }\n}\n","<div class=\"barring-selector\">\n  @if (\n    !isReadOnly &&\n    !disabledByFraud &&\n    (groupCode === ALL_INCOMING_AND_OUTGOING_GROUP || !globalBarringEnabled) &&\n    !suspendedNumber\n  ) {\n    <div class=\"button button--secondary button--alternate\" (click)=\"slideMenu(true, $event)\">\n      {{ 'ng.mobile-barrings.selector-button' | translate }}\n    </div>\n  }\n\n  <tg-slide-menu\n    (closeMenu)=\"cancelAction()\"\n    [showMenu]=\"showMenu\"\n    [isStickyFooter]=\"true\"\n    [title]=\"'ng.mobile-barrings.group.title.' + groupCode | translate\">\n    <div class=\"display--flex flex-direction--column mt--m px--m\">\n      <div class=\"barrings\">\n        @for (barSetting of barSettings; track barSetting.id) {\n          <div class=\"mb--l\">\n            <label\n              class=\"color-black form__checkbox-v2--switch display--flex-inline position--relative flex-wrap--nowrap width--full\"\n              [ngClass]=\"{\n                'pointer-events--none': globalBarringEnabled && barSetting.code !== ALL_INCOMING_AND_OUTGOING\n              }\"\n              for=\"{{ barSetting.id }}\">\n              <div class=\"display--flex justify-content--between\">\n                <div\n                  class=\"text-flow text-flow--h6\"\n                  [ngClass]=\"{\n                    'color-mid-grey': globalBarringEnabled && barSetting.code !== ALL_INCOMING_AND_OUTGOING\n                  }\">\n                  {{ 'ng.mobile-barrings.barring-name.' + barSetting.code | translate }}\n                </div>\n                <div>\n                  <input\n                    class=\"form__checkbox-v2--switch__input position--absolute opacity--full-transparency height--full\"\n                    type=\"checkbox\"\n                    [checked]=\"barSetting.isBarred\"\n                    (change)=\"activateBarring(barSetting)\"\n                    name=\"checkbox-switch\"\n                    [disabled]=\"barSetting.code === ALL_INCOMING_AND_OUTGOING ? false : globalBarringEnabled\"\n                    id=\"{{ barSetting.id }}\" />\n                  <span\n                    class=\"form__checkbox-v2--switch__toggle border-radius--all--l display--inline-flex align-items--center justify-content--around position--relative box-sizing--content-box\"></span>\n                </div>\n              </div>\n            </label>\n            @if (\n              ('ng.mobile-barrings.barring-subtitle.' + barSetting.code | translate) !==\n              'ng.mobile-barrings.barring-subtitle.' + barSetting.code\n            ) {\n              <div class=\"barring-settings-subtitle font--body-small color-shade_72 mt--xxs pb--xs\">\n                {{ 'ng.mobile-barrings.barring-subtitle.' + barSetting.code | translate }}\n              </div>\n            }\n            @if (\n              barSetting.code === 'all-incoming-and-outgoing' ||\n              barSetting.code === 'all-incoming-and-outgoing-while-roaming'\n            ) {\n              <div class=\"mt--m divider divider--s__very-light-grey\"></div>\n            }\n          </div>\n        }\n      </div>\n    </div>\n    <footer>\n      <div class=\"footer\">\n        <div class=\"divider divider--s__very-light-grey\"></div>\n        <div class=\"footer-slide display--flex pt--l\">\n          <button\n            [attr.data-cy]=\"'mobile-barring-selector-cancel'\"\n            class=\"button-override button button--secondary button--alternate button--fullwidth mr--m\"\n            (click)=\"cancelAction()\">\n            {{ 'ng.mobile-barrings.selector.cancel' | translate }}\n          </button>\n          <button\n            class=\"button-override button button--primary button--alternate button--fullwidth\"\n            [attr.data-cy]=\"'mobile-barring-selector-save'\"\n            (click)=\"save()\">\n            {{ 'ng.mobile-barrings.selector.save' | translate }}\n          </button>\n        </div>\n      </div>\n    </footer>\n  </tg-slide-menu>\n\n  <tg-slide-menu\n    [hideCloseButton]=\"true\"\n    [cancelClickOutside]=\"true\"\n    [showMenu]=\"showWarningScreen\"\n    [title]=\"\n      globalBarringEnabled\n        ? ('ng.mobile-barrings.add-warning' | translate)\n        : ('ng.mobile-barrings.remove-warning' | translate)\n    \">\n    <div class=\"display--flex flex-direction--column px--m\">\n      <div class=\"barrings\">\n        {{\n          globalBarringEnabled\n            ? 'ng.mobile-barrings.add-warning-description'\n            : ('ng.mobile-barrings.remove-warning-description' | translate)\n        }}\n      </div>\n      <footer>\n        <div class=\"footer\">\n          <div class=\"footer-slide display--flex pt--l\">\n            <button\n              [attr.data-cy]=\"'mobile-barring-selector-cancel-warning'\"\n              class=\"button-override button button--secondary button--alternate button--fullwidth mr--m\"\n              (click)=\"cancelWarning($event)\">\n              {{ 'ng.mobile-barrings.selector.cancel' | translate }}\n            </button>\n            <button\n              [attr.data-cy]=\"'mobile-barring-selector-save-warning'\"\n              class=\"button-override button button--primary button--alternate button--fullwidth\"\n              (click)=\"saveWarning($event)\">\n              {{\n                globalBarringEnabled\n                  ? 'ng.mobile-barrings.add-warning-save'\n                  : ('ng.mobile-barrings.remove-warning-save' | translate)\n              }}\n            </button>\n          </div>\n        </div>\n      </footer>\n    </div>\n  </tg-slide-menu>\n</div>\n"],"names":["EventEmitter","CommonModule","SlideMenuComponent","TranslateModule","ALL_INCOMING_AND_OUTGOING","ALL_INCOMING_AND_OUTGOING_GROUP","AbstractBaseComponent","i0","ɵɵelementStart","ɵɵlistener","BarringSelectorComponent_Conditional_1_Template_div_click_0_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","slideMenu","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","barSetting_r4","code","ɵɵelement","BarringSelectorComponent_For_7_Template_input_change_7_listener","restoredCtx","_r13","$implicit","ctx_r12","activateBarring","ɵɵtemplate","BarringSelectorComponent_For_7_Conditional_9_Template","BarringSelectorComponent_For_7_Conditional_11_Template","ɵɵpropertyInterpolate","id","ɵɵproperty","ɵɵpureFunction1","_c1","ctx_r1","globalBarringEnabled","_c2","isBarred","ɵɵconditional","BarringSelectorComponent","constructor","isReadOnly","suspendedNumber","saveBarrings","toggleBarring","cancel","addAnalyticsEvent","disabledByFraud","showMenu","showWarningScreen","barringSettings","mobileBarGroup","barSettings","JSON","parse","stringify","groupCode","bannerLinkIsClicked","bannerLinkClicked","open","event","stopPropagation","document","body","classList","add","remove","setting","emit","save","originalValueOfGeneralBarring","analyticsEvent","eventName","eventType","attributeName","cancelWarning","saveWarning","cancelAction","_","t","_2","selectors","inputs","outputs","standalone","features","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","BarringSelectorComponent_Template","rf","ctx","BarringSelectorComponent_Conditional_1_Template","BarringSelectorComponent_Template_tg_slide_menu_closeMenu_2_listener","ɵɵrepeaterCreate","BarringSelectorComponent_For_7_Template","_forTrack0","BarringSelectorComponent_Template_button_click_12_listener","BarringSelectorComponent_Template_button_click_15_listener","BarringSelectorComponent_Template_button_click_28_listener","BarringSelectorComponent_Template_button_click_31_listener","ɵɵrepeater","ɵɵattribute","i1","NgClass","i2","TranslatePipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}