{"version":3,"file":"libs_install_return-devices_util_src_index_ts-_06680.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAuF;AACd;;;AAMnE,MAAOA,4BAA4B;EAKvCI,YACmBC,EAAc,EACdC,aAA4B;IAD5B,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAC,aAAa,GAAbA,aAAa;IANhC,KAAAC,QAAQ,GAAG,gBAAgB;IACkB,KAAAC,SAAS,GAAG,EAAE;IAClD,KAAAC,GAAG,GAAG,EAAE;EAKd;EAEHC,WAAWA,CAACC,OAAsB;IAChC,MAAMC,UAAU,GAAW,IAAI,CAACC,aAAa,EAAE;IAE/C,IAAID,UAAU,EAAE;MACd,IAAIJ,SAAS,GAAWG,OAAO,CAAC,KAAK,CAAC,CAACG,YAAY;MACnD,MAAMC,mBAAmB,GAAGP,SAAS,CAACQ,OAAO,CAAC,SAAS,CAAC;MACxD,IAAID,mBAAmB,KAAK,CAAC,CAAC,EAAE;QAC9BP,SAAS,GAAGA,SAAS,CAACS,KAAK,CAACF,mBAAmB,CAAC;MAClD;MACA,IAAI,CAACV,EAAE,CAACa,aAAa,CAACT,GAAG,GAAG,GAAG,IAAI,CAACD,SAAS,GAAGA,SAAS,EAAE;IAC7D,CAAC,MAAM;MACL,IAAI,CAAC,IAAI,CAACH,EAAE,CAACa,aAAa,CAACT,GAAG,EAAE;QAC9B,IAAI,CAACJ,EAAE,CAACa,aAAa,CAACT,GAAG,GAAGE,OAAO,CAAC,KAAK,CAAC,CAACG,YAAY;MACzD;IACF;EACF;EAEAD,aAAaA,CAAA;IACX,MAAMM,gBAAgB,GAA8B,IAAI,CAACb,aAAa,CAACc,mBAAmB,CAAC,IAAI,CAACb,QAAQ,CAAC;IACzG,OAAOY,gBAAgB,EAAEP,UAAU,IAAI,EAAE;EAC3C;EAAC,QAAAS,CAAA;qBA9BUrB,4BAA4B,EAAAsB,+DAAA,CAAAA,qDAAA,GAAAA,+DAAA,CAAAE,iEAAA;EAAA;EAAA,QAAAC,EAAA;UAA5BzB,4BAA4B;IAAA0B,SAAA;IAAAC,MAAA;MAAAnB,SAAA,GAAAc,0DAAA,CAAAO,IAAA;MAAApB,GAAA;IAAA;IAAAqB,UAAA;IAAAC,QAAA,GAAAT,kEAAA;EAAA","sources":["./libs/install/return-devices/util/src/index.ts","./libs/install/return-devices/util/src/lib/image-src-interceptor/image-src-interceptor.directive.ts"],"sourcesContent":["export { ImageSrcInterceptorDirective } from './lib/image-src-interceptor/image-src-interceptor.directive';\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ConfigService, RemoteHostConfig } from '@telenet/ng-lib-config';\n\n@Directive({\n  standalone: true,\n  selector: '[tgReturnDevicesImageSrcInterceptor]',\n})\nexport class ImageSrcInterceptorDirective implements OnChanges {\n  moduleId = 'return-devices';\n  @Input('tgReturnDevicesImageSrcInterceptor') imagePath = '';\n  @Input() src = '';\n\n  constructor(\n    private readonly el: ElementRef,\n    private readonly configService: ConfigService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const remoteHost: string = this.getRemoteHost();\n\n    if (remoteHost) {\n      let imagePath: string = changes['src'].currentValue;\n      const indexOfAssetsFolder = imagePath.indexOf('/assets');\n      if (indexOfAssetsFolder !== -1) {\n        imagePath = imagePath.slice(indexOfAssetsFolder);\n      }\n      this.el.nativeElement.src = `${this.imagePath}${imagePath}`;\n    } else {\n      if (!this.el.nativeElement.src) {\n        this.el.nativeElement.src = changes['src'].currentValue;\n      }\n    }\n  }\n\n  getRemoteHost(): string {\n    const remoteHostConfig: Partial<RemoteHostConfig> = this.configService.getRemoteHostConfig(this.moduleId);\n    return remoteHostConfig?.remoteHost || '';\n  }\n}\n"],"names":["ImageSrcInterceptorDirective","ElementRef","SimpleChanges","ConfigService","constructor","el","configService","moduleId","imagePath","src","ngOnChanges","changes","remoteHost","getRemoteHost","currentValue","indexOfAssetsFolder","indexOf","slice","nativeElement","remoteHostConfig","getRemoteHostConfig","_","i0","ɵɵdirectiveInject","i1","_2","selectors","inputs","ɵɵInputFlags","None","standalone","features","ɵɵNgOnChangesFeature"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}