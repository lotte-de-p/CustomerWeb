{"version":3,"file":"libs_shared_datalayer_src_index_ts-_6b2b0.js","mappings":"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","sources":["./libs/shared/datalayer/src/index.ts","./libs/shared/datalayer/src/lib/datalayer/constants/anaytics.constants.ts","./libs/shared/datalayer/src/lib/datalayer/datalayer.service.ts","./libs/shared/datalayer/src/lib/datalayer/enums/attribute.enum.ts","./libs/shared/datalayer/src/lib/datalayer/enums/datalayer-event-names.enum.ts","./libs/shared/datalayer/src/lib/datalayer/enums/datalayer-event-types.enum.ts","./libs/shared/datalayer/src/lib/datalayer/enums/event-category.enum.ts","./libs/shared/datalayer/src/lib/datalayer/enums/event-name.enum.ts","./libs/shared/datalayer/src/lib/datalayer/enums/event-status.enum.ts","./libs/shared/datalayer/src/lib/datalayer/enums/event-type.enum.ts","./libs/shared/datalayer/src/lib/datalayer/index.ts","./libs/shared/datalayer/src/lib/datalayer/interfaces/data-layer-attributes.ts","./libs/shared/datalayer/src/lib/datalayer/model/data-layer-transaction.builder.ts","./libs/shared/datalayer/src/lib/datalayer/provider/datalayer-service.provider.ts","./libs/shared/datalayer/src/lib/datalayer/util/data-layer-util/adobe-analytics.directive.ts"],"sourcesContent":["export * from './lib/datalayer';\n","export class AnalyticsConstants {\n  static readonly ATTRIBUTE_STEP_ID = 'stepId';\n  static readonly ATTRIBUTES_INTENT = 'intent';\n  static readonly ATTRIBUTES_FLOW_TYPE = 'flowType';\n\n  static readonly INTENT_C5_CHECKOUT = 'C5 checkout';\n  static readonly INTENT_AEM_SALES_FLOW = 'AEM sales flow';\n  static readonly FLOW_TYPE_MARKETING = 'marketing';\n  static readonly FLOW_TYPE_CARE = 'care';\n  static readonly PRIMARY_CATEGORY_SALES = 'sales';\n  static readonly PRIMARY_CATEGORY_CARE = 'care';\n  static readonly LOGIN_PAGE_ID = 'checkout login page';\n  static readonly PRICE = 'price';\n  static readonly PRICE_EXCL_VAT = 'priceexclvat';\n\n  static readonly ITEM_DATA_EASYSWITCH_TRUE = 'Cancellation: Easy Switch';\n  static readonly ITEM_DATA_EASYSWITCH_FALSE = 'Cancellation: No Easy Switch';\n\n  static readonly ITEM_NAME_ADDRESS_SELECTION_OTHER = 'Installation address: different address';\n  static readonly ITEM_NAME_ADDRESS_SELECTION_CHANGED = 'Installation address changed';\n  static readonly ITEM_NAME_ADDRESS_SELECTION_POSTAL_CODE = 'Postal Code';\n  static readonly ITEM_NAME_EASYSWITCH_OPERATOR = 'Cancellation: Previous operator';\n  static readonly ITEM_NAME_INSTALLATION = 'Installation';\n  static readonly ITEM_NAME_CONNECTION_CABLE = 'Connection: Telenet cable';\n  static readonly ITEM_NAME_FIXED_TELEPHONY_CHANGED = 'Fixed telephony changed';\n\n  static readonly ITEM_NAME_WIFI_NETWORK_SETUP = 'wifi-network-setup';\n  static readonly INTENT_MOVE_FLOW = 'Move flow';\n  static readonly FLOW_TYPE_SELF_SERVICE = 'self-service';\n  static readonly ZENDESK_CHAT: 'zendesk chat';\n  static readonly INTENT_CHANGE_MODEM_SETTINGS = 'change modem-settings';\n  static readonly INTENT_RESET_MODEM_SETTINGS = 'reset-modem-settings';\n  static readonly INTENT_REBOOT_MODEM = 'modem reboot';\n  static readonly INTENT_UNLOCK_SETTINGS = 'unlock settings';\n\n  static readonly INTENT_ACTIVATE_SIM = 'activate-sim';\n  static readonly STEP_ACTIVATE_SIM_OVERLAY = 'activate-sim-overlay';\n  static readonly CATEGORY_FLEET = 'fleet';\n  static readonly SUB_CATEGORY_SIM_CARD = 'sim-card';\n  static readonly EVENT_NAME_SIM_ACTIVATION_START = 'sim activation started';\n  static readonly EVENT_NAME_SIM_ACTIVATED = 'sim activated';\n  static readonly EVENT_TYPE_SELF_SERVICE_FLOW_START = 'self-service-flow-start';\n  static readonly EVENT_TYPE_SELF_SERVICE_FLOW_END = 'self-service-flow-end';\n  static readonly PRIMARY_CATEGORY_GENERAL = 'general';\n}\n","import { Inject, Injectable } from '@angular/core';\nimport * as udl from 'udl';\nimport { EventTypeEnum } from './enums/event-type.enum';\nimport { DataLayerAttributes } from './interfaces/data-layer-attributes';\nimport { EventNameEnum } from './enums/event-name.enum';\nimport { EventStatusEnum } from './enums/event-status.enum';\nimport { AbstractMessage, MessageService } from '@telenet/ng-lib-message';\nimport { mergeMap, tap } from 'rxjs/operators';\nimport { DirectCallLabelEnum } from 'udl';\nimport { forkJoin, timer } from 'rxjs';\nimport { EventProperties } from './interfaces/udl-event-properties';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataLayerService {\n  private dataLayer!: udl.DataLayer;\n\n  constructor(\n    private readonly messageService: MessageService,\n    @Inject('Window')\n    private readonly window: Record<string, unknown>\n  ) {}\n\n  init() {\n    const udlObjectName = this.window['udlObjectName'] as string;\n    this.dataLayer = udl.DataLayer.create();\n    if (this.window[udlObjectName] && udlObjectName) {\n      let componentList = this.dataLayer.getComponents();\n      if (componentList && componentList.length > 0) {\n        componentList = componentList.map(function (componentItem) {\n          return new udl.Component(componentItem);\n        });\n      }\n      this.dataLayer.setComponents(componentList);\n    }\n    return true;\n  }\n\n  getDataLayer(): udl.DataLayer {\n    return this.dataLayer;\n  }\n\n  setPage(page: udl.Page): Promise<boolean> {\n    if (this.dataLayer) {\n      return this.dataLayer.setPage(page);\n    }\n    return new Promise(() => false);\n  }\n\n  getCategory(componentInstanceId: string): udl.Category | null {\n    if (this.dataLayer) {\n      return this.dataLayer.getCategory(componentInstanceId);\n    }\n    return null;\n  }\n\n  createCategory(primaryCategory: string = '', subCategory1?: string): udl.Category {\n    const category = new udl.Category();\n    category.setPrimaryCategory(primaryCategory);\n    if (subCategory1) {\n      category.setSubCategory1(subCategory1);\n    }\n\n    return category;\n  }\n\n  addPageEvent(pageId: string, attributes?: Record<string, string | boolean | number>): void {\n    const pageInfoObject = new udl.PageInfo();\n    pageInfoObject.setPageID(pageId);\n    pageInfoObject.setPageName(pageId);\n    pageInfoObject.setLanguage(this.dataLayer.getPage().getPageInfo().getLanguage());\n\n    const page = new udl.Page({ pageInfo: pageInfoObject });\n    if (attributes) {\n      Object.keys(attributes).forEach((key) => page.addAttribute(key, attributes[key]));\n    }\n\n    this.setPage(page).then();\n  }\n\n  addStepViewEvent(attributes: DataLayerAttributes): Promise<boolean> {\n    const event = new udl.Event();\n    const eventInfo = this.createEventInfo(EventNameEnum.EVENT_NAME_VIEW_STEP);\n    event.setEventInfo(eventInfo);\n    event.setAttributes(attributes);\n\n    if (this.dataLayer) {\n      return this.dataLayer.addStepViewEvent(event);\n    }\n    return new Promise(() => false);\n  }\n\n  createEvent(eventProperties: EventProperties): udl.Event {\n    const { eventInfo, attributes, strategy, category, directCallLabel } = eventProperties;\n    const event = new udl.Event();\n    event.setEventInfo(eventInfo);\n    event.setAttributes(attributes);\n    if (strategy) {\n      event.setStrategy(strategy);\n    }\n\n    if (category) {\n      event.setCategory(category);\n    }\n\n    if (directCallLabel) {\n      event.setDirectCallLabel(directCallLabel);\n    }\n\n    return event;\n  }\n\n  sendEvent(eventProperties: EventProperties): Promise<boolean> {\n    const event = this.createEvent(eventProperties);\n    if (this.dataLayer) {\n      return this.dataLayer.addEvent(event);\n    }\n    return new Promise(() => false);\n  }\n\n  addEvent(\n    eventInfo: udl.EventInfo,\n    attributes: DataLayerAttributes,\n    category?: udl.Category,\n    directCallLabel?: udl.DirectCallLabelEnum\n  ): Promise<boolean> {\n    const event = new udl.Event();\n    event.setEventInfo(eventInfo);\n    event.setAttributes(attributes);\n\n    if (category) {\n      event.setCategory(category);\n    }\n\n    if (directCallLabel) {\n      event.setDirectCallLabel(directCallLabel as DirectCallLabelEnum);\n    }\n\n    if (this.dataLayer) {\n      return this.dataLayer.addEvent(event);\n    }\n    return new Promise(() => false);\n  }\n\n  addStepLoadTimeEvent(attributes: DataLayerAttributes) {\n    const eventInfo = this.createEventInfo(\n      EventNameEnum.EVENT_NAME_STEP_LOAD_TIME,\n      EventTypeEnum.EVENT_TYPE_STEP_LOAD_TIME\n    );\n    return this.addEvent(eventInfo, attributes);\n  }\n\n  setCart(cart: udl.Cart): Promise<boolean> {\n    if (this.dataLayer) {\n      return this.dataLayer.setCart(cart);\n    }\n    return new Promise(() => false);\n  }\n\n  getCart(): udl.Cart | null {\n    if (this.dataLayer) {\n      return this.dataLayer.getCart();\n    }\n    return null;\n  }\n\n  createEventInfo(eventName: string, eventType?: string, messageGroups?: string[]): udl.EventInfo {\n    const eventInfo = new udl.EventInfo();\n    eventInfo.setEventName(eventName);\n    eventInfo.setType(eventType ?? '');\n    eventInfo.setEventStatus(this.getStatus(messageGroups?.length ? messageGroups : []));\n    eventInfo.setEventStatusMessage(this.getStatusMessage(messageGroups?.length ? messageGroups : []));\n    return eventInfo;\n  }\n\n  createCart(cartId: string, price?: udl.Price): udl.Cart {\n    const cart = new udl.Cart();\n    cart.setCartID(cartId);\n    cart.setPrice(price ?? new udl.Price());\n\n    return cart;\n  }\n\n  createTransaction(transactionId: string, price: udl.Price): udl.Transaction {\n    const transaction = new udl.Transaction();\n    transaction.setTransactionID(transactionId);\n    transaction.setPrice(price);\n\n    return transaction;\n  }\n\n  setTransaction(transaction: udl.Transaction): Promise<boolean> {\n    if (this.dataLayer) {\n      return this.dataLayer.setTransaction(transaction);\n    }\n    return new Promise(() => false);\n  }\n\n  createPrice(\n    oneTimePrice?: number,\n    recurringPrice?: number,\n    basePrice?: udl.Price,\n    totalPrice?: udl.Price,\n    discountedPrice?: udl.Price\n  ) {\n    const price = new udl.Price();\n    price.setOnetimePrice(oneTimePrice ?? 0);\n    price.setRecurringPrice(recurringPrice ?? 0);\n    price.setBasePrice(basePrice ?? new udl.Price());\n    price.setTotalPrice(totalPrice ?? new udl.Price());\n    price.setDiscountedPrice(discountedPrice ?? new udl.Price());\n\n    return price;\n  }\n\n  createProductInfo(productId: string, productName?: string, productType?: string, productStatus?: string) {\n    const product = new udl.Product();\n    product.setProductID(productId);\n    product.setProductName(productName ?? '');\n    product.setProductType(productType ?? '');\n    product.setProductStatus(productStatus ?? '');\n\n    return product;\n  }\n\n  createItem(productInfo: udl.Product, price?: udl.Price, quantity?: number) {\n    const item = new udl.Item();\n    item.setProductInfo(productInfo);\n    item.setPrice(price ?? new udl.Price());\n    item.setQuantity(quantity ?? 0);\n\n    return item;\n  }\n\n  private getStatus(messageGroups: string[]): string {\n    if (messageGroups?.length) {\n      for (const messageGroup of messageGroups) {\n        if (this.messageService.hasErrorMessages(messageGroup)) {\n          return EventStatusEnum.EVENT_STATUS_FAILED;\n        }\n      }\n      return EventStatusEnum.EVENT_STATUS_SUCCESS;\n    }\n    return EventStatusEnum.EVENT_STATUS_MESSAGE_EMPTY;\n  }\n\n  private getStatusMessage(messageGroups: string[]): string {\n    let statusMessages = '';\n    let messagesFromMessageService: AbstractMessage[] = [];\n    if (messageGroups?.length) {\n      for (const messageGroup of messageGroups) {\n        if (this.messageService.hasErrorMessages(messageGroup)) {\n          messagesFromMessageService = messagesFromMessageService.concat(\n            this.messageService.getErrorMessages(messageGroup)\n          );\n        }\n      }\n      messagesFromMessageService = messagesFromMessageService.filter((msg) => msg.type !== 'success');\n      statusMessages = messagesFromMessageService.map((msg) => msg['_key']).join(',');\n    }\n    return statusMessages;\n  }\n\n  getAnalyticsPromises(): Promise<boolean>[] {\n    if (this.dataLayer) {\n      return this.dataLayer.getAnalyticsPromises();\n    }\n    return [];\n  }\n\n  rollbackStepIdToParent(stepId: string): void {\n    timer(100)\n      .pipe(\n        mergeMap(() => {\n          const analyticsPromises = this.getAnalyticsPromises();\n          return forkJoin(analyticsPromises);\n        }),\n        tap(() => this.getDataLayer().getPage().getPageInfo().setStepId(stepId))\n      )\n      .subscribe();\n  }\n}\n","export enum AttributeEnum {\n  KEY_ITEM_DATA = 'itemData',\n  KEY_ITEM_NAME = 'itemName',\n  KEY_ITEM_GROUP = 'itemGroup',\n  KEY_DESTINATION_URL = 'destinationURL',\n  KEY_PEGA_OUTCOME = 'pega_outcome',\n  KEY_APPEND_STEP_ID = 'appendStepId',\n}\n","export enum DatalayerEventNames {\n  MOVE_FLOW_STARTED = 'move-flow started',\n  MOVE_FLOW_COMPLETED = 'move-flow completed',\n  OPTION_SELECTED = 'option selected',\n  OPTION_CHOSEN = 'option chosen',\n  LINK_CLICKED = 'link clicked',\n  BUTTON_CLICKED = 'button clicked',\n  CTA_BUTTON_CLICKED = 'cta-button clicked',\n  CHAT_REQUESTED = 'chat requested',\n  CHAT_WAITING = 'chat waiting',\n  CHAT_STARTED = 'chat started',\n  CHAT_ENDED = 'chat ended',\n  CONTACT_OPTIONS_POPUP_VIEW = 'contact options popup view',\n  CONTACT_OPTIONS_POPUP_CLICK = 'contact options popup click',\n  CONTACT_OPTION_VIEW = 'contact option view',\n  CONTACT_OPTION_CLICK = 'contact option click',\n  SELF_INSTALL_OPTION_VIEWED = 'self-install option viewed',\n  FORM_FIELD_COMPLETED = 'form field completed',\n  MOBILE_NUMBERS_ADDED = 'mobile numbers added',\n}\n","export enum EventTypes {\n  SELF_SERVICE_FLOW_STARTED = 'self-service-flow-start',\n  SELF_SERVICE_FLOW_END = 'self-service-flow-end',\n  OPTION_CLICK = 'option-click',\n  LINK_CLICK = 'link-click',\n  CHAT_REQUEST = 'chat-request',\n  CHAT_WAIT = 'chat-wait',\n  CHAT_START = 'chat-start',\n  CHAT_END = 'chat-end',\n  CONTACT_OPTIONS_POPUP_VIEW = 'pop-up-view',\n  CONTACT_OPTIONS_POPUP_CLICK = 'pop-up-click',\n  CONTACT_OPTION_VIEW = 'contact-option-view',\n  CONTACT_OPTION_CLICK = 'button-click',\n  SELF_INSTALL_VIEW = 'view-notification',\n  CLICK = 'click',\n}\n","export enum EventCategoryEnum {\n  PRIMARY_CATEGORY_SALES = 'sales',\n  PRIMARY_CATEGORY_CARE = 'care',\n  PRIMARY_CATEGORY_GENERAL = 'general',\n  PRIMARY_CATEGORY_TIP = 'tip',\n  PRIMARY_CATEGORY_CONTAINER = 'container',\n  SUBCATEGORY_PRODUCT_HOLDING = 'product holding',\n  SUBCATEGORY_CONTACT = 'contact',\n  SUBCATEGORY_EMPTY = '',\n  SUBCATEGORY_HOMENETWORK = 'home-network',\n}\n","export enum EventNameEnum {\n  EVENT_NAME_VIEW_PRODUCT_DETAILS = 'product details viewed',\n  EVENT_NAME_SELECT_NEW_PRODUCT = 'new product selected',\n  EVENT_NAME_VIEW_PRODUCT_HOLDING = 'product holdings viewed',\n  EVENT_NAME_SELECT_OWN_PRODUCT = 'owned product selected',\n  EVENT_NAME_START_SALES_FLOW = 'sales flow started',\n  EVENT_NAME_END_SALES_FLOW = 'sales flow ended',\n  EVENT_NAME_SUBMIT_ORDER = 'order submitted',\n  EVENT_NAME_VIEW_PAGE = 'pageview',\n  EVENT_NAME_VIEW_STEP = 'step viewed',\n  EVENT_NAME_SELECT_NEW_LINE = 'new line selected',\n  EVENT_NAME_SELECT_NEW_OPTION = 'new option selected',\n  EVENT_NAME_REMOVE_OPTION = 'option removed',\n  EVENT_NAME_REMOVE_MUTUALLY_EXCLUSIVE_OPTION = 'mutually exclusive option removed',\n  EVENT_NAME_ERROR_OCCURRED = 'error occurred',\n  EVENT_NAME_CHECK_ELIGIBILITY = 'eligibility checked',\n  EVENT_NAME_OUT_OF_BUNDLE_CONSULTED = 'out of bundle usage consulted',\n  EVENT_NAME_BUTTON_CLICKED = 'button clicked',\n  EVENT_NAME_CONTRACT_SUMMARY_CLICKED = 'contract summary link clicked',\n  EVENT_NAME_STEP_LOAD_TIME = 'step load time',\n  EVENT_NAME_CART_OPENED = 'cart opened',\n  EVENT_NAME_PRODUCT_REMOVED = 'product removed',\n  EVENT_NAME_PRODUCT_ADDED = 'product added',\n  EVENT_NAME_SALES_FLOW_STARTED = 'sales flow started',\n  EVENT_NAME_CONTACT_DETAILS_CHANGED = 'contact details changed',\n  EVENT_NAME_ADDRESS_DETAILS_CHANGED = 'address details changed',\n  EVENT_NAME_ORDER_SUBMITTED = 'order submitted',\n  EVENT_NAME_SAVE_ORDER_CLICKED = 'save order link clicked',\n  EVENT_NAME_MOBILE_USAGE_LIMITS_CHANGED = 'mobile usage limits changed',\n  EVENT_NAME_RESCHEDULE_APPOINTMENT_FLOW_STARTED = 'reschedule appointment flow started',\n  EVENT_NAME_RESCHEDULE_APPOINTMENT_FLOW_COMPLETED = 'reschedule appointment flow completed',\n  EVENT_NAME_CANCEL_APPOINTMENT = 'cancel appointment',\n  EVENT_NAME_APPOINTMENT_OPTION_SELECTED = 'option selected',\n  EVENT_NAME_LINK_CLICKED = 'link clicked',\n  EVENT_NAME_LOGIN = 'redirected to login',\n  EVENT_NAME_REGISTER = 'redirected to registration',\n  EVENT_NAME_MOBILE_USAGE = 'mobile usage',\n  EVENT_NAME_EXISTING_ADDRESS_SELECTED = 'existing address selected',\n  EVENT_NAME_NEW_ADDRESS_OPTION_SELECTED = 'new address option selected',\n  EVENT_NAME_NEW_ADDRESS_SELECTED = 'new address saved',\n  EVENT_NAME_NEW_ADDRESS_CANCELED = 'new address canceled',\n  EVENT_NAME_CONTINUE_BUTTON_CLICKED = 'continue button clicked',\n  EVENT_NAME_NAVIGATED_TO_NEXT_STEP = 'navigated to next step',\n  EVENT_NAME_VIEW_INSTALLATION_TYPE = 'installation type viewed',\n  EVENT_INSTALLATION_TYPE_SELECTED = 'installation type selected',\n  EVENT_NAME_CHEVRON_FEATUE_LINK_CLICKED = 'featured included link clicked',\n  EVENT_NAME_MOBILE_USAGE_PAUSED = 'mobile usage paused',\n  EVENT_NAME_MOBILE_USAGE_UNPAUSED = 'mobile usage unpaused',\n  EVENT_NAME_EASY_SWITCH_OPTION_SELECTED = 'easy switch option selected',\n  EVENT_NAME_MULTIPLE_OPERATOR_CHOICE_SELECTED = 'multiple operator choice selected',\n  EVENT_NAME_I_WILL_DO_IT_LATER_SELECTED = 'I will do it later option selected for product',\n  EVENT_NAME_EASY_SWITCH_SELECTED = 'easy switch option selected for product',\n  EVENT_NAME_CURRENT_PROVIDER_CLICKED = 'current provider option clicked',\n  EVENT_NAME_CURRENT_PROVIDER_SELECTED = 'current provider selected',\n  EVENT_NAME_APPOINTMENT_BY_DATE_OPTION_SELECTED = 'appointment by date option selected',\n  EVENT_NAME_APPOINTMENT_BY_TIME_OPTION_SELECTED = 'appointment by time option selected',\n  EVENT_NAME_OTHER_TIME_SLOTS_LOADED = 'other time slots loaded',\n  EVENT_NAME_EARLIEST_AVAILABLE_APPOINTMENT = 'earliest available appointment',\n  EVENT_NAME_CHANGE_ADDRESS_OPTION_SELECTED = 'change address option selected',\n  EVENT_NAME_CHANGE_ADDRESS_CANCELLED = 'change address cancelled',\n  EVENT_NAME_CHANGE_ADDRESS_SAVED = 'change address saved',\n  EVENT_NAME_PHONE_NUMBER_UPDATED = 'phone number updated',\n  EVENT_NAME_GET_AVAILABLE_MOBILE_LINES = 'available mobile lines',\n  EVENT_NAME_MANAGE_TIP_STARTED = 'manage-tip started',\n  EVENT_NAME_MANAGE_TIP_COMPLETED = 'manage-tip completed',\n  EVENT_NAME_NEW_BUNDLE_LINE_CONFIGURATION_VIEWED = 'new bundle line configuration viewed',\n  EVENT_NAME_SIM_ACCORDION_EXPANDED = 'sim accordion expanded',\n  EVENT_NAME_SIM_CONFIGURATION_SELECTED = 'sim configuration selected',\n  EVENT_NAME_SIM_CONFIGURATION_SAVED = 'sim configuration saved',\n  EVENT_NAME_MOBILE_LINES_TO_TERMINATE = 'mobile lines to terminate',\n  EVENT_NAME_EDIT_LINK_CLICKED = 'sim configuration edit',\n  EVENT_NAME_FIXED_LINE_SELECTED = 'fixed line selected',\n  EVENT_NAME_STANDALONE_CONFIGURATION_SELECTED = 'standalone configuration selected',\n  EVENT_NAME_BILLING_ADDRESS_LINK_CLICKED = 'change billing address link  clicked',\n  EVENT_NAME_INSTALLATION_ADDRESS = 'change installation address link clicked',\n  EVENT_NAME_INSTALLATION_TYPE = 'change installation type link clicked',\n  EVENT_NAME_PERSONAL_DETAILS_LINK_CLICKED = 'change personal detail link  clicked',\n  EVENT_NAME_DEPRECIATION_TABLE = 'show depreciation table for {{product}}',\n  EVENT_NAME_COUPON_CODE_BUTTON_CLICKED = 'coupon code button clicked',\n  EVENT_NAME_COUPON_CODE_APPLIED_SUCCESSFULLY = 'coupon code applied successfully',\n  EVENT_NAME_ORDER_BUTTON_CLICKED = 'order button clicked',\n  EVENT_NAME_SAVE_ORDER_BUTTON_CLICKED = 'save order button clicked',\n  EVENT_NAME_SUBMIT_ORDER_BUTTON_CLICKED = 'submit order button clicked',\n  EVENT_NAME_REDIRECTED_TO_PAYMENT_GATEWAY = 'redirected to payment gateway',\n  EVENT_NAME_PAYMENT_INITIATED = 'payment initiated',\n  EVENT_NAME_COUPON_CODE_REMOVED = 'coupon code removed',\n  EVENT_NAME_TERMS_CONDITION_CLICKED = 'Terms and Conditions link clicked',\n  EVENT_NAME_TERMINATE_EXISTING_CONTRACT_SELECTED = 'terminate existing contract selected',\n  EVENT_NAME_APPLY_BUTTON_CLICKED = 'apply button clicked',\n  EVENT_NAME_CANCEL_BUTTON_CLICKED = 'cancel button clicked',\n  EVENT_NAME_PRODUCT_CANCELLED = 'product cancelled',\n  EVENT_NAME_ENABLE_DISCOUNT_LINK_CLICKED = 'enable discount link clicked',\n  EVENT_NAME_NEW_OPERATOR_INSTALLATION_ADDRESS_SELECTED = 'new operator installation address selected',\n  EVENT_NAME_APPLY_MOVE_BUTTON_CLICKED = 'apply for move button clicked',\n  EVENT_NAME_MOVE_SAVE_BUTTON_CLICKED = 'move address saved',\n  EVENT_NAME_MOVE_ZIP_CODE = 'zip code for move address selected',\n  EVENT_NAME_INSTALLATION_TYPE_CLICKED = 'installation type clicked',\n  EVENT_NAME_DELIVERY_ADDRESS_UPDATED = 'delivery address updated',\n  EVENT_NAME_CONTACT_UPDATED = 'contact updated',\n  EVENT_NAME_CANCEL_SIM_CONFIGURATION_CLICKED = 'sim configuration cancelled',\n  EVENT_NAME_RESTRICTED_PRODUCT_DISCLAIMER_SHOWN = 'restricted product disclaimer shown',\n  EVENT_NAME_BILLING_ADDRESS_NOT_UPDATED = 'billing address is not changed',\n  EVENT_NAME_BILLING_ADDRESS_UPDATED = 'biling address updated',\n  EVENT_NAME_PERSONAL_INFO_NOT_CHANGED = 'personal info is not changed',\n  EVENT_NAME_PERSONAL_INFO_UPDATED = 'personal info is updated',\n  EVENT_NAME_REDIRECTED_TO_INSTALLATION_LOCATION_STEP = 'redirected to installation location step',\n  EVENT_NAME_INSTALLATION_ADDRESS_NOT_CHANGED = 'installation address not changed',\n  EVENT_NAME_INSTALLATION_TYPE_NOT_CHANGED = 'installation type not changed',\n  EVENT_NAME_REDIRECTED_TO_RESERVE_APPOINTMENT_STEP = 'redirected to reserve appointment step',\n  EVENT_NAME_REDIRECTED_TO_INSTALLATION_TPE_STEP = 'redirected to installation type step',\n  EVENT_NAME_APPLY_COUPON_CODE_FAILED = 'apply coupon failed',\n  EVENT_NAME_CHANGE_SHIPPING_ADDRESS_LINK_CLICKED = 'change shipping address link clicked',\n  EVENT_NAME_SHIPPING_ADDRESS_UPDATED = 'shipping address is updated',\n  EVENT_NAME_SHIPPING_ADDRESS_NOT_CHANGED = 'shipping address not changed',\n  EVENT_NAME_EASY_SWITCH_AVAILABLE_OPTION_SELECTED = 'easyswitch available option clicked',\n  EVENT_NAME_EASY_SWITCH_TV_OPTION = 'tv option clicked',\n  EVENT_NAME_EASY_SWITCH_TV_INTERNET_OPTION = 'internet and tv option clicked',\n  EVENT_NAME_START_DATE_OPTION = 'start date option clicked',\n  EVENT_NAME_START_DATE_OPTION_MESSAGE = 'start date option message viewed',\n}\n","export enum EventStatusEnum {\n  EVENT_STATUS_FAILED = 'failed',\n  EVENT_STATUS_SUCCESS = 'success',\n  EVENT_STATUS_MESSAGE_EMPTY = '',\n}\n","export enum EventTypeEnum {\n  EVENT_TYPE_ERROR = 'error',\n  EVENT_TYPE_CLICK = 'click',\n  EVENT_TYPE_CLICK_CARD = 'click-card',\n  EVENT_TYPE_SALES_FLOW_START = 'sales-flow-start',\n  EVENT_TYPE_SALES_FLOW_END = 'sales-flow-end',\n  EVENT_TYPE_SC_ADD = 'sc-add',\n  EVENT_TYPE_SC_OPEN = 'sc-open',\n  EVENT_TYPE_SC_REMOVE = 'sc-remove',\n  EVENT_TYPE_SC_CANCEL = 'sc-cancel',\n  EVENT_TYPE_SC_ADD_ERROR = 'sc-add + error',\n  EVENT_TYPE_SC_REMOVE_ERROR = 'sc-remove + error',\n  EVENT_TYPE_VIEW_PRODUCT_DETAILS = 'view-product-details',\n  EVENT_TYPE_VIEW_MOBILE_USAGE = 'view-mobile-usage',\n  EVENT_TYPE_STEP_LOAD_TIME = 'step-load-time',\n  EVENT_TYPE_ONSITE_SEARCH_CLICK = 'on-site-search-click',\n  EVENT_TYPE_ONSITE_SEARCH = 'on-site-search',\n  EVENT_TYPE_IMPRESSION = 'impression',\n  EVENT_TYPE_BUTTON_CLICK = 'button-click',\n  EVENT_TYPE_CH_STORE = 'context-hub-store',\n  EVENT_TYPE_SELF_SERVICE_FLOW_STARTED = 'self-service-flow-start',\n  EVENT_TYPE_SELF_SERVICE_FLOW_END = 'self-service-flow-end',\n  EVENT_TYPE_VIEW_BANNER = 'view-banner',\n  EVENT_TYPE_VIEWED_PAGE = 'viewed-page',\n  EVENT_TYPE_BILLING_INFO = 'change-billing-info',\n  EVENT_TYPE_INSTALLATION_ADDRESS = 'change-installation-address',\n  EVENT_TYPE_INFO_CARD = 'change-installation-type-info-card',\n  EVENT_TYPE_PERSONAL_INFO = 'change-personal-info',\n  EVENT_TYPE_PRE_ORDER = 'pre-order',\n  EVENT_TYPE_PURCHASE = 'purchase',\n}\n","export * from './constants/anaytics.constants';\nexport * from './enums/attribute.enum';\nexport * from './enums/datalayer-event-names.enum';\nexport * from './enums/event-name.enum';\nexport * from './enums/event-type.enum';\nexport * from './enums/event-status.enum';\nexport * from './enums/datalayer-event-types.enum';\nexport * from './enums/event-category.enum';\n\nexport * from './interfaces/data-layer-attributes';\n\nexport * from './provider/datalayer-service.provider';\n\nexport * from './datalayer.service';\nexport * from './util/data-layer-util/adobe-analytics.directive';\n\nexport * from './model/data-layer-transaction.builder';\n","import * as udl from 'udl';\n\nexport interface DataLayerAttributes {\n  stepId?: string;\n  itemName?: string;\n  itemGroup?: string;\n  itemIdentifier?: string;\n  intent?: string;\n  itemData?: string;\n  flowType?: string;\n  cart?: udl.Cart;\n  source?: string;\n  onsiteSearchFilter?: string;\n  onsiteSearchResults?: string;\n  onsiteSearchTerm?: string;\n  onsiteSearchOrigination?: string;\n  onsiteSearchResultsID?: string;\n  cardId?: string;\n  destinationURL?: string;\n  product?: udl.Item[];\n  storeName?: string;\n  flowCategory?: string;\n  stockAvailability?: string;\n  total?: string;\n  additionalSMSSent?: string;\n  paymentMethod?: string;\n  productPurchaseType?: string;\n}\n","import { Transaction, TransactionBuilder } from 'udl';\nimport { DataLayerAttributes } from '../interfaces/data-layer-attributes';\n\nexport class DataLayerTransactionBuilder extends TransactionBuilder {\n  private _dataLayerAttributes: DataLayerAttributes | undefined;\n  private _resolvePromiseAfterDelay = 0;\n\n  withDataLayerAttributes(attributes: DataLayerAttributes): DataLayerTransactionBuilder {\n    this._dataLayerAttributes = attributes;\n    return this;\n  }\n\n  withDataLayerForceResolvePromiseAfterDelay(timeoutInMS: number): DataLayerTransactionBuilder {\n    this._resolvePromiseAfterDelay = timeoutInMS;\n    return this;\n  }\n\n  override build(): Transaction {\n    const transaction = super.build();\n    if (this._dataLayerAttributes) {\n      transaction.setAttributes(this._dataLayerAttributes);\n    }\n    transaction.setForceResolvePromiseAfterDelay(this._resolvePromiseAfterDelay);\n    return transaction;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataLayerService } from '../datalayer.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataLayerServiceProvider {\n  constructor(private readonly dataLayerService: DataLayerService) {}\n\n  init(): Promise<boolean> {\n    const timeout = 5000;\n    const intervalTimer = 250;\n    let numberOfRuns = 0;\n\n    return new Promise<boolean>((resolve, _) => {\n      const interval = setInterval(() => {\n        if (this.dataLayerService.init()) {\n          resolve(true);\n          clearInterval(interval);\n        } else if (timeout <= intervalTimer * numberOfRuns) {\n          clearInterval(interval);\n        }\n        numberOfRuns++;\n      }, 250);\n    });\n  }\n}\n\nexport function dataLayerServiceProviderFactory(dataLayerServiceProvider: DataLayerServiceProvider) {\n  return () => dataLayerServiceProvider.init();\n}\n","import { Directive, HostListener, Input } from '@angular/core';\n\nimport * as udl from 'udl';\nimport { DataLayerService } from '../../datalayer.service';\nimport { DataLayerAttributes } from '../../interfaces/data-layer-attributes';\nimport { EventCategoryEnum } from '../../enums/event-category.enum';\nimport { DatalayerEventNames } from '../../enums/datalayer-event-names.enum';\nimport { EventTypes } from '../../enums/datalayer-event-types.enum';\n\n@Directive({\n  selector: '[clickPushToAnalytics]',\n  standalone: true,\n})\nexport class AdobeAnalyticsDirective {\n  @Input() clickPushToAnalytics!: { attributeName: string; eventName: DatalayerEventNames; messageGroupName: string };\n\n  @HostListener('click')\n  onClick() {\n    this.pushToAnalytics(\n      this.clickPushToAnalytics.attributeName,\n      this.clickPushToAnalytics.eventName,\n      this.clickPushToAnalytics.messageGroupName\n    );\n  }\n\n  constructor(private readonly dataLayerService: DataLayerService) {}\n\n  pushToAnalytics(attributeName: string, eventName: DatalayerEventNames, messageGroupName: string): void {\n    const eventInfo = this.dataLayerService.createEventInfo(eventName, EventTypes.CLICK, [messageGroupName]);\n    const attributes: DataLayerAttributes = {\n      itemName: attributeName,\n    };\n    this.addEventToDataLayer(eventInfo, attributes);\n  }\n\n  private addEventToDataLayer(eventInfo: udl.EventInfo, attributes?: DataLayerAttributes): void {\n    const category = this.dataLayerService.createCategory(\n      EventCategoryEnum.PRIMARY_CATEGORY_CARE,\n      EventCategoryEnum.PRIMARY_CATEGORY_GENERAL\n    );\n    const enrichedAttributes = attributes || {};\n    this.dataLayerService.addEvent(eventInfo, enrichedAttributes, category);\n  }\n}\n"],"names":["AnalyticsConstants","ATTRIBUTE_STEP_ID","ATTRIBUTES_INTENT","ATTRIBUTES_FLOW_TYPE","INTENT_C5_CHECKOUT","INTENT_AEM_SALES_FLOW","FLOW_TYPE_MARKETING","FLOW_TYPE_CARE","PRIMARY_CATEGORY_SALES","PRIMARY_CATEGORY_CARE","LOGIN_PAGE_ID","PRICE","PRICE_EXCL_VAT","ITEM_DATA_EASYSWITCH_TRUE","ITEM_DATA_EASYSWITCH_FALSE","ITEM_NAME_ADDRESS_SELECTION_OTHER","ITEM_NAME_ADDRESS_SELECTION_CHANGED","ITEM_NAME_ADDRESS_SELECTION_POSTAL_CODE","ITEM_NAME_EASYSWITCH_OPERATOR","ITEM_NAME_INSTALLATION","ITEM_NAME_CONNECTION_CABLE","ITEM_NAME_FIXED_TELEPHONY_CHANGED","ITEM_NAME_WIFI_NETWORK_SETUP","INTENT_MOVE_FLOW","FLOW_TYPE_SELF_SERVICE","ZENDESK_CHAT","INTENT_CHANGE_MODEM_SETTINGS","INTENT_RESET_MODEM_SETTINGS","INTENT_REBOOT_MODEM","INTENT_UNLOCK_SETTINGS","INTENT_ACTIVATE_SIM","STEP_ACTIVATE_SIM_OVERLAY","CATEGORY_FLEET","SUB_CATEGORY_SIM_CARD","EVENT_NAME_SIM_ACTIVATION_START","EVENT_NAME_SIM_ACTIVATED","EVENT_TYPE_SELF_SERVICE_FLOW_START","EVENT_TYPE_SELF_SERVICE_FLOW_END","PRIMARY_CATEGORY_GENERAL","udl","EventTypeEnum","EventNameEnum","EventStatusEnum","MessageService","mergeMap","tap","forkJoin","timer","DataLayerService","messageService","window","dataLayer","constructor","init","udlObjectName","DataLayer","create","componentList","getComponents","length","map","componentItem","Component","setComponents","getDataLayer","setPage","page","Promise","getCategory","componentInstanceId","createCategory","primaryCategory","subCategory1","category","Category","setPrimaryCategory","setSubCategory1","addPageEvent","pageId","attributes","pageInfoObject","PageInfo","setPageID","setPageName","setLanguage","getPage","getPageInfo","getLanguage","Page","pageInfo","Object","keys","forEach","key","addAttribute","then","addStepViewEvent","event","Event","eventInfo","createEventInfo","EVENT_NAME_VIEW_STEP","setEventInfo","setAttributes","createEvent","eventProperties","strategy","directCallLabel","setStrategy","setCategory","setDirectCallLabel","sendEvent","addEvent","addStepLoadTimeEvent","EVENT_NAME_STEP_LOAD_TIME","EVENT_TYPE_STEP_LOAD_TIME","setCart","cart","getCart","eventName","eventType","messageGroups","EventInfo","setEventName","setType","setEventStatus","getStatus","setEventStatusMessage","getStatusMessage","createCart","cartId","price","Cart","setCartID","setPrice","Price","createTransaction","transactionId","transaction","Transaction","setTransactionID","setTransaction","createPrice","oneTimePrice","recurringPrice","basePrice","totalPrice","discountedPrice","setOnetimePrice","setRecurringPrice","setBasePrice","setTotalPrice","setDiscountedPrice","createProductInfo","productId","productName","productType","productStatus","product","Product","setProductID","setProductName","setProductType","setProductStatus","createItem","productInfo","quantity","item","Item","setProductInfo","setQuantity","messageGroup","hasErrorMessages","EVENT_STATUS_FAILED","EVENT_STATUS_SUCCESS","EVENT_STATUS_MESSAGE_EMPTY","statusMessages","messagesFromMessageService","concat","getErrorMessages","filter","msg","type","join","getAnalyticsPromises","rollbackStepIdToParent","stepId","pipe","analyticsPromises","setStepId","subscribe","i0","ɵɵinject","i1","factory","ɵfac","providedIn","AttributeEnum","DatalayerEventNames","EventTypes","EventCategoryEnum","TransactionBuilder","DataLayerTransactionBuilder","_dataLayerAttributes","_resolvePromiseAfterDelay","withDataLayerAttributes","withDataLayerForceResolvePromiseAfterDelay","timeoutInMS","build","setForceResolvePromiseAfterDelay","DataLayerServiceProvider","dataLayerService","timeout","intervalTimer","numberOfRuns","resolve","_","interval","setInterval","clearInterval","dataLayerServiceProviderFactory","dataLayerServiceProvider","AdobeAnalyticsDirective","clickPushToAnalytics","onClick","pushToAnalytics","attributeName","messageGroupName","CLICK","itemName","addEventToDataLayer","enrichedAttributes","ɵɵdirectiveInject","selectors","hostBindings","AdobeAnalyticsDirective_HostBindings","rf","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}