{"version":3,"file":"main.js","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G2H,SAAS;QAClCgB,YAAY,CAACzE,YAAY,CAACyD,SAAS,EAAyBS,aAAa,CAACE,MAAM,CAAU,CAAC;MAC3G;IACA;EACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMO,YAAY,GAAGA,CAACL,MAAM,EAAEC,QAAQ,EAAEC,MAAM,KAAK;EAC/C,KAAK,IAAII,KAAK,GAAGL,QAAQ,EAAEK,KAAK,IAAIJ,MAAM,EAAE,EAAEI,KAAK,EAAE;IACjD,MAAMvJ,KAAK,GAAGiJ,MAAM,CAACM,KAAK,CAAC;IAC3B,IAAIvJ,KAAK,EAAE;MACP,MAAM0B,GAAG,GAAG1B,KAAK,CAACS,KAAK;MACvB+I,gBAAgB,CAACxJ,KAAK,CAAC;MACvB,IAAI0B,GAAG,EAAE;QACqB;UAC1C;UACA;UACoB7F,2BAA2B,GAAG,IAAI;UAClC,IAAI6F,GAAG,CAAC,MAAM,CAAC,EAAE;YACrC;YACwBA,GAAG,CAAC,MAAM,CAAC,CAACyE,MAAM,EAAE;UAC5C,CAAqB,MACI;YACzB;YACA;YACwBqC,yBAAyB,CAAC9G,GAAG,EAAE,IAAI,CAAC;UAC5D;QACA;QACA;QACgBA,GAAG,CAACyE,MAAM,EAAE;MAC5B;IACA;EACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMsD,cAAc,GAAGA,CAACtB,SAAS,EAAEuB,KAAK,EAAErK,QAAQ,EAAEsK,KAAK,EAAEC,eAAe,GAAG,KAAK,KAAK;EACnF,IAAIC,WAAW,GAAG,CAAC;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;UCRA;UACA;UACA;UACA;UACA;;;;;UCJA;UACA;UACA;UACA;UACA;;;;;UCJA;;;;;UCAA;UACA;UACA;UACA;UACA,uBAAuB,4BAA4B;UACnD;UACA;UACA;UACA,iBAAiB,oBAAoB;UACrC;UACA,mGAAmG,YAAY;UAC/G;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,mEAAmE,iCAAiC;UACpG;UACA;UACA;UACA;;;;;UCzCA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;UCNA;UACA;UACA;UACA;UACA;;;;;UCJA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,oJAAoJ;UACpJ;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,IAAI,aAAa;UACjB;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;UCtFA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;UCZA;;;;;UCAA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;UCNA;UACA;UACA,WAAW,6BAA6B,iBAAiB,GAAG,qEAAqE;UACjI;UACA;UACA;UACA,qCAAqC,aAAa,EAAE,wDAAwD,2BAA2B,4BAA4B,2BAA2B,+CAA+C,mCAAmC;UAChR;UACA;UACA;UACA,qBAAqB,8BAA8B,SAAS,sDAAsD,gBAAgB,eAAe,KAAK,6DAA6D,SAAS,SAAS,QAAQ,eAAe,KAAK,eAAe,qGAAqG,WAAW,aAAa;UAC7Y;UACA;UACA;UACA,gBAAgB,8BAA8B,qBAAqB,YAAY,sBAAsB,SAAS,iDAAiD,6FAA6F,WAAW,uBAAuB,2BAA2B,wBAAwB,KAAK,oCAAoC,oBAAoB,wBAAwB,oBAAoB,SAAS,KAAK,yBAAyB,KAAK,gCAAgC,yBAAyB,QAAQ,eAAe,KAAK,eAAe,4DAA4D;UACtoB;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,EAAE;UACF;UACA;UACA;UACA;UACA;UACA;UACA,EAAE;UACF;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,EAAE;UACF;UACA;UACA;UACA;UACA;UACA;UACA;UACA,EAAE;UACF;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,CAAC;;UAED;UACA;UACA;UACA,CAAC;UACD;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA,CAAC;UACD;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,MAAM;UACN,KAAK,WAAW;UAChB,GAAG;UACH;UACA;;;;;UCnoBA;;UAEA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA;UACA,iCAAiC;;UAEjC;UACA;UACA;UACA,KAAK;UACL,eAAe;UACf;UACA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;;UAEA;;UAEA;;UAEA;;UAEA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,MAAM,qBAAqB;UAC3B;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA;;;;;SErFA;SACA;SACA;SACA;SACA","sources":["./libs/foundation/wink/dist/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./apps/billing/invoice-mfe/src/main.ts","./libs/foundation/wink/dist/dist/core/src/assets/shared/scripts/global.ts","./libs/foundation/wink/dist/dist/esm/@stencil/core/internal/app-data","./libs/foundation/node_modules/@stencil/core/internal/client/index.js","./libs/foundation/wink/dist/dist/esm/@lazy-external-entrypoint","./libs/foundation/wink/dist/dist/esm/polyfills/index.js","./libs/foundation/wink/dist/loader/index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/sharing","webpack/runtime/trusted types policy","webpack/runtime/trusted types script url","webpack/runtime/publicPath","webpack/runtime/consumes","webpack/runtime/jsonp chunk loading","webpack/before-startup","webpack/startup","webpack/after-startup"],"sourcesContent":["var map = {\n\t\"./wink-accordion.entry.js\": [\n\t\t69352,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-accordion_entry_js\"\n\t],\n\t\"./wink-animation_2.entry.js\": [\n\t\t85854,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-animation_2_entry_js\"\n\t],\n\t\"./wink-avatar.entry.js\": [\n\t\t69689,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-avatar_entry_js\"\n\t],\n\t\"./wink-badge.entry.js\": [\n\t\t61892,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-badge_entry_js\"\n\t],\n\t\"./wink-check-box-group.entry.js\": [\n\t\t80099,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-check-box-group_entry_js\"\n\t],\n\t\"./wink-check-box.entry.js\": [\n\t\t35944,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-check-box_entry_js\"\n\t],\n\t\"./wink-column-count.entry.js\": [\n\t\t21841,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-column-count_entry_js\"\n\t],\n\t\"./wink-customer-orientation.entry.js\": [\n\t\t52285,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-customer-orientation_entry_js\"\n\t],\n\t\"./wink-dropdown-menu.entry.js\": [\n\t\t51329,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-dropdown-menu_entry_js\"\n\t],\n\t\"./wink-flyout.entry.js\": [\n\t\t2362,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-flyout_entry_js\"\n\t],\n\t\"./wink-form-label_2.entry.js\": [\n\t\t42088,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-form-label_2_entry_js\"\n\t],\n\t\"./wink-global-header.entry.js\": [\n\t\t21704,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-global-header_entry_js\"\n\t],\n\t\"./wink-icon.entry.js\": [\n\t\t74218,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-icon_entry_js\"\n\t],\n\t\"./wink-img.entry.js\": [\n\t\t34779,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-img_entry_js\"\n\t],\n\t\"./wink-indicator.entry.js\": [\n\t\t46723,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-indicator_entry_js\"\n\t],\n\t\"./wink-input.entry.js\": [\n\t\t48460,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-input_entry_js\"\n\t],\n\t\"./wink-intent-bar.entry.js\": [\n\t\t59149,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-intent-bar_entry_js\"\n\t],\n\t\"./wink-link.entry.js\": [\n\t\t67357,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-link_entry_js\"\n\t],\n\t\"./wink-logo.entry.js\": [\n\t\t19143,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-logo_entry_js\"\n\t],\n\t\"./wink-main-navigation.entry.js\": [\n\t\t81950,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-main-navigation_entry_js\"\n\t],\n\t\"./wink-navigation-list-item.entry.js\": [\n\t\t28636,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-navigation-list-item_entry_js\"\n\t],\n\t\"./wink-navigation-list.entry.js\": [\n\t\t4517,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-navigation-list_entry_js\"\n\t],\n\t\"./wink-notification.entry.js\": [\n\t\t96858,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-notification_entry_js\"\n\t],\n\t\"./wink-paragraph.entry.js\": [\n\t\t89838,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-paragraph_entry_js\"\n\t],\n\t\"./wink-pricing.entry.js\": [\n\t\t1806,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-pricing_entry_js\"\n\t],\n\t\"./wink-radio-button.entry.js\": [\n\t\t52400,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-radio-button_entry_js\"\n\t],\n\t\"./wink-radio-group.entry.js\": [\n\t\t34685,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-radio-group_entry_js\"\n\t],\n\t\"./wink-range-slider.entry.js\": [\n\t\t25814,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-range-slider_entry_js\"\n\t],\n\t\"./wink-select.entry.js\": [\n\t\t90163,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-select_entry_js\"\n\t],\n\t\"./wink-sheet.entry.js\": [\n\t\t50023,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-sheet_entry_js\"\n\t],\n\t\"./wink-spacer.entry.js\": [\n\t\t64535,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-spacer_entry_js\"\n\t],\n\t\"./wink-stack.entry.js\": [\n\t\t50433,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-stack_entry_js\"\n\t],\n\t\"./wink-tabs.entry.js\": [\n\t\t47532,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-tabs_entry_js\"\n\t],\n\t\"./wink-textarea.entry.js\": [\n\t\t56168,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-textarea_entry_js\"\n\t],\n\t\"./wink-title.entry.js\": [\n\t\t55836,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-title_entry_js\"\n\t],\n\t\"./wink-toast.entry.js\": [\n\t\t75827,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-toast_entry_js\"\n\t],\n\t\"./wink-toaster.entry.js\": [\n\t\t36598,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-toaster_entry_js\"\n\t],\n\t\"./wink-toggle-switch.entry.js\": [\n\t\t35901,\n\t\t\"libs_foundation_wink_dist_dist_esm_wink-toggle-switch_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8867;\nmodule.exports = webpackAsyncContext;","import { defineCustomElements } from '@telenet/wink-core/loader/index';\n\ndefineCustomElements(window);\nimport('./bootstrap').catch((err) => console.error(err));\n","import { setMode } from '@stencil/core';\n\nconst BRANDS: string[] = ['telenet', 'base'];\nconst STORAGE_BRAND: string = localStorage.getItem('currentBrand') || 'telenet';\n\nsetMode((el: HTMLElement) => {\n  const comp_brand = el.getAttribute('brand') || STORAGE_BRAND;\n  if (!BRANDS.includes(comp_brand)) {\n    el.setAttribute('brand', STORAGE_BRAND);\n  }\n  el.setAttribute('brand', STORAGE_BRAND);\n  return comp_brand;\n});\n","export const NAMESPACE = 'wink-core';\nexport const BUILD = /* wink-core */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, asyncQueue: false, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: false, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: true, cmpWillUpdate: false, connectedCallback: false, constructableCSS: true, cssAnnotations: true, devTools: false, disconnectedCallback: true, element: false, event: true, experimentalScopedSlotChanges: false, experimentalSlotFixes: false, formAssociated: true, hasRenderFn: true, hostListener: true, hostListenerTarget: true, hostListenerTargetBody: false, hostListenerTargetDocument: true, hostListenerTargetParent: false, hostListenerTargetWindow: false, hotModuleReplacement: false, hydrateClientSide: false, hydrateServerSide: false, hydratedAttribute: false, hydratedClass: true, initializeNextTick: false, invisiblePrehydration: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: true, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, scoped: true, scopedSlotTextContentFix: false, scriptDataOpts: false, shadowDelegatesFocus: false, shadowDom: true, slot: true, slotChildNodesFix: false, slotRelocation: true, state: true, style: true, svg: false, taskQueue: true, transformTagName: false, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };\nexport const Env = /* wink-core */ {};\n","/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/snabbdom/snabbdom/blob/master/LICENSE\n *\n * Modified for Stencil's renderer and slot projection\n */\nlet scopeId;\nlet contentRef;\nlet hostTagName;\nlet customError;\nlet i = 0;\nlet useNativeShadowDom = false;\nlet checkSlotFallbackVisibility = false;\nlet checkSlotRelocate = false;\nlet isSvgMode = false;\nlet renderingRef = null;\nlet queueCongestion = 0;\nlet queuePending = false;\n/*\n Stencil Client Platform v4.12.1 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nconst Build = {\n    isDev: BUILD.isDev ? true : false,\n    isBrowser: true,\n    isServer: false,\n    isTesting: BUILD.isTesting ? true : false,\n};\nconst getAssetPath = (path) => {\n    const assetUrl = new URL(path, plt.$resourcesUrl$);\n    return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nconst setAssetPath = (path) => (plt.$resourcesUrl$ = path);\nconst createTime = (fnName, tagName = '') => {\n    if (BUILD.profile && performance.mark) {\n        const key = `st:${fnName}:${tagName}:${i++}`;\n        // Start\n        performance.mark(key);\n        // End\n        return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n    }\n    else {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    if (BUILD.profile && performance.mark) {\n        if (performance.getEntriesByName(key, 'mark').length === 0) {\n            performance.mark(key);\n        }\n        return () => {\n            if (performance.getEntriesByName(measureText, 'measure').length === 0) {\n                performance.measure(measureText, key);\n            }\n        };\n    }\n    else {\n        return () => {\n            return;\n        };\n    }\n};\nconst inspect = (ref) => {\n    const hostRef = getHostRef(ref);\n    if (!hostRef) {\n        return undefined;\n    }\n    const flags = hostRef.$flags$;\n    const hostElement = hostRef.$hostElement$;\n    return {\n        renderCount: hostRef.$renderCount$,\n        flags: {\n            hasRendered: !!(flags & 2 /* HOST_FLAGS.hasRendered */),\n            hasConnected: !!(flags & 1 /* HOST_FLAGS.hasConnected */),\n            isWaitingForChildren: !!(flags & 4 /* HOST_FLAGS.isWaitingForChildren */),\n            isConstructingInstance: !!(flags & 8 /* HOST_FLAGS.isConstructingInstance */),\n            isQueuedForUpdate: !!(flags & 16 /* HOST_FLAGS.isQueuedForUpdate */),\n            hasInitializedComponent: !!(flags & 32 /* HOST_FLAGS.hasInitializedComponent */),\n            hasLoadedComponent: !!(flags & 64 /* HOST_FLAGS.hasLoadedComponent */),\n            isWatchReady: !!(flags & 128 /* HOST_FLAGS.isWatchReady */),\n            isListenReady: !!(flags & 256 /* HOST_FLAGS.isListenReady */),\n            needsRerender: !!(flags & 512 /* HOST_FLAGS.needsRerender */),\n        },\n        instanceValues: hostRef.$instanceValues$,\n        ancestorComponent: hostRef.$ancestorComponent$,\n        hostElement,\n        lazyInstance: hostRef.$lazyInstance$,\n        vnode: hostRef.$vnode$,\n        modeName: hostRef.$modeName$,\n        onReadyPromise: hostRef.$onReadyPromise$,\n        onReadyResolve: hostRef.$onReadyResolve$,\n        onInstancePromise: hostRef.$onInstancePromise$,\n        onInstanceResolve: hostRef.$onInstanceResolve$,\n        onRenderResolve: hostRef.$onRenderResolve$,\n        queuedListeners: hostRef.$queuedListeners$,\n        rmListeners: hostRef.$rmListeners$,\n        ['s-id']: hostElement['s-id'],\n        ['s-cr']: hostElement['s-cr'],\n        ['s-lr']: hostElement['s-lr'],\n        ['s-p']: hostElement['s-p'],\n        ['s-rc']: hostElement['s-rc'],\n        ['s-sc']: hostElement['s-sc'],\n    };\n};\nconst installDevTools = () => {\n    if (BUILD.devTools) {\n        const stencil = (win.stencil = win.stencil || {});\n        const originalInspect = stencil.inspect;\n        stencil.inspect = (ref) => {\n            let result = inspect(ref);\n            if (!result && typeof originalInspect === 'function') {\n                result = originalInspect(ref);\n            }\n            return result;\n        };\n    }\n};\nconst CONTENT_REF_ID = 'r';\nconst ORG_LOCATION_ID = 'o';\nconst SLOT_NODE_ID = 's';\nconst TEXT_NODE_ID = 't';\nconst HYDRATE_ID = 's-id';\nconst HYDRATED_STYLE_ID = 'sty-id';\nconst HYDRATE_CHILD_ID = 'c-id';\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\n/**\n * Constant for styles to be globally applied to `slot-fb` elements for pseudo-slot behavior.\n *\n * Two cascading rules must be used instead of a `:not()` selector due to Stencil browser\n * support as of Stencil v4.\n */\nconst SLOT_FB_CSS = 'slot-fb{display:contents}slot-fb[hidden]{display:none}';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\nconst FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n    'formAssociatedCallback',\n    'formResetCallback',\n    'formDisabledCallback',\n    'formStateRestoreCallback',\n];\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\nconst isDef = (v) => v != null;\n/**\n * Check whether a value is a 'complex type', defined here as an object or a\n * function.\n *\n * @param o the value to check\n * @returns whether it's a complex type or not\n */\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let key = null;\n    let slotName = null;\n    let simple = false;\n    let lastSimple = false;\n    const vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                else if (BUILD.isDev && typeof nodeName !== 'function' && child.$flags$ === undefined) {\n                    consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        if (BUILD.isDev && nodeName === 'input') {\n            validateInputProperties(vnodeData);\n        }\n        if (BUILD.vdomKey && vnodeData.key) {\n            key = vnodeData.key;\n        }\n        if (BUILD.slotRelocation && vnodeData.name) {\n            slotName = vnodeData.name;\n        }\n        // normalize class / className attributes\n        if (BUILD.vdomClass) {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter((k) => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    if (BUILD.isDev && vNodeChildren.some(isHost)) {\n        consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n    }\n    if (BUILD.vdomFunctional && typeof nodeName === 'function') {\n        // nodeName is a functional component\n        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    if (BUILD.vdomKey) {\n        vnode.$key$ = key;\n    }\n    if (BUILD.slotRelocation) {\n        vnode.$name$ = slotName;\n    }\n    return vnode;\n};\n/**\n * A utility function for creating a virtual DOM node from a tag and some\n * possible text content.\n *\n * @param tag the tag for this element\n * @param text possible text content for the node\n * @returns a newly-minted virtual DOM node\n */\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    if (BUILD.vdomAttribute) {\n        vnode.$attrs$ = null;\n    }\n    if (BUILD.vdomKey) {\n        vnode.$key$ = null;\n    }\n    if (BUILD.slotRelocation) {\n        vnode.$name$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\n/**\n * Check whether a given node is a Host node or not\n *\n * @param node the virtual DOM node to check\n * @returns whether it's a Host node or not\n */\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Implementation of {@link d.FunctionalUtilities} for Stencil's VDom.\n *\n * Note that these functions convert from {@link d.VNode} to\n * {@link d.ChildNode} to give functional component developers a friendly\n * interface.\n */\nconst vdomFnUtils = {\n    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),\n};\n/**\n * Convert a {@link d.VNode} to a {@link d.ChildNode} in order to present a\n * friendlier public interface (hence, 'convertToPublic').\n *\n * @param node the virtual DOM node to convert\n * @returns a converted child node\n */\nconst convertToPublic = (node) => ({\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$,\n});\n/**\n * Convert a {@link d.ChildNode} back to an equivalent {@link d.VNode} in\n * order to use the resulting object in the virtual DOM. The initial object was\n * likely created as part of presenting a public API, so converting it back\n * involved making it 'private' again (hence, `convertToPrivate`).\n *\n * @param node the child node to convert\n * @returns a converted virtual DOM node\n */\nconst convertToPrivate = (node) => {\n    if (typeof node.vtag === 'function') {\n        const vnodeData = Object.assign({}, node.vattrs);\n        if (node.vkey) {\n            vnodeData.key = node.vkey;\n        }\n        if (node.vname) {\n            vnodeData.name = node.vname;\n        }\n        return h(node.vtag, vnodeData, ...(node.vchildren || []));\n    }\n    const vnode = newVNode(node.vtag, node.vtext);\n    vnode.$attrs$ = node.vattrs;\n    vnode.$children$ = node.vchildren;\n    vnode.$key$ = node.vkey;\n    vnode.$name$ = node.vname;\n    return vnode;\n};\n/**\n * Validates the ordering of attributes on an input element\n *\n * @param inputElm the element to validate\n */\nconst validateInputProperties = (inputElm) => {\n    const props = Object.keys(inputElm);\n    const value = props.indexOf('value');\n    if (value === -1) {\n        return;\n    }\n    const typeIndex = props.indexOf('type');\n    const minIndex = props.indexOf('min');\n    const maxIndex = props.indexOf('max');\n    const stepIndex = props.indexOf('step');\n    if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n        consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n    }\n};\n/**\n * Entrypoint of the client-side hydration process. Facilitates calls to hydrate the\n * document and all its nodes.\n *\n * This process will also reconstruct the shadow root and slot DOM nodes for components using shadow DOM.\n *\n * @param hostElm The element to hydrate.\n * @param tagName The element's tag name.\n * @param hostId The host ID assigned to the element by the server.\n * @param hostRef The host reference for the element.\n */\nconst initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n    const endHydrate = createTime('hydrateClient', tagName);\n    const shadowRoot = hostElm.shadowRoot;\n    const childRenderNodes = [];\n    const slotNodes = [];\n    const shadowRootNodes = BUILD.shadowDom && shadowRoot ? [] : null;\n    const vnode = (hostRef.$vnode$ = newVNode(tagName, null));\n    if (!plt.$orgLocNodes$) {\n        initializeDocumentHydrate(doc.body, (plt.$orgLocNodes$ = new Map()));\n    }\n    hostElm[HYDRATE_ID] = hostId;\n    hostElm.removeAttribute(HYDRATE_ID);\n    clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n    childRenderNodes.map((c) => {\n        const orgLocationId = c.$hostId$ + '.' + c.$nodeId$;\n        const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n        const node = c.$elm$;\n        // Put the node back in its original location since the native Shadow DOM\n        // can handle rendering it its correct location now\n        if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {\n            orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n        }\n        if (!shadowRoot) {\n            node['s-hn'] = tagName;\n            if (orgLocationNode) {\n                node['s-ol'] = orgLocationNode;\n                node['s-ol']['s-nr'] = node;\n            }\n        }\n        plt.$orgLocNodes$.delete(orgLocationId);\n    });\n    if (BUILD.shadowDom && shadowRoot) {\n        shadowRootNodes.map((shadowRootNode) => {\n            if (shadowRootNode) {\n                shadowRoot.appendChild(shadowRootNode);\n            }\n        });\n    }\n    endHydrate();\n};\n/**\n * Recursively constructs the virtual node tree for a host element and its children.\n * The tree is constructed by parsing the annotations set on the nodes by the server.\n *\n * In addition to constructing the vNode tree, we also track information about the node's\n * descendants like which are slots, which should exist in the shadow root, and which\n * are nodes that should be rendered as children of the parent node.\n *\n * @param parentVNode The vNode representing the parent node.\n * @param childRenderNodes An array of all child nodes in the parent's node tree.\n * @param slotNodes An array of all slot nodes in the parent's node tree.\n * @param shadowRootNodes An array all nodes that should be rendered in the shadow root in the parent's node tree.\n * @param hostElm The parent element.\n * @param node The node to construct the vNode tree for.\n * @param hostId The host ID assigned to the element by the server.\n */\nconst clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n    let childNodeType;\n    let childIdSplt;\n    let childVNode;\n    let i;\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n        if (childNodeType) {\n            // got the node data from the element's attribute\n            // `${hostId}.${nodeId}.${depth}.${index}`\n            childIdSplt = childNodeType.split('.');\n            if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {\n                childVNode = {\n                    $flags$: 0,\n                    $hostId$: childIdSplt[0],\n                    $nodeId$: childIdSplt[1],\n                    $depth$: childIdSplt[2],\n                    $index$: childIdSplt[3],\n                    $tag$: node.tagName.toLowerCase(),\n                    $elm$: node,\n                    $attrs$: null,\n                    $children$: null,\n                    $key$: null,\n                    $name$: null,\n                    $text$: null,\n                };\n                childRenderNodes.push(childVNode);\n                node.removeAttribute(HYDRATE_CHILD_ID);\n                // this is a new child vnode\n                // so ensure its parent vnode has the vchildren array\n                if (!parentVNode.$children$) {\n                    parentVNode.$children$ = [];\n                }\n                // add our child vnode to a specific index of the vnode's children\n                parentVNode.$children$[childVNode.$index$] = childVNode;\n                // this is now the new parent vnode for all the next child checks\n                parentVNode = childVNode;\n                if (shadowRootNodes && childVNode.$depth$ === '0') {\n                    shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                }\n            }\n        }\n        // recursively drill down, end to start so we can remove nodes\n        for (i = node.childNodes.length - 1; i >= 0; i--) {\n            clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);\n        }\n        if (node.shadowRoot) {\n            // keep drilling down through the shadow root nodes\n            for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {\n                clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`\n        childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {\n            // comment node for either the host id or a 0 host id\n            childNodeType = childIdSplt[0];\n            childVNode = {\n                $flags$: 0,\n                $hostId$: childIdSplt[1],\n                $nodeId$: childIdSplt[2],\n                $depth$: childIdSplt[3],\n                $index$: childIdSplt[4],\n                $elm$: node,\n                $attrs$: null,\n                $children$: null,\n                $key$: null,\n                $name$: null,\n                $tag$: null,\n                $text$: null,\n            };\n            if (childNodeType === TEXT_NODE_ID) {\n                childVNode.$elm$ = node.nextSibling;\n                if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* NODE_TYPE.TextNode */) {\n                    childVNode.$text$ = childVNode.$elm$.textContent;\n                    childRenderNodes.push(childVNode);\n                    // remove the text comment since it's no longer needed\n                    node.remove();\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                    if (shadowRootNodes && childVNode.$depth$ === '0') {\n                        shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                    }\n                }\n            }\n            else if (childVNode.$hostId$ === hostId) {\n                // this comment node is specifically for this host id\n                if (childNodeType === SLOT_NODE_ID) {\n                    // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;\n                    childVNode.$tag$ = 'slot';\n                    if (childIdSplt[5]) {\n                        node['s-sn'] = childVNode.$name$ = childIdSplt[5];\n                    }\n                    else {\n                        node['s-sn'] = '';\n                    }\n                    node['s-sr'] = true;\n                    if (BUILD.shadowDom && shadowRootNodes) {\n                        // browser support shadowRoot and this is a shadow dom component\n                        // create an actual slot element\n                        childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n                        if (childVNode.$name$) {\n                            // add the slot name attribute\n                            childVNode.$elm$.setAttribute('name', childVNode.$name$);\n                        }\n                        // insert the new slot element before the slot comment\n                        node.parentNode.insertBefore(childVNode.$elm$, node);\n                        // remove the slot comment since it's not needed for shadow\n                        node.remove();\n                        if (childVNode.$depth$ === '0') {\n                            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                        }\n                    }\n                    slotNodes.push(childVNode);\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                }\n                else if (childNodeType === CONTENT_REF_ID) {\n                    // `${CONTENT_REF_ID}.${hostId}`;\n                    if (BUILD.shadowDom && shadowRootNodes) {\n                        // remove the content ref comment since it's not needed for shadow\n                        node.remove();\n                    }\n                    else if (BUILD.slotRelocation) {\n                        hostElm['s-cr'] = node;\n                        node['s-cn'] = true;\n                    }\n                }\n            }\n        }\n    }\n    else if (parentVNode && parentVNode.$tag$ === 'style') {\n        const vnode = newVNode(null, node.textContent);\n        vnode.$elm$ = node;\n        vnode.$index$ = '0';\n        parentVNode.$children$ = [vnode];\n    }\n};\n/**\n * Recursively locate any comments representing an original location for a node in a node's\n * children or shadowRoot children.\n *\n * @param node The node to search.\n * @param orgLocNodes A map of the original location annotation and the current node being searched.\n */\nconst initializeDocumentHydrate = (node, orgLocNodes) => {\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        let i = 0;\n        for (; i < node.childNodes.length; i++) {\n            initializeDocumentHydrate(node.childNodes[i], orgLocNodes);\n        }\n        if (node.shadowRoot) {\n            for (i = 0; i < node.shadowRoot.childNodes.length; i++) {\n                initializeDocumentHydrate(node.shadowRoot.childNodes[i], orgLocNodes);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        const childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[0] === ORG_LOCATION_ID) {\n            orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);\n            node.nodeValue = '';\n            // useful to know if the original location is\n            // the root light-dom of a shadow dom component\n            node['s-en'] = childIdSplt[3];\n        }\n    }\n};\n// Private\nconst computeMode = (elm) => modeResolutionChain.map((h) => h(elm)).find((m) => !!m);\n// Public\nconst setMode = (handler) => modeResolutionChain.push(handler);\nconst getMode = (ref) => getHostRef(ref).$modeName$;\n/**\n * Parse a new property value for a given property type.\n *\n * While the prop value can reasonably be expected to be of `any` type as far as TypeScript's type checker is concerned,\n * it is not safe to assume that the string returned by evaluating `typeof propValue` matches:\n *   1. `any`, the type given to `propValue` in the function signature\n *   2. the type stored from `propType`.\n *\n * This function provides the capability to parse/coerce a property's value to potentially any other JavaScript type.\n *\n * Property values represented in TSX preserve their type information. In the example below, the number 0 is passed to\n * a component. This `propValue` will preserve its type information (`typeof propValue === 'number'`). Note that is\n * based on the type of the value being passed in, not the type declared of the class member decorated with `@Prop`.\n * ```tsx\n * <my-cmp prop-val={0}></my-cmp>\n * ```\n *\n * HTML prop values on the other hand, will always a string\n *\n * @param propValue the new value to coerce to some type\n * @param propType the type of the prop, expressed as a binary number\n * @returns the parsed/coerced value\n */\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (BUILD.propBoolean && propType & 4 /* MEMBER_FLAGS.Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (BUILD.propNumber && propType & 2 /* MEMBER_FLAGS.Number */) {\n            // force it to be a number\n            return parseFloat(propValue);\n        }\n        if (BUILD.propString && propType & 1 /* MEMBER_FLAGS.String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getElement = (ref) => (BUILD.lazyLoad ? getHostRef(ref).$hostElement$ : ref);\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            if (BUILD.isDev && !elm.isConnected) {\n                consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n            }\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* EVENT_FLAGS.Bubbles */),\n                composed: !!(flags & 2 /* EVENT_FLAGS.Composed */),\n                cancelable: !!(flags & 1 /* EVENT_FLAGS.Cancellable */),\n                detail,\n            });\n        },\n    };\n};\n/**\n * Helper function to create & dispatch a custom Event on a provided target\n * @param elm the target of the Event\n * @param name the name to give the custom Event\n * @param opts options for configuring a custom Event\n * @returns the custom Event\n */\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst rootAppliedStyles = /*@__PURE__*/ new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructableStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        if (typeof style === 'string') {\n            style = cssText;\n        }\n        else {\n            style.replaceSync(cssText);\n        }\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode) => {\n    var _a;\n    const scopeId = getScopeId(cmpMeta, mode);\n    const style = styles.get(scopeId);\n    if (!BUILD.attachStyles) {\n        return scopeId;\n    }\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* NODE_TYPE.DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                if (BUILD.hydrateClientSide &&\n                    styleContainerNode.host &&\n                    (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId}\"]`))) {\n                    // This is only happening on native shadow-dom, do not needs CSS var shim\n                    styleElm.innerHTML = style;\n                }\n                else {\n                    styleElm = doc.createElement('style');\n                    styleElm.innerHTML = style;\n                    // Apply CSP nonce to the style tag if it exists\n                    const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                    if (nonce != null) {\n                        styleElm.setAttribute('nonce', nonce);\n                    }\n                    if (BUILD.hydrateServerSide || BUILD.hotModuleReplacement) {\n                        styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId);\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                // Add styles for `slot-fb` elements if we're using slots outside the Shadow DOM\n                if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {\n                    styleElm.innerHTML += SLOT_FB_CSS;\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (BUILD.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(BUILD.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$);\n    if ((BUILD.shadowDom || BUILD.scoped) && BUILD.cssAnnotations && flags & 10 /* CMP_FLAGS.needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n        if (BUILD.scoped && flags & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n            elm.classList.add(scopeId + '-s');\n        }\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (BUILD.mode && mode && cmp.$flags$ & 32 /* CMP_FLAGS.hasMode */ ? cmp.$tagName$ + '-' + mode : cmp.$tagName$);\nconst convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, '$1{');\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n/**\n * When running a VDom render set properties present on a VDom node onto the\n * corresponding HTML element.\n *\n * Note that this function has special functionality for the `class`,\n * `style`, `key`, and `ref` attributes, as well as event handlers (like\n * `onClick`, etc). All others are just passed through as-is.\n *\n * @param elm the HTMLElement onto which attributes should be set\n * @param memberName the name of the attribute to set\n * @param oldValue the old value for the attribute\n * @param newValue the new value for the attribute\n * @param isSvg whether we're in an svg context or not\n * @param flags bitflags for Vdom variables\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if (BUILD.vdomClass && memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n        }\n        else if (BUILD.vdomStyle && memberName === 'style') {\n            // update style attribute, css properties and values\n            if (BUILD.updatable) {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (!BUILD.hydrateServerSide && prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (!BUILD.hydrateServerSide && prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (BUILD.vdomKey && memberName === 'key')\n            ;\n        else if (BUILD.vdomRef && memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if (BUILD.vdomListener &&\n            (BUILD.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) &&\n            memberName[0] === 'o' &&\n            memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue || newValue) {\n                // Need to account for \"capture\" events.\n                // If the event name ends with \"Capture\", we'll update the name to remove\n                // the \"Capture\" suffix and make sure the event listener is setup to handle the capture event.\n                const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n                // Make sure we only replace the last instance of \"Capture\"\n                memberName = memberName.replace(CAPTURE_EVENT_REGEX, '');\n                if (oldValue) {\n                    plt.rel(elm, memberName, oldValue, capture);\n                }\n                if (newValue) {\n                    plt.ael(elm, memberName, newValue, capture);\n                }\n            }\n        }\n        else if (BUILD.vdomPropOrAttr) {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        const n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) {\n                    /**\n                     * in case someone tries to set a read-only property, e.g. \"namespaceURI\", we just ignore it\n                     */\n                }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            let xlink = false;\n            if (BUILD.vdomXlink) {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if (BUILD.vdomXlink && xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* VNODE_FLAGS.isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (BUILD.vdomXlink && xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\n/**\n * Parsed a string of classnames into an array\n * @param value className string, e.g. \"foo bar baz\"\n * @returns list of classes, e.g. [\"foo\", \"bar\", \"baz\"]\n */\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst CAPTURE_EVENT_SUFFIX = 'Capture';\nconst CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + '$');\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* NODE_TYPE.DocumentFragment */ && newVnode.$elm$.host\n        ? newVnode.$elm$.host\n        : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    if (BUILD.updatable) {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\n/**\n * Create a DOM Node corresponding to one of the children of a given VNode.\n *\n * @param oldParentVNode the parent VNode from the previous render\n * @param newParentVNode the parent VNode from the current render\n * @param childIndex the index of the VNode, in the _new_ parent node's\n * children, for which we will create a new DOM node\n * @param parentElm the parent DOM node which our new node will be a child of\n * @returns the newly created node\n */\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    const newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    let oldVNode;\n    if (BUILD.slotRelocation && !useNativeShadowDom) {\n        // remember for later we need to check to relocate nodes\n        checkSlotRelocate = true;\n        if (newVNode.$tag$ === 'slot') {\n            if (scopeId) {\n                // scoped css needs to add its scoped id to the parent element\n                parentElm.classList.add(scopeId + '-s');\n            }\n            newVNode.$flags$ |= newVNode.$children$\n                ? // slot element has fallback content\n                    2 /* VNODE_FLAGS.isSlotFallback */\n                : // slot element does not have fallback content\n                    1 /* VNODE_FLAGS.isSlotReference */;\n        }\n    }\n    if (BUILD.isDev && newVNode.$elm$) {\n        consoleDevError(`The JSX ${newVNode.$text$ !== null ? `\"${newVNode.$text$}\" text` : `\"${newVNode.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`);\n    }\n    if (BUILD.vdomText && newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else if (BUILD.slotRelocation && newVNode.$flags$ & 1 /* VNODE_FLAGS.isSlotReference */) {\n        // create a slot reference node\n        elm = newVNode.$elm$ =\n            BUILD.isDebug || BUILD.hydrateServerSide ? slotReferenceDebugNode(newVNode) : doc.createTextNode('');\n    }\n    else {\n        if (BUILD.svg && !isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (BUILD.svg\n            ? doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */\n                ? 'slot-fb'\n                : newVNode.$tag$)\n            : doc.createElement(BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */\n                ? 'slot-fb'\n                : newVNode.$tag$));\n        if (BUILD.svg && isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        if (BUILD.vdomAttribute) {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if ((BUILD.shadowDom || BUILD.scoped) && isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i, elm);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        if (BUILD.svg) {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    // This needs to always happen so we can hide nodes that are projected\n    // to another component but don't end up in a slot\n    elm['s-hn'] = hostTagName;\n    if (BUILD.slotRelocation) {\n        if (newVNode.$flags$ & (2 /* VNODE_FLAGS.isSlotFallback */ | 1 /* VNODE_FLAGS.isSlotReference */)) {\n            // remember the content reference comment\n            elm['s-sr'] = true;\n            // remember the content reference comment\n            elm['s-cr'] = contentRef;\n            // remember the slot name, or empty string for default slot\n            elm['s-sn'] = newVNode.$name$ || '';\n            // check if we've got an old vnode for this slot\n            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n                if (BUILD.experimentalSlotFixes) {\n                    // we've got an old slot vnode and the wrapper is being replaced\n                    // so let's move the old slot content to the root of the element currently being rendered\n                    relocateToHostRoot(oldParentVNode.$elm$);\n                }\n                else {\n                    // we've got an old slot vnode and the wrapper is being replaced\n                    // so let's move the old slot content back to its original location\n                    putBackInOriginalLocation(oldParentVNode.$elm$, false);\n                }\n            }\n        }\n    }\n    return elm;\n};\n/**\n * Relocates all child nodes of an element that were a part of a previous slot relocation\n * to the root of the Stencil component currently being rendered. This happens when a parent\n * element of a slot reference node dynamically changes and triggers a re-render. We cannot use\n * `putBackInOriginalLocation()` because that may relocate nodes to elements that will not be re-rendered\n * and so they will not be relocated again.\n *\n * @param parentElm The element potentially containing relocated nodes.\n */\nconst relocateToHostRoot = (parentElm) => {\n    plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n    const host = parentElm.closest(hostTagName.toLowerCase());\n    if (host != null) {\n        const contentRefNode = Array.from(host.childNodes).find((ref) => ref['s-cr']);\n        const childNodeArray = Array.from(parentElm.childNodes);\n        // If we have a content ref, we need to invert the order of the nodes we're relocating\n        // to preserve the correct order of elements in the DOM on future relocations\n        for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n            // Only relocate nodes that were slotted in\n            if (childNode['s-sh'] != null) {\n                host.insertBefore(childNode, contentRefNode !== null && contentRefNode !== void 0 ? contentRefNode : null);\n                // Reset so we can correctly move the node around again.\n                childNode['s-sh'] = undefined;\n                // Need to tell the render pipeline to check to relocate slot content again\n                checkSlotRelocate = true;\n            }\n        }\n    }\n    plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n};\nconst putBackInOriginalLocation = (parentElm, recursive) => {\n    plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n    const oldSlotChildNodes = parentElm.childNodes;\n    for (let i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n        const childNode = oldSlotChildNodes[i];\n        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n            // and relocate it back to it's original location\n            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n            // remove the old original location comment entirely\n            // later on the patch function will know what to do\n            // and move this to the correct spot if need be\n            childNode['s-ol'].remove();\n            childNode['s-ol'] = undefined;\n            // Reset so we can correctly move the node around again.\n            childNode['s-sh'] = undefined;\n            checkSlotRelocate = true;\n        }\n        if (recursive) {\n            putBackInOriginalLocation(childNode, recursive);\n        }\n    }\n    plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n};\n/**\n * Create DOM nodes corresponding to a list of {@link d.Vnode} objects and\n * add them to the DOM in the appropriate place.\n *\n * @param parentElm the DOM node which should be used as a parent for the new\n * DOM nodes\n * @param before a child of the `parentElm` which the new children should be\n * inserted before (optional)\n * @param parentVNode the parent virtual DOM node\n * @param vnodes the new child virtual DOM nodes to produce DOM nodes for\n * @param startIdx the index in the child virtual DOM nodes at which to start\n * creating DOM nodes (inclusive)\n * @param endIdx the index in the child virtual DOM nodes at which to stop\n * creating DOM nodes (inclusive)\n */\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = ((BUILD.slotRelocation && parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);\n    let childNode;\n    if (BUILD.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx, parentElm);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, BUILD.slotRelocation ? referenceNode(before) : before);\n            }\n        }\n    }\n};\n/**\n * Remove the DOM elements corresponding to a list of {@link d.VNode} objects.\n * This can be used to, for instance, clean up after a list of children which\n * should no longer be shown.\n *\n * This function also handles some of Stencil's slot relocation logic.\n *\n * @param vnodes a list of virtual DOM nodes to remove\n * @param startIdx the index at which to start removing nodes (inclusive)\n * @param endIdx the index at which to stop removing nodes (inclusive)\n */\nconst removeVnodes = (vnodes, startIdx, endIdx) => {\n    for (let index = startIdx; index <= endIdx; ++index) {\n        const vnode = vnodes[index];\n        if (vnode) {\n            const elm = vnode.$elm$;\n            nullifyVNodeRefs(vnode);\n            if (elm) {\n                if (BUILD.slotRelocation) {\n                    // we're removing this element\n                    // so it's possible we need to show slot fallback content now\n                    checkSlotFallbackVisibility = true;\n                    if (elm['s-ol']) {\n                        // remove the original location comment\n                        elm['s-ol'].remove();\n                    }\n                    else {\n                        // it's possible that child nodes of the node\n                        // that's being removed are slot nodes\n                        putBackInOriginalLocation(elm, true);\n                    }\n                }\n                // remove the vnode's element from the dom\n                elm.remove();\n            }\n        }\n    }\n};\n/**\n * Reconcile the children of a new VNode with the children of an old VNode by\n * traversing the two collections of children, identifying nodes that are\n * conserved or changed, calling out to `patch` to make any necessary\n * updates to the DOM, and rearranging DOM nodes as needed.\n *\n * The algorithm for reconciling children works by analyzing two 'windows' onto\n * the two arrays of children (`oldCh` and `newCh`). We keep track of the\n * 'windows' by storing start and end indices and references to the\n * corresponding array entries. Initially the two 'windows' are basically equal\n * to the entire array, but we progressively narrow the windows until there are\n * no children left to update by doing the following:\n *\n * 1. Skip any `null` entries at the beginning or end of the two arrays, so\n *    that if we have an initial array like the following we'll end up dealing\n *    only with a window bounded by the highlighted elements:\n *\n *    [null, null, VNode1 , ... , VNode2, null, null]\n *                 ^^^^^^         ^^^^^^\n *\n * 2. Check to see if the elements at the head and tail positions are equal\n *    across the windows. This will basically detect elements which haven't\n *    been added, removed, or changed position, i.e. if you had the following\n *    VNode elements (represented as HTML):\n *\n *    oldVNode: `<div><p><span>HEY</span></p></div>`\n *    newVNode: `<div><p><span>THERE</span></p></div>`\n *\n *    Then when comparing the children of the `<div>` tag we check the equality\n *    of the VNodes corresponding to the `<p>` tags and, since they are the\n *    same tag in the same position, we'd be able to avoid completely\n *    re-rendering the subtree under them with a new DOM element and would just\n *    call out to `patch` to handle reconciling their children and so on.\n *\n * 3. Check, for both windows, to see if the element at the beginning of the\n *    window corresponds to the element at the end of the other window. This is\n *    a heuristic which will let us identify _some_ situations in which\n *    elements have changed position, for instance it _should_ detect that the\n *    children nodes themselves have not changed but merely moved in the\n *    following example:\n *\n *    oldVNode: `<div><element-one /><element-two /></div>`\n *    newVNode: `<div><element-two /><element-one /></div>`\n *\n *    If we find cases like this then we also need to move the concrete DOM\n *    elements corresponding to the moved children to write the re-order to the\n *    DOM.\n *\n * 4. Finally, if VNodes have the `key` attribute set on them we check for any\n *    nodes in the old children which have the same key as the first element in\n *    our window on the new children. If we find such a node we handle calling\n *    out to `patch`, moving relevant DOM nodes, and so on, in accordance with\n *    what we find.\n *\n * Finally, once we've narrowed our 'windows' to the point that either of them\n * collapse (i.e. they have length 0) we then handle any remaining VNode\n * insertion or deletion that needs to happen to get a DOM state that correctly\n * reflects the new child VNodes. If, for instance, after our window on the old\n * children has collapsed we still have more nodes on the new children that\n * we haven't dealt with yet then we need to add them, or if the new children\n * collapse but we still have unhandled _old_ children then we need to make\n * sure the corresponding DOM nodes are removed.\n *\n * @param parentElm the node into which the parent VNode is rendered\n * @param oldCh the old children of the parent node\n * @param newVNode the new VNode which will replace the parent\n * @param newCh the new children of the parent node\n * @param isInitialRender whether or not this is the first render of the vdom\n */\nconst updateChildren = (parentElm, oldCh, newVNode, newCh, isInitialRender = false) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let idxInOld = 0;\n    let i = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    let elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // VNode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n            // if the start nodes are the same then we should patch the new VNode\n            // onto the old one, and increment our `newStartIdx` and `oldStartIdx`\n            // indices to reflect that. We don't need to move any DOM Nodes around\n            // since things are matched up in order.\n            patch(oldStartVnode, newStartVnode, isInitialRender);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n            // likewise, if the end nodes are the same we patch new onto old and\n            // decrement our end indices, and also likewise in this case we don't\n            // need to move any DOM Nodes.\n            patch(oldEndVnode, newEndVnode, isInitialRender);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n            // case: \"Vnode moved right\"\n            //\n            // We've found that the last node in our window on the new children is\n            // the same VNode as the _first_ node in our window on the old children\n            // we're dealing with now. Visually, this is the layout of these two\n            // nodes:\n            //\n            // newCh: [..., newStartVnode , ... , newEndVnode , ...]\n            //                                    ^^^^^^^^^^^\n            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]\n            //              ^^^^^^^^^^^^^\n            //\n            // In this situation we need to patch `newEndVnode` onto `oldStartVnode`\n            // and move the DOM element for `oldStartVnode`.\n            if (BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n            }\n            patch(oldStartVnode, newEndVnode, isInitialRender);\n            // We need to move the element for `oldStartVnode` into a position which\n            // will be appropriate for `newEndVnode`. For this we can use\n            // `.insertBefore` and `oldEndVnode.$elm$.nextSibling`. If there is a\n            // sibling for `oldEndVnode.$elm$` then we want to move the DOM node for\n            // `oldStartVnode` between `oldEndVnode` and it's sibling, like so:\n            //\n            // <old-start-node />\n            // <some-intervening-node />\n            // <old-end-node />\n            // <!-- ->              <-- `oldStartVnode.$elm$` should be inserted here\n            // <next-sibling />\n            //\n            // If instead `oldEndVnode.$elm$` has no sibling then we just want to put\n            // the node for `oldStartVnode` at the end of the children of\n            // `parentElm`. Luckily, `Node.nextSibling` will return `null` if there\n            // aren't any siblings, and passing `null` to `Node.insertBefore` will\n            // append it to the children of the parent element.\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n            // case: \"Vnode moved left\"\n            //\n            // We've found that the first node in our window on the new children is\n            // the same VNode as the _last_ node in our window on the old children.\n            // Visually, this is the layout of these two nodes:\n            //\n            // newCh: [..., newStartVnode , ... , newEndVnode , ...]\n            //              ^^^^^^^^^^^^^\n            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]\n            //                                    ^^^^^^^^^^^\n            //\n            // In this situation we need to patch `newStartVnode` onto `oldEndVnode`\n            // (which will handle updating any changed attributes, reconciling their\n            // children etc) but we also need to move the DOM node to which\n            // `oldEndVnode` corresponds.\n            if (BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n            }\n            patch(oldEndVnode, newStartVnode, isInitialRender);\n            // We've already checked above if `oldStartVnode` and `newStartVnode` are\n            // the same node, so since we're here we know that they are not. Thus we\n            // can move the element for `oldEndVnode` _before_ the element for\n            // `oldStartVnode`, leaving `oldStartVnode` to be reconciled in the\n            // future.\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // Here we do some checks to match up old and new nodes based on the\n            // `$key$` attribute, which is set by putting a `key=\"my-key\"` attribute\n            // in the JSX for a DOM element in the implementation of a Stencil\n            // component.\n            //\n            // First we check to see if there are any nodes in the array of old\n            // children which have the same key as the first node in the new\n            // children.\n            idxInOld = -1;\n            if (BUILD.vdomKey) {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (BUILD.vdomKey && idxInOld >= 0) {\n                // We found a node in the old children which matches up with the first\n                // node in the new children! So let's deal with that\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    // the tag doesn't match so we'll need a new DOM element\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n                }\n                else {\n                    patch(elmToMove, newStartVnode, isInitialRender);\n                    // invalidate the matching old node so that we won't try to update it\n                    // again later on\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // We either didn't find an element in the old children that matches\n                // the key of the first new child OR the build is not using `key`\n                // attributes at all. In either case we need to create a new element\n                // for the new node.\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                // if we created a new node then handle inserting it to the DOM\n                if (BUILD.slotRelocation) {\n                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n                }\n                else {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        // we have some more new nodes to add which don't match up with old nodes\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (BUILD.updatable && newStartIdx > newEndIdx) {\n        // there are nodes in the `oldCh` array which no longer correspond to nodes\n        // in the new array, so lets remove them (which entails cleaning up the\n        // relevant DOM nodes)\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\n/**\n * Compare two VNodes to determine if they are the same\n *\n * **NB**: This function is an equality _heuristic_ based on the available\n * information set on the two VNodes and can be misleading under certain\n * circumstances. In particular, if the two nodes do not have `key` attrs\n * (available under `$key$` on VNodes) then the function falls back on merely\n * checking that they have the same tag.\n *\n * So, in other words, if `key` attrs are not set on VNodes which may be\n * changing order within a `children` array or something along those lines then\n * we could obtain a false negative and then have to do needless re-rendering\n * (i.e. we'd say two VNodes aren't equal when in fact they should be).\n *\n * @param leftVNode the first VNode to check\n * @param rightVNode the second VNode to check\n * @param isInitialRender whether or not this is the first render of the vdom\n * @returns whether they're equal or not\n */\nconst isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (leftVNode.$tag$ === rightVNode.$tag$) {\n        if (BUILD.slotRelocation && leftVNode.$tag$ === 'slot') {\n            return leftVNode.$name$ === rightVNode.$name$;\n        }\n        // this will be set if JSX tags in the build have `key` attrs set on them\n        // we only want to check this if we're not on the first render since on\n        // first render `leftVNode.$key$` will always be `null`, so we can be led\n        // astray and, for instance, accidentally delete a DOM node that we want to\n        // keep around.\n        if (BUILD.vdomKey && !isInitialRender) {\n            return leftVNode.$key$ === rightVNode.$key$;\n        }\n        return true;\n    }\n    return false;\n};\nconst referenceNode = (node) => {\n    // this node was relocated to a new location in the dom\n    // because of some other component's slot\n    // but we still have an html comment in place of where\n    // it's original location was according to it's original vdom\n    return (node && node['s-ol']) || node;\n};\nconst parentReferenceNode = (node) => (node['s-ol'] ? node['s-ol'] : node).parentNode;\n/**\n * Handle reconciling an outdated VNode with a new one which corresponds to\n * it. This function handles flushing updates to the DOM and reconciling the\n * children of the two nodes (if any).\n *\n * @param oldVNode an old VNode whose DOM element and children we want to update\n * @param newVNode a new VNode representing an updated version of the old one\n * @param isInitialRender whether or not this is the first render of the vdom\n */\nconst patch = (oldVNode, newVNode, isInitialRender = false) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    let defaultHolder;\n    if (!BUILD.vdomText || text === null) {\n        if (BUILD.svg) {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        if (BUILD.vdomAttribute || BUILD.reflect) {\n            if (BUILD.slot && tag === 'slot' && !useNativeShadowDom) {\n                if (BUILD.experimentalSlotFixes && oldVNode.$name$ !== newVNode.$name$) {\n                    newVNode.$elm$['s-sn'] = newVNode.$name$ || '';\n                    relocateToHostRoot(newVNode.$elm$.parentElement);\n                }\n            }\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (BUILD.updatable && oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            // so we need to call `updateChildren` to reconcile them\n            updateChildren(elm, oldChildren, newVNode, newChildren, isInitialRender);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (BUILD.updatable && BUILD.vdomText && oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (BUILD.updatable && oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (BUILD.svg && isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if (BUILD.vdomText && BUILD.slotRelocation && (defaultHolder = elm['s-cr'])) {\n        // this element has slotted content\n        defaultHolder.parentNode.textContent = text;\n    }\n    else if (BUILD.vdomText && oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\n/**\n * Adjust the `.hidden` property as-needed on any nodes in a DOM subtree which\n * are slot fallbacks nodes.\n *\n * A slot fallback node should be visible by default. Then, it should be\n * conditionally hidden if:\n *\n * - it has a sibling with a `slot` property set to its slot name or if\n * - it is a default fallback slot node, in which case we hide if it has any\n *   content\n *\n * @param elm the element of interest\n */\nconst updateFallbackSlotVisibility = (elm) => {\n    const childNodes = elm.childNodes;\n    for (const childNode of childNodes) {\n        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n            if (childNode['s-sr']) {\n                // this is a slot fallback node\n                // get the slot name for this slot reference node\n                const slotName = childNode['s-sn'];\n                // by default always show a fallback slot node\n                // then hide it if there are other slots in the light dom\n                childNode.hidden = false;\n                // we need to check all of its sibling nodes in order to see if\n                // `childNode` should be hidden\n                for (const siblingNode of childNodes) {\n                    // Don't check the node against itself\n                    if (siblingNode !== childNode) {\n                        if (siblingNode['s-hn'] !== childNode['s-hn'] || slotName !== '') {\n                            // this sibling node is from a different component OR is a named\n                            // fallback slot node\n                            if (siblingNode.nodeType === 1 /* NODE_TYPE.ElementNode */ &&\n                                (slotName === siblingNode.getAttribute('slot') || slotName === siblingNode['s-sn'])) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                        else {\n                            // this is a default fallback slot node\n                            // any element or text node (with content)\n                            // should hide the default fallback slot node\n                            if (siblingNode.nodeType === 1 /* NODE_TYPE.ElementNode */ ||\n                                (siblingNode.nodeType === 3 /* NODE_TYPE.TextNode */ && siblingNode.textContent.trim() !== '')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            // keep drilling down\n            updateFallbackSlotVisibility(childNode);\n        }\n    }\n};\n/**\n * Component-global information about nodes which are either currently being\n * relocated or will be shortly.\n */\nconst relocateNodes = [];\n/**\n * Mark the contents of a slot for relocation via adding references to them to\n * the {@link relocateNodes} data structure. The actual work of relocating them\n * will then be handled in {@link renderVdom}.\n *\n * @param elm a render node whose child nodes need to be relocated\n */\nconst markSlotContentForRelocation = (elm) => {\n    // tslint:disable-next-line: prefer-const\n    let node;\n    let hostContentNodes;\n    let j;\n    for (const childNode of elm.childNodes) {\n        // we need to find child nodes which are slot references so we can then try\n        // to match them up with nodes that need to be relocated\n        if (childNode['s-sr'] && (node = childNode['s-cr']) && node.parentNode) {\n            // first get the content reference comment node ('s-cr'), then we get\n            // its parent, which is where all the host content is now\n            hostContentNodes = node.parentNode.childNodes;\n            const slotName = childNode['s-sn'];\n            // iterate through all the nodes under the location where the host was\n            // originally rendered\n            for (j = hostContentNodes.length - 1; j >= 0; j--) {\n                node = hostContentNodes[j];\n                // check that the node is not a content reference node or a node\n                // reference and then check that the host name does not match that of\n                // childNode.\n                // In addition, check that the slot either has not already been relocated, or\n                // that its current location's host is not childNode's host. This is essentially\n                // a check so that we don't try to relocate (and then hide) a node that is already\n                // where it should be.\n                if (!node['s-cn'] &&\n                    !node['s-nr'] &&\n                    node['s-hn'] !== childNode['s-hn'] &&\n                    (!BUILD.experimentalSlotFixes || !node['s-sh'] || node['s-sh'] !== childNode['s-hn'])) {\n                    // if `node` is located in the slot that `childNode` refers to (via the\n                    // `'s-sn'` property) then we need to relocate it from it's current spot\n                    // (under the host element parent) to the right slot location\n                    if (isNodeLocatedInSlot(node, slotName)) {\n                        // it's possible we've already decided to relocate this node\n                        let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                        // made some changes to slots\n                        // let's make sure we also double check\n                        // fallbacks are correctly hidden or shown\n                        checkSlotFallbackVisibility = true;\n                        // ensure that the slot-name attr is correct\n                        node['s-sn'] = node['s-sn'] || slotName;\n                        if (relocateNodeData) {\n                            relocateNodeData.$nodeToRelocate$['s-sh'] = childNode['s-hn'];\n                            // we marked this node for relocation previously but didn't find\n                            // out the slot reference node to which it needs to be relocated\n                            // so write it down now!\n                            relocateNodeData.$slotRefNode$ = childNode;\n                        }\n                        else {\n                            node['s-sh'] = childNode['s-hn'];\n                            // add to our list of nodes to relocate\n                            relocateNodes.push({\n                                $slotRefNode$: childNode,\n                                $nodeToRelocate$: node,\n                            });\n                        }\n                        if (node['s-sr']) {\n                            relocateNodes.map((relocateNode) => {\n                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                                    relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n                        // the node is not found within the slot (`childNode`) that we're\n                        // currently looking at, so we stick it into `relocateNodes` to\n                        // handle later. If we never find a home for this element then\n                        // we'll need to hide it\n                        relocateNodes.push({\n                            $nodeToRelocate$: node,\n                        });\n                    }\n                }\n            }\n        }\n        // if we're dealing with any type of element (capable of itself being a\n        // slot reference or containing one) then we recur\n        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n            markSlotContentForRelocation(childNode);\n        }\n    }\n};\n/**\n * Check whether a node is located in a given named slot.\n *\n * @param nodeToRelocate the node of interest\n * @param slotName the slot name to check\n * @returns whether the node is located in the slot or not\n */\nconst isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        if (nodeToRelocate.getAttribute('slot') === null && slotName === '') {\n            // if the node doesn't have a slot attribute, and the slot we're checking\n            // is not a named slot, then we assume the node should be within the slot\n            return true;\n        }\n        if (nodeToRelocate.getAttribute('slot') === slotName) {\n            return true;\n        }\n        return false;\n    }\n    if (nodeToRelocate['s-sn'] === slotName) {\n        return true;\n    }\n    return slotName === '';\n};\n/**\n * 'Nullify' any VDom `ref` callbacks on a VDom node or its children by calling\n * them with `null`. This signals that the DOM element corresponding to the VDom\n * node has been removed from the DOM.\n *\n * @param vNode a virtual DOM node\n */\nconst nullifyVNodeRefs = (vNode) => {\n    if (BUILD.vdomRef) {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n    }\n};\n/**\n * The main entry point for Stencil's virtual DOM-based rendering engine\n *\n * Given a {@link d.HostRef} container and some virtual DOM nodes, this\n * function will handle creating a virtual DOM tree with a single root, patching\n * the current virtual DOM tree onto an old one (if any), dealing with slot\n * relocation, and reflecting attributes.\n *\n * @param hostRef data needed to root and render the virtual DOM tree, such as\n * the DOM node into which it should be rendered.\n * @param renderFnResults the virtual DOM nodes to be rendered\n * @param isInitialLoad whether or not this is the first call after page load\n */\nconst renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n    var _a, _b, _c, _d, _e;\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    // if `renderFnResults` is a Host node then we can use it directly. If not,\n    // we need to call `h` again to wrap the children of our component in a\n    // 'dummy' Host node (well, an empty vnode) since `renderVdom` assumes\n    // implicitly that the top-level vdom node is 1) an only child and 2)\n    // contains attrs that need to be set on the host element.\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    // <Host> runtime check\n    if (BUILD.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n        throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n    }\n    if (BUILD.reflect && cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    // On the first render and *only* on the first render we want to check for\n    // any attributes set on the host element which are also set on the vdom\n    // node. If we find them, we override the value on the VDom node attrs with\n    // the value from the host element, which allows developers building apps\n    // with Stencil components to override e.g. the `role` attribute on a\n    // component even if it's already set on the `Host`.\n    if (isInitialLoad && rootVnode.$attrs$) {\n        for (const key of Object.keys(rootVnode.$attrs$)) {\n            // We have a special implementation in `setAccessor` for `style` and\n            // `class` which reconciles values coming from the VDom with values\n            // already present on the DOM element, so we don't want to override those\n            // attributes on the VDom tree with values from the host element if they\n            // are present.\n            //\n            // Likewise, `ref` and `key` are special internal values for the Stencil\n            // runtime and we don't want to override those either.\n            if (hostElm.hasAttribute(key) && !['key', 'ref', 'style', 'class'].includes(key)) {\n                rootVnode.$attrs$[key] = hostElm[key];\n            }\n        }\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* VNODE_FLAGS.isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (BUILD.shadowDom ? hostElm.shadowRoot || hostElm : hostElm);\n    if (BUILD.scoped || BUILD.shadowDom) {\n        scopeId = hostElm['s-sc'];\n    }\n    useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) !== 0;\n    if (BUILD.slotRelocation) {\n        contentRef = hostElm['s-cr'];\n        // always reset\n        checkSlotFallbackVisibility = false;\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode, isInitialLoad);\n    if (BUILD.slotRelocation) {\n        // while we're moving nodes around existing nodes, temporarily disable\n        // the disconnectCallback from working\n        plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n        if (checkSlotRelocate) {\n            markSlotContentForRelocation(rootVnode.$elm$);\n            for (const relocateData of relocateNodes) {\n                const nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (!nodeToRelocate['s-ol']) {\n                    // add a reference node marking this node's original location\n                    // keep a reference to this node for later lookups\n                    const orgLocationNode = BUILD.isDebug || BUILD.hydrateServerSide\n                        ? originalLocationDebugNode(nodeToRelocate)\n                        : doc.createTextNode('');\n                    orgLocationNode['s-nr'] = nodeToRelocate;\n                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);\n                }\n            }\n            for (const relocateData of relocateNodes) {\n                const nodeToRelocate = relocateData.$nodeToRelocate$;\n                const slotRefNode = relocateData.$slotRefNode$;\n                if (slotRefNode) {\n                    const parentNodeRef = slotRefNode.parentNode;\n                    // When determining where to insert content, the most simple case would be\n                    // to relocate the node immediately following the slot reference node. We do this\n                    // by getting a reference to the node immediately following the slot reference node\n                    // since we will use `insertBefore` to manipulate the DOM.\n                    //\n                    // If there is no node immediately following the slot reference node, then we will just\n                    // end up appending the node as the last child of the parent.\n                    let insertBeforeNode = slotRefNode.nextSibling;\n                    // If the node we're currently planning on inserting the new node before is an element,\n                    // we need to do some additional checks to make sure we're inserting the node in the correct order.\n                    // The use case here would be that we have multiple nodes being relocated to the same slot. So, we want\n                    // to make sure they get inserted into their new how in the same order they were declared in their original location.\n                    //\n                    // TODO(STENCIL-914): Remove `experimentalSlotFixes` check\n                    if (!BUILD.experimentalSlotFixes ||\n                        (insertBeforeNode && insertBeforeNode.nodeType === 1 /* NODE_TYPE.ElementNode */)) {\n                        let orgLocationNode = (_a = nodeToRelocate['s-ol']) === null || _a === void 0 ? void 0 : _a.previousSibling;\n                        while (orgLocationNode) {\n                            let refNode = (_b = orgLocationNode['s-nr']) !== null && _b !== void 0 ? _b : null;\n                            if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n                                refNode = refNode.nextSibling;\n                                if (!refNode || !refNode['s-nr']) {\n                                    insertBeforeNode = refNode;\n                                    break;\n                                }\n                            }\n                            orgLocationNode = orgLocationNode.previousSibling;\n                        }\n                    }\n                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) ||\n                        nodeToRelocate.nextSibling !== insertBeforeNode) {\n                        // we've checked that it's worth while to relocate\n                        // since that the node to relocate\n                        // has a different next sibling or parent relocated\n                        if (nodeToRelocate !== insertBeforeNode) {\n                            if (!BUILD.experimentalSlotFixes && !nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                                // probably a component in the index.html that doesn't have its hostname set\n                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n                            }\n                            // Add it back to the dom but in its new home\n                            // If we get to this point and `insertBeforeNode` is `null`, that means\n                            // we're just going to append the node as the last child of the parent. Passing\n                            // `null` as the second arg here will trigger that behavior.\n                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n                            // Reset the `hidden` value back to what it was defined as originally\n                            // This solves a problem where a `slot` is dynamically rendered and `hidden` may have\n                            // been set on content originally, but now it has a slot to go to so it should have\n                            // the value it was defined as having in the DOM, not what we overrode it to.\n                            if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                                nodeToRelocate.hidden = (_c = nodeToRelocate['s-ih']) !== null && _c !== void 0 ? _c : false;\n                            }\n                        }\n                    }\n                }\n                else {\n                    // this node doesn't have a slot home to go to, so let's hide it\n                    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                        // Store the initial value of `hidden` so we can reset it later when\n                        // moving nodes around.\n                        if (isInitialLoad) {\n                            nodeToRelocate['s-ih'] = (_d = nodeToRelocate.hidden) !== null && _d !== void 0 ? _d : false;\n                        }\n                        nodeToRelocate.hidden = true;\n                    }\n                }\n            }\n        }\n        if (checkSlotFallbackVisibility) {\n            updateFallbackSlotVisibility(rootVnode.$elm$);\n        }\n        // done moving nodes around\n        // allow the disconnect callback to work again\n        plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;\n        // always reset\n        relocateNodes.length = 0;\n    }\n    // Hide any elements that were projected through, but don't have a slot to go to.\n    // Only an issue if there were no \"slots\" rendered. Otherwise, nodes are hidden correctly.\n    // This _only_ happens for `scoped` components!\n    if (BUILD.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n        for (const childNode of rootVnode.$elm$.childNodes) {\n            if (childNode['s-hn'] !== hostTagName && !childNode['s-sh']) {\n                // Store the initial value of `hidden` so we can reset it later when\n                // moving nodes around.\n                if (isInitialLoad && childNode['s-ih'] == null) {\n                    childNode['s-ih'] = (_e = childNode.hidden) !== null && _e !== void 0 ? _e : false;\n                }\n                childNode.hidden = true;\n            }\n        }\n    }\n    // Clear the content ref so we don't create a memory leak\n    contentRef = undefined;\n};\n// slot comment debug nodes only created with the `--debug` flag\n// otherwise these nodes are text nodes w/out content\nconst slotReferenceDebugNode = (slotVNode) => doc.createComment(`<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : ''}> (host=${hostTagName.toLowerCase()})`);\nconst originalLocationDebugNode = (nodeToRelocate) => doc.createComment(`org-location for ` +\n    (nodeToRelocate.localName\n        ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate['s-hn']})`\n        : `[${nodeToRelocate.textContent}]`));\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (BUILD.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    if (BUILD.taskQueue && BUILD.updatable) {\n        hostRef.$flags$ |= 16 /* HOST_FLAGS.isQueuedForUpdate */;\n    }\n    if (BUILD.asyncLoading && hostRef.$flags$ & 4 /* HOST_FLAGS.isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* HOST_FLAGS.needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return BUILD.taskQueue ? writeTask(dispatch) : dispatch();\n};\n/**\n * Dispatch initial-render and update lifecycle hooks, enqueuing calls to\n * component lifecycle methods like `componentWillLoad` as well as\n * {@link updateComponent}, which will kick off the virtual DOM re-render.\n *\n * @param hostRef a reference to a host DOM node\n * @param isInitialLoad whether we're on the initial load or not\n * @returns an empty Promise which is used to enqueue a series of operations for\n * the component\n */\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const elm = hostRef.$hostElement$;\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    // We're going to use this variable together with `enqueue` to implement a\n    // little promise-based queue. We start out with it `undefined`. When we add\n    // the first function to the queue we'll set this variable to be that\n    // function's return value. When we attempt to add subsequent values to the\n    // queue we'll check that value and, if it was a `Promise`, we'll then chain\n    // the new function off of that `Promise` using `.then()`. This will give our\n    // queue two nice properties:\n    //\n    // 1. If all functions added to the queue are synchronous they'll be called\n    //    synchronously right away.\n    // 2. If all functions added to the queue are asynchronous they'll all be\n    //    called in order after `dispatchHooks` exits.\n    let maybePromise;\n    if (isInitialLoad) {\n        if (BUILD.lazyLoad && BUILD.hostListener) {\n            hostRef.$flags$ |= 256 /* HOST_FLAGS.isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = undefined;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentWillLoad');\n        if (BUILD.cmpWillLoad) {\n            // If `componentWillLoad` returns a `Promise` then we want to wait on\n            // whatever's going on in that `Promise` before we launch into\n            // rendering the component, doing other lifecycle stuff, etc. So\n            // in that case we assign the returned promise to the variable we\n            // declared above to hold a possible 'queueing' Promise\n            maybePromise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    else {\n        emitLifecycleEvent(elm, 'componentWillUpdate');\n        if (BUILD.cmpWillUpdate) {\n            // Like `componentWillLoad` above, we allow Stencil component\n            // authors to return a `Promise` from this lifecycle callback, and\n            // we specify that our runtime will wait for that `Promise` to\n            // resolve before the component re-renders. So if the method\n            // returns a `Promise` we need to keep it around!\n            maybePromise = safeCall(instance, 'componentWillUpdate');\n        }\n    }\n    emitLifecycleEvent(elm, 'componentWillRender');\n    if (BUILD.cmpWillRender) {\n        maybePromise = enqueue(maybePromise, () => safeCall(instance, 'componentWillRender'));\n    }\n    endSchedule();\n    return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\n/**\n * This function uses a Promise to implement a simple first-in, first-out queue\n * of functions to be called.\n *\n * The queue is ordered on the basis of the first argument. If it's\n * `undefined`, then nothing is on the queue yet, so the provided function can\n * be called synchronously (although note that this function may return a\n * `Promise`). The idea is that then the return value of that enqueueing\n * operation is kept around, so that if it was a `Promise` then subsequent\n * functions can be enqueued by calling this function again with that `Promise`\n * as the first argument.\n *\n * @param maybePromise either a `Promise` which should resolve before the next function is called or an 'empty' sentinel\n * @param fn a function to enqueue\n * @returns either a `Promise` or the return value of the provided function\n */\nconst enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();\n/**\n * Check that a value is a `Promise`. To check, we first see if the value is an\n * instance of the `Promise` global. In a few circumstances, in particular if\n * the global has been overwritten, this is could be misleading, so we also do\n * a little 'duck typing' check to see if the `.then` property of the value is\n * defined and a function.\n *\n * @param maybePromise it might be a promise!\n * @returns whether it is or not\n */\nconst isPromisey = (maybePromise) => maybePromise instanceof Promise ||\n    (maybePromise && maybePromise.then && typeof maybePromise.then === 'function');\n/**\n * Update a component given reference to its host elements and so on.\n *\n * @param hostRef an object containing references to the element's host node,\n * VDom nodes, and other metadata\n * @param instance a reference to the underlying host element where it will be\n * rendered\n * @param isInitialLoad whether or not this function is being called as part of\n * the first render cycle\n */\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    var _a;\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (BUILD.style && isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    if (BUILD.isDev) {\n        hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n    }\n    if (BUILD.hydrateServerSide) {\n        await callRender(hostRef, instance, elm, isInitialLoad);\n    }\n    else {\n        callRender(hostRef, instance, elm, isInitialLoad);\n    }\n    if (BUILD.isDev) {\n        hostRef.$renderCount$ = hostRef.$renderCount$ === undefined ? 1 : hostRef.$renderCount$ + 1;\n        hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n    }\n    if (BUILD.hydrateServerSide) {\n        try {\n            // manually connected child components during server-side hydrate\n            serverSideConnected(elm);\n            if (isInitialLoad) {\n                // using only during server-side hydrate\n                if (hostRef.$cmpMeta$.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                    elm['s-en'] = '';\n                }\n                else if (hostRef.$cmpMeta$.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n                    elm['s-en'] = 'c';\n                }\n            }\n        }\n        catch (e) {\n            consoleError(e, elm);\n        }\n    }\n    if (BUILD.asyncLoading && rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map((cb) => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    if (BUILD.asyncLoading) {\n        const childrenPromises = (_a = elm['s-p']) !== null && _a !== void 0 ? _a : [];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* HOST_FLAGS.isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n    else {\n        postUpdateComponent(hostRef);\n    }\n};\n/**\n * Handle making the call to the VDom renderer with the proper context given\n * various build variables\n *\n * @param hostRef an object containing references to the element's host node,\n * VDom nodes, and other metadata\n * @param instance a reference to the underlying host element where it will be\n * rendered\n * @param elm the Host element for the component\n * @param isInitialLoad whether or not this function is being called as part of\n * @returns an empty promise\n */\nconst callRender = (hostRef, instance, elm, isInitialLoad) => {\n    // in order for bundlers to correctly tree-shake the BUILD object\n    // we need to ensure BUILD is not deoptimized within a try/catch\n    // https://rollupjs.org/guide/en/#treeshake tryCatchDeoptimization\n    const allRenderFn = BUILD.allRenderFn ? true : false;\n    const lazyLoad = BUILD.lazyLoad ? true : false;\n    const taskQueue = BUILD.taskQueue ? true : false;\n    const updatable = BUILD.updatable ? true : false;\n    try {\n        renderingRef = instance;\n        /**\n         * minification optimization: `allRenderFn` is `true` if all components have a `render`\n         * method, so we can call the method immediately. If not, check before calling it.\n         */\n        instance = allRenderFn ? instance.render() : instance.render && instance.render();\n        if (updatable && taskQueue) {\n            hostRef.$flags$ &= ~16 /* HOST_FLAGS.isQueuedForUpdate */;\n        }\n        if (updatable || lazyLoad) {\n            hostRef.$flags$ |= 2 /* HOST_FLAGS.hasRendered */;\n        }\n        if (BUILD.hasRenderFn || BUILD.reflect) {\n            if (BUILD.vdomRender || BUILD.reflect) {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                if (BUILD.hydrateServerSide) {\n                    return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n                }\n                else {\n                    renderVdom(hostRef, instance, isInitialLoad);\n                }\n            }\n            else {\n                const shadowRoot = elm.shadowRoot;\n                if (hostRef.$cmpMeta$.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                    shadowRoot.textContent = instance;\n                }\n                else {\n                    elm.textContent = instance;\n                }\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    renderingRef = null;\n    return null;\n};\nconst getRenderingRef = () => renderingRef;\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (BUILD.cmpDidRender) {\n        if (BUILD.isDev) {\n            hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n        }\n        safeCall(instance, 'componentDidRender');\n        if (BUILD.isDev) {\n            hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n        }\n    }\n    emitLifecycleEvent(elm, 'componentDidRender');\n    if (!(hostRef.$flags$ & 64 /* HOST_FLAGS.hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* HOST_FLAGS.hasLoadedComponent */;\n        if (BUILD.asyncLoading && BUILD.cssAnnotations) {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        if (BUILD.cmpDidLoad) {\n            if (BUILD.isDev) {\n                hostRef.$flags$ |= 2048 /* HOST_FLAGS.devOnDidLoad */;\n            }\n            safeCall(instance, 'componentDidLoad');\n            if (BUILD.isDev) {\n                hostRef.$flags$ &= ~2048 /* HOST_FLAGS.devOnDidLoad */;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentDidLoad');\n        endPostUpdate();\n        if (BUILD.asyncLoading) {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad(tagName);\n            }\n        }\n    }\n    else {\n        if (BUILD.cmpDidUpdate) {\n            // we've already loaded this component\n            // fire off the user's componentDidUpdate method (if one was provided)\n            // componentDidUpdate runs AFTER render() has been called\n            // and all child components have finished updating\n            if (BUILD.isDev) {\n                hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;\n            }\n            safeCall(instance, 'componentDidUpdate');\n            if (BUILD.isDev) {\n                hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;\n            }\n        }\n        emitLifecycleEvent(elm, 'componentDidUpdate');\n        endPostUpdate();\n    }\n    if (BUILD.method && BUILD.lazyLoad) {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    if (BUILD.asyncLoading) {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* HOST_FLAGS.needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* HOST_FLAGS.isWaitingForChildren */ | 512 /* HOST_FLAGS.needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst forceUpdate = (ref) => {\n    if (BUILD.updatable && (Build.isBrowser || Build.isTesting)) {\n        const hostRef = getHostRef(ref);\n        const isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected &&\n            (hostRef.$flags$ & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n            scheduleUpdate(hostRef, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n    return false;\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    if (BUILD.cssAnnotations) {\n        addHydratedFlag(doc.documentElement);\n    }\n    if (BUILD.asyncQueue) {\n        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n    if (BUILD.profile && performance.measure) {\n        performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, 'st:app:start');\n    }\n};\n/**\n * Allows to safely call a method, e.g. `componentDidLoad`, on an instance,\n * e.g. custom element node. If a build figures out that e.g. no component\n * has a `componentDidLoad` method, the instance method gets removed from the\n * output bundle and this function returns `undefined`.\n * @param instance any object that may or may not contain methods\n * @param method method name\n * @param arg single arbitrary argument\n * @returns result of method call if it exists, otherwise `undefined`\n */\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\n/**\n * For debugging purposes as `BUILD.lifecycleDOMEvents` is `false` by default and will\n * get removed by the compiler. Used for timing events to see how long they take.\n * @param elm the target of the Event\n * @param lifecycleName name of the event\n */\nconst emitLifecycleEvent = (elm, lifecycleName) => {\n    if (BUILD.lifecycleDOMEvents) {\n        emitEvent(elm, 'stencil_' + lifecycleName, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                namespace: NAMESPACE,\n            },\n        });\n    }\n};\nconst addHydratedFlag = (elm) => BUILD.hydratedClass\n    ? elm.classList.add('hydrated')\n    : BUILD.hydratedAttribute\n        ? elm.setAttribute('hydrated', '')\n        : undefined;\nconst serverSideConnected = (elm) => {\n    const children = elm.children;\n    if (children != null) {\n        for (let i = 0, ii = children.length; i < ii; i++) {\n            const childElm = children[i];\n            if (typeof childElm.connectedCallback === 'function') {\n                childElm.connectedCallback();\n            }\n            serverSideConnected(childElm);\n        }\n    }\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm = BUILD.lazyLoad ? hostRef.$hostElement$ : ref;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    // explicitly check for NaN on both sides, as `NaN === NaN` is always false\n    const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n    const didValueChange = newVal !== oldVal && !areBothNaN;\n    if ((!BUILD.lazyLoad || !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) || oldVal === undefined) && didValueChange) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (BUILD.isDev) {\n            if (hostRef.$flags$ & 1024 /* HOST_FLAGS.devOnRender */) {\n                consoleDevWarn(`The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`, '\\nElement', elm, '\\nNew value', newVal, '\\nOld value', oldVal);\n            }\n            else if (hostRef.$flags$ & 2048 /* HOST_FLAGS.devOnDidLoad */) {\n                consoleDevWarn(`The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`, '\\nElement', elm, '\\nNew value', newVal, '\\nOld value', oldVal);\n            }\n        }\n        if (!BUILD.lazyLoad || instance) {\n            // get an array of method names of watch functions to call\n            if (BUILD.watchCallback && cmpMeta.$watchers$ && flags & 128 /* HOST_FLAGS.isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map((watchMethodName) => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e, elm);\n                        }\n                    });\n                }\n            }\n            if (BUILD.updatable &&\n                (flags & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n                if (BUILD.cmpShouldUpdate && instance.componentShouldUpdate) {\n                    if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n                        return;\n                    }\n                }\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\n/**\n * Attach a series of runtime constructs to a compiled Stencil component\n * constructor, including getters and setters for the `@Prop` and `@State`\n * decorators, callbacks for when attributes change, and so on.\n *\n * @param Cstr the constructor for a component that we need to process\n * @param cmpMeta metadata collected previously about the component\n * @param flags a number used to store a series of bit flags\n * @returns a reference to the same constructor passed in (but now mutated)\n */\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    var _a;\n    const prototype = Cstr.prototype;\n    /**\n     * proxy form associated custom element lifecycle callbacks\n     * @ref https://web.dev/articles/more-capable-form-controls#lifecycle_callbacks\n     */\n    if (BUILD.formAssociated && cmpMeta.$flags$ & 64 /* CMP_FLAGS.formAssociated */ && flags & 1 /* PROXY_FLAGS.isElementConstructor */) {\n        FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach((cbName) => Object.defineProperty(prototype, cbName, {\n            value(...args) {\n                const hostRef = getHostRef(this);\n                const elm = BUILD.lazyLoad ? hostRef.$hostElement$ : this;\n                const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n                if (!instance) {\n                    hostRef.$onReadyPromise$.then((instance) => {\n                        const cb = instance[cbName];\n                        typeof cb === 'function' && cb.call(instance, ...args);\n                    });\n                }\n                else {\n                    const cb = instance[cbName];\n                    typeof cb === 'function' && cb.call(instance, ...args);\n                }\n            },\n        }));\n    }\n    if (BUILD.member && cmpMeta.$members$) {\n        if (BUILD.watchCallback && Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        members.map(([memberName, [memberFlags]]) => {\n            if ((BUILD.prop || BUILD.state) &&\n                (memberFlags & 31 /* MEMBER_FLAGS.Prop */ ||\n                    ((!BUILD.lazyLoad || flags & 2 /* PROXY_FLAGS.proxyState */) && memberFlags & 32 /* MEMBER_FLAGS.State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // only during dev time\n                        if (BUILD.isDev) {\n                            const ref = getHostRef(this);\n                            if (\n                            // we are proxying the instance (not element)\n                            (flags & 1 /* PROXY_FLAGS.isElementConstructor */) === 0 &&\n                                // the element is not constructing\n                                (ref && ref.$flags$ & 8 /* HOST_FLAGS.isConstructingInstance */) === 0 &&\n                                // the member is a prop\n                                (memberFlags & 31 /* MEMBER_FLAGS.Prop */) !== 0 &&\n                                // the member is not mutable\n                                (memberFlags & 1024 /* MEMBER_FLAGS.Mutable */) === 0) {\n                                consoleDevWarn(`@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\\nMore information: https://stenciljs.com/docs/properties#prop-mutability`);\n                            }\n                        }\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n            else if (BUILD.lazyLoad &&\n                BUILD.method &&\n                flags & 1 /* PROXY_FLAGS.isElementConstructor */ &&\n                memberFlags & 64 /* MEMBER_FLAGS.Method */) {\n                // proxyComponent - method\n                Object.defineProperty(prototype, memberName, {\n                    value(...args) {\n                        var _a;\n                        const ref = getHostRef(this);\n                        return (_a = ref === null || ref === void 0 ? void 0 : ref.$onInstancePromise$) === null || _a === void 0 ? void 0 : _a.then(() => { var _a; return (_a = ref.$lazyInstance$) === null || _a === void 0 ? void 0 : _a[memberName](...args); });\n                    },\n                });\n            }\n        });\n        if (BUILD.observeAttribute && (!BUILD.lazyLoad || flags & 1 /* PROXY_FLAGS.isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, oldValue, newValue) {\n                plt.jmp(() => {\n                    var _a;\n                    const propName = attrNameToPropName.get(attrName);\n                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback\n                    //  in the case where an attribute was set inline.\n                    //  ```html\n                    //    <my-component some-attribute=\"some-value\"></my-component>\n                    //  ```\n                    //\n                    //  There is an edge case where a developer sets the attribute inline on a custom element and then\n                    //  programmatically changes it before it has been upgraded as shown below:\n                    //\n                    //  ```html\n                    //    <!-- this component has _not_ been upgraded yet -->\n                    //    <my-component id=\"test\" some-attribute=\"some-value\"></my-component>\n                    //    <script>\n                    //      // grab non-upgraded component\n                    //      el = document.querySelector(\"#test\");\n                    //      el.someAttribute = \"another-value\";\n                    //      // upgrade component\n                    //      customElements.define('my-component', MyComponent);\n                    //    </script>\n                    //  ```\n                    //  In this case if we do not un-shadow here and use the value of the shadowing property, attributeChangedCallback\n                    //  will be called with `newValue = \"some-value\"` and will set the shadowed property (this.someAttribute = \"another-value\")\n                    //  to the value that was set inline i.e. \"some-value\" from above example. When\n                    //  the connectedCallback attempts to un-shadow it will use \"some-value\" as the initial value rather than \"another-value\"\n                    //\n                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/un-shadowed\n                    //  by connectedCallback as this attributeChangedCallback will not fire.\n                    //\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n                    //\n                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to\n                    //  properties here given that this goes against best practices outlined here\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n                    if (this.hasOwnProperty(propName)) {\n                        newValue = this[propName];\n                        delete this[propName];\n                    }\n                    else if (prototype.hasOwnProperty(propName) &&\n                        typeof this[propName] === 'number' &&\n                        this[propName] == newValue) {\n                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native\n                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in\n                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.\n                        return;\n                    }\n                    else if (propName == null) {\n                        // At this point we should know this is not a \"member\", so we can treat it like watching an attribute\n                        // on a vanilla web component\n                        const hostRef = getHostRef(this);\n                        const flags = hostRef === null || hostRef === void 0 ? void 0 : hostRef.$flags$;\n                        // We only want to trigger the callback(s) if:\n                        // 1. The instance is ready\n                        // 2. The watchers are ready\n                        // 3. The value has changed\n                        if (flags &&\n                            !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) &&\n                            flags & 128 /* HOST_FLAGS.isWatchReady */ &&\n                            newValue !== oldValue) {\n                            const elm = BUILD.lazyLoad ? hostRef.$hostElement$ : this;\n                            const instance = BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;\n                            const entry = (_a = cmpMeta.$watchers$) === null || _a === void 0 ? void 0 : _a[attrName];\n                            entry === null || entry === void 0 ? void 0 : entry.forEach((callbackName) => {\n                                if (instance[callbackName] != null) {\n                                    instance[callbackName].call(instance, newValue, oldValue, attrName);\n                                }\n                            });\n                        }\n                        return;\n                    }\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // Create an array of attributes to observe\n            // This list in comprised of all strings used within a `@Watch()` decorator\n            // on a component as well as any Stencil-specific \"members\" (`@Prop()`s and `@State()`s).\n            // As such, there is no way to guarantee type-safety here that a user hasn't entered\n            // an invalid attribute.\n            Cstr.observedAttributes = Array.from(new Set([\n                ...Object.keys((_a = cmpMeta.$watchers$) !== null && _a !== void 0 ? _a : {}),\n                ...members\n                    .filter(([_, m]) => m[0] & 15 /* MEMBER_FLAGS.HasAttribute */)\n                    .map(([propName, m]) => {\n                    var _a;\n                    const attrName = m[1] || propName;\n                    attrNameToPropName.set(attrName, propName);\n                    if (BUILD.reflect && m[0] & 512 /* MEMBER_FLAGS.ReflectAttr */) {\n                        (_a = cmpMeta.$attrsToReflect$) === null || _a === void 0 ? void 0 : _a.push([propName, attrName]);\n                    }\n                    return attrName;\n                }),\n            ]));\n        }\n    }\n    return Cstr;\n};\n/**\n * Initialize a Stencil component given a reference to its host element, its\n * runtime bookkeeping data structure, runtime metadata about the component,\n * and (optionally) an HMR version ID.\n *\n * @param elm a host element\n * @param hostRef the element's runtime bookkeeping object\n * @param cmpMeta runtime metadata for the Stencil component\n * @param hmrVersionId an (optional) HMR version ID\n */\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n    let Cstr;\n    // initializeComponent\n    if ((hostRef.$flags$ & 32 /* HOST_FLAGS.hasInitializedComponent */) === 0) {\n        // Let the runtime know that the component has been initialized\n        hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;\n        if (BUILD.lazyLoad || BUILD.hydrateClientSide) {\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta, hostRef, hmrVersionId);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime(`st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`, `[Stencil] Load module for <${cmpMeta.$tagName$}>`);\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if ((BUILD.isDev || BUILD.isDebug) && !Cstr) {\n                throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n            }\n            if (BUILD.member && !Cstr.isProxied) {\n                // we've never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                if (BUILD.watchCallback) {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* PROXY_FLAGS.proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            if (BUILD.member) {\n                hostRef.$flags$ |= 8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            if (BUILD.member) {\n                hostRef.$flags$ &= ~8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            if (BUILD.watchCallback) {\n                hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */;\n            }\n            endNewInstance();\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        else {\n            // sync constructor component\n            Cstr = elm.constructor;\n            // wait for the CustomElementRegistry to mark the component as ready before setting `isWatchReady`. Otherwise,\n            // watchers may fire prematurely if `customElements.get()`/`customElements.whenDefined()` resolves _before_\n            // Stencil has completed instantiating the component.\n            customElements.whenDefined(cmpMeta.$tagName$).then(() => (hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */));\n        }\n        if (BUILD.style && Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            if (BUILD.mode && typeof style !== 'string') {\n                style = style[(hostRef.$modeName$ = computeMode(elm))];\n                if (BUILD.hydrateServerSide && hostRef.$modeName$) {\n                    elm.setAttribute('s-mode', hostRef.$modeName$);\n                }\n            }\n            const scopeId = getScopeId(cmpMeta, hostRef.$modeName$);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                if (!BUILD.hydrateServerSide &&\n                    BUILD.shadowDom &&\n                    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n                    BUILD.shadowDomShim &&\n                    cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {\n                    style = await import('./shadow-css.js').then((m) => m.scopeCss(style, scopeId, false));\n                }\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (BUILD.asyncLoading && ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the initial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst fireConnectedCallback = (instance) => {\n    if (BUILD.lazyLoad && BUILD.connectedCallback) {\n        safeCall(instance, 'connectedCallback');\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (BUILD.hostListenerTargetParent) {\n            // only run if we have listeners being attached to a parent\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n        }\n        if (!(hostRef.$flags$ & 1 /* HOST_FLAGS.hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* HOST_FLAGS.hasConnected */;\n            let hostId;\n            if (BUILD.hydrateClientSide) {\n                hostId = elm.getAttribute(HYDRATE_ID);\n                if (hostId) {\n                    if (BUILD.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        const scopeId = BUILD.mode\n                            ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute('s-mode'))\n                            : addStyle(elm.shadowRoot, cmpMeta);\n                        elm.classList.remove(scopeId + '-h', scopeId + '-s');\n                    }\n                    initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n                }\n            }\n            if (BUILD.slotRelocation && !hostId) {\n                // initUpdate\n                // if the slot polyfill is required we'll need to put some nodes\n                // in here to act as original content anchors as we move nodes around\n                // host element has been connected to the DOM\n                if (BUILD.hydrateServerSide ||\n                    ((BUILD.slot || BUILD.shadowDom) &&\n                        // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n                        cmpMeta.$flags$ & (4 /* CMP_FLAGS.hasSlotRelocation */ | 8 /* CMP_FLAGS.needsShadowDomShim */))) {\n                    setContentReference(elm);\n                }\n            }\n            if (BUILD.asyncLoading) {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if ((BUILD.hydrateClientSide &&\n                        ancestorComponent.nodeType === 1 /* NODE_TYPE.ElementNode */ &&\n                        ancestorComponent.hasAttribute('s-id') &&\n                        ancestorComponent['s-p']) ||\n                        ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (BUILD.prop && !BUILD.hydrateServerSide && cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* MEMBER_FLAGS.Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            if (BUILD.initializeNextTick) {\n                // connectedCallback, taskQueue, initialLoad\n                // angular sets attribute AFTER connectCallback\n                // https://github.com/angular/angular/issues/18909\n                // https://github.com/angular/angular/issues/19940\n                nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n            }\n            else {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n            // fire off connectedCallback() on component instance\n            if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) {\n                fireConnectedCallback(hostRef.$lazyInstance$);\n            }\n            else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {\n                hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n            }\n        }\n        endConnected();\n    }\n};\nconst setContentReference = (elm) => {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    const contentRefElm = (elm['s-cr'] = doc.createComment(BUILD.isDebug ? `content-ref (host=${elm.localName})` : ''));\n    contentRefElm['s-cn'] = true;\n    elm.insertBefore(contentRefElm, elm.firstChild);\n};\nconst disconnectInstance = (instance) => {\n    if (BUILD.lazyLoad && BUILD.disconnectedCallback) {\n        safeCall(instance, 'disconnectedCallback');\n    }\n    if (BUILD.cmpDidUnload) {\n        safeCall(instance, 'componentDidUnload');\n    }\n};\nconst disconnectedCallback = async (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        if (BUILD.hostListener) {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map((rmListener) => rmListener());\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        if (!BUILD.lazyLoad) {\n            disconnectInstance(elm);\n        }\n        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) {\n            disconnectInstance(hostRef.$lazyInstance$);\n        }\n        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {\n            hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n        }\n    }\n};\nconst patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {\n    patchCloneNode(hostElementPrototype);\n    patchSlotAppendChild(hostElementPrototype);\n    patchSlotAppend(hostElementPrototype);\n    patchSlotPrepend(hostElementPrototype);\n    patchSlotInsertAdjacentElement(hostElementPrototype);\n    patchSlotInsertAdjacentHTML(hostElementPrototype);\n    patchSlotInsertAdjacentText(hostElementPrototype);\n    patchTextContent(hostElementPrototype);\n    patchChildSlotNodes(hostElementPrototype, descriptorPrototype);\n    patchSlotRemoveChild(hostElementPrototype);\n};\nconst patchCloneNode = (HostElementPrototype) => {\n    const orgCloneNode = HostElementPrototype.cloneNode;\n    HostElementPrototype.cloneNode = function (deep) {\n        const srcNode = this;\n        const isShadowDom = BUILD.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n        const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n        if (BUILD.slot && !isShadowDom && deep) {\n            let i = 0;\n            let slotted, nonStencilNode;\n            const stencilPrivates = [\n                's-id',\n                's-cr',\n                's-lr',\n                's-rc',\n                's-sc',\n                's-p',\n                's-cn',\n                's-sr',\n                's-sn',\n                's-hn',\n                's-ol',\n                's-nr',\n                's-si',\n            ];\n            for (; i < srcNode.childNodes.length; i++) {\n                slotted = srcNode.childNodes[i]['s-nr'];\n                nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i][privateField]);\n                if (slotted) {\n                    if (BUILD.appendChildSlotFix && clonedNode.__appendChild) {\n                        clonedNode.__appendChild(slotted.cloneNode(true));\n                    }\n                    else {\n                        clonedNode.appendChild(slotted.cloneNode(true));\n                    }\n                }\n                if (nonStencilNode) {\n                    clonedNode.appendChild(srcNode.childNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\n/**\n * Patches the `appendChild` method on a `scoped` Stencil component.\n * The patch will attempt to find a slot with the same name as the node being appended\n * and insert it into the slot reference if found. Otherwise, it falls-back to the original\n * `appendChild` method.\n *\n * @param HostElementPrototype The Stencil component to be patched\n */\nconst patchSlotAppendChild = (HostElementPrototype) => {\n    HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n    HostElementPrototype.appendChild = function (newChild) {\n        const slotName = (newChild['s-sn'] = getSlotName(newChild));\n        const slotNode = getHostSlotNode(this.childNodes, slotName);\n        if (slotNode) {\n            const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n            const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n            const insertedNode = appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n            // Check if there is fallback content that should be hidden\n            updateFallbackSlotVisibility(this);\n            // Force a re-render of the host element\n            forceUpdate(this);\n            return insertedNode;\n        }\n        return this.__appendChild(newChild);\n    };\n};\n/**\n * Patches the `removeChild` method on a `scoped` Stencil component.\n * This patch attempts to remove the specified node from a slot reference\n * if the slot exists. Otherwise, it falls-back to the original `removeChild` method.\n *\n * @param ElementPrototype The Stencil component to be patched\n */\nconst patchSlotRemoveChild = (ElementPrototype) => {\n    ElementPrototype.__removeChild = ElementPrototype.removeChild;\n    ElementPrototype.removeChild = function (toRemove) {\n        if (toRemove && typeof toRemove['s-sn'] !== 'undefined') {\n            const slotNode = getHostSlotNode(this.childNodes, toRemove['s-sn']);\n            if (slotNode) {\n                // Get all slot content\n                const slotChildNodes = getHostSlotChildNodes(slotNode, toRemove['s-sn']);\n                // See if any of the slotted content matches the node to remove\n                const existingNode = slotChildNodes.find((n) => n === toRemove);\n                if (existingNode) {\n                    existingNode.remove();\n                    // Check if there is fallback content that should be displayed if that\n                    // was the last node in the slot\n                    updateFallbackSlotVisibility(this);\n                    return;\n                }\n            }\n        }\n        return this.__removeChild(toRemove);\n    };\n};\n/**\n * Patches the `prepend` method for a slotted node inside a scoped component.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotPrepend = (HostElementPrototype) => {\n    const originalPrepend = HostElementPrototype.prepend;\n    HostElementPrototype.prepend = function (...newChildren) {\n        newChildren.forEach((newChild) => {\n            if (typeof newChild === 'string') {\n                newChild = this.ownerDocument.createTextNode(newChild);\n            }\n            const slotName = (newChild['s-sn'] = getSlotName(newChild));\n            const slotNode = getHostSlotNode(this.childNodes, slotName);\n            if (slotNode) {\n                const slotPlaceholder = document.createTextNode('');\n                slotPlaceholder['s-nr'] = newChild;\n                slotNode['s-cr'].parentNode.__appendChild(slotPlaceholder);\n                newChild['s-ol'] = slotPlaceholder;\n                const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n                const appendAfter = slotChildNodes[0];\n                return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);\n            }\n            if (newChild.nodeType === 1 && !!newChild.getAttribute('slot')) {\n                newChild.hidden = true;\n            }\n            return originalPrepend.call(this, newChild);\n        });\n    };\n};\n/**\n * Patches the `append` method for a slotted node inside a scoped component. The patched method uses\n * `appendChild` under-the-hood while creating text nodes for any new children that passed as bare strings.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotAppend = (HostElementPrototype) => {\n    HostElementPrototype.append = function (...newChildren) {\n        newChildren.forEach((newChild) => {\n            if (typeof newChild === 'string') {\n                newChild = this.ownerDocument.createTextNode(newChild);\n            }\n            this.appendChild(newChild);\n        });\n    };\n};\n/**\n * Patches the `insertAdjacentHTML` method for a slotted node inside a scoped component. Specifically,\n * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the element\n * gets inserted into the DOM in the correct location.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n    const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n    HostElementPrototype.insertAdjacentHTML = function (position, text) {\n        if (position !== 'afterbegin' && position !== 'beforeend') {\n            return originalInsertAdjacentHtml.call(this, position, text);\n        }\n        const container = this.ownerDocument.createElement('_');\n        let node;\n        container.innerHTML = text;\n        if (position === 'afterbegin') {\n            while ((node = container.firstChild)) {\n                this.prepend(node);\n            }\n        }\n        else if (position === 'beforeend') {\n            while ((node = container.firstChild)) {\n                this.append(node);\n            }\n        }\n    };\n};\n/**\n * Patches the `insertAdjacentText` method for a slotted node inside a scoped component. Specifically,\n * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the text node\n * gets inserted into the DOM in the correct location.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotInsertAdjacentText = (HostElementPrototype) => {\n    HostElementPrototype.insertAdjacentText = function (position, text) {\n        this.insertAdjacentHTML(position, text);\n    };\n};\n/**\n * Patches the `insertAdjacentElement` method for a slotted node inside a scoped component. Specifically,\n * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the element\n * gets inserted into the DOM in the correct location.\n *\n * @param HostElementPrototype the `Element` to be patched\n */\nconst patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n    const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n    HostElementPrototype.insertAdjacentElement = function (position, element) {\n        if (position !== 'afterbegin' && position !== 'beforeend') {\n            return originalInsertAdjacentElement.call(this, position, element);\n        }\n        if (position === 'afterbegin') {\n            this.prepend(element);\n            return element;\n        }\n        else if (position === 'beforeend') {\n            this.append(element);\n            return element;\n        }\n        return element;\n    };\n};\n/**\n * Patches the text content of an unnamed slotted node inside a scoped component\n * @param hostElementPrototype the `Element` to be patched\n */\nconst patchTextContent = (hostElementPrototype) => {\n    const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent');\n    Object.defineProperty(hostElementPrototype, '__textContent', descriptor);\n    if (BUILD.experimentalScopedSlotChanges) {\n        // Patch `textContent` to mimic shadow root behavior\n        Object.defineProperty(hostElementPrototype, 'textContent', {\n            // To mimic shadow root behavior, we need to return the text content of all\n            // nodes in a slot reference node\n            get() {\n                const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n                const textContent = slotRefNodes\n                    .map((node) => {\n                    var _a, _b;\n                    const text = [];\n                    // Need to get the text content of all nodes in the slot reference node\n                    let slotContent = node.nextSibling;\n                    while (slotContent && slotContent['s-sn'] === node['s-sn']) {\n                        if (slotContent.nodeType === 3 /* NODE_TYPES.TEXT_NODE */ || slotContent.nodeType === 1 /* NODE_TYPES.ELEMENT_NODE */) {\n                            text.push((_b = (_a = slotContent.textContent) === null || _a === void 0 ? void 0 : _a.trim()) !== null && _b !== void 0 ? _b : '');\n                        }\n                        slotContent = slotContent.nextSibling;\n                    }\n                    return text.filter((ref) => ref !== '').join(' ');\n                })\n                    .filter((text) => text !== '')\n                    .join(' ');\n                // Pad the string to return\n                return ' ' + textContent + ' ';\n            },\n            // To mimic shadow root behavior, we need to overwrite all nodes in a slot\n            // reference node. If a default slot reference node exists, the text content will be\n            // placed there. Otherwise, the new text node will be hidden\n            set(value) {\n                const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n                slotRefNodes.forEach((node) => {\n                    // Remove the existing content of the slot\n                    let slotContent = node.nextSibling;\n                    while (slotContent && slotContent['s-sn'] === node['s-sn']) {\n                        const tmp = slotContent;\n                        slotContent = slotContent.nextSibling;\n                        tmp.remove();\n                    }\n                    // If this is a default slot, add the text node in the slot location.\n                    // Otherwise, destroy the slot reference node\n                    if (node['s-sn'] === '') {\n                        const textNode = this.ownerDocument.createTextNode(value);\n                        textNode['s-sn'] = '';\n                        node.parentElement.insertBefore(textNode, node.nextSibling);\n                    }\n                    else {\n                        node.remove();\n                    }\n                });\n            },\n        });\n    }\n    else {\n        Object.defineProperty(hostElementPrototype, 'textContent', {\n            get() {\n                var _a;\n                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is\n                // the empty string\n                const slotNode = getHostSlotNode(this.childNodes, '');\n                // when a slot node is found, the textContent _may_ be found in the next sibling (text) node, depending on how\n                // nodes were reordered during the vdom render. first try to get the text content from the sibling.\n                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {\n                    return slotNode.nextSibling.textContent;\n                }\n                else if (slotNode) {\n                    return slotNode.textContent;\n                }\n                else {\n                    // fallback to the original implementation\n                    return this.__textContent;\n                }\n            },\n            set(value) {\n                var _a;\n                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is\n                // the empty string\n                const slotNode = getHostSlotNode(this.childNodes, '');\n                // when a slot node is found, the textContent _may_ need to be placed in the next sibling (text) node,\n                // depending on how nodes were reordered during the vdom render. first try to set the text content on the\n                // sibling.\n                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {\n                    slotNode.nextSibling.textContent = value;\n                }\n                else if (slotNode) {\n                    slotNode.textContent = value;\n                }\n                else {\n                    // we couldn't find a slot, but that doesn't mean that there isn't one. if this check ran before the DOM\n                    // loaded, we could have missed it. check for a content reference element on the scoped component and insert\n                    // it there\n                    this.__textContent = value;\n                    const contentRefElm = this['s-cr'];\n                    if (contentRefElm) {\n                        this.insertBefore(contentRefElm, this.firstChild);\n                    }\n                }\n            },\n        });\n    }\n};\nconst patchChildSlotNodes = (elm, cmpMeta) => {\n    class FakeNodeList extends Array {\n        item(n) {\n            return this[n];\n        }\n    }\n    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n    if (cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {\n        const childNodesFn = elm.__lookupGetter__('childNodes');\n        Object.defineProperty(elm, 'children', {\n            get() {\n                return this.childNodes.map((n) => n.nodeType === 1);\n            },\n        });\n        Object.defineProperty(elm, 'childElementCount', {\n            get() {\n                return elm.children.length;\n            },\n        });\n        Object.defineProperty(elm, 'childNodes', {\n            get() {\n                const childNodes = childNodesFn.call(this);\n                if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0 &&\n                    getHostRef(this).$flags$ & 2 /* HOST_FLAGS.hasRendered */) {\n                    const result = new FakeNodeList();\n                    for (let i = 0; i < childNodes.length; i++) {\n                        const slot = childNodes[i]['s-nr'];\n                        if (slot) {\n                            result.push(slot);\n                        }\n                    }\n                    return result;\n                }\n                return FakeNodeList.from(childNodes);\n            },\n        });\n    }\n};\n/**\n * Recursively finds all slot reference nodes ('s-sr') in a series of child nodes.\n *\n * @param childNodes The set of child nodes to search for slot reference nodes.\n * @returns An array of slot reference nodes.\n */\nconst getAllChildSlotNodes = (childNodes) => {\n    const slotRefNodes = [];\n    for (const childNode of Array.from(childNodes)) {\n        if (childNode['s-sr']) {\n            slotRefNodes.push(childNode);\n        }\n        slotRefNodes.push(...getAllChildSlotNodes(childNode.childNodes));\n    }\n    return slotRefNodes;\n};\nconst getSlotName = (node) => node['s-sn'] || (node.nodeType === 1 && node.getAttribute('slot')) || '';\n/**\n * Recursively searches a series of child nodes for a slot with the provided name.\n * @param childNodes the nodes to search for a slot with a specific name.\n * @param slotName the name of the slot to match on.\n * @returns a reference to the slot node that matches the provided name, `null` otherwise\n */\nconst getHostSlotNode = (childNodes, slotName) => {\n    let i = 0;\n    let childNode;\n    for (; i < childNodes.length; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && childNode['s-sn'] === slotName) {\n            return childNode;\n        }\n        childNode = getHostSlotNode(childNode.childNodes, slotName);\n        if (childNode) {\n            return childNode;\n        }\n    }\n    return null;\n};\nconst getHostSlotChildNodes = (n, slotName) => {\n    const childNodes = [n];\n    while ((n = n.nextSibling) && n['s-sn'] === slotName) {\n        childNodes.push(n);\n    }\n    return childNodes;\n};\nconst defineCustomElement = (Cstr, compactMeta) => {\n    customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nconst proxyCustomElement = (Cstr, compactMeta) => {\n    const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n    };\n    if (BUILD.member) {\n        cmpMeta.$members$ = compactMeta[2];\n    }\n    if (BUILD.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n    }\n    if (BUILD.watchCallback) {\n        cmpMeta.$watchers$ = Cstr.$watchers$;\n    }\n    if (BUILD.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n    }\n    if (BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n        // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;\n    }\n    // TODO(STENCIL-914): this check and `else` block can go away and be replaced by just the `scoped` check\n    if (BUILD.experimentalSlotFixes) {\n        if (BUILD.scoped && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n            // This check is intentionally not combined with the surrounding `experimentalSlotFixes` check\n            // since, moving forward, we only want to patch the pseudo shadow DOM when the component is scoped\n            patchPseudoShadowDom(Cstr.prototype, cmpMeta);\n        }\n    }\n    else {\n        if (BUILD.slotChildNodesFix) {\n            patchChildSlotNodes(Cstr.prototype, cmpMeta);\n        }\n        if (BUILD.cloneNodeFix) {\n            patchCloneNode(Cstr.prototype);\n        }\n        if (BUILD.appendChildSlotFix) {\n            patchSlotAppendChild(Cstr.prototype);\n        }\n        if (BUILD.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n            patchTextContent(Cstr.prototype);\n        }\n    }\n    const originalConnectedCallback = Cstr.prototype.connectedCallback;\n    const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n    Object.assign(Cstr.prototype, {\n        __registerHost() {\n            registerHost(this, cmpMeta);\n        },\n        connectedCallback() {\n            connectedCallback(this);\n            if (BUILD.connectedCallback && originalConnectedCallback) {\n                originalConnectedCallback.call(this);\n            }\n        },\n        disconnectedCallback() {\n            disconnectedCallback(this);\n            if (BUILD.disconnectedCallback && originalDisconnectedCallback) {\n                originalDisconnectedCallback.call(this);\n            }\n        },\n        __attachShadow() {\n            if (supportsShadow) {\n                if (BUILD.shadowDelegatesFocus) {\n                    this.attachShadow({\n                        mode: 'open',\n                        delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),\n                    });\n                }\n                else {\n                    this.attachShadow({ mode: 'open' });\n                }\n            }\n            else {\n                this.shadowRoot = this;\n            }\n        },\n    });\n    Cstr.is = cmpMeta.$tagName$;\n    return proxyComponent(Cstr, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */ | 2 /* PROXY_FLAGS.proxyState */);\n};\nconst forceModeUpdate = (elm) => {\n    if (BUILD.style && BUILD.mode && !BUILD.lazyLoad) {\n        const mode = computeMode(elm);\n        const hostRef = getHostRef(elm);\n        if (hostRef.$modeName$ !== mode) {\n            const cmpMeta = hostRef.$cmpMeta$;\n            const oldScopeId = elm['s-sc'];\n            const scopeId = getScopeId(cmpMeta, mode);\n            const style = elm.constructor.style[mode];\n            const flags = cmpMeta.$flags$;\n            if (style) {\n                if (!styles.has(scopeId)) {\n                    registerStyle(scopeId, style, !!(flags & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                }\n                hostRef.$modeName$ = mode;\n                elm.classList.remove(oldScopeId + '-h', oldScopeId + '-s');\n                attachStyles(hostRef);\n                forceUpdate(elm);\n            }\n        }\n    }\n};\n/**\n * Kick off hot-module-replacement for a component. In order to replace the\n * component in-place we:\n *\n * 1. get a reference to the {@link d.HostRef} for the element\n * 2. reset the element's runtime flags\n * 3. re-run the initialization logic for the element (via\n *    {@link initializeComponent})\n *\n * @param hostElement the host element for the component which we want to start\n * doing HMR\n * @param cmpMeta runtime metadata for the component\n * @param hmrVersionId the current HMR version ID\n */\nconst hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n    // ¯\\_(ツ)_/¯\n    const hostRef = getHostRef(hostElement);\n    // reset state flags to only have been connected\n    hostRef.$flags$ = 1 /* HOST_FLAGS.hasConnected */;\n    // TODO\n    // detach any event listeners that may have been added\n    // because we're not passing an exact event name it'll\n    // remove all of this element's event, which is good\n    // re-initialize the component\n    initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    var _a;\n    if (BUILD.profile && performance.mark) {\n        performance.mark('st:app:start');\n    }\n    installDevTools();\n    const endBootstrap = createTime('bootstrapLazy');\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const dataStyles = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    const styles = /*@__PURE__*/ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n    let appLoadFallback;\n    let isBootstrapping = true;\n    let i = 0;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    if (BUILD.asyncQueue) {\n        if (options.syncQueue) {\n            plt.$flags$ |= 4 /* PLATFORM_FLAGS.queueSync */;\n        }\n    }\n    if (BUILD.hydrateClientSide) {\n        // If the app is already hydrated there is not point to disable the\n        // async queue. This will improve the first input delay\n        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;\n    }\n    if (BUILD.hydrateClientSide && BUILD.shadowDom) {\n        for (; i < styles.length; i++) {\n            registerStyle(styles[i].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles[i].innerHTML), true);\n        }\n    }\n    let hasSlotRelocation = false;\n    lazyBundles.map((lazyBundle) => {\n        lazyBundle[1].map((compactMeta) => {\n            var _a;\n            const cmpMeta = {\n                $flags$: compactMeta[0],\n                $tagName$: compactMeta[1],\n                $members$: compactMeta[2],\n                $listeners$: compactMeta[3],\n            };\n            // Check if we are using slots outside the shadow DOM in this component.\n            // We'll use this information later to add styles for `slot-fb` elements\n            if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {\n                hasSlotRelocation = true;\n            }\n            if (BUILD.member) {\n                cmpMeta.$members$ = compactMeta[2];\n            }\n            if (BUILD.hostListener) {\n                cmpMeta.$listeners$ = compactMeta[3];\n            }\n            if (BUILD.reflect) {\n                cmpMeta.$attrsToReflect$ = [];\n            }\n            if (BUILD.watchCallback) {\n                cmpMeta.$watchers$ = (_a = compactMeta[4]) !== null && _a !== void 0 ? _a : {};\n            }\n            if (BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n                cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;\n            }\n            const tagName = BUILD.transformTagName && options.transformTagName\n                ? options.transformTagName(cmpMeta.$tagName$)\n                : cmpMeta.$tagName$;\n            const HostElement = class extends HTMLElement {\n                // StencilLazyHost\n                constructor(self) {\n                    // @ts-ignore\n                    super(self);\n                    self = this;\n                    registerHost(self, cmpMeta);\n                    if (BUILD.shadowDom && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        // this component is using shadow dom\n                        // and this browser supports shadow dom\n                        // add the read-only property \"shadowRoot\" to the host element\n                        // adding the shadow root build conditionals to minimize runtime\n                        if (supportsShadow) {\n                            if (BUILD.shadowDelegatesFocus) {\n                                self.attachShadow({\n                                    mode: 'open',\n                                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),\n                                });\n                            }\n                            else {\n                                self.attachShadow({ mode: 'open' });\n                            }\n                        }\n                        else if (!BUILD.hydrateServerSide && !('shadowRoot' in self)) {\n                            self.shadowRoot = self;\n                        }\n                    }\n                }\n                connectedCallback() {\n                    if (appLoadFallback) {\n                        clearTimeout(appLoadFallback);\n                        appLoadFallback = null;\n                    }\n                    if (isBootstrapping) {\n                        // connectedCallback will be processed once all components have been registered\n                        deferredConnectedCallbacks.push(this);\n                    }\n                    else {\n                        plt.jmp(() => connectedCallback(this));\n                    }\n                }\n                disconnectedCallback() {\n                    plt.jmp(() => disconnectedCallback(this));\n                }\n                componentOnReady() {\n                    return getHostRef(this).$onReadyPromise$;\n                }\n            };\n            // TODO(STENCIL-914): this check and `else` block can go away and be replaced by just the `scoped` check\n            if (BUILD.experimentalSlotFixes) {\n                // This check is intentionally not combined with the surrounding `experimentalSlotFixes` check\n                // since, moving forward, we only want to patch the pseudo shadow DOM when the component is scoped\n                if (BUILD.scoped && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n                    patchPseudoShadowDom(HostElement.prototype, cmpMeta);\n                }\n            }\n            else {\n                if (BUILD.slotChildNodesFix) {\n                    patchChildSlotNodes(HostElement.prototype, cmpMeta);\n                }\n                if (BUILD.cloneNodeFix) {\n                    patchCloneNode(HostElement.prototype);\n                }\n                if (BUILD.appendChildSlotFix) {\n                    patchSlotAppendChild(HostElement.prototype);\n                }\n                if (BUILD.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {\n                    patchTextContent(HostElement.prototype);\n                }\n            }\n            // if the component is formAssociated we need to set that on the host\n            // element so that it will be ready for `attachInternals` to be called on\n            // it later on\n            if (BUILD.formAssociated && cmpMeta.$flags$ & 64 /* CMP_FLAGS.formAssociated */) {\n                HostElement.formAssociated = true;\n            }\n            if (BUILD.hotModuleReplacement) {\n                // if we're in an HMR dev build then we need to set up the callback\n                // which will carry out the work of actually replacing the module for\n                // this particular component\n                HostElement.prototype['s-hmr'] = function (hmrVersionId) {\n                    hmrStart(this, cmpMeta, hmrVersionId);\n                };\n            }\n            cmpMeta.$lazyBundleId$ = lazyBundle[0];\n            if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n                cmpTags.push(tagName);\n                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */));\n            }\n        });\n    });\n    // Only bother generating CSS if we have components\n    // TODO(STENCIL-1118): Add test cases for CSS content based on conditionals\n    if (cmpTags.length > 0) {\n        // Add styles for `slot-fb` elements if any of our components are using slots outside the Shadow DOM\n        if (hasSlotRelocation) {\n            dataStyles.innerHTML += SLOT_FB_CSS;\n        }\n        // Add hydration styles\n        if (BUILD.invisiblePrehydration && (BUILD.hydratedClass || BUILD.hydratedAttribute)) {\n            dataStyles.innerHTML += cmpTags + HYDRATED_CSS;\n        }\n        // If we have styles, add them to the DOM\n        if (dataStyles.innerHTML.length) {\n            dataStyles.setAttribute('data-styles', '');\n            // Apply CSP nonce to the style tag if it exists\n            const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n            if (nonce != null) {\n                dataStyles.setAttribute('nonce', nonce);\n            }\n            // Insert the styles into the document head\n            // NOTE: this _needs_ to happen last so we can ensure the nonce (and other attributes) are applied\n            head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n        }\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map((host) => host.connectedCallback());\n    }\n    else {\n        if (BUILD.profile) {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30, 'timeout')));\n        }\n        else {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst Fragment = (_, children) => children;\nconst addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n    if (BUILD.hostListener && listeners) {\n        // this is called immediately within the element's constructor\n        // initialize our event listeners on the host element\n        // we do this now so that we can listen to events that may\n        // have fired even before the instance is ready\n        if (BUILD.hostListenerTargetParent) {\n            // this component may have event listeners that should be attached to the parent\n            if (attachParentListeners) {\n                // this is being ran from within the connectedCallback\n                // which is important so that we know the host element actually has a parent element\n                // filter out the listeners to only have the ones that ARE being attached to the parent\n                listeners = listeners.filter(([flags]) => flags & 32 /* LISTENER_FLAGS.TargetParent */);\n            }\n            else {\n                // this is being ran from within the component constructor\n                // everything BUT the parent element listeners should be attached at this time\n                // filter out the listeners that are NOT being attached to the parent\n                listeners = listeners.filter(([flags]) => !(flags & 32 /* LISTENER_FLAGS.TargetParent */));\n            }\n        }\n        listeners.map(([flags, name, method]) => {\n            const target = BUILD.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n            const handler = hostListenerProxy(hostRef, method);\n            const opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n        });\n    }\n};\nconst hostListenerProxy = (hostRef, methodName) => (ev) => {\n    try {\n        if (BUILD.lazyLoad) {\n            if (hostRef.$flags$ & 256 /* HOST_FLAGS.isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n            }\n        }\n        else {\n            hostRef.$hostElement$[methodName](ev);\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n};\nconst getHostListenerTarget = (elm, flags) => {\n    if (BUILD.hostListenerTargetDocument && flags & 4 /* LISTENER_FLAGS.TargetDocument */)\n        return doc;\n    if (BUILD.hostListenerTargetWindow && flags & 8 /* LISTENER_FLAGS.TargetWindow */)\n        return win;\n    if (BUILD.hostListenerTargetBody && flags & 16 /* LISTENER_FLAGS.TargetBody */)\n        return doc.body;\n    if (BUILD.hostListenerTargetParent && flags & 32 /* LISTENER_FLAGS.TargetParent */)\n        return elm.parentElement;\n    return elm;\n};\n// prettier-ignore\nconst hostListenerOpts = (flags) => supportsListenerOptions\n    ? ({\n        passive: (flags & 1 /* LISTENER_FLAGS.Passive */) !== 0,\n        capture: (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0,\n    })\n    : (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0;\n/**\n * Assigns the given value to the nonce property on the runtime platform object.\n * During runtime, this value is used to set the nonce attribute on all dynamically created script and style tags.\n * @param nonce The value to be assigned to the platform nonce property.\n * @returns void\n */\nconst setNonce = (nonce) => (plt.$nonce$ = nonce);\nconst setPlatformOptions = (opts) => Object.assign(plt, opts);\n/**\n * Updates the DOM generated on the server with annotations such as node attributes and\n * comment nodes to facilitate future client-side hydration. These annotations are used for things\n * like moving elements back to their original hosts if using Shadow DOM on the client, and for quickly\n * reconstructing the vNode representations of the DOM.\n *\n * @param doc The DOM generated by the server.\n * @param staticComponents Any components that should be considered static and do not need client-side hydration.\n */\nconst insertVdomAnnotations = (doc, staticComponents) => {\n    if (doc != null) {\n        const docData = {\n            hostIds: 0,\n            rootLevelIds: 0,\n            staticComponents: new Set(staticComponents),\n        };\n        const orgLocationNodes = [];\n        parseVNodeAnnotations(doc, doc.body, docData, orgLocationNodes);\n        orgLocationNodes.forEach((orgLocationNode) => {\n            var _a, _b;\n            if (orgLocationNode != null && orgLocationNode['s-nr']) {\n                const nodeRef = orgLocationNode['s-nr'];\n                let hostId = nodeRef['s-host-id'];\n                let nodeId = nodeRef['s-node-id'];\n                let childId = `${hostId}.${nodeId}`;\n                if (hostId == null) {\n                    hostId = 0;\n                    docData.rootLevelIds++;\n                    nodeId = docData.rootLevelIds;\n                    childId = `${hostId}.${nodeId}`;\n                    if (nodeRef.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n                        nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n                    }\n                    else if (nodeRef.nodeType === 3 /* NODE_TYPE.TextNode */) {\n                        if (hostId === 0) {\n                            const textContent = (_a = nodeRef.nodeValue) === null || _a === void 0 ? void 0 : _a.trim();\n                            if (textContent === '') {\n                                // useless whitespace node at the document root\n                                orgLocationNode.remove();\n                                return;\n                            }\n                        }\n                        const commentBeforeTextNode = doc.createComment(childId);\n                        commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n                        (_b = nodeRef.parentNode) === null || _b === void 0 ? void 0 : _b.insertBefore(commentBeforeTextNode, nodeRef);\n                    }\n                }\n                let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n                const orgLocationParentNode = orgLocationNode.parentElement;\n                if (orgLocationParentNode) {\n                    if (orgLocationParentNode['s-en'] === '') {\n                        // ending with a \".\" means that the parent element\n                        // of this node's original location is a SHADOW dom element\n                        // and this node is apart of the root level light dom\n                        orgLocationNodeId += `.`;\n                    }\n                    else if (orgLocationParentNode['s-en'] === 'c') {\n                        // ending with a \".c\" means that the parent element\n                        // of this node's original location is a SCOPED element\n                        // and this node is apart of the root level light dom\n                        orgLocationNodeId += `.c`;\n                    }\n                }\n                orgLocationNode.nodeValue = orgLocationNodeId;\n            }\n        });\n    }\n};\n/**\n * Recursively parses a node generated by the server and its children to set host and child id\n * attributes read during client-side hydration. This function also tracks whether each node is\n * an original location reference node meaning that a node has been moved via slot relocation.\n *\n * @param doc The DOM generated by the server.\n * @param node The node to parse.\n * @param docData An object containing metadata about the document.\n * @param orgLocationNodes An array of nodes that have been moved via slot relocation.\n */\nconst parseVNodeAnnotations = (doc, node, docData, orgLocationNodes) => {\n    if (node == null) {\n        return;\n    }\n    if (node['s-nr'] != null) {\n        orgLocationNodes.push(node);\n    }\n    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        node.childNodes.forEach((childNode) => {\n            const hostRef = getHostRef(childNode);\n            if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n                const cmpData = {\n                    nodeIds: 0,\n                };\n                insertVNodeAnnotations(doc, childNode, hostRef.$vnode$, docData, cmpData);\n            }\n            parseVNodeAnnotations(doc, childNode, docData, orgLocationNodes);\n        });\n    }\n};\n/**\n * Insert attribute annotations on an element for its host ID and, potentially, its child ID.\n * Also makes calls to insert annotations on the element's children, keeping track of the depth of\n * the component tree.\n *\n * @param doc The DOM generated by the server.\n * @param hostElm The element to insert annotations for.\n * @param vnode The vNode representation of the element.\n * @param docData An object containing metadata about the document.\n * @param cmpData An object containing metadata about the component.\n */\nconst insertVNodeAnnotations = (doc, hostElm, vnode, docData, cmpData) => {\n    if (vnode != null) {\n        const hostId = ++docData.hostIds;\n        hostElm.setAttribute(HYDRATE_ID, hostId);\n        if (hostElm['s-cr'] != null) {\n            hostElm['s-cr'].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n        }\n        if (vnode.$children$ != null) {\n            const depth = 0;\n            vnode.$children$.forEach((vnodeChild, index) => {\n                insertChildVNodeAnnotations(doc, vnodeChild, cmpData, hostId, depth, index);\n            });\n        }\n        // If this element does not already have a child ID and has a sibling comment node\n        // representing a slot, we use the content of the comment to set the child ID attribute\n        // on the host element.\n        if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n            const parent = hostElm.parentElement;\n            if (parent && parent.childNodes) {\n                const parentChildNodes = Array.from(parent.childNodes);\n                const comment = parentChildNodes.find((node) => node.nodeType === 8 /* NODE_TYPE.CommentNode */ && node['s-sr']);\n                if (comment) {\n                    const index = parentChildNodes.indexOf(hostElm) - 1;\n                    vnode.$elm$.setAttribute(HYDRATE_CHILD_ID, `${comment['s-host-id']}.${comment['s-node-id']}.0.${index}`);\n                }\n            }\n        }\n    }\n};\n/**\n * Recursively analyzes the type of a child vNode and inserts annotations on the vNodes's element based on its type.\n * Element nodes receive a child ID attribute, text nodes have a comment with the child ID inserted before them,\n * and comment nodes representing a slot have their node value set to a slot node ID containing the child ID.\n *\n * @param doc The DOM generated by the server.\n * @param vnodeChild The vNode to insert annotations for.\n * @param cmpData An object containing metadata about the component.\n * @param hostId The host ID of this element's parent.\n * @param depth How deep this element sits in the component tree relative to its parent.\n * @param index The index of this element in its parent's children array.\n */\nconst insertChildVNodeAnnotations = (doc, vnodeChild, cmpData, hostId, depth, index) => {\n    const childElm = vnodeChild.$elm$;\n    if (childElm == null) {\n        return;\n    }\n    const nodeId = cmpData.nodeIds++;\n    const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n    childElm['s-host-id'] = hostId;\n    childElm['s-node-id'] = nodeId;\n    if (childElm.nodeType === 1 /* NODE_TYPE.ElementNode */) {\n        childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n    }\n    else if (childElm.nodeType === 3 /* NODE_TYPE.TextNode */) {\n        const parentNode = childElm.parentNode;\n        const nodeName = parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeName;\n        if (nodeName !== 'STYLE' && nodeName !== 'SCRIPT') {\n            const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n            const commentBeforeTextNode = doc.createComment(textNodeId);\n            parentNode === null || parentNode === void 0 ? void 0 : parentNode.insertBefore(commentBeforeTextNode, childElm);\n        }\n    }\n    else if (childElm.nodeType === 8 /* NODE_TYPE.CommentNode */) {\n        if (childElm['s-sr']) {\n            const slotName = childElm['s-sn'] || '';\n            const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n            childElm.nodeValue = slotNodeId;\n        }\n    }\n    if (vnodeChild.$children$ != null) {\n        // Increment depth each time we recur deeper into the tree\n        const childDepth = depth + 1;\n        vnodeChild.$children$.forEach((vnode, index) => {\n            insertChildVNodeAnnotations(doc, vnode, cmpData, hostId, childDepth, index);\n        });\n    }\n};\nvar _a;\n/**\n * A WeakMap mapping runtime component references to their corresponding host reference\n * instances.\n *\n * **Note**: If we're in an HMR context we need to store a reference to this\n * value on `window` in order to maintain the mapping of {@link d.RuntimeRef}\n * to {@link d.HostRef} across HMR updates.\n *\n * This is necessary because when HMR updates for a component are processed by\n * the browser-side dev server client the JS bundle for that component is\n * re-fetched. Since the module containing {@link hostRefs} is included in\n * that bundle, if we do not store a reference to it the new iteration of the\n * component will not have access to the previous hostRef map, leading to a\n * bug where the new version of the component cannot properly initialize.\n */\nconst hostRefs = BUILD.hotModuleReplacement\n    ? ((_a = window).__STENCIL_HOSTREFS__ || (_a.__STENCIL_HOSTREFS__ = new WeakMap()))\n    : new WeakMap();\n/**\n * Given a {@link d.RuntimeRef} retrieve the corresponding {@link d.HostRef}\n *\n * @param ref the runtime ref of interest\n * @returns the Host reference (if found) or undefined\n */\nconst getHostRef = (ref) => hostRefs.get(ref);\n/**\n * Register a lazy instance with the {@link hostRefs} object so it's\n * corresponding {@link d.HostRef} can be retrieved later.\n *\n * @param lazyInstance the lazy instance of interest\n * @param hostRef that instances `HostRef` object\n * @returns a reference to the host ref WeakMap\n */\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\n/**\n * Register a host element for a Stencil component, setting up various metadata\n * and callbacks based on {@link BUILD} flags as well as the component's runtime\n * metadata.\n *\n * @param hostElement the host element to register\n * @param cmpMeta runtime metadata for that component\n * @returns a reference to the host ref WeakMap\n */\nconst registerHost = (hostElement, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: hostElement,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    if (BUILD.isDev) {\n        hostRef.$renderCount$ = 0;\n    }\n    if (BUILD.method && BUILD.lazyLoad) {\n        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));\n    }\n    if (BUILD.asyncLoading) {\n        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));\n        hostElement['s-p'] = [];\n        hostElement['s-rc'] = [];\n    }\n    addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$, false);\n    return hostRefs.set(hostElement, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (customError || console.error)(e, el);\nconst STENCIL_DEV_MODE = BUILD.isTesting\n    ? ['STENCIL:'] // E2E testing\n    : [\n        '%cstencil',\n        'color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px',\n    ];\nconst consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nconst consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nconst consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nconst setErrorHandler = (handler) => (customError = handler);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if (BUILD.isDev && typeof bundleId !== 'string') {\n        consoleDevError(`Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`);\n        return undefined;\n    }\n    const module = !BUILD.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n    if (module) {\n        return module[exportName];\n    }\n    /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n    return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD.hotModuleReplacement && hmrVersionId ? '?s-hmr=' + hmrVersionId : ''}`).then((importedModule) => {\n        if (!BUILD.hotModuleReplacement) {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = /*@__PURE__*/ new Map();\nconst modeResolutionChain = [];\nconst win = typeof window !== 'undefined' ? window : {};\nconst doc = win.document || { head: {} };\nconst H = (win.HTMLElement || class {\n});\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst setPlatformHelpers = (helpers) => {\n    Object.assign(plt, helpers);\n};\nconst supportsShadow = \n// TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\nBUILD.shadowDomShim && BUILD.shadowDom\n    ? /*@__PURE__*/ (() => (doc.head.attachShadow + '').indexOf('[native') > -1)()\n    : true;\nconst supportsListenerOptions = /*@__PURE__*/ (() => {\n    let supportsListenerOptions = false;\n    try {\n        doc.addEventListener('e', null, Object.defineProperty({}, 'passive', {\n            get() {\n                supportsListenerOptions = true;\n            },\n        }));\n    }\n    catch (e) { }\n    return supportsListenerOptions;\n})();\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructableStylesheets = BUILD.constructableCSS\n    ? /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof new CSSStyleSheet().replaceSync === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    : false;\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueDomWritesLow = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* PLATFORM_FLAGS.queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst consumeTimeout = (queue, timeout) => {\n    let i = 0;\n    let ts = 0;\n    while (i < queue.length && (ts = performance.now()) < timeout) {\n        try {\n            queue[i++](ts);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    if (i === queue.length) {\n        queue.length = 0;\n    }\n    else if (i !== 0) {\n        queue.splice(0, i);\n    }\n};\nconst flush = () => {\n    if (BUILD.asyncQueue) {\n        queueCongestion++;\n    }\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    if (BUILD.asyncQueue) {\n        const timeout = (plt.$flags$ & 6 /* PLATFORM_FLAGS.queueMask */) === 2 /* PLATFORM_FLAGS.appLoaded */\n            ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0))\n            : Infinity;\n        consumeTimeout(queueDomWrites, timeout);\n        consumeTimeout(queueDomWritesLow, timeout);\n        if (queueDomWrites.length > 0) {\n            queueDomWritesLow.push(...queueDomWrites);\n            queueDomWrites.length = 0;\n        }\n        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n        else {\n            queueCongestion = 0;\n        }\n    }\n    else {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = (cb) => promiseResolve().then(cb);\nconst readTask = /*@__PURE__*/ queueTask(queueDomReads, false);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\nexport { BUILD, Env, NAMESPACE } from '@stencil/core/internal/app-data';\nexport { Build, Fragment, H, H as HTMLElement, Host, STENCIL_DEV_MODE, addHostEventListeners, bootstrapLazy, cmpModules, connectedCallback, consoleDevError, consoleDevInfo, consoleDevWarn, consoleError, createEvent, defineCustomElement, disconnectedCallback, doc, forceModeUpdate, forceUpdate, getAssetPath, getElement, getHostRef, getMode, getRenderingRef, getValue, h, insertVdomAnnotations, isMemberInElement, loadModule, modeResolutionChain, nextTick, parsePropertyValue, plt, postUpdateComponent, promiseResolve, proxyComponent, proxyCustomElement, readTask, registerHost, registerInstance, renderVdom, setAssetPath, setErrorHandler, setMode, setNonce, setPlatformHelpers, setPlatformOptions, setValue, styles, supportsConstructableStylesheets, supportsListenerOptions, supportsShadow, win, writeTask };\n","export { setNonce } from '@stencil/core';\nimport { bootstrapLazy } from '@stencil/core';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\nexport const defineCustomElements = (win, options) => {\n  if (typeof window === 'undefined') return undefined;\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n};\n","export function applyPolyfills() {\n  var promises = [];\n  if (typeof window !== 'undefined') {\n    var win = window;\n\n    if (!win.customElements ||\n      (win.Element && (!win.Element.prototype.closest || !win.Element.prototype.matches || !win.Element.prototype.remove || !win.Element.prototype.getRootNode))) {\n      promises.push(import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js'));\n    }\n\n    var checkIfURLIsSupported = function() {\n      try {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        return (u.href === 'http://a/c%20d') && u.searchParams;\n      } catch (e) {\n        return false;\n      }\n    };\n\n    if (\n      'function' !== typeof Object.assign || !Object.entries ||\n      !Array.prototype.find || !Array.prototype.includes ||\n      !String.prototype.startsWith || !String.prototype.endsWith ||\n      (win.NodeList && !win.NodeList.prototype.forEach) ||\n      !win.fetch ||\n      !checkIfURLIsSupported() ||\n      typeof WeakMap == 'undefined'\n    ) {\n      promises.push(import(/* webpackChunkName: \"polyfills-core-js\" */ './core-js.js'));\n    }\n  }\n  return Promise.all(promises);\n}\n","\n(function(){if(\"undefined\"!==typeof window&&void 0!==window.Reflect&&void 0!==window.customElements){var a=HTMLElement;window.HTMLElement=function(){return Reflect.construct(a,[],this.constructor)};HTMLElement.prototype=a.prototype;HTMLElement.prototype.constructor=HTMLElement;Object.setPrototypeOf(HTMLElement,a)}})();\nexport * from '../dist/esm/polyfills/index.js';\nexport * from '../dist/esm/loader.js';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"customer-web-billing-invoice-mfe:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\t\tscript.type = \"module\";\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = __webpack_require__.tu(url);\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.S = {};\nvar initPromises = {};\nvar initTokens = {};\n__webpack_require__.I = (name, initScope) => {\n\tif(!initScope) initScope = [];\n\t// handling circular init calls\n\tvar initToken = initTokens[name];\n\tif(!initToken) initToken = initTokens[name] = {};\n\tif(initScope.indexOf(initToken) >= 0) return;\n\tinitScope.push(initToken);\n\t// only runs once\n\tif(initPromises[name]) return initPromises[name];\n\t// creates a new share scope if needed\n\tif(!__webpack_require__.o(__webpack_require__.S, name)) __webpack_require__.S[name] = {};\n\t// runs all init snippets from all modules reachable\n\tvar scope = __webpack_require__.S[name];\n\tvar warn = (msg) => {\n\t\tif (typeof console !== \"undefined\" && console.warn) console.warn(msg);\n\t};\n\tvar uniqueName = \"customer-web-billing-invoice-mfe\";\n\tvar register = (name, version, factory, eager) => {\n\t\tvar versions = scope[name] = scope[name] || {};\n\t\tvar activeVersion = versions[version];\n\t\tif(!activeVersion || (!activeVersion.loaded && (!eager != !activeVersion.eager ? eager : uniqueName > activeVersion.from))) versions[version] = { get: factory, from: uniqueName, eager: !!eager };\n\t};\n\tvar initExternal = (id) => {\n\t\tvar handleError = (err) => (warn(\"Initialization of sharing external failed: \" + err));\n\t\ttry {\n\t\t\tvar module = __webpack_require__(id);\n\t\t\tif(!module) return;\n\t\t\tvar initFn = (module) => (module && module.init && module.init(__webpack_require__.S[name], initScope))\n\t\t\tif(module.then) return promises.push(module.then(initFn, handleError));\n\t\t\tvar initResult = initFn(module);\n\t\t\tif(initResult && initResult.then) return promises.push(initResult['catch'](handleError));\n\t\t} catch(err) { handleError(err); }\n\t}\n\tvar promises = [];\n\tswitch(name) {\n\t\tcase \"default\": {\n\t\t\tregister(\"@angular/common/http\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_common_fesm2022_http_mjs-_f9340\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/common/fesm2022/http.mjs */ 54860))))));\n\t\t\tregister(\"@angular/common\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_common_fesm2022_common_mjs-_b4621\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/common/fesm2022/common.mjs */ 26575))))));\n\t\t\tregister(\"@angular/core/primitives/signals\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_core_fesm2022_primitives_signals_mjs\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/core/fesm2022/primitives/signals.mjs */ 38186))))));\n\t\t\tregister(\"@angular/core/rxjs-interop\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_core_fesm2022_rxjs-interop_mjs-_b06f0\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/core/fesm2022/rxjs-interop.mjs */ 60839))))));\n\t\t\tregister(\"@angular/core\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_core_fesm2022_core_mjs\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/core/fesm2022/core.mjs */ 61699))))));\n\t\t\tregister(\"@angular/forms\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_forms_fesm2022_forms_mjs-_0f7c0\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/forms/fesm2022/forms.mjs */ 28849))))));\n\t\t\tregister(\"@angular/material-moment-adapter\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_material-moment-adapter_fesm2022_material-moment-adapter_mjs-_9e8e0\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/material-moment-adapter/fesm2022/material-moment-adapter.mjs */ 73392))))));\n\t\t\tregister(\"@angular/material/button\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_button_mjs-_52ba0\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/material/fesm2022/button.mjs */ 90895))))));\n\t\t\tregister(\"@angular/material/core\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_core_mjs-_90eb0\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/material/fesm2022/core.mjs */ 55309))))));\n\t\t\tregister(\"@angular/material/datepicker\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_datepicker_mjs-_f7480\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/material/fesm2022/datepicker.mjs */ 82226))))));\n\t\t\tregister(\"@angular/material/dialog\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_dialog_mjs-_b8750\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/material/fesm2022/dialog.mjs */ 17401))))));\n\t\t\tregister(\"@angular/material/form-field\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_form-field_mjs-_1aed0\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/material/fesm2022/form-field.mjs */ 51333))))));\n\t\t\tregister(\"@angular/material/input\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_input_mjs-_34bc0\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/material/fesm2022/input.mjs */ 10026))))));\n\t\t\tregister(\"@angular/material/select\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_select_mjs-_b9180\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/material/fesm2022/select.mjs */ 96355))))));\n\t\t\tregister(\"@angular/router\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_angular_router_fesm2022_router_mjs-_5a220\").then(() => (() => (__webpack_require__(/*! ./node_modules/@angular/router/fesm2022/router.mjs */ 27947))))));\n\t\t\tregister(\"@billing/invoice-overview/data-access\", \"24.17.0\", () => (__webpack_require__.e(\"libs_billing_invoice_overview_data-access_src_index_ts-_c1d60\").then(() => (() => (__webpack_require__(/*! ./libs/billing/invoice/overview/data-access/src/index.ts */ 33328))))));\n\t\t\tregister(\"@billing/invoice-overview/feat-billing-overview\", \"24.17.0\", () => (__webpack_require__.e(\"libs_billing_invoice_overview_feat-billing-overview_src_index_ts\").then(() => (() => (__webpack_require__(/*! ./libs/billing/invoice/overview/feat-billing-overview/src/index.ts */ 95270))))));\n\t\t\tregister(\"@billing/invoice-overview/ui\", \"24.17.0\", () => (__webpack_require__.e(\"libs_billing_invoice_overview_ui_src_index_ts-_072f0\").then(() => (() => (__webpack_require__(/*! ./libs/billing/invoice/overview/ui/src/index.ts */ 29533))))));\n\t\t\tregister(\"@billing/shared/feat-billing-account-selector\", \"24.17.0\", () => (__webpack_require__.e(\"libs_billing_invoice_overview_feat-billing-account-selector_src_index_ts-_31490\").then(() => (() => (__webpack_require__(/*! ./libs/billing/invoice/overview/feat-billing-account-selector/src/index.ts */ 62108))))));\n\t\t\tregister(\"@billing/shared/ui\", \"24.17.0\", () => (__webpack_require__.e(\"libs_billing_shared_ui_src_index_ts-_deff0\").then(() => (() => (__webpack_require__(/*! ./libs/billing/shared/ui/src/index.ts */ 53315))))));\n\t\t\tregister(\"@ngrx/effects\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_ngrx_effects_fesm2022_ngrx-effects_mjs-_56480\").then(() => (() => (__webpack_require__(/*! ./node_modules/@ngrx/effects/fesm2022/ngrx-effects.mjs */ 1575))))));\n\t\t\tregister(\"@ngrx/signals/rxjs-interop\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_ngrx_signals_fesm2022_ngrx-signals-rxjs-interop_mjs-_73310\").then(() => (() => (__webpack_require__(/*! ./node_modules/@ngrx/signals/fesm2022/ngrx-signals-rxjs-interop.mjs */ 47938))))));\n\t\t\tregister(\"@ngrx/signals\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_ngrx_signals_fesm2022_ngrx-signals_mjs-_4cc61\").then(() => (() => (__webpack_require__(/*! ./node_modules/@ngrx/signals/fesm2022/ngrx-signals.mjs */ 10503))))));\n\t\t\tregister(\"@ngrx/store-devtools\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_ngrx_store-devtools_fesm2022_ngrx-store-devtools_mjs-_f60c0\").then(() => (() => (__webpack_require__(/*! ./node_modules/@ngrx/store-devtools/fesm2022/ngrx-store-devtools.mjs */ 50448))))));\n\t\t\tregister(\"@ngrx/store\", \"17.1.0\", () => (__webpack_require__.e(\"node_modules_ngrx_store_fesm2022_ngrx-store_mjs-_da110\").then(() => (() => (__webpack_require__(/*! ./node_modules/@ngrx/store/fesm2022/ngrx-store.mjs */ 36270))))));\n\t\t\tregister(\"@ngx-translate/core\", \"15.0.0\", () => (__webpack_require__.e(\"node_modules_ngx-translate_core_dist_fesm2022_ngx-translate-core_mjs-_63780\").then(() => (() => (__webpack_require__(/*! ./node_modules/@ngx-translate/core/dist/fesm2022/ngx-translate-core.mjs */ 5939))))));\n\t\t\tregister(\"@ngx-translate/http-loader\", \"8.0.0\", () => (__webpack_require__.e(\"node_modules_ngx-translate_http-loader_dist_fesm2022_ngx-translate-http-loader_mjs\").then(() => (() => (__webpack_require__(/*! ./node_modules/@ngx-translate/http-loader/dist/fesm2022/ngx-translate-http-loader.mjs */ 70614))))));\n\t\t\tregister(\"@telenet/ng-lib-config\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_config_src_index_ts-_cef30\").then(() => (() => (__webpack_require__(/*! ./libs/shared/config/src/index.ts */ 13478))))));\n\t\t\tregister(\"@telenet/ng-lib-datalayer\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_datalayer_src_index_ts-_6b2b0\").then(() => (() => (__webpack_require__(/*! ./libs/shared/datalayer/src/index.ts */ 68589))))));\n\t\t\tregister(\"@telenet/ng-lib-form\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_form_src_components_form-info_form-info_component_ts-libs_shared_form_src_compone-326a2c0\").then(() => (() => (__webpack_require__(/*! ./libs/shared/form/src/index.ts */ 10582))))));\n\t\t\tregister(\"@telenet/ng-lib-layout\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_layout_src_index_ts-_38680\").then(() => (() => (__webpack_require__(/*! ./libs/shared/layout/src/index.ts */ 4445))))));\n\t\t\tregister(\"@telenet/ng-lib-message\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_message_src_index_ts-_15010\").then(() => (() => (__webpack_require__(/*! ./libs/shared/message/src/index.ts */ 64976))))));\n\t\t\tregister(\"@telenet/ng-lib-ocapi\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_ocapi_src_index_ts-_82a80\").then(() => (() => (__webpack_require__(/*! ./libs/shared/ocapi/src/index.ts */ 43421))))));\n\t\t\tregister(\"@telenet/ng-lib-omapi-query\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_omapi-query_src_index_ts-_d2f80\").then(() => (() => (__webpack_require__(/*! ./libs/shared/omapi-query/src/index.ts */ 45528))))));\n\t\t\tregister(\"@telenet/ng-lib-omapi\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_omapi_src_index_ts-_134d0\").then(() => (() => (__webpack_require__(/*! ./libs/shared/omapi/src/index.ts */ 70654))))));\n\t\t\tregister(\"@telenet/ng-lib-page\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_page_src_index_ts-_25ef0\").then(() => (() => (__webpack_require__(/*! ./libs/shared/page/src/index.ts */ 92233))))));\n\t\t\tregister(\"@telenet/ng-lib-shared\", \"1.0.0\", () => (__webpack_require__.e(\"libs_shared_shared_src_index_ts-_5e330\").then(() => (() => (__webpack_require__(/*! ./libs/shared/shared/src/index.ts */ 76881))))));\n\t\t\tregister(\"@telenet/wink-ng\", \"0.0.1\", () => (__webpack_require__.e(\"libs_foundation_wink_ng_src_index_ts-_bd040\").then(() => (() => (__webpack_require__(/*! ./libs/foundation/wink/ng/src/index.ts */ 86016))))));\n\t\t\tregister(\"ngx-mask\", \"17.0.5\", () => (__webpack_require__.e(\"node_modules_ngx-mask_fesm2022_ngx-mask_mjs-_a6a60\").then(() => (() => (__webpack_require__(/*! ./node_modules/ngx-mask/fesm2022/ngx-mask.mjs */ 97728))))));\n\t\t\tregister(\"rxjs/operators\", \"7.8.1\", () => (__webpack_require__.e(\"node_modules_rxjs_dist_esm_operators_index_js\").then(() => (() => (__webpack_require__(/*! ./node_modules/rxjs/dist/esm/operators/index.js */ 78238))))));\n\t\t\tregister(\"rxjs\", \"7.8.1\", () => (__webpack_require__.e(\"node_modules_rxjs_dist_esm_index_js\").then(() => (() => (__webpack_require__(/*! ./node_modules/rxjs/dist/esm/index.js */ 83946))))));\n\t\t\tregister(\"udl\", \"24.10.627691\", () => (__webpack_require__.e(\"node_modules_udl_dist_index_js\").then(() => (() => (__webpack_require__(/*! ./node_modules/udl/dist/index.js */ 95597))))));\n\t\t}\n\t\tbreak;\n\t}\n\tif(!promises.length) return initPromises[name] = 1;\n\treturn initPromises[name] = Promise.all(promises).then(() => (initPromises[name] = 1));\n};","var policy;\n__webpack_require__.tt = () => {\n\t// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\n\tif (policy === undefined) {\n\t\tpolicy = {\n\t\t\tcreateScriptURL: (url) => (url)\n\t\t};\n\t\tif (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {\n\t\t\tpolicy = trustedTypes.createPolicy(\"angular#bundler\", policy);\n\t\t}\n\t}\n\treturn policy;\n};","__webpack_require__.tu = (url) => (__webpack_require__.tt().createScriptURL(url));","var scriptUrl;\nif (typeof import.meta.url === \"string\") scriptUrl = import.meta.url\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","var parseVersion = (str) => {\n\t// see webpack/lib/util/semver.js for original code\n\tvar p=p=>{return p.split(\".\").map((p=>{return+p==p?+p:p}))},n=/^([^-+]+)?(?:-([^+]+))?(?:\\+(.+))?$/.exec(str),r=n[1]?p(n[1]):[];return n[2]&&(r.length++,r.push.apply(r,p(n[2]))),n[3]&&(r.push([]),r.push.apply(r,p(n[3]))),r;\n}\nvar versionLt = (a, b) => {\n\t// see webpack/lib/util/semver.js for original code\n\ta=parseVersion(a),b=parseVersion(b);for(var r=0;;){if(r>=a.length)return r<b.length&&\"u\"!=(typeof b[r])[0];var e=a[r],n=(typeof e)[0];if(r>=b.length)return\"u\"==n;var t=b[r],f=(typeof t)[0];if(n!=f)return\"o\"==n&&\"n\"==f||(\"s\"==f||\"u\"==n);if(\"o\"!=n&&\"u\"!=n&&e!=t)return e<t;r++}\n}\nvar rangeToString = (range) => {\n\t// see webpack/lib/util/semver.js for original code\n\tvar r=range[0],n=\"\";if(1===range.length)return\"*\";if(r+.5){n+=0==r?\">=\":-1==r?\"<\":1==r?\"^\":2==r?\"~\":r>0?\"=\":\"!=\";for(var e=1,a=1;a<range.length;a++){e--,n+=\"u\"==(typeof(t=range[a]))[0]?\"-\":(e>0?\".\":\"\")+(e=2,t)}return n}var g=[];for(a=1;a<range.length;a++){var t=range[a];g.push(0===t?\"not(\"+o()+\")\":1===t?\"(\"+o()+\" || \"+o()+\")\":2===t?g.pop()+\" \"+g.pop():rangeToString(t))}return o();function o(){return g.pop().replace(/^\\((.+)\\)$/,\"$1\")}\n}\nvar satisfy = (range, version) => {\n\t// see webpack/lib/util/semver.js for original code\n\tif(0 in range){version=parseVersion(version);var e=range[0],r=e<0;r&&(e=-e-1);for(var n=0,i=1,a=!0;;i++,n++){var f,s,g=i<range.length?(typeof range[i])[0]:\"\";if(n>=version.length||\"o\"==(s=(typeof(f=version[n]))[0]))return!a||(\"u\"==g?i>e&&!r:\"\"==g!=r);if(\"u\"==s){if(!a||\"u\"!=g)return!1}else if(a)if(g==s)if(i<=e){if(f!=range[i])return!1}else{if(r?f>range[i]:f<range[i])return!1;f!=range[i]&&(a=!1)}else if(\"s\"!=g&&\"n\"!=g){if(r||i<=e)return!1;a=!1,i--}else{if(i<=e||s<g!=r)return!1;a=!1}else\"s\"!=g&&\"n\"!=g&&(a=!1,i--)}}var t=[],o=t.pop.bind(t);for(n=1;n<range.length;n++){var u=range[n];t.push(1==u?o()|o():2==u?o()&o():u?satisfy(u,version):!o())}return!!o();\n}\nvar ensureExistence = (scopeName, key) => {\n\tvar scope = __webpack_require__.S[scopeName];\n\tif(!scope || !__webpack_require__.o(scope, key)) throw new Error(\"Shared module \" + key + \" doesn't exist in shared scope \" + scopeName);\n\treturn scope;\n};\nvar findVersion = (scope, key) => {\n\tvar versions = scope[key];\n\tvar key = Object.keys(versions).reduce((a, b) => {\n\t\treturn !a || versionLt(a, b) ? b : a;\n\t}, 0);\n\treturn key && versions[key]\n};\nvar findSingletonVersionKey = (scope, key) => {\n\tvar versions = scope[key];\n\treturn Object.keys(versions).reduce((a, b) => {\n\t\treturn !a || (!versions[a].loaded && versionLt(a, b)) ? b : a;\n\t}, 0);\n};\nvar getInvalidSingletonVersionMessage = (scope, key, version, requiredVersion) => {\n\treturn \"Unsatisfied version \" + version + \" from \" + (version && scope[key][version].from) + \" of shared singleton module \" + key + \" (required \" + rangeToString(requiredVersion) + \")\"\n};\nvar getSingleton = (scope, scopeName, key, requiredVersion) => {\n\tvar version = findSingletonVersionKey(scope, key);\n\treturn get(scope[key][version]);\n};\nvar getSingletonVersion = (scope, scopeName, key, requiredVersion) => {\n\tvar version = findSingletonVersionKey(scope, key);\n\tif (!satisfy(requiredVersion, version)) warn(getInvalidSingletonVersionMessage(scope, key, version, requiredVersion));\n\treturn get(scope[key][version]);\n};\nvar getStrictSingletonVersion = (scope, scopeName, key, requiredVersion) => {\n\tvar version = findSingletonVersionKey(scope, key);\n\tif (!satisfy(requiredVersion, version)) throw new Error(getInvalidSingletonVersionMessage(scope, key, version, requiredVersion));\n\treturn get(scope[key][version]);\n};\nvar findValidVersion = (scope, key, requiredVersion) => {\n\tvar versions = scope[key];\n\tvar key = Object.keys(versions).reduce((a, b) => {\n\t\tif (!satisfy(requiredVersion, b)) return a;\n\t\treturn !a || versionLt(a, b) ? b : a;\n\t}, 0);\n\treturn key && versions[key]\n};\nvar getInvalidVersionMessage = (scope, scopeName, key, requiredVersion) => {\n\tvar versions = scope[key];\n\treturn \"No satisfying version (\" + rangeToString(requiredVersion) + \") of shared module \" + key + \" found in shared scope \" + scopeName + \".\\n\" +\n\t\t\"Available versions: \" + Object.keys(versions).map((key) => {\n\t\treturn key + \" from \" + versions[key].from;\n\t}).join(\", \");\n};\nvar getValidVersion = (scope, scopeName, key, requiredVersion) => {\n\tvar entry = findValidVersion(scope, key, requiredVersion);\n\tif(entry) return get(entry);\n\tthrow new Error(getInvalidVersionMessage(scope, scopeName, key, requiredVersion));\n};\nvar warn = (msg) => {\n\tif (typeof console !== \"undefined\" && console.warn) console.warn(msg);\n};\nvar warnInvalidVersion = (scope, scopeName, key, requiredVersion) => {\n\twarn(getInvalidVersionMessage(scope, scopeName, key, requiredVersion));\n};\nvar get = (entry) => {\n\tentry.loaded = 1;\n\treturn entry.get()\n};\nvar init = (fn) => (function(scopeName, a, b, c) {\n\tvar promise = __webpack_require__.I(scopeName);\n\tif (promise && promise.then) return promise.then(fn.bind(fn, scopeName, __webpack_require__.S[scopeName], a, b, c));\n\treturn fn(scopeName, __webpack_require__.S[scopeName], a, b, c);\n});\n\nvar load = /*#__PURE__*/ init((scopeName, scope, key) => {\n\tensureExistence(scopeName, key);\n\treturn get(findVersion(scope, key));\n});\nvar loadFallback = /*#__PURE__*/ init((scopeName, scope, key, fallback) => {\n\treturn scope && __webpack_require__.o(scope, key) ? get(findVersion(scope, key)) : fallback();\n});\nvar loadVersionCheck = /*#__PURE__*/ init((scopeName, scope, key, version) => {\n\tensureExistence(scopeName, key);\n\treturn get(findValidVersion(scope, key, version) || warnInvalidVersion(scope, scopeName, key, version) || findVersion(scope, key));\n});\nvar loadSingleton = /*#__PURE__*/ init((scopeName, scope, key) => {\n\tensureExistence(scopeName, key);\n\treturn getSingleton(scope, scopeName, key);\n});\nvar loadSingletonVersionCheck = /*#__PURE__*/ init((scopeName, scope, key, version) => {\n\tensureExistence(scopeName, key);\n\treturn getSingletonVersion(scope, scopeName, key, version);\n});\nvar loadStrictVersionCheck = /*#__PURE__*/ init((scopeName, scope, key, version) => {\n\tensureExistence(scopeName, key);\n\treturn getValidVersion(scope, scopeName, key, version);\n});\nvar loadStrictSingletonVersionCheck = /*#__PURE__*/ init((scopeName, scope, key, version) => {\n\tensureExistence(scopeName, key);\n\treturn getStrictSingletonVersion(scope, scopeName, key, version);\n});\nvar loadVersionCheckFallback = /*#__PURE__*/ init((scopeName, scope, key, version, fallback) => {\n\tif(!scope || !__webpack_require__.o(scope, key)) return fallback();\n\treturn get(findValidVersion(scope, key, version) || warnInvalidVersion(scope, scopeName, key, version) || findVersion(scope, key));\n});\nvar loadSingletonFallback = /*#__PURE__*/ init((scopeName, scope, key, fallback) => {\n\tif(!scope || !__webpack_require__.o(scope, key)) return fallback();\n\treturn getSingleton(scope, scopeName, key);\n});\nvar loadSingletonVersionCheckFallback = /*#__PURE__*/ init((scopeName, scope, key, version, fallback) => {\n\tif(!scope || !__webpack_require__.o(scope, key)) return fallback();\n\treturn getSingletonVersion(scope, scopeName, key, version);\n});\nvar loadStrictVersionCheckFallback = /*#__PURE__*/ init((scopeName, scope, key, version, fallback) => {\n\tvar entry = scope && __webpack_require__.o(scope, key) && findValidVersion(scope, key, version);\n\treturn entry ? get(entry) : fallback();\n});\nvar loadStrictSingletonVersionCheckFallback = /*#__PURE__*/ init((scopeName, scope, key, version, fallback) => {\n\tif(!scope || !__webpack_require__.o(scope, key)) return fallback();\n\treturn getStrictSingletonVersion(scope, scopeName, key, version);\n});\nvar installedModules = {};\nvar moduleToHandlerMapping = {\n\t33829: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/core\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_core_fesm2022_core_mjs\").then(() => (() => (__webpack_require__(/*! @angular/core */ 61699))))))),\n\t37934: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"rxjs/operators\", [4,7,8,1], () => (__webpack_require__.e(\"node_modules_rxjs_dist_esm_operators_index_js\").then(() => (() => (__webpack_require__(/*! rxjs/operators */ 78238))))))),\n\t44946: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"rxjs\", [4,7,8,1], () => (__webpack_require__.e(\"node_modules_rxjs_dist_esm_index_js\").then(() => (() => (__webpack_require__(/*! rxjs */ 83946))))))),\n\t84569: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/common\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_common_fesm2022_common_mjs-_b4620\").then(() => (() => (__webpack_require__(/*! @angular/common */ 26575))))))),\n\t66202: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/core/primitives/signals\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_core_fesm2022_primitives_signals_mjs\").then(() => (() => (__webpack_require__(/*! @angular/core/primitives/signals */ 38186))))))),\n\t49449: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/material/core\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_core_mjs-_90eb1\").then(() => (() => (__webpack_require__(/*! @angular/material/core */ 55309))))))),\n\t25139: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/material/button\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_button_mjs-_52ba1\").then(() => (() => (__webpack_require__(/*! @angular/material/button */ 90895))))))),\n\t44574: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/material/form-field\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_form-field_mjs-_1aed1\").then(() => (() => (__webpack_require__(/*! @angular/material/form-field */ 51333))))))),\n\t64101: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/material/input\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_input_mjs-_34bc1\").then(() => (() => (__webpack_require__(/*! @angular/material/input */ 10026))))))),\n\t70782: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/forms\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_forms_fesm2022_forms_mjs-_0f7c1\").then(() => (() => (__webpack_require__(/*! @angular/forms */ 28849))))))),\n\t1261: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/common/http\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_common_fesm2022_http_mjs-_f9341\").then(() => (() => (__webpack_require__(/*! @angular/common/http */ 54860))))))),\n\t21784: () => (loadFallback(\"default\", \"@telenet/ng-lib-page\", () => (__webpack_require__.e(\"libs_shared_page_src_index_ts-_25ef1\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-page */ 92233))))))),\n\t24104: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/core/rxjs-interop\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_core_fesm2022_rxjs-interop_mjs-_b06f1\").then(() => (() => (__webpack_require__(/*! @angular/core/rxjs-interop */ 60839))))))),\n\t26377: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@ngrx/signals/rxjs-interop\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_ngrx_signals_fesm2022_ngrx-signals-rxjs-interop_mjs-_73311\").then(() => (() => (__webpack_require__(/*! @ngrx/signals/rxjs-interop */ 47938))))))),\n\t42782: () => (loadFallback(\"default\", \"@telenet/ng-lib-datalayer\", () => (__webpack_require__.e(\"libs_shared_datalayer_src_index_ts-_6b2b1\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-datalayer */ 68589))))))),\n\t55606: () => (loadFallback(\"default\", \"@telenet/ng-lib-layout\", () => (__webpack_require__.e(\"libs_shared_layout_src_index_ts-_38681\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-layout */ 4445))))))),\n\t61069: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@ngrx/signals\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_ngrx_signals_fesm2022_ngrx-signals_mjs-_4cc60\").then(() => (() => (__webpack_require__(/*! @ngrx/signals */ 10503))))))),\n\t65145: () => (loadFallback(\"default\", \"@telenet/ng-lib-message\", () => (__webpack_require__.e(\"libs_shared_message_src_index_ts-_15011\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-message */ 64976))))))),\n\t76158: () => (loadFallback(\"default\", \"@telenet/ng-lib-ocapi\", () => (__webpack_require__.e(\"libs_shared_ocapi_src_index_ts-_82a81\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-ocapi */ 43421))))))),\n\t77157: () => (loadFallback(\"default\", \"@telenet/ng-lib-shared\", () => (__webpack_require__.e(\"libs_shared_shared_src_index_ts-_5e331\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-shared */ 76881))))))),\n\t24955: () => (loadFallback(\"default\", \"@billing/shared/feat-billing-account-selector\", () => (__webpack_require__.e(\"libs_billing_invoice_overview_feat-billing-account-selector_src_index_ts-_31491\").then(() => (() => (__webpack_require__(/*! @billing/shared/feat-billing-account-selector */ 62108))))))),\n\t49428: () => (loadFallback(\"default\", \"@billing/invoice-overview/data-access\", () => (__webpack_require__.e(\"libs_billing_invoice_overview_data-access_src_index_ts-_c1d61\").then(() => (() => (__webpack_require__(/*! @billing/invoice-overview/data-access */ 33328))))))),\n\t10875: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@ngx-translate/core\", [4,15,0,0], () => (__webpack_require__.e(\"node_modules_ngx-translate_core_dist_fesm2022_ngx-translate-core_mjs-_63781\").then(() => (() => (__webpack_require__(/*! @ngx-translate/core */ 5939))))))),\n\t95013: () => (loadFallback(\"default\", \"@telenet/wink-ng\", () => (__webpack_require__.e(\"libs_foundation_wink_ng_src_index_ts-_bd041\").then(() => (() => (__webpack_require__(/*! @telenet/wink-ng */ 86016))))))),\n\t16821: () => (loadFallback(\"default\", \"@billing/shared/ui\", () => (__webpack_require__.e(\"libs_billing_shared_ui_src_index_ts-_deff1\").then(() => (() => (__webpack_require__(/*! @billing/shared/ui */ 53315))))))),\n\t78473: () => (loadFallback(\"default\", \"@billing/invoice-overview/ui\", () => (__webpack_require__.e(\"libs_billing_invoice_overview_ui_src_index_ts-_072f1\").then(() => (() => (__webpack_require__(/*! @billing/invoice-overview/ui */ 29533))))))),\n\t42037: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/material/dialog\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_dialog_mjs-_b8751\").then(() => (() => (__webpack_require__(/*! @angular/material/dialog */ 17401))))))),\n\t25288: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@ngrx/store\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_ngrx_store_fesm2022_ngrx-store_mjs-_da111\").then(() => (() => (__webpack_require__(/*! @ngrx/store */ 36270))))))),\n\t63975: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"udl\", [4,24,10,627691], () => (__webpack_require__.e(\"node_modules_udl_dist_index_js\").then(() => (() => (__webpack_require__(/*! udl */ 95597))))))),\n\t11771: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/material/select\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_select_mjs-_b9181\").then(() => (() => (__webpack_require__(/*! @angular/material/select */ 96355))))))),\n\t64512: () => (loadFallback(\"default\", \"@telenet/ng-lib-omapi\", () => (__webpack_require__.e(\"libs_shared_omapi_src_index_ts-_134d1\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-omapi */ 70654))))))),\n\t65827: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/material/datepicker\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_material_fesm2022_datepicker_mjs-_f7481\").then(() => (() => (__webpack_require__(/*! @angular/material/datepicker */ 82226))))))),\n\t80685: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/material-moment-adapter\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_material-moment-adapter_fesm2022_material-moment-adapter_mjs-_9e8e1\").then(() => (() => (__webpack_require__(/*! @angular/material-moment-adapter */ 73392))))))),\n\t95229: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"ngx-mask\", [4,17,0,5], () => (__webpack_require__.e(\"node_modules_ngx-mask_fesm2022_ngx-mask_mjs-_a6a61\").then(() => (() => (__webpack_require__(/*! ngx-mask */ 97728))))))),\n\t4134: () => (loadFallback(\"default\", \"@telenet/ng-lib-form\", () => (__webpack_require__.e(\"libs_shared_form_src_components_form-info_form-info_component_ts-libs_shared_form_src_compone-326a2c1\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-form */ 10582))))))),\n\t81601: () => (loadFallback(\"default\", \"@telenet/ng-lib-config\", () => (__webpack_require__.e(\"libs_shared_config_src_index_ts-_cef31\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-config */ 13478))))))),\n\t94761: () => (loadFallback(\"default\", \"@telenet/ng-lib-omapi-query\", () => (__webpack_require__.e(\"libs_shared_omapi-query_src_index_ts-_d2f81\").then(() => (() => (__webpack_require__(/*! @telenet/ng-lib-omapi-query */ 45528))))))),\n\t44578: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@angular/router\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_angular_router_fesm2022_router_mjs-_5a221\").then(() => (() => (__webpack_require__(/*! @angular/router */ 27947))))))),\n\t18042: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@ngrx/store-devtools\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_ngrx_store-devtools_fesm2022_ngrx-store-devtools_mjs-_f60c1\").then(() => (() => (__webpack_require__(/*! @ngrx/store-devtools */ 50448))))))),\n\t52535: () => (loadFallback(\"default\", \"@billing/invoice-overview/feat-billing-overview\", () => (__webpack_require__.e(\"libs_billing_invoice_overview_feat-billing-overview_src_index_ts\").then(() => (() => (__webpack_require__(/*! @billing/invoice-overview/feat-billing-overview */ 95270))))))),\n\t12506: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@ngrx/effects\", [4,17,1,0], () => (__webpack_require__.e(\"node_modules_ngrx_effects_fesm2022_ngrx-effects_mjs-_56481\").then(() => (() => (__webpack_require__(/*! @ngrx/effects */ 1575))))))),\n\t95996: () => (loadStrictSingletonVersionCheckFallback(\"default\", \"@ngx-translate/http-loader\", [4,8,0,0], () => (__webpack_require__.e(\"node_modules_ngx-translate_http-loader_dist_fesm2022_ngx-translate-http-loader_mjs\").then(() => (() => (__webpack_require__(/*! @ngx-translate/http-loader */ 70614)))))))\n};\n// no consumes in initial chunks\nvar chunkMapping = {\n\t\"node_modules_angular_common_fesm2022_http_mjs-_f9340\": [\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t84569\n\t],\n\t\"node_modules_angular_common_fesm2022_common_mjs-_b4621\": [\n\t\t33829\n\t],\n\t\"node_modules_angular_core_fesm2022_rxjs-interop_mjs-_b06f0\": [\n\t\t33829,\n\t\t37934,\n\t\t44946\n\t],\n\t\"node_modules_angular_core_fesm2022_core_mjs\": [\n\t\t66202,\n\t\t44946,\n\t\t37934\n\t],\n\t\"node_modules_angular_forms_fesm2022_forms_mjs-_0f7c0\": [\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t84569\n\t],\n\t\"node_modules_angular_material-moment-adapter_fesm2022_material-moment-adapter_mjs-_9e8e0\": [\n\t\t33829,\n\t\t49449\n\t],\n\t\"node_modules_angular_material_fesm2022_button_mjs-_52ba0\": [\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t49449,\n\t\t84569\n\t],\n\t\"node_modules_angular_material_fesm2022_core_mjs-_90eb0\": [\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t84569\n\t],\n\t\"node_modules_angular_material_fesm2022_datepicker_mjs-_f7480\": [\n\t\t25139,\n\t\t33829,\n\t\t37934,\n\t\t44574,\n\t\t44946,\n\t\t49449,\n\t\t64101,\n\t\t70782,\n\t\t84569\n\t],\n\t\"node_modules_angular_material_fesm2022_dialog_mjs-_b8750\": [\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t49449,\n\t\t84569\n\t],\n\t\"node_modules_angular_material_fesm2022_form-field_mjs-_1aed0\": [\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t49449,\n\t\t84569\n\t],\n\t\"node_modules_angular_material_fesm2022_input_mjs-_34bc0\": [\n\t\t33829,\n\t\t37934,\n\t\t44574,\n\t\t44946,\n\t\t49449,\n\t\t70782,\n\t\t84569\n\t],\n\t\"node_modules_angular_material_fesm2022_select_mjs-_b9180\": [\n\t\t33829,\n\t\t37934,\n\t\t44574,\n\t\t44946,\n\t\t49449,\n\t\t70782,\n\t\t84569\n\t],\n\t\"node_modules_angular_router_fesm2022_router_mjs-_5a220\": [\n\t\t1261,\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t84569\n\t],\n\t\"libs_billing_invoice_overview_data-access_src_index_ts-_c1d60\": [\n\t\t21784,\n\t\t24104,\n\t\t26377,\n\t\t33829,\n\t\t37934,\n\t\t42782,\n\t\t44946,\n\t\t55606,\n\t\t61069,\n\t\t65145,\n\t\t76158,\n\t\t77157\n\t],\n\t\"libs_billing_invoice_overview_feat-billing-overview_src_index_ts\": [\n\t\t33829,\n\t\t84569,\n\t\t24955,\n\t\t76158,\n\t\t49428,\n\t\t21784,\n\t\t10875,\n\t\t95013,\n\t\t16821,\n\t\t65145,\n\t\t78473\n\t],\n\t\"libs_billing_invoice_overview_ui_src_index_ts-_072f0\": [\n\t\t10875,\n\t\t16821,\n\t\t21784,\n\t\t33829,\n\t\t42037,\n\t\t49428,\n\t\t84569,\n\t\t95013\n\t],\n\t\"libs_billing_invoice_overview_feat-billing-account-selector_src_index_ts-_31490\": [\n\t\t10875,\n\t\t16821,\n\t\t21784,\n\t\t33829,\n\t\t49428,\n\t\t78473,\n\t\t84569,\n\t\t95013\n\t],\n\t\"libs_billing_shared_ui_src_index_ts-_deff0\": [\n\t\t10875,\n\t\t21784,\n\t\t33829,\n\t\t84569\n\t],\n\t\"node_modules_ngrx_effects_fesm2022_ngrx-effects_mjs-_56480\": [\n\t\t44946,\n\t\t37934,\n\t\t33829,\n\t\t25288\n\t],\n\t\"node_modules_ngrx_signals_fesm2022_ngrx-signals-rxjs-interop_mjs-_73310\": [\n\t\t24104,\n\t\t33829,\n\t\t44946\n\t],\n\t\"node_modules_ngrx_signals_fesm2022_ngrx-signals_mjs-_4cc61\": [\n\t\t33829\n\t],\n\t\"node_modules_ngrx_store-devtools_fesm2022_ngrx-store-devtools_mjs-_f60c0\": [\n\t\t33829,\n\t\t25288,\n\t\t44946,\n\t\t37934,\n\t\t24104\n\t],\n\t\"node_modules_ngrx_store_fesm2022_ngrx-store_mjs-_da110\": [\n\t\t24104,\n\t\t33829,\n\t\t37934,\n\t\t44946\n\t],\n\t\"node_modules_ngx-translate_core_dist_fesm2022_ngx-translate-core_mjs-_63780\": [\n\t\t33829,\n\t\t37934,\n\t\t44946\n\t],\n\t\"libs_shared_config_src_index_ts-_cef30\": [\n\t\t33829,\n\t\t77157\n\t],\n\t\"libs_shared_datalayer_src_index_ts-_6b2b0\": [\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t63975,\n\t\t65145\n\t],\n\t\"libs_shared_form_src_components_form-info_form-info_component_ts-libs_shared_form_src_compone-326a2c0\": [\n\t\t1261,\n\t\t10875,\n\t\t11771,\n\t\t21784,\n\t\t33829,\n\t\t37934,\n\t\t42782,\n\t\t44574,\n\t\t44946,\n\t\t49449,\n\t\t64101,\n\t\t64512,\n\t\t65827,\n\t\t70782,\n\t\t77157,\n\t\t80685,\n\t\t84569,\n\t\t95229\n\t],\n\t\"libs_shared_layout_src_index_ts-_38680\": [\n\t\t4134,\n\t\t10875,\n\t\t33829,\n\t\t84569\n\t],\n\t\"libs_shared_message_src_index_ts-_15010\": [\n\t\t10875,\n\t\t33829,\n\t\t77157,\n\t\t84569\n\t],\n\t\"libs_shared_ocapi_src_index_ts-_82a80\": [\n\t\t1261,\n\t\t10875,\n\t\t21784,\n\t\t33829,\n\t\t37934,\n\t\t42782,\n\t\t44946,\n\t\t64512,\n\t\t65145,\n\t\t77157,\n\t\t81601,\n\t\t84569,\n\t\t94761\n\t],\n\t\"libs_shared_omapi-query_src_index_ts-_d2f80\": [\n\t\t1261,\n\t\t21784,\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t64512,\n\t\t65145,\n\t\t77157,\n\t\t81601\n\t],\n\t\"libs_shared_omapi_src_index_ts-_134d0\": [\n\t\t1261,\n\t\t21784,\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t65145,\n\t\t77157,\n\t\t81601\n\t],\n\t\"libs_shared_page_src_index_ts-_25ef0\": [\n\t\t1261,\n\t\t10875,\n\t\t33829,\n\t\t37934,\n\t\t42782,\n\t\t44578,\n\t\t44946,\n\t\t63975,\n\t\t84569\n\t],\n\t\"libs_shared_shared_src_index_ts-_5e330\": [\n\t\t1261,\n\t\t10875,\n\t\t33829,\n\t\t37934,\n\t\t44946,\n\t\t70782,\n\t\t84569\n\t],\n\t\"libs_foundation_wink_ng_src_index_ts-_bd040\": [\n\t\t33829,\n\t\t44946\n\t],\n\t\"node_modules_ngx-mask_fesm2022_ngx-mask_mjs-_a6a60\": [\n\t\t33829,\n\t\t70782,\n\t\t84569\n\t],\n\t\"apps_billing_invoice-mfe_src_bootstrap_ts\": [\n\t\t33829,\n\t\t44578,\n\t\t1261,\n\t\t18042,\n\t\t49428,\n\t\t24955,\n\t\t52535,\n\t\t21784,\n\t\t25288,\n\t\t12506,\n\t\t10875,\n\t\t95996,\n\t\t84569\n\t],\n\t\"node_modules_angular_material_fesm2022_core_mjs-_90eb1\": [\n\t\t37934,\n\t\t44946,\n\t\t84569\n\t],\n\t\"node_modules_angular_forms_fesm2022_forms_mjs-_0f7c1\": [\n\t\t37934,\n\t\t44946\n\t],\n\t\"node_modules_angular_common_fesm2022_http_mjs-_f9341\": [\n\t\t37934,\n\t\t44946,\n\t\t84569\n\t],\n\t\"libs_shared_ocapi_src_index_ts-_82a81\": [\n\t\t1261,\n\t\t10875,\n\t\t37934,\n\t\t42782,\n\t\t44946,\n\t\t64512,\n\t\t77157,\n\t\t81601,\n\t\t84569,\n\t\t94761\n\t],\n\t\"libs_shared_message_src_index_ts-_15011\": [\n\t\t10875,\n\t\t77157,\n\t\t84569\n\t],\n\t\"libs_shared_datalayer_src_index_ts-_6b2b1\": [\n\t\t63975,\n\t\t65145\n\t],\n\t\"libs_shared_page_src_index_ts-_25ef1\": [\n\t\t1261,\n\t\t10875,\n\t\t37934,\n\t\t42782,\n\t\t44578,\n\t\t44946,\n\t\t63975,\n\t\t84569\n\t],\n\t\"libs_shared_shared_src_index_ts-_5e331\": [\n\t\t1261,\n\t\t10875,\n\t\t37934,\n\t\t44946,\n\t\t70782,\n\t\t84569\n\t],\n\t\"node_modules_angular_core_fesm2022_rxjs-interop_mjs-_b06f1\": [\n\t\t37934\n\t],\n\t\"libs_shared_layout_src_index_ts-_38681\": [\n\t\t4134,\n\t\t10875,\n\t\t84569\n\t],\n\t\"libs_billing_invoice_overview_feat-billing-account-selector_src_index_ts-_31491\": [\n\t\t16821,\n\t\t78473,\n\t\t95013\n\t],\n\t\"libs_billing_invoice_overview_data-access_src_index_ts-_c1d61\": [\n\t\t24104,\n\t\t26377,\n\t\t37934,\n\t\t42782,\n\t\t44946,\n\t\t55606,\n\t\t61069,\n\t\t65145,\n\t\t76158,\n\t\t77157\n\t],\n\t\"node_modules_ngx-translate_core_dist_fesm2022_ngx-translate-core_mjs-_63781\": [\n\t\t37934,\n\t\t44946\n\t],\n\t\"libs_foundation_wink_ng_src_index_ts-_bd041\": [\n\t\t44946\n\t],\n\t\"libs_billing_invoice_overview_ui_src_index_ts-_072f1\": [\n\t\t42037\n\t],\n\t\"node_modules_angular_material_fesm2022_dialog_mjs-_b8751\": [\n\t\t37934,\n\t\t44946,\n\t\t49449\n\t],\n\t\"node_modules_ngrx_store_fesm2022_ngrx-store_mjs-_da111\": [\n\t\t24104,\n\t\t37934,\n\t\t44946\n\t],\n\t\"node_modules_angular_material_fesm2022_datepicker_mjs-_f7481\": [\n\t\t25139\n\t],\n\t\"libs_shared_omapi_src_index_ts-_134d1\": [\n\t\t65145,\n\t\t81601\n\t],\n\t\"libs_shared_form_src_components_form-info_form-info_component_ts-libs_shared_form_src_compone-326a2c1\": [\n\t\t1261,\n\t\t11771,\n\t\t21784,\n\t\t37934,\n\t\t42782,\n\t\t44574,\n\t\t44946,\n\t\t49449,\n\t\t64101,\n\t\t64512,\n\t\t65827,\n\t\t70782,\n\t\t77157,\n\t\t80685,\n\t\t95229\n\t],\n\t\"node_modules_angular_router_fesm2022_router_mjs-_5a221\": [\n\t\t37934,\n\t\t44946\n\t],\n\t\"node_modules_ngrx_store-devtools_fesm2022_ngrx-store-devtools_mjs-_f60c1\": [\n\t\t44946,\n\t\t37934,\n\t\t24104\n\t],\n\t\"node_modules_ngrx_effects_fesm2022_ngrx-effects_mjs-_56481\": [\n\t\t44946,\n\t\t37934\n\t]\n};\n__webpack_require__.f.consumes = (chunkId, promises) => {\n\tif(__webpack_require__.o(chunkMapping, chunkId)) {\n\t\tchunkMapping[chunkId].forEach((id) => {\n\t\t\tif(__webpack_require__.o(installedModules, id)) return promises.push(installedModules[id]);\n\t\t\tvar onFactory = (factory) => {\n\t\t\t\tinstalledModules[id] = 0;\n\t\t\t\t__webpack_require__.m[id] = (module) => {\n\t\t\t\t\tdelete __webpack_require__.c[id];\n\t\t\t\t\tmodule.exports = factory();\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar onError = (error) => {\n\t\t\t\tdelete installedModules[id];\n\t\t\t\t__webpack_require__.m[id] = (module) => {\n\t\t\t\t\tdelete __webpack_require__.c[id];\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tvar promise = moduleToHandlerMapping[id]();\n\t\t\t\tif(promise.then) {\n\t\t\t\t\tpromises.push(installedModules[id] = promise.then(onFactory)['catch'](onError));\n\t\t\t\t} else onFactory(promise);\n\t\t\t} catch(e) { onError(e); }\n\t\t});\n\t}\n}","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcustomer_web_billing_invoice_mfe\"] = self[\"webpackChunkcustomer_web_billing_invoice_mfe\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendor\"], () => (__webpack_require__(30179)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["defineCustomElements","window","catch","err","console","error","BRANDS","STORAGE_BRAND","localStorage","getItem","setMode","el","comp_brand","getAttribute","includes","setAttribute","NAMESPACE","BUILD","allRenderFn","appendChildSlotFix","asyncLoading","asyncQueue","attachStyles","cloneNodeFix","cmpDidLoad","cmpDidRender","cmpDidUnload","cmpDidUpdate","cmpShouldUpdate","cmpWillLoad","cmpWillRender","cmpWillUpdate","connectedCallback","constructableCSS","cssAnnotations","devTools","disconnectedCallback","element","event","experimentalScopedSlotChanges","experimentalSlotFixes","formAssociated","hasRenderFn","hostListener","hostListenerTarget","hostListenerTargetBody","hostListenerTargetDocument","hostListenerTargetParent","hostListenerTargetWindow","hotModuleReplacement","hydrateClientSide","hydrateServerSide","hydratedAttribute","hydratedClass","initializeNextTick","invisiblePrehydration","isDebug","isDev","isTesting","lazyLoad","lifecycle","lifecycleDOMEvents","member","method","mode","observeAttribute","profile","prop","propBoolean","propMutable","propNumber","propString","reflect","scoped","scopedSlotTextContentFix","scriptDataOpts","shadowDelegatesFocus","shadowDom","slot","slotChildNodesFix","slotRelocation","state","style","svg","taskQueue","transformTagName","updatable","vdomAttribute","vdomClass","vdomFunctional","vdomKey","vdomListener","vdomPropOrAttr","vdomRef","vdomRender","vdomStyle","vdomText","vdomXlink","watchCallback","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","queuePending","getAssetPath","path","assetUrl","URL","plt","$resourcesUrl$","origin","win","location","href","pathname","createTime","fnName","tagName","uniqueTime","key","measureText","HYDRATED_CSS","SLOT_FB_CSS","XLINK_NS","FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS","EMPTY_OBJ","isDef","v","isComplexType","o","queryNonceMetaTagContent","doc","_a","_b","_c","head","querySelector","undefined","h","nodeName","vnodeData","children","child","slotName","simple","lastSimple","vNodeChildren","walk","c","i","length","Array","isArray","String","$text$","push","newVNode","name","classData","className","class","Object","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","$name$","tag","text","$flags$","$tag$","$elm$","Host","isHost","node","forEach","cb","map","convertToPublic","convertToPrivate","vattrs","vchildren","vkey","vname","vtag","vtext","assign","computeMode","elm","modeResolutionChain","find","m","handler","parsePropertyValue","propValue","propType","parseFloat","getElement","ref","getHostRef","$hostElement$","createEvent","flags","emit","detail","emitEvent","bubbles","composed","cancelable","opts","ev","ce","dispatchEvent","rootAppliedStyles","WeakMap","registerStyle","cssText","allowCS","styles","get","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","set","addStyle","styleContainerNode","cmpMeta","getScopeId","nodeType","appliedStyles","styleElm","Set","has","createElement","innerHTML","nonce","$nonce$","insertBefore","add","adoptedStyleSheets","hostRef","$cmpMeta$","endAttachStyles","$tagName$","shadowRoot","getRootNode","$modeName$","classList","cmp","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","remove","removeProperty","setProperty","slice","capture","endsWith","CAPTURE_EVENT_SUFFIX","replace","CAPTURE_EVENT_REGEX","rel","ael","isComplex","n","e","xlink","removeAttributeNS","removeAttribute","setAttributeNS","parseClassListRegex","value","split","RegExp","updateElement","oldVnode","newVnode","host","oldVnodeAttrs","newVnodeAttrs","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","oldVNode","createTextNode","appendChild","putBackInOriginalLocation","recursive","oldSlotChildNodes","childNodes","parentReferenceNode","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","parentNode","removeVnodes","index","nullifyVNodeRefs","updateChildren","oldCh","newCh","isInitialRender","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","nextSibling","leftVNode","rightVNode","oldChildren","newChildren","defaultHolder","textContent","data","updateFallbackSlotVisibility","hidden","siblingNode","trim","relocateNodes","markSlotContentForRelocation","hostContentNodes","j","isNodeLocatedInSlot","relocateNodeData","r","$nodeToRelocate$","$slotRefNode$","relocateNode","some","nodeToRelocate","vNode","renderVdom","renderFnResults","isInitialLoad","_d","hostElm","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","hasAttribute","relocateData","orgLocationNode","slotRefNode","parentNodeRef","insertBeforeNode","previousSibling","refNode","attachToAncestor","ancestorComponent","$onRenderResolve$","Promise","scheduleUpdate","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","$lazyInstance$","maybePromise","$queuedListeners$","methodName","safeCall","enqueue","updateComponent","fn","isPromisey","then","_ref","_asyncToGenerator","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","all","_x","_x2","_x3","apply","arguments","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","nextTick","who","documentElement","namespace","arg","getValue","$instanceValues$","setValue","newVal","oldVal","$members$","areBothNaN","Number","isNaN","didValueChange","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","prototype","cbName","defineProperty","args","$onReadyPromise$","call","watchers","members","entries","memberFlags","configurable","enumerable","$onInstancePromise$","attrNameToPropName","Map","attributeChangedCallback","attrName","jmp","hasOwnProperty","entry","callbackName","observedAttributes","from","_","initializeComponent","_ref2","hmrVersionId","loadModule","endLoad","isProxied","endNewInstance","endRegisterStyles","schedule","_x4","_x5","_x6","_x7","fireConnectedCallback","endConnected","setContentReference","addHostEventListeners","$listeners$","contentRefElm","createComment","firstChild","disconnectInstance","_ref3","$rmListeners$","rmListener","_x8","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","dataStyles","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","resourcesUrl","baseURI","hasSlotRelocation","lazyBundle","compactMeta","HostElement","HTMLElement","constructor","self","registerHost","attachShadow","clearTimeout","componentOnReady","$lazyBundleId$","define","setTimeout","Fragment","listeners","attachParentListeners","target","getHostListenerTarget","hostListenerProxy","hostListenerOpts","supportsListenerOptions","passive","setNonce","hostRefs","registerInstance","lazyInstance","hostElement","cmpModules","exportName","bundleId","module","importedModule","document","raf","requestAnimationFrame","eventName","listener","addEventListener","removeEventListener","CustomEvent","promiseResolve","resolve","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now","applyPolyfills","promises","Element","closest","matches","checkIfURLIsSupported","u","searchParams","startsWith","NodeList","fetch","Reflect","a","construct","setPrototypeOf"],"sourceRoot":"webpack:///","x_google_ignoreList":[4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]}