{"version":3,"file":"libs_billing_invoice_overview_feat-billing-account-selector_src_index_ts-_31490.js","mappings":"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","sources":["./libs/billing/invoice/overview/feat-billing-account-selector/src/index.ts","./libs/billing/invoice/overview/feat-billing-account-selector/src/lib/billing-account-selector/billing-account-selector.component.ts","./libs/billing/invoice/overview/feat-billing-account-selector/src/lib/billing-account-selector/billing-account-selector.component.html","./libs/billing/invoice/overview/feat-billing-account-selector/src/lib/billing-account-status/billing-account-status.component.ts"],"sourcesContent":["export * from './lib/billing-account-selector/billing-account-selector.component';\n","import { Component, inject, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ErrorNotificationComponent, SlideMenuComponent } from '@billing/shared/ui';\nimport { BillingAccount, BillingAccountService, InvoiceOverviewFacade } from '@billing/invoice-overview/data-access';\nimport { BillingAccountStatusComponent } from '../billing-account-status/billing-account-status.component';\nimport { WinkIcon } from '@telenet/wink-ng';\nimport { UrlService } from '@telenet/ng-lib-page';\nimport { BillingOverviewNoBillingAccountsComponent } from '@billing/invoice-overview/ui';\n\n@Component({\n  selector: 'tg-billing-account-selector',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    SlideMenuComponent,\n    BillingAccountStatusComponent,\n    ErrorNotificationComponent,\n    WinkIcon,\n    BillingOverviewNoBillingAccountsComponent,\n  ],\n  templateUrl: './billing-account-selector.component.html',\n  styleUrl: './billing-account-selector.component.scss',\n})\nexport class BillingAccountSelectorComponent implements OnInit {\n  public static BILLING_ACCOUNT_STORAGE_KEY = 'selected-billing-account';\n\n  billingAccounts: BillingAccount[] = [];\n  loading = false;\n  showMenu = false;\n  error = false;\n  @Input() homePageLink!: string;\n  @Input() isTelenetCustomer!: boolean;\n\n  private readonly service = inject(BillingAccountService);\n  private readonly facade = inject(InvoiceOverviewFacade);\n  private readonly urlService = inject(UrlService);\n\n  ngOnInit() {\n    this.loading = true;\n    this.error = false;\n    this.service.getBillingAccounts().subscribe({\n      next: (billingAccounts: BillingAccount[]) => {\n        this.billingAccounts = billingAccounts;\n        const defaultBillingAccount = this.getSelectedBillingAccount(billingAccounts);\n        this.selectBillingAccount(defaultBillingAccount);\n      },\n      error: () => {\n        this.error = true;\n        this.loading = false;\n      },\n      complete: () => (this.loading = false),\n    });\n  }\n\n  selectBillingAccount(billingAccount?: BillingAccount): void {\n    if (billingAccount) {\n      this.facade.selectBillingAccount(billingAccount);\n      sessionStorage.setItem(\n        BillingAccountSelectorComponent.BILLING_ACCOUNT_STORAGE_KEY,\n        billingAccount.billingAccountNumber\n      );\n      this.close();\n    }\n  }\n\n  close() {\n    this.showMenu = false;\n  }\n\n  open(event?: Event) {\n    event?.stopPropagation();\n    this.showMenu = true;\n  }\n\n  get selectedBillingAccount() {\n    return this.facade.selectedBillingAccount;\n  }\n\n  private getSelectedBillingAccount(billingAccounts: BillingAccount[]): BillingAccount | undefined {\n    const storedBillingAccount = sessionStorage.getItem(BillingAccountSelectorComponent.BILLING_ACCOUNT_STORAGE_KEY);\n    const queryBillingAccount = this.urlService.getRequestParamValue('accountNumber', '');\n    return (\n      billingAccounts.find((billingAccount) => billingAccount.billingAccountNumber === queryBillingAccount) ||\n      billingAccounts.find((billingAccount) => billingAccount.billingAccountNumber === storedBillingAccount) ||\n      billingAccounts[0]\n    );\n  }\n}\n","<ng-container *ngIf=\"loading; else selector\">\n  <div class=\"flex-col m--n flex-grow\">\n    <h2 class=\"col-5 heading--notopmargin skeleton--v2 skeleton--basic skeleton--one-line\"></h2>\n  </div>\n</ng-container>\n<ng-template #selector>\n  @if (error) {\n    <tg-error-notification\n      data-testid=\"billing-overview-billing-accounts-error\"\n      [description]=\"'ng.billing-overview.billing-account-selector.lbl.error-description' | translate\"\n      [label]=\"'ng.billing-overview.billing-account-selector.lbl.error-label' | translate\"></tg-error-notification>\n  } @else {\n    <div *ngIf=\"billingAccounts.length === 0 && !loading\" data-testid=\"billing-overview-no-billing-accounts\">\n      <tg-billing-overview-no-billing-accounts\n        [homePageLink]=\"homePageLink\"\n        [isTelenetCustomer]=\"isTelenetCustomer\"></tg-billing-overview-no-billing-accounts>\n    </div>\n    <ng-container *ngIf=\"selectedBillingAccount() as selectedBillingAccount\">\n      <div data-testid=\"billing-account-selector-wrapper\">\n        <span>{{ 'ng.billing-overview.billing-account-selector.lbl.billing-account' | translate }}</span>\n        <span data-testid=\"selected-billing-account\" *ngIf=\"selectedBillingAccount?.billingAccountNumber\">\n          {{ selectedBillingAccount?.billingAccountNumber }}</span\n        >\n        <a\n          class=\"link cursor--pointer ml--xs\"\n          tabindex=\"-1\"\n          data-testid=\"change-billing-account\"\n          (click)=\"open($event)\"\n          *ngIf=\"billingAccounts.length > 1\">\n          <b>{{ 'ng.billing-overview.billing-account-selector.lbl.change-account' | translate }}</b>\n        </a>\n      </div>\n      <tg-slide-menu\n        *ngIf=\"billingAccounts.length > 1\"\n        [showMenu]=\"showMenu\"\n        (closeMenu)=\"close()\"\n        [title]=\"'ng.billing-overview.billing-account-selector.lbl.title' | translate\"\n        padding=\"px--xs\"\n        data-testid=\"billing-account-selector\">\n        <ul\n          class=\"justify-content--start align-items--start flex-direction--column display--flex flex-wrap--wrap border-radius--all--n listing--none width--full mt-0\"\n          data-testid=\"billing-accounts-list\">\n          <li\n            *ngFor=\"let billingAccount of billingAccounts; let last = last\"\n            (click)=\"selectBillingAccount(billingAccount)\"\n            [attr.data-testid]=\"'billing-accounts-option-' + billingAccount.billingAccountNumber\"\n            class=\"width--full billing-account\">\n            <div\n              [ngClass]=\"{ 'border-style--b--solid': !last }\"\n              class=\"border-width--b--r border--b--r border-color--all--light-grey cursor--pointer display--flex justify-content--between mx--xs align-items--center\">\n              <div\n                class=\"py--l justify-content--start align-items--center flex-direction--row display--flex flex-wrap--nowrap\">\n                <div>\n                  <div *ngIf=\"billingAccount?.billingAccountNumber\" data-testid=\"billing-accounts-option-number\">\n                    <b>{{ billingAccount.billingAccountNumber }}</b>\n                  </div>\n                  <div\n                    class=\"font--body-small color-shade_72\"\n                    *ngIf=\"billingAccount.billingAddress\"\n                    data-testid=\"billing-accounts-option-address\">\n                    <span\n                      >{{ billingAccount.billingAddress.street }} {{ billingAccount.billingAddress.houseNumber }}</span\n                    >\n                    <span *ngIf=\"billingAccount.billingAddress.subHouseNumber\">\n                      {{ billingAccount.billingAddress.subHouseNumber }}</span\n                    >\n                    <span *ngIf=\"billingAccount.billingAddress.boxNumber\">\n                      <span> {{ 'ng.billing-overview.billing-account-selector.lbl.address.box' | translate }}</span>\n                      {{ billingAccount.billingAddress.boxNumber }}</span\n                    >, {{ billingAccount.billingAddress.postalCode }} {{ billingAccount.billingAddress.municipality }}\n                  </div>\n                  <tg-billing-account-status [paymentStatus]=\"billingAccount.paymentStatus\"></tg-billing-account-status>\n                </div>\n              </div>\n              <div class=\"px--xs display--flex\">\n                <i\n                  *ngIf=\"billingAccount.billingAccountNumber === selectedBillingAccount?.billingAccountNumber\"\n                  class=\"ml--xs color-text-t-black-b-white background-brand-primary billing-account-selected text-weight--xxs color-mid-grey\">\n                  <wink-icon appearance=\"default\" icon=\"tick\" size=\"sm\"></wink-icon>\n                </i>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </tg-slide-menu>\n    </ng-container>\n  }\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { WinkIcon } from '@telenet/wink-ng';\nimport { PaymentStatus } from '@billing/invoice-overview/data-access';\n\n@Component({\n  standalone: true,\n  selector: 'tg-billing-account-status',\n  imports: [CommonModule, TranslateModule, WinkIcon],\n  template: ` <div class=\"display--flex align-content--center\" data-testid=\"billing-accounts-option-status\">\n    <span class=\"mr--xs\">\n      <i class=\"icon-md\" [ngClass]=\"[getIcon(paymentStatus), getTextClass(paymentStatus)]\" size=\"md\"></i>\n    </span>\n    <span [ngClass]=\"getTextClass(paymentStatus)\" class=\"billing-status-text\">{{\n      'ng.billing-overview.billing-account-selector.lbl.status.' + paymentStatus | translate\n    }}</span>\n  </div>`,\n  styleUrls: ['./billing-account-status.component.scss'],\n})\nexport class BillingAccountStatusComponent {\n  @Input()\n  paymentStatus!: PaymentStatus;\n\n  getIcon(paymentStatus: PaymentStatus): string {\n    if (paymentStatus === PaymentStatus.OVERDUE) {\n      return 'icon-error-shape-filled';\n    }\n    return paymentStatus === PaymentStatus.PAID ? 'icon-check-shape-filled' : 'icon-information-shape-filled';\n  }\n\n  getTextClass(paymentStatus: PaymentStatus): string {\n    if (paymentStatus === PaymentStatus.OVERDUE) {\n      return 'color-notification--error--light';\n    }\n    return paymentStatus === PaymentStatus.PAID\n      ? 'color-notification--success--light'\n      : 'color-notification--info--light';\n  }\n}\n"],"names":["inject","CommonModule","TranslateModule","ErrorNotificationComponent","SlideMenuComponent","BillingAccountService","InvoiceOverviewFacade","BillingAccountStatusComponent","WinkIcon","UrlService","BillingOverviewNoBillingAccountsComponent","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵproperty","ɵɵpipeBind1","ɵɵadvance","ctx_r5","homePageLink","isTelenetCustomer","ɵɵtext","ɵɵtextInterpolate1","selectedBillingAccount_r7","billingAccountNumber","ɵɵlistener","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_a_6_Template_a_click_0_listener","$event","ɵɵrestoreView","_r13","ctx_r12","ɵɵnextContext","ɵɵresetView","open","ɵɵtextInterpolate","billingAccount_r15","billingAddress","subHouseNumber","boxNumber","ɵɵtemplate","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_li_3_div_5_span_3_Template","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_li_3_div_5_span_4_Template","ɵɵtextInterpolate2","street","houseNumber","postalCode","municipality","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_li_3_Template_li_click_0_listener","restoredCtx","_r27","$implicit","ctx_r26","selectBillingAccount","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_li_3_div_4_Template","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_li_3_div_5_Template","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_li_3_i_8_Template","ɵɵattribute","ɵɵpureFunction1","_c0","last_r16","paymentStatus","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_Template_tg_slide_menu_closeMenu_0_listener","_r30","ctx_r29","close","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_li_3_Template","ctx_r10","showMenu","billingAccounts","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_span_5_Template","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_a_6_Template","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_tg_slide_menu_7_Template","ctx_r6","length","BillingAccountSelectorComponent_ng_template_1_Conditional_1_div_0_Template","BillingAccountSelectorComponent_ng_template_1_Conditional_1_ng_container_1_Template","ctx_r4","loading","selectedBillingAccount","BillingAccountSelectorComponent_ng_template_1_Conditional_0_Template","BillingAccountSelectorComponent_ng_template_1_Conditional_1_Template","ɵɵconditional","ctx_r1","error","BillingAccountSelectorComponent","constructor","service","facade","urlService","_","BILLING_ACCOUNT_STORAGE_KEY","ngOnInit","getBillingAccounts","subscribe","next","defaultBillingAccount","getSelectedBillingAccount","complete","billingAccount","sessionStorage","setItem","event","stopPropagation","storedBillingAccount","getItem","queryBillingAccount","getRequestParamValue","find","_2","_3","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","BillingAccountSelectorComponent_Template","rf","ctx","BillingAccountSelectorComponent_ng_container_0_Template","BillingAccountSelectorComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","_r2","i1","NgClass","NgForOf","NgIf","i2","TranslatePipe","styles","PaymentStatus","getIcon","OVERDUE","PAID","getTextClass","BillingAccountStatusComponent_Template","ɵɵpureFunction2"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}