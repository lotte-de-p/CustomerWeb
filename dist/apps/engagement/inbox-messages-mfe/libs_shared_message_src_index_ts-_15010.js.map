{"version":3,"file":"libs_shared_message_src_index_ts-_15010.js","mappings":"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","sources":["./libs/shared/message/src/index.ts","./libs/shared/message/src/lib/message.service.ts","./libs/shared/message/src/lib/message/index.ts","./libs/shared/message/src/lib/message/message-flow.component.ts","./libs/shared/message/src/lib/message/message-flow.component.html","./libs/shared/message/src/lib/message/message.component.ts","./libs/shared/message/src/lib/message/message.component.html","./libs/shared/message/src/lib/messages.module.ts","./libs/shared/message/src/lib/model/abstract-message.model.ts","./libs/shared/message/src/lib/model/error-flow-message.model.ts","./libs/shared/message/src/lib/model/error-message.model.ts","./libs/shared/message/src/lib/model/index.ts","./libs/shared/message/src/lib/model/info-flow-message.model.ts","./libs/shared/message/src/lib/model/message-type.enum.ts","./libs/shared/message/src/lib/model/success-flow-message.model.ts","./libs/shared/message/src/lib/model/success-message.model.ts","./libs/shared/message/src/lib/model/warning-flow-message.model.ts","./libs/shared/message/src/lib/model/warning-message.model.ts"],"sourcesContent":["/*\n * Public API Surface of ng-lib-message\n */\n\nexport * from './lib/message.service';\nexport * from './lib/messages.module';\nexport * from './lib/message';\nexport * from './lib/model';\n","import { Injectable } from '@angular/core';\nimport { MessageType } from './model/message-type.enum';\nimport { AbstractMessage } from './model/abstract-message.model';\nimport { Messages } from './model/messages.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  private messages: Messages = {};\n\n  addMessage(message: AbstractMessage): void {\n    if (!this.messages[message.messageGroupName]) {\n      this.messages[message.messageGroupName] = {\n        [message.type]: [],\n      };\n    }\n    if (!this.messages[message.messageGroupName][message.type]) {\n      this.messages[message.messageGroupName][message.type] = [];\n    }\n    this.messages[message.messageGroupName][message.type].push(message);\n  }\n\n  getErrorMessages(messageGroupName: string): AbstractMessage[] {\n    return this.getMessagesByType(messageGroupName, MessageType.ERROR);\n  }\n\n  getMessagesByGroupName(messageGroupName: string): AbstractMessage[] {\n    const messages: AbstractMessage[] = [];\n    if (this.hasMessagesOfType(messageGroupName, MessageType.ERROR)) {\n      messages.push(this.getMessagesByType(messageGroupName, MessageType.ERROR)[0]);\n    }\n    if (this.hasMessagesOfType(messageGroupName, MessageType.WARNING)) {\n      messages.push(this.getMessagesByType(messageGroupName, MessageType.WARNING)[0]);\n    }\n    if (this.hasMessagesOfType(messageGroupName, MessageType.SUCCESS)) {\n      messages.push(this.getMessagesByType(messageGroupName, MessageType.SUCCESS)[0]);\n    }\n    if (this.hasMessagesOfType(messageGroupName, MessageType.INFO)) {\n      messages.push(this.getMessagesByType(messageGroupName, MessageType.INFO)[0]);\n    }\n    return messages;\n  }\n\n  getMessagesByType(messageGroupName: string, type: MessageType): AbstractMessage[] {\n    const messagesByGroupName = this.messages[messageGroupName];\n\n    if (!messagesByGroupName) {\n      return [];\n    }\n\n    return messagesByGroupName[type];\n  }\n\n  clearErrorMessages(messageGroupName: string) {\n    return this.clearMessagesByType(messageGroupName, MessageType.ERROR);\n  }\n\n  clearMessagesByType(messageGroupName: string, type: MessageType) {\n    if (!this.messages[messageGroupName]) {\n      return;\n    }\n    this.messages[messageGroupName] = {\n      [type]: [],\n    };\n  }\n\n  hasErrorMessages(messageGroupName: string): boolean {\n    return this.hasMessagesOfType(messageGroupName, MessageType.ERROR);\n  }\n\n  hasMessagesOfType(messageGroupName: string, type: MessageType): boolean {\n    return this.getMessagesByType(messageGroupName, type)?.filter((m) => m.type === type).length > 0;\n  }\n\n  clearMessages(messageGroupName: string) {\n    if (!this.messages[messageGroupName]) {\n      return;\n    }\n    this.messages[messageGroupName] = {};\n  }\n\n  getRegisteredGroupNames(): string[] {\n    return Object.keys(this.messages);\n  }\n}\n","export * from './message.component';\nexport * from './message-flow.component';\n","import { Component } from '@angular/core';\nimport { MessageComponent } from './message.component';\n\n@Component({\n  selector: 'app-message-flow',\n  templateUrl: './message-flow.component.html',\n})\nexport class MessageFlowComponent extends MessageComponent {}\n","<ng-container *ngIf=\"getMessages().length > 0; else noErrorTemplate\">\n  <div\n    [attr.data-cy]=\"'app-message-flow'\"\n    *ngFor=\"let message of getMessages()\"\n    class=\"notification notification--{{ message.type }} notification--{{ message.type }}--flow\">\n    <span class=\"icon-{{ message.subtype }}\"></span>\n    <div [innerHTML]=\"getTranslatedLabel(message)\"></div>\n  </div>\n</ng-container>\n<ng-template #noErrorTemplate>\n  <ng-content></ng-content>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MessageService } from '../message.service';\nimport { AbstractMessage } from '../model';\nimport { DomService } from '@telenet/ng-lib-shared';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n})\nexport class MessageComponent {\n  @Input() messageGroupName = '';\n  private scrollCheck = false;\n\n  constructor(\n    private readonly messageService: MessageService,\n    private readonly translateService: TranslateService,\n    private readonly domService: DomService\n  ) {}\n\n  getMessages(): AbstractMessage[] {\n    const messages = this.messageService.getMessagesByGroupName(this.messageGroupName);\n    if (messages.length > 0) {\n      this.scrollToTop();\n      return [messages[0]];\n    } else {\n      this.scrollCheck = false;\n      return [];\n    }\n  }\n\n  getTranslatedLabel(message: AbstractMessage): string {\n    const translatedLabel = this.translateService.instant(message.getMessageLabel(), message.interpolateParams);\n    if (translatedLabel === '' || translatedLabel === message.getMessageLabel()) {\n      return this.translateService.instant('ng.' + message.getMessageSuffix(), message.interpolateParams);\n    }\n    return translatedLabel;\n  }\n\n  private scrollToTop(): void {\n    if (!this.scrollCheck) {\n      this.domService.scrollToTop();\n      this.scrollCheck = true;\n    }\n  }\n}\n","<ng-container *ngIf=\"getMessages().length > 0; else noErrorTemplate\">\n  <div *ngFor=\"let message of getMessages()\" class=\"notification notification--{{ message.type }}\">\n    <span class=\"icon icon-{{ message.subtype }} {{ message.type }}\" [innerHTML]=\"getTranslatedLabel(message)\"></span>\n  </div>\n</ng-container>\n<ng-template #noErrorTemplate>\n  <ng-content></ng-content>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageComponent } from './message/message.component';\nimport { MessageFlowComponent } from './message/message-flow.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule],\n  declarations: [MessageComponent, MessageFlowComponent],\n  exports: [MessageComponent, MessageFlowComponent],\n  providers: [TranslateService],\n})\nexport class MessagesModule {}\n","import { MessageType } from './message-type.enum';\n\nexport abstract class AbstractMessage {\n  private readonly _messageGroupName: string;\n  private readonly _key: string;\n  private readonly _type: MessageType;\n  private readonly _subtype?: MessageType;\n  private readonly _interpolateParams?: Record<string, unknown>;\n\n  protected constructor(\n    type: MessageType,\n    messageGroupName: string,\n    key: string,\n    subtype?: MessageType,\n    interpolateParams?: Record<string, unknown>\n  ) {\n    this._messageGroupName = messageGroupName;\n    this._key = key;\n    this._type = type;\n    this._subtype = subtype;\n    this._interpolateParams = interpolateParams;\n  }\n\n  get messageGroupName(): string {\n    return this._messageGroupName;\n  }\n\n  get key(): string {\n    return this._key;\n  }\n\n  get type(): MessageType {\n    return this._type;\n  }\n\n  get subtype(): MessageType | undefined {\n    return this._subtype;\n  }\n\n  get interpolateParams(): Record<string, unknown> | undefined {\n    return this._interpolateParams;\n  }\n\n  getMessageLabel(): string {\n    return 'ng.' + this.messageGroupName + '.' + this.getMessageSuffix();\n  }\n\n  getMessageSuffix(): string {\n    return this.key + '-' + this.type;\n  }\n}\n","import { AbstractMessage } from './abstract-message.model';\nimport { MessageType } from './message-type.enum';\n\nexport class ErrorFlowMessage extends AbstractMessage {\n  constructor(messageGroupName: string, key: string) {\n    super(MessageType.ERROR, messageGroupName, key, MessageType.ICON_ERROR);\n  }\n}\n","import { AbstractMessage } from './abstract-message.model';\nimport { MessageType } from './message-type.enum';\n\nexport class ErrorMessage extends AbstractMessage {\n  constructor(messageGroupName: string, key: string, interpolateParams?: Record<string, unknown>) {\n    super(MessageType.ERROR, messageGroupName, key, MessageType.ICON_ERROR, interpolateParams);\n  }\n}\n","export * from './abstract-message.model';\nexport * from './error-flow-message.model';\nexport * from './error-message.model';\nexport * from './info-flow-message.model';\nexport * from './message-type.enum';\nexport * from './success-flow-message.model';\nexport * from './success-message.model';\nexport * from './warning-flow-message.model';\nexport * from './warning-message.model';\n","import { AbstractMessage } from './abstract-message.model';\nimport { MessageType } from './message-type.enum';\n\nexport class InfoFlowMessage extends AbstractMessage {\n  constructor(messageGroupName: string, key: string, interpolateParams?: Record<string, unknown>) {\n    super(MessageType.INFO, messageGroupName, key, MessageType.ICON_INFO, interpolateParams);\n  }\n}\n","export enum MessageType {\n  ERROR = 'errorfield',\n  WARNING = 'warning',\n  INFORMATION_WARNING = 'information warning',\n  SUCCESS = 'success',\n  INFO = 'info',\n  ICON_ERROR = 'error-shape',\n  ICON_WARNING = 'alert-shape',\n  ICON_INFO = 'information-shape',\n  ICON_SUCCESS = 'check-shape',\n}\n","import { AbstractMessage } from './abstract-message.model';\nimport { MessageType } from './message-type.enum';\n\nexport class SuccessFlowMessageModel extends AbstractMessage {\n  constructor(messageGroupName: string, key: string, interpolateParams?: Record<string, unknown>) {\n    super(MessageType.SUCCESS, messageGroupName, key, MessageType.SUCCESS, interpolateParams);\n  }\n}\n","import { AbstractMessage } from './abstract-message.model';\nimport { MessageType } from './message-type.enum';\n\nexport class SuccessMessage extends AbstractMessage {\n  constructor(messageGroupName: string, key: string) {\n    super(MessageType.SUCCESS, messageGroupName, key, MessageType.ICON_SUCCESS);\n  }\n}\n","import { AbstractMessage } from './abstract-message.model';\nimport { MessageType } from './message-type.enum';\n\nexport class WarningFlowMessage extends AbstractMessage {\n  constructor(messageGroupName: string, key: string, interpolateParams?: Record<string, unknown>) {\n    super(MessageType.WARNING, messageGroupName, key, MessageType.INFORMATION_WARNING, interpolateParams);\n  }\n}\n","import { AbstractMessage } from './abstract-message.model';\nimport { MessageType } from './message-type.enum';\n\nexport class WarningMessage extends AbstractMessage {\n  constructor(messageGroupName: string, key: string, interpolateParams?: Record<string, unknown>) {\n    super(MessageType.WARNING, messageGroupName, key, MessageType.ICON_WARNING, interpolateParams);\n  }\n}\n"],"names":["MessageType","MessageService","constructor","messages","addMessage","message","messageGroupName","type","push","getErrorMessages","getMessagesByType","ERROR","getMessagesByGroupName","hasMessagesOfType","WARNING","SUCCESS","INFO","messagesByGroupName","clearErrorMessages","clearMessagesByType","hasErrorMessages","filter","m","length","clearMessages","getRegisteredGroupNames","Object","keys","_","_2","factory","ɵfac","providedIn","MessageComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMapInterpolate2","message_r4","ɵɵattribute","ɵɵadvance","ɵɵclassMapInterpolate1","subtype","ɵɵproperty","ctx_r3","getTranslatedLabel","ɵɵsanitizeHtml","ɵɵelementContainerStart","ɵɵtemplate","MessageFlowComponent_ng_container_0_div_1_Template","ɵɵelementContainerEnd","ctx_r0","getMessages","ɵɵprojection","MessageFlowComponent","t","selectors","features","ɵɵInheritDefinitionFeature","ngContentSelectors","_c0","decls","vars","consts","template","MessageFlowComponent_Template","rf","ctx","MessageFlowComponent_ng_container_0_Template","MessageFlowComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","_r2","TranslateService","DomService","MessageComponent_ng_container_0_div_1_Template","messageService","translateService","domService","scrollCheck","scrollToTop","translatedLabel","instant","getMessageLabel","interpolateParams","getMessageSuffix","ɵɵdirectiveInject","i1","i2","i3","inputs","MessageComponent_Template","MessageComponent_ng_container_0_Template","MessageComponent_ng_template_1_Template","CommonModule","TranslateModule","MessagesModule","_3","imports","declarations","exports","AbstractMessage","key","_messageGroupName","_key","_type","_subtype","_interpolateParams","ErrorFlowMessage","ICON_ERROR","ErrorMessage","InfoFlowMessage","ICON_INFO","SuccessFlowMessageModel","SuccessMessage","ICON_SUCCESS","WarningFlowMessage","INFORMATION_WARNING","WarningMessage","ICON_WARNING"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}