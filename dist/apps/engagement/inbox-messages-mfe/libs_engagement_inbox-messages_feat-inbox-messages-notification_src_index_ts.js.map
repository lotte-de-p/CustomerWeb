{"version":3,"file":"libs_engagement_inbox-messages_feat-inbox-messages-notification_src_index_ts.js","mappings":"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","sources":["./libs/engagement/inbox-messages/feat-inbox-messages-notification/src/index.ts","./libs/engagement/inbox-messages/feat-inbox-messages-notification/src/lib/inbox-messages-notification.component.ts","./libs/engagement/inbox-messages/feat-inbox-messages-notification/src/lib/inbox-messages-notification.component.html","./node_modules/ngx-cookie-service/fesm2022/ngx-cookie-service.mjs"],"sourcesContent":["export * from './lib/inbox-messages-notification.component';\n","import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { InboxMessagesFacade, InboxMessagesNgrxModule } from '@inbox-messages/data-access';\nimport { InboxMessageNotificationIconComponent } from '@inbox-messages/ui';\nimport { CookieService } from 'ngx-cookie-service';\n\nconst LOGIN_STATUS_COOKIE = 'loginStatus';\nconst LOGGED_IN_STATUS = 'LOGGED_IN';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, InboxMessagesNgrxModule, AsyncPipe, InboxMessageNotificationIconComponent],\n  selector: 'tg-inbox-messages-notification',\n  templateUrl: './inbox-messages-notification.component.html',\n})\nexport class InboxMessagesNotificationComponent implements AfterViewInit {\n  constructor(\n    private readonly inboxMessagesFacade: InboxMessagesFacade,\n    private readonly cookieService: CookieService\n  ) {\n    this.inboxMessagesFacade.initDataLayer();\n  }\n\n  @Input() inboxOverviewPageUrl!: string;\n  @Input() hideIconLabel!: boolean;\n  @Output() lazyLoadingOutputEvent = new EventEmitter();\n  scopes = [];\n\n  unreadInboxMessagesCount$ = this.inboxMessagesFacade.unreadInboxMessagesCount$;\n\n  ngAfterViewInit() {\n    if (this.isLoggedIn) {\n      this.inboxMessagesFacade.loadUnreadInboxMessagesCount();\n    }\n  }\n\n  handleNotificationClick(url: string): void {\n    this.inboxMessagesFacade.sendNotificationClickedEvent(url);\n  }\n\n  private get isLoggedIn(): boolean {\n    const loginStatus = this.cookieService.get(LOGIN_STATUS_COOKIE);\n    return loginStatus === LOGGED_IN_STATUS;\n  }\n}\n","<tg-inbox-message-notification-icon\n  [inboxOverviewPageUrl]=\"inboxOverviewPageUrl\"\n  [hideIconLabel]=\"hideIconLabel\"\n  [unreadMessages]=\"unreadInboxMessagesCount$ | async\"\n  (notificationClicked)=\"handleNotificationClick($event)\"\n  (unreadMessagesChange)=\"lazyLoadingOutputEvent.emit($event)\">\n</tg-inbox-message-notification-icon>\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\n// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\nclass CookieService {\n    constructor(document, \n    // Get the `PLATFORM_ID` so we can check if we're in a browser.\n    platformId) {\n        this.document = document;\n        this.platformId = platformId;\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * Get cookie Regular Expression\n     *\n     * @param name Cookie name\n     * @returns property RegExp\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    static getCookieRegExp(name) {\n        const escapedName = name.replace(/([\\[\\]{}()|=;+?,.*^$])/gi, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    }\n    /**\n     * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n     *\n     * @param encodedURIComponent A value representing an encoded URI component.\n     *\n     * @returns The unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    static safeDecodeURIComponent(encodedURIComponent) {\n        try {\n            return decodeURIComponent(encodedURIComponent);\n        }\n        catch {\n            // probably it is not uri encoded. return as is\n            return encodedURIComponent;\n        }\n    }\n    /**\n     * Return `true` if {@link Document} is accessible, otherwise return `false`\n     *\n     * @param name Cookie name\n     * @returns boolean - whether cookie with specified name exists\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    check(name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        const regExp = CookieService.getCookieRegExp(name);\n        return regExp.test(this.document.cookie);\n    }\n    /**\n     * Get cookies by name\n     *\n     * @param name Cookie name\n     * @returns property value\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    get(name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            const regExp = CookieService.getCookieRegExp(name);\n            const result = regExp.exec(this.document.cookie);\n            return result[1] ? CookieService.safeDecodeURIComponent(result[1]) : '';\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * Get all cookies in JSON format\n     *\n     * @returns all the cookies in json\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    getAll() {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        const cookies = {};\n        const document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            document.cookie.split(';').forEach((currentCookie) => {\n                const [cookieName, cookieValue] = currentCookie.split('=');\n                cookies[CookieService.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = CookieService.safeDecodeURIComponent(cookieValue);\n            });\n        }\n        return cookies;\n    }\n    set(name, value, expiresOrOptions, path, domain, secure, sameSite) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        if (typeof expiresOrOptions === 'number' || expiresOrOptions instanceof Date || path || domain || secure || sameSite) {\n            const optionsBody = {\n                expires: expiresOrOptions,\n                path,\n                domain,\n                secure,\n                sameSite: sameSite ? sameSite : 'Lax',\n            };\n            this.set(name, value, optionsBody);\n            return;\n        }\n        let cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        const options = expiresOrOptions ? expiresOrOptions : {};\n        if (options.expires) {\n            if (typeof options.expires === 'number') {\n                const dateExpires = new Date(new Date().getTime() + options.expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + options.expires.toUTCString() + ';';\n            }\n        }\n        if (options.path) {\n            cookieString += 'path=' + options.path + ';';\n        }\n        if (options.domain) {\n            cookieString += 'domain=' + options.domain + ';';\n        }\n        if (options.secure === false && options.sameSite === 'None') {\n            options.secure = true;\n            console.warn(`[ngx-cookie-service] Cookie ${name} was forced with secure flag because sameSite=None.` +\n                `More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`);\n        }\n        if (options.secure) {\n            cookieString += 'secure;';\n        }\n        if (!options.sameSite) {\n            options.sameSite = 'Lax';\n        }\n        cookieString += 'sameSite=' + options.sameSite + ';';\n        this.document.cookie = cookieString;\n    }\n    /**\n     * Delete cookie by name\n     *\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     * @param secure Cookie secure flag\n     * @param sameSite Cookie sameSite flag - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    delete(name, path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const expiresDate = new Date('Thu, 01 Jan 1970 00:00:01 GMT');\n        this.set(name, '', { expires: expiresDate, path, domain, secure, sameSite });\n    }\n    /**\n     * Delete all cookies\n     *\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     * @param secure Is the Cookie secure\n     * @param sameSite Is the cookie same site\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    deleteAll(path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const cookies = this.getAll();\n        for (const cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain, secure, sameSite);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: CookieService, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: CookieService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: CookieService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\n/*\n * Public API Surface of ngx-cookie-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CookieService };\n"],"names":["EventEmitter","CommonModule","InboxMessagesFacade","InboxMessagesNgrxModule","InboxMessageNotificationIconComponent","CookieService","LOGIN_STATUS_COOKIE","LOGGED_IN_STATUS","InboxMessagesNotificationComponent","constructor","inboxMessagesFacade","cookieService","lazyLoadingOutputEvent","scopes","unreadInboxMessagesCount$","initDataLayer","ngAfterViewInit","isLoggedIn","loadUnreadInboxMessagesCount","handleNotificationClick","url","sendNotificationClickedEvent","loginStatus","get","_","i0","ɵɵdirectiveInject","i1","i2","_2","selectors","inputs","inboxOverviewPageUrl","hideIconLabel","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","InboxMessagesNotificationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","InboxMessagesNotificationComponent_Template_tg_inbox_message_notification_icon_notificationClicked_0_listener","$event","InboxMessagesNotificationComponent_Template_tg_inbox_message_notification_icon_unreadMessagesChange_0_listener","emit","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind1","i3","AsyncPipe","encapsulation","PLATFORM_ID","Injectable","Inject","isPlatformBrowser","DOCUMENT","document","platformId","documentIsAccessible","getCookieRegExp","name","escapedName","replace","RegExp","safeDecodeURIComponent","encodedURIComponent","decodeURIComponent","check","encodeURIComponent","regExp","test","cookie","result","exec","getAll","cookies","split","forEach","currentCookie","cookieName","cookieValue","set","value","expiresOrOptions","path","domain","secure","sameSite","Date","optionsBody","expires","cookieString","options","dateExpires","getTime","toUTCString","console","warn","delete","expiresDate","deleteAll","hasOwnProperty","ɵfac","CookieService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","Document","decorators","undefined"],"sourceRoot":"webpack:///","x_google_ignoreList":[3]}