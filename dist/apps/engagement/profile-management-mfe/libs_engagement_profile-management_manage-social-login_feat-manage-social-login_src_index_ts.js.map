{"version":3,"file":"libs_engagement_profile-management_manage-social-login_feat-manage-social-login_src_index_ts.js","mappings":"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","sources":["./libs/engagement/profile-management/manage-social-login/feat-manage-social-login/src/index.ts","./libs/engagement/profile-management/manage-social-login/feat-manage-social-login/src/lib/manage-social-login/manage-social-login.component.ts","./libs/engagement/profile-management/manage-social-login/feat-manage-social-login/src/lib/manage-social-login/manage-social-login.component.html","./libs/engagement/profile-management/manage-social-login/feat-manage-social-login/src/lib/manage-social-login/unlink-confirm-dialog/unlink-confirm-dialog.component.ts","./libs/engagement/profile-management/manage-social-login/feat-manage-social-login/src/lib/manage-social-login/unlink-confirm-dialog/unlink-confirm-dialog.component.html","./node_modules/@ngrx/component/fesm2022/ngrx-component.mjs"],"sourcesContent":["export { ManageSocialLoginComponent } from './lib/manage-social-login/manage-social-login.component';\n","import { Component, inject, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CustomerBrandEnum, LoaderModule, PathCategorisationService } from '@telenet/ng-lib-page';\nimport { MessagesModule } from '@telenet/ng-lib-message';\nimport { LoginModule, LoginService } from '@telenet/ng-lib-ocapi';\nimport {\n  CustomerProfileFacade,\n  CustomerProfileNgrxModule,\n  ManageSocialLoginConstants,\n} from '@profile-management/data-access';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatDialog, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { LetDirective } from '@ngrx/component';\nimport { take, tap } from 'rxjs';\nimport { UnlinkConfirmDialogComponent } from './unlink-confirm-dialog/unlink-confirm-dialog.component';\nimport { ImageSrcInterceptorDirective } from '@profile-management/util';\n\n@Component({\n  selector: 'tg-pm-manage-social-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    LoaderModule,\n    MessagesModule,\n    LoginModule,\n    TranslateModule,\n    MatDialogModule,\n    LetDirective,\n    CustomerProfileNgrxModule,\n    ImageSrcInterceptorDirective,\n  ],\n  templateUrl: './manage-social-login.component.html',\n})\nexport class ManageSocialLoginComponent implements OnInit {\n  @Input() pageType: string;\n  @Input() enableMask: boolean;\n  @Input() enableLoader: boolean;\n  @Input() socialLoginDetailsUrl: string;\n\n  private dialogRef: MatDialogRef<UnlinkConfirmDialogComponent>;\n\n  readonly customerProfileFacade: CustomerProfileFacade = inject(CustomerProfileFacade);\n  readonly socialLogins$ = this.customerProfileFacade.socialLogins$;\n\n  scopes = ['unlinksociallogin'];\n  messageGroupName = ManageSocialLoginConstants.MESSAGE_GROUP;\n\n  loggedIn = false;\n  isBrandBase: boolean;\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly loginService: LoginService,\n    private readonly pathCategorisationService: PathCategorisationService\n  ) {}\n\n  ngOnInit(): void {\n    this.getUserDetails();\n    this.isBrandBase = this.pathCategorisationService.isCustomerOfBrandTypes([CustomerBrandEnum.BRAND_BASE]);\n  }\n\n  initAfterLoggedIn(): void {\n    this.loggedIn = true;\n  }\n\n  private getUserDetails(): void {\n    this.loginService\n      .getLoginDetails()\n      .pipe(\n        tap(() => this.customerProfileFacade.loadSocialLogins()),\n        take(1)\n      )\n      .subscribe();\n  }\n\n  openUnlinkConfirmationDialog(socialType: string): void {\n    this.dialogRef = this.dialog.open(UnlinkConfirmDialogComponent, {\n      data: {\n        socialType: socialType,\n      },\n    });\n    this.callCloseDialogSubscription();\n  }\n\n  private callCloseDialogSubscription() {\n    this.dialogRef.afterClosed().subscribe((result) => {\n      if (result.event === 'Close') {\n        this.closeDialog();\n      }\n    });\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close(true);\n  }\n}\n","<tg-login [messageGroupName]=\"messageGroupName\" (componentCanRender)=\"initAfterLoggedIn()\" [scopes]=\"scopes\">\n  <app-loader [enableLoader]=\"enableLoader\" [pageType]=\"pageType\" [enableMask]=\"enableMask\"> </app-loader>\n  <app-message-flow [messageGroupName]=\"messageGroupName\"></app-message-flow>\n\n  <div class=\"manage-social-login col-sm-12 background-white m--auto content-section\">\n    <div\n      class=\"text-align--left text-font-family--t7 text--l font-weight--black p--xl--sm p--l border--t--r border-width--t--r border-style--t--solid border-color--t--white\">\n      {{ 'ng.manage-social-login.lbl.view-change-connections-info' | translate }}\n    </div>\n    <div class=\"divider divider--s__very-light-grey\"></div>\n    <div\n      class=\"align-center text-align--center text--l--sm text--xxm font-weight--black p--xl--sm p--l border--t--r border-width--t--r border-style--t--solid border-color--t--white\">\n      <div *ngrxLet=\"socialLogins$; let socialLogins\">\n        <div class=\"display--flex align-items-center justify-content--center\">\n          <div class=\"hidden-mobile display--flex align-items-center justify-content--center m--s\">\n            <div class=\"p--xl border--r--r border-width--r--r border-style--r--solid border-color--r--white\">\n              <img\n                tgProfileManagementImageSrcInterceptor\n                [moduleId]=\"'tg-pm-manage-social-login'\"\n                src=\"/assets/logo_itsme.svg\"\n                alt=\"itsme icon\"\n                class=\"manage-social-login__icon-section\" />\n            </div>\n            <div class=\"p--xl border--r--r border-width--r--r border-style--r--solid border-color--r--white\">\n              <div class=\"text&#45;&#45;xxm&#45;&#45;sm text&#45;&#45;m font-weight&#45;&#45;black\">itsme</div>\n            </div>\n            <div *ngIf=\"!socialLogins?.isLinkedToItsme\">\n              <div class=\"text--s--sm text--m font--body-regular text-align--center--sm text-align--center py--xs\">\n                {{ 'ng.manage-social-login.lbl.social-login-not-linked' | translate }}\n              </div>\n            </div>\n            <div *ngIf=\"socialLogins?.isLinkedToItsme\">\n              <button class=\"button button--secondary\" (click)=\"openUnlinkConfirmationDialog('itsme')\">\n                <img\n                  tgProfileManagementImageSrcInterceptor\n                  [moduleId]=\"'tg-pm-manage-social-login'\"\n                  src=\"/assets/icon_broken_lock.svg\"\n                  alt=\"broken lock icon\" />\n                <span>\n                  {{ 'ng.manage-social-login.lbl.unlink-itsme' | translate }}\n                </span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"display--flex align-items-center justify-content--center\" style=\"display: inline-block\">\n          <div class=\"hidden-desktop display--flex align-items-center mb-30 justify-content--center\">\n            <div class=\"p--s border--r--r border-width--r--r border-style--r--solid border-color--r--white\">\n              <img\n                tgProfileManagementImageSrcInterceptor\n                [moduleId]=\"'tg-pm-manage-social-login'\"\n                src=\"/assets/logo_itsme.svg\"\n                alt=\"itsme icon\"\n                style=\"width: 7.4rem; height: 7.4rem\" />\n            </div>\n            <div class=\"p--s border--r--r border-width--r--r border-style--r--solid border-color--r--white\">\n              <div class=\"text--xxm--sm text--m font-weight--black\">itsme</div>\n            </div>\n            <div *ngIf=\"!socialLogins?.isLinkedToItsme\">\n              <div class=\"text--s--sm text--m font--body-regular p--l text-align--center--sm text-align--center\">\n                {{ 'ng.manage-social-login.lbl.social-login-not-linked' | translate }}\n              </div>\n            </div>\n            <div *ngIf=\"socialLogins?.isLinkedToItsme\">\n              <button class=\"button button--secondary\" (click)=\"openUnlinkConfirmationDialog('itsme')\">\n                <img\n                  tgProfileManagementImageSrcInterceptor\n                  [moduleId]=\"'tg-pm-manage-social-login'\"\n                  src=\"/assets/icon_broken_lock.svg\"\n                  alt=\"broken lock icon\" />\n                <span>\n                  {{ 'ng.manage-social-login.lbl.unlink-itsme' | translate }}\n                </span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"text--s--sm text--m font-weight--black p--l text-align--center--sm text-align--center\">\n      <a href=\"{{ socialLoginDetailsUrl }}\" class=\"link\">\n        {{ 'ng.manage-social-login.lbl.social-login-more-info' | translate }}\n      </a>\n    </div>\n  </div>\n</tg-login>\n","import { Component, inject, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MessagesModule } from '@telenet/ng-lib-message';\nimport { CommonModule } from '@angular/common';\nimport { LoaderModule } from '@telenet/ng-lib-page';\nimport { LoginModule } from '@telenet/ng-lib-ocapi';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  CustomerProfileFacade,\n  UnlinkSocialLoginInterface,\n  ManageSocialLoginConstants,\n} from '@profile-management/data-access';\n\n@Component({\n  selector: 'tg-pm-unlink-confirm-dialog',\n  standalone: true,\n  imports: [CommonModule, LoaderModule, MessagesModule, LoginModule, TranslateModule],\n  templateUrl: './unlink-confirm-dialog.component.html',\n})\nexport class UnlinkConfirmDialogComponent {\n  readonly customerProfileFacade: CustomerProfileFacade = inject(CustomerProfileFacade);\n\n  messageGroupName = ManageSocialLoginConstants.MESSAGE_GROUP;\n\n  constructor(\n    public dialogRef: MatDialogRef<UnlinkConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      socialType: string;\n    },\n    public dialog: MatDialog\n  ) {}\n\n  closeDialog(): void {\n    this.dialogRef.close(true);\n  }\n\n  unlinkSocialLogin(): void {\n    const payLoad: UnlinkSocialLoginInterface = {\n      socialLoginType: this.data.socialType,\n    };\n    this.closeDialog();\n    this.customerProfileFacade.unlinkSocialLogin(payLoad.socialLoginType);\n  }\n}\n","<div class=\"manage-social-login\">\n  <div class=\"overlay manage-profile-details--change-role\">\n    <div class=\"overlay__mask overlay__mask--backdrop backdrop-filter--3 animation--fade-in\"></div>\n    <div class=\"overlay__section\">\n      <div class=\"overlay__section__content--wrapper animation--slide-down-to-screen center-align p-0 ml-0 mr-0\">\n        <div class=\"overlay__section__content__description\">\n          <div\n            class=\"invite-new-user__invite-close position--fixed fl-inherit cursor--pointer icon icon-cross\"\n            (click)=\"closeDialog()\"></div>\n          <div\n            class=\"content-section background-transparent_white_12 p--xl--md p--m manage-profile-details__details-content\">\n            <div class=\"text-align--center text--l--sm text--xxm font-weight--black mb--l mt--l\">\n              {{ 'ng.manage-social-login.title.want-to-unlink-social-login' | translate }}\n            </div>\n            <div\n              class=\"flex-direction--row--sm flex-direction--column-reverse justify-content--center p--n--sm pt--n pb--n mt--l display--flex\">\n              <div class=\"col-sm-6 p-0\">\n                <button class=\"button button--secondary button--fullwidth\" (click)=\"closeDialog()\">\n                  <span>{{ 'ng.manage-social-login.unlink.btn.cancel' | translate }}</span>\n                </button>\n              </div>\n              <div class=\"display--flex mt--n--sm ml--m--sm mb--xm--sm mr--n--sm mt--n mr--n mb--m ml--n col-sm-6\">\n                <button class=\"button button--primary button--fullwidth\" (click)=\"unlinkSocialLogin()\">\n                  <span>{{ 'ng.manage-social-login.unlink.btn.ok' | translate }}</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import * as i0 from '@angular/core';\nimport { NgZone, inject, Injectable, ChangeDetectorRef, untracked, Directive, Input, Pipe } from '@angular/core';\nimport { isObservable, combineLatest, from, Observable, ReplaySubject, pipe, Subscription } from 'rxjs';\nimport { distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\n\nfunction isNgZone(zone) {\n    return zone instanceof NgZone;\n}\n\nclass TickScheduler {\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: TickScheduler, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: TickScheduler, providedIn: 'root', useFactory: () => {\n            const zone = inject(NgZone);\n            return isNgZone(zone)\n                ? new NoopTickScheduler()\n                : inject(AnimationFrameTickScheduler);\n        } }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: TickScheduler, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => {\n                        const zone = inject(NgZone);\n                        return isNgZone(zone)\n                            ? new NoopTickScheduler()\n                            : inject(AnimationFrameTickScheduler);\n                    },\n                }]\n        }] });\nclass AnimationFrameTickScheduler extends TickScheduler {\n    constructor(appRef) {\n        super();\n        this.appRef = appRef;\n        this.isScheduled = false;\n    }\n    schedule() {\n        if (!this.isScheduled) {\n            this.isScheduled = true;\n            requestAnimationFrame(() => {\n                this.appRef.tick();\n                this.isScheduled = false;\n            });\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: AnimationFrameTickScheduler, deps: [{ token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: AnimationFrameTickScheduler, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: AnimationFrameTickScheduler, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i0.ApplicationRef }] });\nclass NoopTickScheduler extends TickScheduler {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    schedule() { }\n}\n\n/**\n * Provides rendering functionality regardless of whether `zone.js` is present\n * or not. It must be provided at the component/directive level.\n *\n * @usageNotes\n *\n * ### Rerender zone-less app on route changes\n *\n * ```ts\n * @Component({\n *   selector: 'app-root',\n *   template: '<router-outlet>',\n *   // 👇 `RenderScheduler` is provided at the component level\n *   providers: [RenderScheduler],\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * export class AppComponent implements OnInit {\n *   constructor(\n *     private readonly router: Router,\n *     private readonly renderScheduler: RenderScheduler\n *   ) {}\n *\n *   ngOnInit(): void {\n *     this.router.events\n *       .pipe(filter((e) => e instanceof NavigationEnd))\n *       .subscribe(() => this.renderScheduler.schedule());\n *   }\n * }\n * ```\n *\n * ### Rerender component on interval\n *\n * ```ts\n * @Component({\n *   selector: 'app-interval',\n *   template: '{{ elapsedTime }}ms',\n *   // 👇 `RenderScheduler` is provided at the component level\n *   providers: [RenderScheduler],\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * export class IntervalComponent implements OnInit {\n *   elapsedTime = 0;\n *\n *   constructor(private readonly renderScheduler: RenderScheduler) {}\n *\n *   ngOnInit(): void {\n *     setInterval(() => {\n *       this.elapsedTime += 1000;\n *       this.renderScheduler.schedule();\n *     }, 1000);\n *   }\n * }\n * ```\n */\nclass RenderScheduler {\n    constructor(cdRef, tickScheduler) {\n        this.cdRef = cdRef;\n        this.tickScheduler = tickScheduler;\n    }\n    /**\n     * Marks component and its ancestors as dirty.\n     * It also schedules a new change detection cycle in zone-less mode.\n     */\n    schedule() {\n        this.cdRef.markForCheck();\n        this.tickScheduler.schedule();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: RenderScheduler, deps: [{ token: i0.ChangeDetectorRef }, { token: TickScheduler }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: RenderScheduler }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: RenderScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: TickScheduler }] });\nfunction createRenderScheduler() {\n    return new RenderScheduler(inject(ChangeDetectorRef), inject(TickScheduler));\n}\n\nfunction combineRenderEventHandlers(handlers) {\n    return (event) => handlers[event.type]?.(event);\n}\n\nfunction fromPotentialObservable(potentialObservable) {\n    if (isObservable(potentialObservable)) {\n        return potentialObservable;\n    }\n    if (isObservableDictionary(potentialObservable)) {\n        return combineLatest(toDistinctObsDictionary(potentialObservable));\n    }\n    if (isPromiseLike(potentialObservable)) {\n        return from(potentialObservable);\n    }\n    return new Observable((subscriber) => {\n        subscriber.next(potentialObservable);\n    });\n}\nfunction isPromiseLike(value) {\n    return typeof value?.then === 'function';\n}\nfunction isObservableDictionary(value) {\n    return (isDictionary(value) &&\n        Object.keys(value).length > 0 &&\n        Object.values(value).every(isObservable));\n}\nfunction isDictionary(value) {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n}\nfunction toDistinctObsDictionary(obsDictionary) {\n    return Object.keys(obsDictionary).reduce((acc, key) => ({\n        ...acc,\n        [key]: obsDictionary[key].pipe(distinctUntilChanged()),\n    }), {});\n}\n\nfunction createRenderEventManager(handlers) {\n    const handleRenderEvent = combineRenderEventHandlers(handlers);\n    const potentialObservable$ = new ReplaySubject(1);\n    return {\n        nextPotentialObservable(potentialObservable) {\n            potentialObservable$.next(potentialObservable);\n        },\n        handlePotentialObservableChanges() {\n            return potentialObservable$.pipe(distinctUntilChanged(), switchMapToRenderEvent(), distinctUntilChanged(renderEventComparator), tap(handleRenderEvent));\n        },\n    };\n}\nfunction switchMapToRenderEvent() {\n    return pipe(switchMap((potentialObservable) => {\n        const observable$ = fromPotentialObservable(potentialObservable);\n        let reset = true;\n        let synchronous = true;\n        return new Observable((subscriber) => {\n            const subscription = untracked(() => observable$.subscribe({\n                next(value) {\n                    subscriber.next({ type: 'next', value, reset, synchronous });\n                    reset = false;\n                },\n                error(error) {\n                    subscriber.next({ type: 'error', error, reset, synchronous });\n                    reset = false;\n                },\n                complete() {\n                    subscriber.next({ type: 'complete', reset, synchronous });\n                    reset = false;\n                },\n            }));\n            if (reset) {\n                subscriber.next({ type: 'suspense', reset, synchronous: true });\n                reset = false;\n            }\n            synchronous = false;\n            return subscription;\n        });\n    }));\n}\nfunction renderEventComparator(previous, current) {\n    if (previous.type !== current.type || previous.reset !== current.reset) {\n        return false;\n    }\n    if (current.type === 'next') {\n        return previous.value === current.value;\n    }\n    if (current.type === 'error') {\n        return previous.error === current.error;\n    }\n    return true;\n}\n\n/**\n *\n * @description\n *\n * The `*ngrxLet` directive serves a convenient way of binding observables to a view context\n * (DOM element's scope). It also helps with several internal processing under the hood.\n *\n * @usageNotes\n *\n * ### Displaying Observable Values\n *\n * ```html\n * <ng-container *ngrxLet=\"number$ as n\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n *\n * <ng-container *ngrxLet=\"number$; let n\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n * ```\n *\n * ### Tracking Different Observable Events\n *\n * ```html\n * <ng-container *ngrxLet=\"number$ as n; error as e; complete as c\">\n *   <app-number [number]=\"n\" *ngIf=\"!e && !c\">\n *   </app-number>\n *\n *   <p *ngIf=\"e\">There is an error: {{ e }}</p>\n *   <p *ngIf=\"c\">Observable is completed.</p>\n * </ng-container>\n * ```\n *\n * ### Combining Multiple Observables\n *\n * ```html\n * <ng-container *ngrxLet=\"{ users: users$, query: query$ } as vm\">\n *   <app-search-bar [query]=\"vm.query\"></app-search-bar>\n *   <app-user-list [users]=\"vm.users\"></app-user-list>\n * </ng-container>\n * ```\n *\n * ### Using Suspense Template\n *\n * ```html\n * <ng-container *ngrxLet=\"number$ as n; suspenseTpl: loading\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n *\n * <ng-template #loading>\n *   <p>Loading...</p>\n * </ng-template>\n * ```\n *\n * ### Using Aliases for Non-Observable Values\n *\n * ```html\n * <ng-container *ngrxLet=\"userForm.controls.email as email\">\n *   <input type=\"text\" [formControl]=\"email\" />\n *\n *   <ng-container *ngIf=\"email.errors && (email.touched || email.dirty)\">\n *     <p *ngIf=\"email.errors.required\">This field is required.</p>\n *     <p *ngIf=\"email.errors.email\">This field must be an email.</p>\n *   </ng-container>\n * </ng-container>\n * ```\n *\n * @publicApi\n */\nclass LetDirective {\n    set ngrxLet(potentialObservable) {\n        this.renderEventManager.nextPotentialObservable(potentialObservable);\n    }\n    constructor(mainTemplateRef, viewContainerRef, errorHandler, renderScheduler) {\n        this.mainTemplateRef = mainTemplateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.errorHandler = errorHandler;\n        this.renderScheduler = renderScheduler;\n        this.isMainViewCreated = false;\n        this.isSuspenseViewCreated = false;\n        this.viewContext = {\n            $implicit: undefined,\n            ngrxLet: undefined,\n            error: undefined,\n            complete: false,\n        };\n        this.renderEventManager = createRenderEventManager({\n            suspense: () => {\n                this.viewContext.$implicit = undefined;\n                this.viewContext.ngrxLet = undefined;\n                this.viewContext.error = undefined;\n                this.viewContext.complete = false;\n                this.renderSuspenseView();\n            },\n            next: (event) => {\n                this.viewContext.$implicit = event.value;\n                this.viewContext.ngrxLet = event.value;\n                if (event.reset) {\n                    this.viewContext.error = undefined;\n                    this.viewContext.complete = false;\n                }\n                this.renderMainView(event.synchronous);\n            },\n            error: (event) => {\n                this.viewContext.error = event.error;\n                if (event.reset) {\n                    this.viewContext.$implicit = undefined;\n                    this.viewContext.ngrxLet = undefined;\n                    this.viewContext.complete = false;\n                }\n                this.renderMainView(event.synchronous);\n                this.errorHandler.handleError(event.error);\n            },\n            complete: (event) => {\n                this.viewContext.complete = true;\n                if (event.reset) {\n                    this.viewContext.$implicit = undefined;\n                    this.viewContext.ngrxLet = undefined;\n                    this.viewContext.error = undefined;\n                }\n                this.renderMainView(event.synchronous);\n            },\n        });\n        this.subscription = new Subscription();\n    }\n    static ngTemplateContextGuard(dir, ctx) {\n        return true;\n    }\n    ngOnInit() {\n        this.subscription.add(this.renderEventManager.handlePotentialObservableChanges().subscribe());\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    renderMainView(isSyncEvent) {\n        if (this.isSuspenseViewCreated) {\n            this.isSuspenseViewCreated = false;\n            this.viewContainerRef.clear();\n        }\n        if (!this.isMainViewCreated) {\n            this.isMainViewCreated = true;\n            this.viewContainerRef.createEmbeddedView(this.mainTemplateRef, this.viewContext);\n        }\n        if (!isSyncEvent) {\n            this.renderScheduler.schedule();\n        }\n    }\n    renderSuspenseView() {\n        if (this.isMainViewCreated) {\n            this.isMainViewCreated = false;\n            this.viewContainerRef.clear();\n        }\n        if (this.suspenseTemplateRef && !this.isSuspenseViewCreated) {\n            this.isSuspenseViewCreated = true;\n            this.viewContainerRef.createEmbeddedView(this.suspenseTemplateRef);\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: LetDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: i0.ErrorHandler }, { token: RenderScheduler }], target: i0.ɵɵFactoryTarget.Directive }); }\n    /** @nocollapse */ static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: LetDirective, isStandalone: true, selector: \"[ngrxLet]\", inputs: { ngrxLet: \"ngrxLet\", suspenseTemplateRef: [\"ngrxLetSuspenseTpl\", \"suspenseTemplateRef\"] }, providers: [RenderScheduler], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: LetDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[ngrxLet]',\n                    providers: [RenderScheduler],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: i0.ErrorHandler }, { type: RenderScheduler }], propDecorators: { ngrxLet: [{\n                type: Input\n            }], suspenseTemplateRef: [{\n                type: Input,\n                args: ['ngrxLetSuspenseTpl']\n            }] } });\n\n/**\n * @description\n *\n * The `ngrxPush` pipe serves as a drop-in replacement for the `async` pipe.\n * It contains intelligent handling of change detection to enable us\n * running in zone-full as well as zone-less mode without any changes to the code.\n *\n * @usageNotes\n *\n * ### Displaying Observable Values\n *\n * ```html\n * <p>{{ number$ | ngrxPush }}</p>\n *\n * <ng-container *ngIf=\"number$ | ngrxPush as n\">{{ n }}</ng-container>\n *\n * <app-number [number]=\"number$ | ngrxPush\"></app-number>\n * ```\n *\n * ### Combining Multiple Observables\n *\n * ```html\n * <code>\n *   {{ { users: users$, query: query$ } | ngrxPush | json }}\n * </code>\n * ```\n *\n * @publicApi\n */\nclass PushPipe {\n    constructor(errorHandler) {\n        this.errorHandler = errorHandler;\n        this.renderScheduler = createRenderScheduler();\n        this.renderEventManager = createRenderEventManager({\n            suspense: (event) => this.setRenderedValue(undefined, event.synchronous),\n            next: (event) => this.setRenderedValue(event.value, event.synchronous),\n            error: (event) => {\n                if (event.reset) {\n                    this.setRenderedValue(undefined, event.synchronous);\n                }\n                this.errorHandler.handleError(event.error);\n            },\n            complete: (event) => {\n                if (event.reset) {\n                    this.setRenderedValue(undefined, event.synchronous);\n                }\n            },\n        });\n        this.subscription = this.renderEventManager\n            .handlePotentialObservableChanges()\n            .subscribe();\n    }\n    transform(potentialObservable) {\n        this.renderEventManager.nextPotentialObservable(potentialObservable);\n        return this.renderedValue;\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    setRenderedValue(value, isSyncEvent) {\n        if (value !== this.renderedValue) {\n            this.renderedValue = value;\n            if (!isSyncEvent) {\n                this.renderScheduler.schedule();\n            }\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: PushPipe, deps: [{ token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Pipe }); }\n    /** @nocollapse */ static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"17.0.0\", ngImport: i0, type: PushPipe, isStandalone: true, name: \"ngrxPush\", pure: false }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: PushPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    standalone: true,\n                    name: 'ngrxPush',\n                    pure: false,\n                }]\n        }], ctorParameters: () => [{ type: i0.ErrorHandler }] });\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LetDirective, PushPipe, RenderScheduler };\n"],"names":["ManageSocialLoginComponent","inject","CommonModule","CustomerBrandEnum","LoaderModule","PathCategorisationService","MessagesModule","LoginModule","LoginService","CustomerProfileFacade","CustomerProfileNgrxModule","ManageSocialLoginConstants","TranslateModule","MatDialog","MatDialogModule","LetDirective","take","tap","UnlinkConfirmDialogComponent","ImageSrcInterceptorDirective","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵlistener","ManageSocialLoginComponent_div_9_div_9_Template_button_click_1_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","openUnlinkConfirmationDialog","ɵɵelement","ɵɵproperty","ManageSocialLoginComponent_div_9_div_18_Template_button_click_1_listener","_r9","ctx_r8","ɵɵtemplate","ManageSocialLoginComponent_div_9_div_8_Template","ManageSocialLoginComponent_div_9_div_9_Template","ManageSocialLoginComponent_div_9_div_17_Template","ManageSocialLoginComponent_div_9_div_18_Template","socialLogins_r1","isLinkedToItsme","constructor","dialog","loginService","pathCategorisationService","customerProfileFacade","socialLogins$","scopes","messageGroupName","MESSAGE_GROUP","loggedIn","ngOnInit","getUserDetails","isBrandBase","isCustomerOfBrandTypes","BRAND_BASE","initAfterLoggedIn","getLoginDetails","pipe","loadSocialLogins","subscribe","socialType","dialogRef","open","data","callCloseDialogSubscription","afterClosed","result","event","closeDialog","close","_","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","inputs","pageType","enableMask","enableLoader","socialLoginDetailsUrl","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ManageSocialLoginComponent_Template","rf","ctx","ManageSocialLoginComponent_Template_tg_login_componentCanRender_0_listener","ManageSocialLoginComponent_div_9_Template","ɵɵpropertyInterpolate","ɵɵsanitizeUrl","i4","NgIf","i5","LoaderComponent","i6","MessageFlowComponent","i7","LoginComponent","i8","TranslatePipe","encapsulation","MAT_DIALOG_DATA","MatDialogRef","unlinkSocialLogin","payLoad","socialLoginType","UnlinkConfirmDialogComponent_Template","UnlinkConfirmDialogComponent_Template_div_click_6_listener","UnlinkConfirmDialogComponent_Template_button_click_13_listener","UnlinkConfirmDialogComponent_Template_button_click_18_listener","ɵɵtextInterpolate","NgZone","Injectable","ChangeDetectorRef","untracked","Directive","Input","Pipe","isObservable","combineLatest","from","Observable","ReplaySubject","Subscription","distinctUntilChanged","switchMap","isNgZone","zone","TickScheduler","ɵfac","TickScheduler_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","NoopTickScheduler","AnimationFrameTickScheduler","providedIn","ngDevMode","ɵsetClassMetadata","type","args","useFactory","appRef","isScheduled","schedule","requestAnimationFrame","tick","AnimationFrameTickScheduler_Factory","ɵɵinject","ApplicationRef","RenderScheduler","cdRef","tickScheduler","markForCheck","RenderScheduler_Factory","createRenderScheduler","combineRenderEventHandlers","handlers","fromPotentialObservable","potentialObservable","isObservableDictionary","toDistinctObsDictionary","isPromiseLike","subscriber","next","value","then","isDictionary","Object","keys","length","values","every","Array","isArray","obsDictionary","reduce","acc","key","createRenderEventManager","handleRenderEvent","potentialObservable$","nextPotentialObservable","handlePotentialObservableChanges","switchMapToRenderEvent","renderEventComparator","observable$","reset","synchronous","subscription","error","complete","previous","current","ngrxLet","renderEventManager","mainTemplateRef","viewContainerRef","errorHandler","renderScheduler","isMainViewCreated","isSuspenseViewCreated","viewContext","$implicit","undefined","suspense","renderSuspenseView","renderMainView","handleError","ngTemplateContextGuard","dir","add","ngOnDestroy","unsubscribe","isSyncEvent","clear","createEmbeddedView","suspenseTemplateRef","LetDirective_Factory","TemplateRef","ViewContainerRef","ErrorHandler","ɵdir","ɵɵdefineDirective","ɵɵInputFlags","None","ɵɵProvidersFeature","selector","providers","PushPipe","setRenderedValue","transform","renderedValue","PushPipe_Factory","ɵpipe","ɵɵdefinePipe","name","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[5]}