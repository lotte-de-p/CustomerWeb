{"version":3,"file":"libs_engagement_profile-management_profile-overview_feat-profile-overview_src_index_ts.js","mappings":"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","sources":["./libs/engagement/profile-management/profile-overview/feat-profile-overview/src/index.ts","./libs/engagement/profile-management/profile-overview/feat-profile-overview/src/lib/profile-overview.component.ts","./libs/engagement/profile-management/profile-overview/feat-profile-overview/src/lib/profile-overview.component.html"],"sourcesContent":["export { ProfileOverviewComponent } from './lib/profile-overview.component';\n","import { Component, inject, Input } from '@angular/core';\nimport { AsyncPipe, CommonModule, NgOptimizedImage } from '@angular/common';\nimport { CustomerProfileFacade, CustomerProfileNgrxModule } from '@profile-management/data-access';\nimport { LoginDetails, LoginModule } from '@telenet/ng-lib-ocapi';\nimport { ImageSrcInterceptorDirective } from '@profile-management/util';\nimport { CustomerBrandEnum, PathCategorisationService, UrlService } from '@telenet/ng-lib-page';\nimport {\n  PmProfileOverviewHeaderComponent,\n  PmProfileOverviewNavLinksComponent,\n  PmProfileOverviewSkeletonComponent,\n  ProfileOverviewErrorComponent,\n  ProfileOverviewNavLinksUrls,\n} from '@profile-management/profile-overview/ui';\n\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    CustomerProfileNgrxModule,\n    AsyncPipe,\n    LoginModule,\n    NgOptimizedImage,\n    ImageSrcInterceptorDirective,\n    PmProfileOverviewHeaderComponent,\n    PmProfileOverviewNavLinksComponent,\n    PmProfileOverviewSkeletonComponent,\n    ProfileOverviewErrorComponent,\n  ],\n  selector: 'tg-pm-profile-overview',\n  templateUrl: './profile-overview.component.html',\n})\nexport class ProfileOverviewComponent {\n  private readonly urlService = inject(UrlService);\n  private readonly customerProfileFacade = inject(CustomerProfileFacade);\n  private readonly pathCategorisationService: PathCategorisationService = inject(PathCategorisationService);\n\n  @Input() profileOverviewUrls = {} as ProfileOverviewNavLinksUrls;\n\n  profileOverview$ = this.customerProfileFacade.profileOverview$;\n  loading$ = this.customerProfileFacade.loading$;\n  loadError$ = this.customerProfileFacade.loadError$;\n  profilePictureUrl: string;\n  isMember: boolean;\n  isBaseCustomer: boolean;\n\n  initAfterLoggedIn(loginDetails: LoginDetails) {\n    this.isMember = loginDetails.isMember();\n    this.isBaseCustomer = this.pathCategorisationService.isCustomerOfBrand(CustomerBrandEnum.BRAND_BASE);\n    this.customerProfileFacade.loadProfileOverview(loginDetails.identityId);\n    this.profilePictureUrl = this.customerProfileFacade.getProfilePicture(loginDetails.identityId);\n  }\n\n  handleLinkClick(data: { type: string; link?: string }, isLink?: boolean): void {\n    this.customerProfileFacade.sendNavLinkClickedEvent(data.type, data.link, isLink);\n\n    if (data.link) {\n      this.urlService.redirectTo(data.link);\n    }\n  }\n\n  handleErrorAction(): void {\n    this.urlService.reloadWindow();\n  }\n}\n","<tg-login (componentCanRender)=\"initAfterLoggedIn($event)\">\n  @if (loading$ | async) {\n    <tg-pm-profile-overview-skeleton></tg-pm-profile-overview-skeleton>\n  } @else {\n    <ng-container *ngIf=\"profileOverview$ | async as profileOverview; else loadingError\">\n      <div class=\"manage-profile-details care-page background-shade_04\">\n        <tg-pm-profile-overview-header\n          [isMember]=\"isMember\"\n          [hasProfilePicture]=\"profileOverview.hasProfilePicture\"\n          [profileOverview]=\"profileOverview\"\n          [profilePictureUrl]=\"profilePictureUrl\"\n          [moreInfoLink]=\"profileOverviewUrls.memberMoreInfoLink\"\n          [isBaseCustomer]=\"isBaseCustomer\"\n          (linkClick)=\"handleLinkClick($event, true)\">\n        </tg-pm-profile-overview-header>\n\n        <tg-pm-profile-overview-nav-links\n          [isMember]=\"isMember\"\n          [isBaseCustomer]=\"isBaseCustomer\"\n          [profileOverview]=\"profileOverview\"\n          [navLinkUrls]=\"profileOverviewUrls\"\n          (linkClick)=\"handleLinkClick($event)\">\n        </tg-pm-profile-overview-nav-links>\n      </div>\n    </ng-container>\n\n    <ng-template #loadingError>\n      @if (loadError$ | async) {\n        <tg-pm-profile-overview-error (errorAction)=\"handleErrorAction()\"></tg-pm-profile-overview-error>\n      }\n    </ng-template>\n  }\n</tg-login>\n"],"names":["ProfileOverviewComponent","inject","CommonModule","CustomerProfileFacade","CustomerProfileNgrxModule","LoginModule","CustomerBrandEnum","PathCategorisationService","UrlService","PmProfileOverviewHeaderComponent","PmProfileOverviewNavLinksComponent","PmProfileOverviewSkeletonComponent","ProfileOverviewErrorComponent","i0","ɵɵelement","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","ProfileOverviewComponent_Conditional_3_ng_container_0_Template_tg_pm_profile_overview_header_linkClick_2_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","handleLinkClick","ɵɵelementEnd","ProfileOverviewComponent_Conditional_3_ng_container_0_Template_tg_pm_profile_overview_nav_links_linkClick_3_listener","ctx_r8","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r2","isMember","profileOverview_r5","hasProfilePicture","profilePictureUrl","profileOverviewUrls","memberMoreInfoLink","isBaseCustomer","ProfileOverviewComponent_Conditional_3_ng_template_2_Conditional_0_Template_tg_pm_profile_overview_error_errorAction_0_listener","_r11","ctx_r10","handleErrorAction","ɵɵtemplate","ProfileOverviewComponent_Conditional_3_ng_template_2_Conditional_0_Template","ɵɵconditional","ɵɵpipeBind1","ctx_r3","loadError$","ProfileOverviewComponent_Conditional_3_ng_container_0_Template","ProfileOverviewComponent_Conditional_3_ng_template_2_Template","ɵɵtemplateRefExtractor","ctx_r1","profileOverview$","_r4","constructor","urlService","customerProfileFacade","pathCategorisationService","loading$","initAfterLoggedIn","loginDetails","isCustomerOfBrand","BRAND_BASE","loadProfileOverview","identityId","getProfilePicture","data","isLink","sendNavLinkClickedEvent","type","link","redirectTo","reloadWindow","_","_2","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ProfileOverviewComponent_Template","rf","ctx","ProfileOverviewComponent_Template_tg_login_componentCanRender_0_listener","ProfileOverviewComponent_Conditional_1_Template","ProfileOverviewComponent_Conditional_3_Template","i1","NgIf","AsyncPipe","i2","LoginComponent","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}