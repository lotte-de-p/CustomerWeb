{"version":3,"file":"libs_account_product_product-price-changes_data-access_src_index_ts-_87891.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC8D;AAC4C;AAMjE;AACC;AACL;;;;AAG/B,MAAOW,mCAAmC;EAO3BC,QAAA;EACAC,mCAAA;EAPnBC,0BAA0B;EAC1BC,6BAA6B;EAC7BC,qBAAqB;EACrBC,iBAAiB;EAEjBC,YACmBN,QAAiB,EACjBC,mCAAwE;IADxE,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,mCAAmC,GAAnCA,mCAAmC;IAEpD,IAAI,CAACC,0BAA0B,GAAGb,2DAAY,CAC5C,MACE,IAAI,CAACW,QAAQ,CAACO,IAAI,CAChBjB,qDAAM,CAACG,0FAA8B,CAAC,EACtCG,mDAAG,CAAC,CAAC;MAAEY;IAAmB,CAAE,KAAKA,mBAAmB,CAAC,CAAC,CAAC,EAAEA,mBAAmB,IAAI,CAACC,SAAS,CAAC,CAAC,EAC5FZ,mDAAG,CAAEW,mBAAmB,IAAI;MAC1BA,mBAAmB,CAACE,OAAO,CAAEC,kBAAkB,IAC7C,IAAI,CAACV,mCAAmC,CAACW,4BAA4B,CAACD,kBAAkB,CAAC,CAC1F;IACH,CAAC,CAAC,CACH,EACH;MAAEE,QAAQ,EAAE;IAAK,CAAE,CACpB;IACD,IAAI,CAACV,6BAA6B,GAAGd,2DAAY,CAC/C,MACE,IAAI,CAACW,QAAQ,CAACO,IAAI,CAChBjB,qDAAM,CAACE,0FAA8B,CAAC,EACtCK,mDAAG,CAAC,CAAC;MAAEiB;IAAM,CAAE,KAAI;MACjB,IAAIA,MAAM,KAAK,GAAG,EAAE;QAClB,IAAI,CAACb,mCAAmC,CAACc,cAAc,CACrDxB,kHAAmC,CAACyB,oBAAoB,EACxDzB,kHAAmC,CAAC0B,8BAA8B,CACnE;MACH;IACF,CAAC,CAAC,CACH,EACH;MAAEJ,QAAQ,EAAE;IAAK,CAAE,CACpB;IACD,IAAI,CAACT,qBAAqB,GAAGf,2DAAY,CACvC,MACES,mDAAa,CAAC,CACZ,IAAI,CAACE,QAAQ,CAACO,IAAI,CAACjB,qDAAM,CAACI,gFAAoB,CAAC,CAAC,EAChD,IAAI,CAACM,QAAQ,CAACO,IAAI,CAACjB,qDAAM,CAACG,0FAA8B,CAAC,CAAC,CAC3D,CAAC,CAACc,IAAI,CACLX,mDAAG,CACD,CAAC,CAAC;MAAEsB;IAAsB,CAAE,EAAE;MAAEV;IAAmB,CAAE,CAAC,KACpDA,mBAAmB,CAACW,IAAI,CACrBR,kBAAkB,IAAKA,kBAAkB,CAACS,aAAa,KAAKF,sBAAsB,CACpF,EAAEV,mBAAmB,IAAI,EAAE,CAC/B,EACDX,mDAAG,CAAEW,mBAAmB,IACtBA,mBAAmB,CAACE,OAAO,CAAEC,kBAAkB,IAC7C,IAAI,CAACV,mCAAmC,CAACW,4BAA4B,CAACD,kBAAkB,CAAC,CAC1F,CACF,CACF,EACH;MAAEE,QAAQ,EAAE;IAAK,CAAE,CACpB;IACD,IAAI,CAACR,iBAAiB,GAAGhB,2DAAY,CACnC,MACE,IAAI,CAACW,QAAQ,CAACO,IAAI,CAChBjB,qDAAM,CAACK,6EAAiB,CAAC,EACzBE,mDAAG,CAAC,CAAC;MAAEwB,eAAe;MAAEC;IAAW,CAAE,KAAI;MACvC,IAAI,CAACD,eAAe,EAAE;QACpB,IAAI,CAACpB,mCAAmC,CAACc,cAAc,CACrDxB,kHAAmC,CAACgC,uBAAuB,EAC3DhC,kHAAmC,CAACiC,qBAAqB,CAC1D;MACH;MACA,IAAIH,eAAe,IAAIC,WAAW,EAAE;QAClC,IAAI,CAACrB,mCAAmC,CAACwB,SAAS,CAChDlC,kHAAmC,CAACgC,uBAAuB,EAC3DhC,kHAAmC,CAACiC,qBAAqB,CAC1D;MACH;IACF,CAAC,CAAC,CACH,EACH;MAAEX,QAAQ,EAAE;IAAK,CAAE,CACpB;EACH;;qBA/EWd,mCAAmC,EAAA2B,sDAAA,CAAAE,kDAAA,GAAAF,sDAAA,CAAAG,kHAAA;EAAA;;WAAnC9B,mCAAmC;IAAA+B,OAAA,EAAnC/B,mCAAmC,CAAAgC,IAAA;IAAAC,UAAA,EADtB;EAAM;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AAC+B;AACnC;AACoC;AACkB;;;;AAQ1F,MAAOK,6BAA6B;;qBAA7BA,6BAA6B;EAAA;;UAA7BA;EAA6B;;cAJtCJ,wDAAa,CAACK,UAAU,CAAC,CAACJ,sFAA0B,EAAEnC,yGAAmC,CAAC,CAAC,EAC3FoC,oDAAW,CAACG,UAAU,CAACF,uFAA0B,CAAC;EAAA;;;sHAGzCC,6BAA6B;IAAAE,OAAA,GAAAX,+DAAA,EAAAC,2DAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACbQ;AAG3C,MAAMe,uBAAuB,GAAGF,yDAAY,CAAC,iDAAiD,CAAC;AAE/F,MAAMjD,8BAA8B,GAAGiD,yDAAY,CACxD,wDAAwD,EACxDC,kDAAK,EAED,CACL;AAEM,MAAMnD,8BAA8B,GAAGkD,yDAAY,CACxD,wDAAwD,EACxDC,kDAAK,EAGD,CACL;AAEM,MAAME,sBAAsB,GAAGH,yDAAY,CAAC,gDAAgD,CAAC;AAC7F,MAAMI,4BAA4B,GAAGJ,yDAAY,CACtD,sDAAsD,EACtDC,kDAAK,EAAS,CACf;AAEM,MAAMI,mCAAmC,GAAGL,yDAAY,CAC7D,6DAA6D,EAC7DC,kDAAK,EAED,CACL;AAEM,MAAMhD,iBAAiB,GAAG+C,yDAAY,CAC3C,2CAA2C,EAC3CC,kDAAK,EAGD,CACL;AAEM,MAAMjD,oBAAoB,GAAGgD,yDAAY,CAC9C,8CAA8C,EAC9CC,kDAAK,EAED,CACL;AAEM,MAAMK,yBAAyB,GAAGN,yDAAY,CACnD,mDAAmD,EACnDC,kDAAK,EAED,CACL;AAEM,MAAMM,eAAe,GAAGP,yDAAY,CAAC,yCAAyC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDxB;AAYrB;AAC2C;AAC/B;AACkC;AAC9B;AACpB;;;;;;AAG/B,MAAOR,0BAA0B;EAQlBlC,QAAA;EACAyD,0BAAA;EACAC,YAAA;EACAC,cAAA;EAVnBC,kBAAkB;EAClBC,wBAAwB;EACxBC,6BAA6B;EAC7BC,uBAAuB;EACvB3D,qBAAqB;EAErBE,YACmBN,QAAiB,EACjByD,0BAAsD,EACtDC,YAA0B,EAC1BC,cAA8B;IAH9B,KAAA3D,QAAQ,GAARA,QAAQ;IACR,KAAAyD,0BAA0B,GAA1BA,0BAA0B;IAC1B,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,cAAc,GAAdA,cAAc;IAE/B,IAAI,CAACC,kBAAkB,GAAGvE,2DAAY,CAAC,MACrC,IAAI,CAACW,QAAQ,CAACO,IAAI,CAChBjB,qDAAM,CAACK,6EAAiB,CAAC;IAAE;IAC3BwD,sDAAM,CAAC,CAAC;MAAE9B;IAAe,CAAE,KAAKA,eAAe,CAAC,EAChDzB,mDAAG,CAAC,MAAMgD,uFAAuB,EAAE,CAAC,CACrC,CACF;IACD,IAAI,CAACiB,wBAAwB,GAAGxE,2DAAY,CAAC,MAC3C,IAAI,CAACW,QAAQ,CAACO,IAAI,CAChBjB,qDAAM,CAACsD,mFAAuB,CAAC;IAAE;IACjCS,yDAAS,CAAC,MAAM,IAAI,CAACI,0BAA0B,CAACO,sBAAsB,EAAE,CAAC,EACzEnE,mDAAG,CAAC,MAAM,IAAI,CAAC8D,cAAc,CAACM,aAAa,CAACV,+FAA0B,CAACW,aAAa,CAAC,CAAC,EACtFtE,mDAAG,CAAEY,mBAAmB,IAAKf,8FAA8B,CAAC;MAAEe;IAAmB,CAAE,CAAC,CAAC,EACrF0C,0DAAU,CAAC,CAACiB,KAAK,EAAEC,MAAM,KACvBA,MAAM,CAAC7D,IAAI,CACT6C,yDAAS,CACP5D,8FAA8B,CAAC;MAC7B2E,KAAK,EAAEA,KAAK,CAACE,OAAO;MACpBvD,MAAM,EAAEqD,KAAK,CAACrD;KACf,CAAC,CACH,CACF,CACF,CACF,CACF;IACD,IAAI,CAACgD,6BAA6B,GAAGzE,2DAAY,CAAC,MAChD,IAAI,CAACW,QAAQ,CAACO,IAAI,CAChBjB,qDAAM,CAACwD,wFAA4B,CAAC;IAAE;IACtCO,yDAAS,CAAEiB,YAAY,IAAK,IAAI,CAACb,0BAA0B,CAACc,KAAK,CAACD,YAAY,CAAC,CAAC,EAChFzE,mDAAG,CAAC,MAAM,IAAI,CAAC8D,cAAc,CAACM,aAAa,CAACV,+FAA0B,CAACW,aAAa,CAAC,CAAC,EACtFtE,mDAAG,CAAC,MAAMD,iFAAiB,CAAC;MAAE0B,eAAe,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAI,CAAE,CAAC,CAAC,EAC1E4B,0DAAU,CAAC,CAACiB,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAAC7D,IAAI,CAAC6C,yDAAS,CAACL,mGAAmC,CAAC;MAAEoB;IAAK,CAAE,CAAC,CAAC,CAAC,CAAC,CACtG,CACF;IACD,IAAI,CAACJ,uBAAuB,GAAG1E,2DAAY,CAAC,MAC1C,IAAI,CAACW,QAAQ,CAACO,IAAI,CAChBjB,qDAAM,CAACuD,kFAAsB,CAAC;IAAE;IAChCQ,yDAAS,CAAC,MAAM,IAAI,CAACK,YAAY,CAACc,eAAe,EAAE,CAAC,EACpD5E,mDAAG,CAAE0E,YAAY,IAAK3E,iFAAiB,CAAC;MAAE0B,eAAe,EAAEiD,YAAY,EAAEG,UAAU,EAAE;MAAEnD,WAAW,EAAE;IAAK,CAAE,CAAC,CAAC,EAC7G4B,0DAAU,CAAC,CAACwB,MAAM,EAAEN,MAAM,KAAKA,MAAM,CAAC7D,IAAI,CAAC6C,yDAAS,CAACH,+EAAe,EAAE,CAAC,CAAC,CAAC,CAC1E,CACF;IACD,IAAI,CAAC7C,qBAAqB,GAAGf,2DAAY,CAAC,MACxCS,mDAAa,CAAC,CACZ,IAAI,CAACE,QAAQ,CAACO,IAAI,CAACjB,qDAAM,CAACI,gFAAoB,CAAC,CAAC,EAChD,IAAI,CAACM,QAAQ,CAACO,IAAI,CAACjB,qDAAM,CAACG,0FAA8B,CAAC,CAAC,CAC3D,CAAC,CAACc,IAAI,CACLX,mDAAG,CAAC,CAAC,CAAC;MAAEsB;IAAsB,CAAE,EAAE;MAAEV;IAAmB,CAAE,CAAC,KACxDwC,yFAAyB,CAAC;MACxB2B,2BAA2B,EACzBnE,mBAAmB,CAACW,IAAI,CACrBR,kBAAkB,IAAKA,kBAAkB,CAACS,aAAa,KAAKF,sBAAsB,CACpF,EAAEV,mBAAmB,IAAI;KAC7B,CAAC,CACH,CACF,CACF;EACH;;qBAtEW0B,0BAA0B,EAAAR,sDAAA,CAAAE,kDAAA,GAAAF,sDAAA,CAAAG,+FAAA,GAAAH,sDAAA,CAAAkD,+DAAA,GAAAlD,sDAAA,CAAAmD,mEAAA;EAAA;;WAA1B3C,0BAA0B;IAAAJ,OAAA,EAA1BI,0BAA0B,CAAAH,IAAA;IAAAC,UAAA,EADb;EAAM;;;;;;;;;;;;;;;;;;;;ACpB+B;AAUtB;AAElC,MAAMiD,iCAAiC,GAAG,uBAAuB;AAgBjE,MAAMC,YAAY,GAA6B;EACpD7D,eAAe,EAAE,KAAK;EACtBb,mBAAmB,EAAE,EAAE;EACvBmE,2BAA2B,EAAE,EAAE;EAC/BzD,sBAAsB,EAAET,SAAS;EACjC0E,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE3E,SAAS;EACpB4E,UAAU,EAAE5E;CACb;AAEM,MAAM2B,0BAA0B,GAAG0C,0DAAa,CAAC;EACtDQ,IAAI,EAAEL,iCAAiC;EACvCM,OAAO,EAAER,0DAAa,CACpBG,YAAY,EACZF,+CAAE,CAACnC,kFAAsB,EAAG2C,KAA+B,KAAM;IAC/D,GAAGA,KAAK;IACRL,OAAO,EAAE;GACV,CAAC,CAAC,EACHH,+CAAE,CAACjC,+FAAmC,EAAE,CAACyC,KAA+B,EAAEC,MAAM,MAAM;IACpF,GAAGD,KAAK;IACRL,OAAO,EAAE,KAAK;IACdE,UAAU,EAAEI,MAAM,CAACtB;GACpB,CAAC,CAAC,EACHa,+CAAE,CAACvF,0FAA8B,EAAE,CAAC+F,KAA+B,EAAEC,MAAM,KAAI;IAC7E,MAAMC,mCAAmC,GAAGD,MAAM,CAACjF,mBAAmB,CAAC,CAAC,CAAC;IACzE,OAAO;MACL,GAAGgF,KAAK;MACRhF,mBAAmB,EAAEiF,MAAM,CAACjF,mBAAmB;MAC/CmE,2BAA2B,EAAEe,mCAAmC,EAAElF,mBAAmB,IAAI,EAAE;MAC3FU,sBAAsB,EAAEwE,mCAAmC,EAAEtE,aAAa;MAC1E+D,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE3E,SAAS;MACpB4E,UAAU,EAAE5E;KACb;EACH,CAAC,CAAC,EACFuE,+CAAE,CAACxF,0FAA8B,EAAE,CAACgG,KAA+B,EAAEC,MAAM,MAAM;IAC/E,GAAGD,KAAK;IACRL,OAAO,EAAE,KAAK;IACdC,SAAS,EAAEK,MAAM,CAACtB;GACnB,CAAC,CAAC,EACHa,+CAAE,CAACrF,6EAAiB,EAAE,CAAC6F,KAA+B,EAAEC,MAAM,MAAM;IAClE,GAAGD,KAAK;IACRnE,eAAe,EAAEoE,MAAM,CAACpE,eAAe;IACvC8D,OAAO,EAAEM,MAAM,CAACpE;GACjB,CAAC,CAAC,EACH2D,+CAAE,CAAC/B,2EAAe,EAAGuC,KAA+B,KAAM;IACxD,GAAGA,KAAK;IACRL,OAAO,EAAE;GACV,CAAC,CAAC,EACHH,+CAAE,CAAChC,qFAAyB,EAAE,CAACwC,KAA+B,EAAEC,MAAM,MAAM;IAC1E,GAAGD,KAAK;IACRb,2BAA2B,EAAEc,MAAM,CAACd;GACrC,CAAC,CAAC;CAEN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AClFkE;AAC2C;AAExG,MAAMkB,gCAAgC,GAAGF,kEAAqB,CACnEV,8FAAiC,CAClC;AAEM,MAAMa,qBAAqB,GAAGF,2DAAc,CAACC,gCAAgC,EAAGL,KAAK,IAAKA,KAAK,CAACnE,eAAe,CAAC;AAEhH,MAAM2B,yBAAyB,GAAG4C,2DAAc,CACrDC,gCAAgC,EAC/BL,KAAK,IAAKA,KAAK,CAAChF,mBAAmB,CACrC;AAEM,MAAMuF,iCAAiC,GAAGH,2DAAc,CAC7DC,gCAAgC,EAC/BL,KAAK,IAAKA,KAAK,CAACb,2BAA2B,CAC7C;AAEM,MAAMqB,4BAA4B,GAAGJ,2DAAc,CACxDC,gCAAgC,EAC/BL,KAAK,IAAKA,KAAK,CAACtE,sBAAsB,CACxC;AAEM,MAAM+E,aAAa,GAAGL,2DAAc,CAACC,gCAAgC,EAAGL,KAAK,IAAKA,KAAK,CAACL,OAAO,CAAC;AAChG,MAAMe,eAAe,GAAGN,2DAAc,CAACC,gCAAgC,EAAGL,KAAK,IAAKA,KAAK,CAACJ,SAAS,CAAC;AACpG,MAAMe,yBAAyB,GAAGP,2DAAc,CAACC,gCAAgC,EAAGL,KAAK,IAAKA,KAAK,CAACH,UAAU,CAAC;;;;;;;;;;;;;;ACrB/G,IAAKe,gBAKX;AALD,WAAYA,gBAAgB;EAC1BA,gBAAA,uBAAmB;EACnBA,gBAAA,2BAAuB;EACvBA,gBAAA,+BAA2B;EAC3BA,gBAAA,qBAAiB;AACnB,CAAC,EALWA,gBAAgB,KAAhBA,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;ACLmB;AACY;AAC/B;AACoB;;;;;;;;;;;;;;;;;;;;;;;ACHG;AACf;AAUc;AAKF;AAEX;;AAG/B,MAAOG,yBAAyB;EACnBC,KAAK,GAAGH,qDAAM,CAACC,8CAA+B,CAAC;EAChEG,QAAQ,GAAG,IAAI,CAACD,KAAK,CAACE,MAAM,CAACT,iFAAa,CAAC;EAC3CU,UAAU,GAAG,IAAI,CAACH,KAAK,CAACE,MAAM,CAACR,mFAAe,CAAC;EAC/CU,oBAAoB,GAAG,IAAI,CAACJ,KAAK,CAACE,MAAM,CAACP,6FAAyB,CAAC,CAAC5F,IAAI,CAACX,mDAAG,CAAEyF,UAAU,IAAK,CAAC,CAACA,UAAU,CAAC,CAAC;EAC3GwB,gBAAgB,GAAG,IAAI,CAACL,KAAK,CAACE,MAAM,CAACZ,yFAAqB,CAAC;EAC3DgB,oBAAoB,GAAG,IAAI,CAACN,KAAK,CAACE,MAAM,CAAC1D,6FAAyB,CAAC;EACnE+D,4BAA4B,GAAG,IAAI,CAACP,KAAK,CAACE,MAAM,CAACX,qGAAiC,CAAC;EACnFiB,uBAAuB,GAAG,IAAI,CAACR,KAAK,CAACE,MAAM,CAACV,gGAA4B,CAAC;EAEzEnD,sBAAsBA,CAAA;IACpB,IAAI,CAAC2D,KAAK,CAAC3F,QAAQ,CAACgC,4FAAsB,EAAE,CAAC;EAC/C;EAEA0B,KAAKA,CAACD,YAAmB;IACvB,IAAI,CAACkC,KAAK,CAAC3F,QAAQ,CAACiC,kGAA4B,CAACwB,YAAY,CAAC,CAAC;EACjE;EAEA5E,oBAAoBA,CAACwB,sBAA8B;IACjD,IAAI,CAACsF,KAAK,CAAC3F,QAAQ,CAACnB,0FAAoB,CAAC;MAAEwB;IAAsB,CAAE,CAAC,CAAC;EACvE;EAEA,IAAI+F,gBAAgBA,CAAA;IAClB,OAAO,IAAI,CAACH,oBAAoB,CAACvG,IAAI,CACnCX,mDAAG,CAAEY,mBAAmB,IAAKA,mBAAmB,CAACZ,GAAG,CAAEe,kBAAkB,IAAKA,kBAAkB,CAACS,aAAa,CAAC,CAAC,CAChH;EACH;;qBA1BWmF,yBAAyB;EAAA;;WAAzBA,yBAAyB;IAAAzE,OAAA,EAAzByE,yBAAyB,CAAAxE,IAAA;IAAAC,UAAA,EADZ;EAAM;;;;;;;;;;;;;;;;;;;;;;;;ACpBoB;AACN;AACJ;AAC2C;AACD;AACmB;AAEjG,SAAUmF,gCAAgCA,CAAA;EAC9C,OAAO,CACLD,kEAAmB,CAAC/E,oDAAW,CAACG,UAAU,CAACF,6FAA0B,CAAC,CAAC,EACvE8E,kEAAmB,CAACjF,wDAAa,CAACK,UAAU,CAAC,CAACJ,4FAA0B,EAAEnC,+GAAmC,CAAC,CAAC,CAAC,CACjH;AACH;;;;;;;;;;;;;;;;;;ACX6D;;;AAMvD,MAAOR,mCAAmC;EAcjB8H,gBAAA;EAbtB,OAAgBnD,aAAa,GAAG,uBAAuB;EACvD,OAAgBoD,aAAa,GAAG,MAAM;EACtC,OAAgBtG,oBAAoB,GAAG,gCAAgC;EACvE,OAAgBO,uBAAuB,GAAG,cAAc;EACxD,OAAgBgG,oBAAoB,GAAG,UAAU;EACjD,OAAgBC,0BAA0B,GAAG,YAAY;EACzD,OAAgBC,qBAAqB,GAAG,OAAO;EAC/C,OAAgBC,4BAA4B,GAAG,cAAc;EAC7D,OAAgBC,4BAA4B,GAAG,sCAAsC;EACrF,OAAgBC,yBAAyB,GAAG,gCAAgC;EAC5E,OAAgB3G,8BAA8B,GAAG,gBAAgB;EACjE,OAAgBO,qBAAqB,GAAG,OAAO;EAEtDlB,YAA6B+G,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;EAAqB;EAE3DzG,4BAA4BA,CAACD,kBAAuC;IACzE,IAAIkH,QAAgB;IACpB,IAAIlH,kBAAkB,EAAE;MACtBkH,QAAQ,GAAGlH,kBAAkB,CAACmH,2BAA2B,GACrDvI,mCAAmC,CAACmI,4BAA4B,GAChEnI,mCAAmC,CAACqI,yBAAyB;IACnE,CAAC,MAAM;MACLC,QAAQ,GAAGtI,mCAAmC,CAACoI,4BAA4B;IAC7E;IACA,IAAI,CAAC5G,cAAc,CAACxB,mCAAmC,CAACyB,oBAAoB,EAAE6G,QAAQ,CAAC;EACzF;EAEO9G,cAAcA,CAACgH,SAAiB,EAAEF,QAAgB;IACvD,IAAI,CAACG,gCAAgC,CACnCD,SAAS,EACTF,QAAQ,EACRtI,mCAAmC,CAACiI,0BAA0B,CAC/D;EACH;EAEO/F,SAASA,CAACsG,SAAiB,EAAEF,QAAgB;IAClD,IAAI,CAACG,gCAAgC,CACnCD,SAAS,EACTF,QAAQ,EACRtI,mCAAmC,CAACkI,qBAAqB,CAC1D;EACH;EAEQO,gCAAgCA,CAACD,SAAiB,EAAEF,QAAgB,EAAEI,SAAiB;IAC7F,MAAMC,UAAU,GAA4B,EAAE;IAE9CA,UAAU,CAAC3I,mCAAmC,CAACgI,oBAAoB,CAAC,GAAGM,QAAQ;IAC/E,MAAMM,QAAQ,GAAG,IAAI,CAACd,gBAAgB,CAACe,cAAc,CACnD7I,mCAAmC,CAAC+H,aAAa,EACjD/H,mCAAmC,CAAC2E,aAAa,CAClD;IACD,MAAMmE,SAAS,GAAG,IAAI,CAAChB,gBAAgB,CAACiB,eAAe,CAACP,SAAS,EAAEE,SAAS,EAAE,CAC5E1I,mCAAmC,CAAC2E,aAAa,CAClD,CAAC;IACF,IAAI,CAACmD,gBAAgB,CAACkB,SAAS,CAAC;MAAEF,SAAS;MAAEH,UAAU;MAAEC;IAAQ,CAAE,CAAC;EACtE;;qBAxDW5I,mCAAmC,EAAAmC,sDAAA,CAAAE,uEAAA;EAAA;;WAAnCrC,mCAAmC;IAAAuC,OAAA,EAAnCvC,mCAAmC,CAAAwC,IAAA;IAAAC,UAAA,EAFlC;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJiD;AACe;AACb;AAEzB;AACF;;;;AAGtC,MAAOuB,0BAA0B;EAOlBsF,YAAA;EACAlF,cAAA;EAPZ,OAAgBO,aAAa,GAAG,uBAAuB;EACtD,OAAgB4E,8BAA8B,GACpD,mEAAmE;EAC7D,OAAgBC,aAAa,GAAG,cAAc;EAEtDzI,YACmBuI,YAA0B,EAC1BlF,cAA8B;IAD9B,KAAAkF,YAAY,GAAZA,YAAY;IACZ,KAAAlF,cAAc,GAAdA,cAAc;EAC9B;EAEHY,KAAKA,CAACA,KAAY;IAChB,MAAMyE,UAAU,GAAG,IAAIR,4DAAU,EAAE,CAACS,GAAG,CAAC,gBAAgB,EAAE1E,KAAK,CAAC2E,cAAc,CAAC,CAACD,GAAG,CAAC,UAAU,EAAE1E,KAAK,CAAC4E,QAAQ,CAAC;IAC/G,OAAO,IAAI,CAACN,YAAY,CACrBO,MAAM,CACL,IAAI,CAACC,kBAAkB,CACrB9F,0BAA0B,CAACW,aAAa,EACxC,GAAGX,0BAA0B,CAACwF,aAAa,IAAIC,UAAU,CAACM,QAAQ,EAAE,EAAE,CACvE,CACF,CACA/I,IAAI,CACH2C,0DAAU,CAAEiB,KAAwB,IAClC,IAAI,CAACoF,WAAW,CAACpF,KAAK,EAAEZ,0BAA0B,CAACW,aAAa,EAAE,IAAI,CAACsF,aAAa,CAAC,CACtF,CACF;EACL;EAEAxF,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAAC6E,YAAY,CACrBY,KAAK,CACJ,IAAI,CAACJ,kBAAkB,CACrB9F,0BAA0B,CAACW,aAAa,EACxCX,0BAA0B,CAACuF,8BAA8B,CAC1D,CACF,CACAvI,IAAI,CACH2C,0DAAU,CAAEiB,KAAwB,IAAI;MACtC,MAAMuF,gBAAgB,GACpBvF,KAAK,CAACrD,MAAM,KAAK,GAAG,GAChB,GAAGyC,0BAA0B,CAACW,aAAa,SAAS,GACpDX,0BAA0B,CAACW,aAAa;MAC9C,OAAO,IAAI,CAACqF,WAAW,CAACpF,KAAK,EAAEuF,gBAAgB,EAAE,IAAI,CAACC,2BAA2B,CAAC;IACpF,CAAC,CAAC,CACH;EACL;EAEQN,kBAAkBA,CAAIK,gBAAwB,EAAEE,QAAgB;IACtE,MAAMC,eAAe,GAAG,IAAIpB,kEAAe,CAAOiB,gBAAgB,EAAEE,QAAQ,CAAC;IAC7EC,eAAe,CAACC,YAAY,GAAI3F,KAAK,IAAKyE,gDAAU,CAAC,MAAMzE,KAAK,CAAC;IACjE,OAAO0F,eAAe;EACxB;EAEQN,WAAWA,CAACpF,KAAwB,EAAEuF,gBAAwB,EAAEK,WAAuC;IAC7G,MAAMC,aAAa,GAAGD,WAAW,CAAC5F,KAAK,CAACrD,MAAM,CAAC;IAC/C,IAAI,CAACmJ,eAAe,CAACD,aAAa,EAAEN,gBAAgB,CAAC;IACrD,OAAOd,gDAAU,CAAC,MAAMzE,KAAK,CAAC;EAChC;EAEQ8F,eAAeA,CAACC,GAAW,EAAER,gBAAwB;IAC3D,IAAI,CAAC/F,cAAc,CAACwG,UAAU,CAAC,IAAIxB,iEAAY,CAACe,gBAAgB,EAAEQ,GAAG,CAAC,CAAC;EACzE;EAEQV,aAAaA,CAAC1I,MAAc;IAClC,OAAOA,MAAM,KAAK,GAAG,GAAG,GAAGyC,0BAA0B,CAACW,aAAa,0BAA0B,GAAG,SAASpD,MAAM,EAAE;EACnH;EAEQ6I,2BAA2BA,CAAC7I,MAAc;IAChD,OAAOA,MAAM,KAAK,GAAG,GAAG,yBAAyB,GAAG,SAASA,MAAM,EAAE;EACvE;;qBApEWyC,0BAA0B,EAAA7B,sDAAA,CAAAE,+DAAA,GAAAF,sDAAA,CAAAG,mEAAA;EAAA;;WAA1B0B,0BAA0B;IAAAzB,OAAA,EAA1ByB,0BAA0B,CAAAxB,IAAA;IAAAC,UAAA,EADb;EAAM","sources":["./libs/account/product/product-price-changes/data-access/src/lib/+state/product-price-changes-datalayer.effects.ts","./libs/account/product/product-price-changes/data-access/src/lib/+state/product-price-changes-ngrx.module.ts","./libs/account/product/product-price-changes/data-access/src/lib/+state/product-price-changes.actions.ts","./libs/account/product/product-price-changes/data-access/src/lib/+state/product-price-changes.effects.ts","./libs/account/product/product-price-changes/data-access/src/lib/+state/product-price-changes.reducers.ts","./libs/account/product/product-price-changes/data-access/src/lib/+state/product-price-changes.selectors.ts","./libs/account/product/product-price-changes/data-access/src/lib/entities/product-price-change.ts","./libs/account/product/product-price-changes/data-access/src/lib/index.ts","./libs/account/product/product-price-changes/data-access/src/lib/product-price-changes.facade.ts","./libs/account/product/product-price-changes/data-access/src/lib/providers.ts","./libs/account/product/product-price-changes/data-access/src/lib/services/product-price-changes-datalayer.service.ts","./libs/account/product/product-price-changes/data-access/src/lib/services/product-price-changes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ProductPriceChangesDatalayerService } from '../services/product-price-changes-datalayer.service';\nimport {\n  loadProductPriceChangesFailure,\n  loadProductPriceChangesSuccess,\n  selectBillingAccount,\n  setAuthentication,\n} from './product-price-changes.actions';\nimport { map, tap } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductPriceChangesDatalayerEffects {\n  productPriceChangesLoaded$;\n  productPriceChangesNotLoaded$;\n  selectBillingAccount$;\n  inPageLoginShown$;\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly productPriceChangesDatalayerService: ProductPriceChangesDatalayerService\n  ) {\n    this.productPriceChangesLoaded$ = createEffect(\n      () =>\n        this.actions$.pipe(\n          ofType(loadProductPriceChangesSuccess),\n          map(({ productPriceChanges }) => productPriceChanges[0]?.productPriceChanges || [undefined]),\n          tap((productPriceChanges) => {\n            productPriceChanges.forEach((productPriceChange) =>\n              this.productPriceChangesDatalayerService.sendSelectProductPriceChange(productPriceChange)\n            );\n          })\n        ),\n      { dispatch: false }\n    );\n    this.productPriceChangesNotLoaded$ = createEffect(\n      () =>\n        this.actions$.pipe(\n          ofType(loadProductPriceChangesFailure),\n          tap(({ status }) => {\n            if (status === 403) {\n              this.productPriceChangesDatalayerService.sendImpression(\n                ProductPriceChangesDatalayerService.EVENT_COMPONENT_NAME,\n                ProductPriceChangesDatalayerService.EVENT_INFO_NAME_LIMITED_ACCESS\n              );\n            }\n          })\n        ),\n      { dispatch: false }\n    );\n    this.selectBillingAccount$ = createEffect(\n      () =>\n        combineLatest([\n          this.actions$.pipe(ofType(selectBillingAccount)),\n          this.actions$.pipe(ofType(loadProductPriceChangesSuccess)),\n        ]).pipe(\n          map(\n            ([{ selectedBillingAccount }, { productPriceChanges }]) =>\n              productPriceChanges.find(\n                (productPriceChange) => productPriceChange.accountNumber === selectedBillingAccount\n              )?.productPriceChanges || []\n          ),\n          tap((productPriceChanges) =>\n            productPriceChanges.forEach((productPriceChange) =>\n              this.productPriceChangesDatalayerService.sendSelectProductPriceChange(productPriceChange)\n            )\n          )\n        ),\n      { dispatch: false }\n    );\n    this.inPageLoginShown$ = createEffect(\n      () =>\n        this.actions$.pipe(\n          ofType(setAuthentication),\n          tap(({ isAuthenticated, customLogin }) => {\n            if (!isAuthenticated) {\n              this.productPriceChangesDatalayerService.sendImpression(\n                ProductPriceChangesDatalayerService.EVENT_INPAGE_LOGIN_NAME,\n                ProductPriceChangesDatalayerService.EVENT_INFO_NAME_LOGIN\n              );\n            }\n            if (isAuthenticated && customLogin) {\n              this.productPriceChangesDatalayerService.sendClick(\n                ProductPriceChangesDatalayerService.EVENT_INPAGE_LOGIN_NAME,\n                ProductPriceChangesDatalayerService.EVENT_INFO_NAME_LOGIN\n              );\n            }\n          })\n        ),\n      { dispatch: false }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ProductPriceChangesEffects } from './product-price-changes.effects';\nimport { StoreModule } from '@ngrx/store';\nimport { productPriceChangesFeature } from './product-price-changes.reducers';\nimport { ProductPriceChangesDatalayerEffects } from './product-price-changes-datalayer.effects';\n\n@NgModule({\n  imports: [\n    EffectsModule.forFeature([ProductPriceChangesEffects, ProductPriceChangesDatalayerEffects]),\n    StoreModule.forFeature(productPriceChangesFeature),\n  ],\n})\nexport class ProductPriceChangesNgrxModule {}\n","import { createAction, props } from '@ngrx/store';\nimport { Login, ProductPriceChange, ProductPriceChangesByAccount } from '../entities/product-price-change';\n\nexport const loadProductPriceChanges = createAction('[product-price-changes] loadProductPriceChanges');\n\nexport const loadProductPriceChangesSuccess = createAction(\n  '[product-price-changes] loadProductPriceChangesSuccess',\n  props<{\n    productPriceChanges: ProductPriceChangesByAccount[];\n  }>()\n);\n\nexport const loadProductPriceChangesFailure = createAction(\n  '[product-price-changes] loadProductPriceChangesFailure',\n  props<{\n    error: string;\n    status: number;\n  }>()\n);\n\nexport const validateAuthentication = createAction('[product-price-changes] validateAuthentication');\nexport const validateCustomAuthentication = createAction(\n  '[product-price-changes] validateCustomAuthentication',\n  props<Login>()\n);\n\nexport const validateCustomAuthenticationFailure = createAction(\n  '[product-price-changes] validateCustomAuthenticationFailure',\n  props<{\n    error: string;\n  }>()\n);\n\nexport const setAuthentication = createAction(\n  '[product-price-changes] setAuthentication',\n  props<{\n    isAuthenticated: boolean;\n    customLogin: boolean;\n  }>()\n);\n\nexport const selectBillingAccount = createAction(\n  '[product-price-changes] selectBillingAccount',\n  props<{\n    selectedBillingAccount: string;\n  }>()\n);\n\nexport const selectProductPriceChanges = createAction(\n  '[product-price-changes] selectProductPriceChanges',\n  props<{\n    selectedProductPriceChanges: ProductPriceChange[];\n  }>()\n);\n\nexport const loadingFinished = createAction('[product-price-changes] loadingFinished');\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  loadingFinished,\n  loadProductPriceChanges,\n  loadProductPriceChangesFailure,\n  loadProductPriceChangesSuccess,\n  selectBillingAccount,\n  selectProductPriceChanges,\n  setAuthentication,\n  validateAuthentication,\n  validateCustomAuthentication,\n  validateCustomAuthenticationFailure,\n} from './product-price-changes.actions';\nimport { catchError, filter, map, startWith, switchMap, tap } from 'rxjs/operators';\nimport { LoginService } from '@telenet/ng-lib-ocapi';\nimport { ProductPriceChangesService } from '../services/product-price-changes.service';\nimport { MessageService } from '@telenet/ng-lib-message';\nimport { combineLatest } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductPriceChangesEffects {\n  setAuthentication$;\n  loadProductPriceChanges$;\n  validateCustomAuthentication$;\n  validateAuthentication$;\n  selectBillingAccount$;\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly productPriceChangesService: ProductPriceChangesService,\n    private readonly loginService: LoginService,\n    private readonly messageService: MessageService\n  ) {\n    this.setAuthentication$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(setAuthentication), // on changing the authentication to true, load product price changes\n        filter(({ isAuthenticated }) => isAuthenticated),\n        map(() => loadProductPriceChanges())\n      )\n    );\n    this.loadProductPriceChanges$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(loadProductPriceChanges), // on this action => load the product price changes\n        switchMap(() => this.productPriceChangesService.getProductPriceChanges()),\n        tap(() => this.messageService.clearMessages(ProductPriceChangesService.MESSAGE_GROUP)),\n        map((productPriceChanges) => loadProductPriceChangesSuccess({ productPriceChanges })),\n        catchError((error, source) =>\n          source.pipe(\n            startWith(\n              loadProductPriceChangesFailure({\n                error: error.message,\n                status: error.status,\n              })\n            )\n          )\n        )\n      )\n    );\n    this.validateCustomAuthentication$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(validateCustomAuthentication), // on this action validate the custom login\n        switchMap((loginDetails) => this.productPriceChangesService.login(loginDetails)),\n        tap(() => this.messageService.clearMessages(ProductPriceChangesService.MESSAGE_GROUP)),\n        map(() => setAuthentication({ isAuthenticated: true, customLogin: true })),\n        catchError((error, source) => source.pipe(startWith(validateCustomAuthenticationFailure({ error }))))\n      )\n    );\n    this.validateAuthentication$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(validateAuthentication), // on this action validate if the user is logged in\n        switchMap(() => this.loginService.getLoginDetails()),\n        map((loginDetails) => setAuthentication({ isAuthenticated: loginDetails?.isLoggedIn(), customLogin: false })),\n        catchError((_error, source) => source.pipe(startWith(loadingFinished())))\n      )\n    );\n    this.selectBillingAccount$ = createEffect(() =>\n      combineLatest([\n        this.actions$.pipe(ofType(selectBillingAccount)),\n        this.actions$.pipe(ofType(loadProductPriceChangesSuccess)),\n      ]).pipe(\n        map(([{ selectedBillingAccount }, { productPriceChanges }]) =>\n          selectProductPriceChanges({\n            selectedProductPriceChanges:\n              productPriceChanges.find(\n                (productPriceChange) => productPriceChange.accountNumber === selectedBillingAccount\n              )?.productPriceChanges || [],\n          })\n        )\n      )\n    );\n  }\n}\n","import { createFeature, createReducer, on } from '@ngrx/store';\nimport { ProductPriceChange, ProductPriceChangesByAccount } from '../entities/product-price-change';\nimport {\n  loadingFinished,\n  loadProductPriceChangesFailure,\n  loadProductPriceChangesSuccess,\n  selectProductPriceChanges,\n  setAuthentication,\n  validateAuthentication,\n  validateCustomAuthenticationFailure,\n} from './product-price-changes.actions';\n\nexport const PRODUCT_PRICE_CHANGES_FEATURE_KEY = 'product-price-changes';\n\nexport interface ProductPriceChangesState {\n  isAuthenticated: boolean;\n  productPriceChanges: ProductPriceChangesByAccount[];\n  selectedProductPriceChanges: ProductPriceChange[];\n  selectedBillingAccount: string | undefined;\n  loading: boolean;\n  loadError: string | undefined;\n  loginError: string | undefined;\n}\n\nexport interface ProductPriceChangesSlice {\n  [PRODUCT_PRICE_CHANGES_FEATURE_KEY]: ProductPriceChangesState;\n}\n\nexport const initialState: ProductPriceChangesState = {\n  isAuthenticated: false,\n  productPriceChanges: [],\n  selectedProductPriceChanges: [],\n  selectedBillingAccount: undefined,\n  loading: false,\n  loadError: undefined,\n  loginError: undefined,\n};\n\nexport const productPriceChangesFeature = createFeature({\n  name: PRODUCT_PRICE_CHANGES_FEATURE_KEY,\n  reducer: createReducer(\n    initialState,\n    on(validateAuthentication, (state: ProductPriceChangesState) => ({\n      ...state,\n      loading: true,\n    })),\n    on(validateCustomAuthenticationFailure, (state: ProductPriceChangesState, action) => ({\n      ...state,\n      loading: false,\n      loginError: action.error,\n    })),\n    on(loadProductPriceChangesSuccess, (state: ProductPriceChangesState, action) => {\n      const defaultProductPriceChangesByAccount = action.productPriceChanges[0];\n      return {\n        ...state,\n        productPriceChanges: action.productPriceChanges,\n        selectedProductPriceChanges: defaultProductPriceChangesByAccount?.productPriceChanges || [],\n        selectedBillingAccount: defaultProductPriceChangesByAccount?.accountNumber,\n        loading: false,\n        loadError: undefined,\n        loginError: undefined,\n      };\n    }),\n    on(loadProductPriceChangesFailure, (state: ProductPriceChangesState, action) => ({\n      ...state,\n      loading: false,\n      loadError: action.error,\n    })),\n    on(setAuthentication, (state: ProductPriceChangesState, action) => ({\n      ...state,\n      isAuthenticated: action.isAuthenticated,\n      loading: action.isAuthenticated,\n    })),\n    on(loadingFinished, (state: ProductPriceChangesState) => ({\n      ...state,\n      loading: false,\n    })),\n    on(selectProductPriceChanges, (state: ProductPriceChangesState, action) => ({\n      ...state,\n      selectedProductPriceChanges: action.selectedProductPriceChanges,\n    }))\n  ),\n});\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { PRODUCT_PRICE_CHANGES_FEATURE_KEY, ProductPriceChangesState } from './product-price-changes.reducers';\n\nexport const selectProductPriceChangesFeature = createFeatureSelector<ProductPriceChangesState>(\n  PRODUCT_PRICE_CHANGES_FEATURE_KEY\n);\n\nexport const selectIsAuthenticated = createSelector(selectProductPriceChangesFeature, (state) => state.isAuthenticated);\n\nexport const selectProductPriceChanges = createSelector(\n  selectProductPriceChangesFeature,\n  (state) => state.productPriceChanges\n);\n\nexport const selectSelectedProductPriceChanges = createSelector(\n  selectProductPriceChangesFeature,\n  (state) => state.selectedProductPriceChanges\n);\n\nexport const selectSelectedBillingAccount = createSelector(\n  selectProductPriceChangesFeature,\n  (state) => state.selectedBillingAccount\n);\n\nexport const selectLoading = createSelector(selectProductPriceChangesFeature, (state) => state.loading);\nexport const selectLoadError = createSelector(selectProductPriceChangesFeature, (state) => state.loadError);\nexport const selectAuthenticationError = createSelector(selectProductPriceChangesFeature, (state) => state.loginError);\n","export interface Login {\n  customerNumber: string;\n  lastName: string;\n}\n\nexport enum BillingFrequency {\n  MONTHLY = 'MONTHLY',\n  QUARTERLY = 'QUARTERLY',\n  HALF_YEARLY = 'HALF_YEARLY',\n  YEARLY = 'YEARLY',\n}\n\nexport interface ProductPriceChangesByAccount {\n  accountNumber: string;\n  productPriceChanges: ProductPriceChange[];\n}\n\nexport interface ProductPriceChange {\n  address: Address;\n  billingFrequency: BillingFrequency;\n  priceChange: number;\n  segment: string;\n  products?: Product[];\n  vatInclusive: boolean;\n  priceAccordingToConsumption: boolean;\n}\n\nexport interface Product {\n  description: ProductDescription;\n  oldPrice: number;\n  newPrice: number;\n}\n\nexport interface ProductDescription {\n  nl: string;\n  fr: string;\n}\n\nexport interface Address {\n  addressId: string;\n  street: string;\n  postalCode: string;\n  city: string;\n  country: string;\n  houseNumber: string;\n  subHouseNumber?: string;\n  box?: string;\n}\n","export * from './product-price-changes.facade';\nexport * from './+state/product-price-changes-ngrx.module';\nexport * from './providers';\nexport * from './entities/product-price-change';\nexport * from './services/product-price-changes.service';\n","import { inject, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ProductPriceChangesSlice } from './+state/product-price-changes.reducers';\nimport {\n  selectAuthenticationError,\n  selectIsAuthenticated,\n  selectLoadError,\n  selectLoading,\n  selectProductPriceChanges,\n  selectSelectedBillingAccount,\n  selectSelectedProductPriceChanges,\n} from './+state/product-price-changes.selectors';\nimport {\n  selectBillingAccount,\n  validateAuthentication,\n  validateCustomAuthentication,\n} from './+state/product-price-changes.actions';\nimport { Login } from './entities/product-price-change';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductPriceChangesFacade {\n  private readonly store = inject(Store<ProductPriceChangesSlice>);\n  loading$ = this.store.select(selectLoading);\n  loadError$ = this.store.select(selectLoadError);\n  authenticationError$ = this.store.select(selectAuthenticationError).pipe(map((loginError) => !!loginError));\n  isAuthenticated$ = this.store.select(selectIsAuthenticated);\n  productPriceChanges$ = this.store.select(selectProductPriceChanges);\n  selectedProductPriceChanges$ = this.store.select(selectSelectedProductPriceChanges);\n  selectedBillingAccount$ = this.store.select(selectSelectedBillingAccount);\n\n  validateAuthentication() {\n    this.store.dispatch(validateAuthentication());\n  }\n\n  login(loginDetails: Login) {\n    this.store.dispatch(validateCustomAuthentication(loginDetails));\n  }\n\n  selectBillingAccount(selectedBillingAccount: string) {\n    this.store.dispatch(selectBillingAccount({ selectedBillingAccount }));\n  }\n\n  get billingAccounts$() {\n    return this.productPriceChanges$.pipe(\n      map((productPriceChanges) => productPriceChanges.map((productPriceChange) => productPriceChange.accountNumber))\n    );\n  }\n}\n","import { importProvidersFrom } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { productPriceChangesFeature } from './+state/product-price-changes.reducers';\nimport { ProductPriceChangesEffects } from './+state/product-price-changes.effects';\nimport { ProductPriceChangesDatalayerEffects } from './+state/product-price-changes-datalayer.effects';\n\nexport function provideProductPriceChangesDomain() {\n  return [\n    importProvidersFrom(StoreModule.forFeature(productPriceChangesFeature)),\n    importProvidersFrom(EffectsModule.forFeature([ProductPriceChangesEffects, ProductPriceChangesDatalayerEffects])),\n  ];\n}\n","import { Injectable } from '@angular/core';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport { ProductPriceChange } from '../entities/product-price-change';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductPriceChangesDatalayerService {\n  public static readonly MESSAGE_GROUP = 'product-price-changes';\n  public static readonly CATEGORY_CARE = 'care';\n  public static readonly EVENT_COMPONENT_NAME = 'product price change component';\n  public static readonly EVENT_INPAGE_LOGIN_NAME = 'inpage login';\n  public static readonly ATTRIBUTES_ITEM_NAME = 'itemName';\n  public static readonly EVENT_INFO_TYPE_IMPRESSION = 'impression';\n  public static readonly EVENT_INFO_TYPE_CLICK = 'click';\n  public static readonly EVENT_INFO_NAME_NOT_IMPACTED = 'not impacted';\n  public static readonly EVENT_INFO_NAME_NOT_POSSIBLE = 'not possible to show the information';\n  public static readonly EVENT_INFO_NAME_DISPLAYED = 'product price change displayed';\n  public static readonly EVENT_INFO_NAME_LIMITED_ACCESS = 'limited access';\n  public static readonly EVENT_INFO_NAME_LOGIN = 'login';\n\n  constructor(private readonly dataLayerService: DataLayerService) {}\n\n  public sendSelectProductPriceChange(productPriceChange?: ProductPriceChange): void {\n    let itemName: string;\n    if (productPriceChange) {\n      itemName = productPriceChange.priceAccordingToConsumption\n        ? ProductPriceChangesDatalayerService.EVENT_INFO_NAME_NOT_IMPACTED\n        : ProductPriceChangesDatalayerService.EVENT_INFO_NAME_DISPLAYED;\n    } else {\n      itemName = ProductPriceChangesDatalayerService.EVENT_INFO_NAME_NOT_POSSIBLE;\n    }\n    this.sendImpression(ProductPriceChangesDatalayerService.EVENT_COMPONENT_NAME, itemName);\n  }\n\n  public sendImpression(eventName: string, itemName: string) {\n    this.sendDataLayerEventWithAttributes(\n      eventName,\n      itemName,\n      ProductPriceChangesDatalayerService.EVENT_INFO_TYPE_IMPRESSION\n    );\n  }\n\n  public sendClick(eventName: string, itemName: string) {\n    this.sendDataLayerEventWithAttributes(\n      eventName,\n      itemName,\n      ProductPriceChangesDatalayerService.EVENT_INFO_TYPE_CLICK\n    );\n  }\n\n  private sendDataLayerEventWithAttributes(eventName: string, itemName: string, eventType: string) {\n    const attributes: Record<string, unknown> = {};\n\n    attributes[ProductPriceChangesDatalayerService.ATTRIBUTES_ITEM_NAME] = itemName;\n    const category = this.dataLayerService.createCategory(\n      ProductPriceChangesDatalayerService.CATEGORY_CARE,\n      ProductPriceChangesDatalayerService.MESSAGE_GROUP\n    );\n    const eventInfo = this.dataLayerService.createEventInfo(eventName, eventType, [\n      ProductPriceChangesDatalayerService.MESSAGE_GROUP,\n    ]);\n    this.dataLayerService.sendEvent({ eventInfo, attributes, category });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { LoginDetails, OcapiCallConfig, OcapiService } from '@telenet/ng-lib-ocapi';\nimport { ErrorMessage, MessageService } from '@telenet/ng-lib-message';\nimport { Login, ProductPriceChangesByAccount } from '../entities/product-price-change';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductPriceChangesService {\n  public static readonly MESSAGE_GROUP = 'product-price-changes';\n  private static readonly PRODUCT_PRICE_CHANGES_ENDPOINT =\n    '/public/api/product-price-change-service/v1/product-price-changes';\n  private static readonly AUTH_ENDPOINT = '/oauth/login';\n\n  constructor(\n    private readonly ocapiService: OcapiService,\n    private readonly messageService: MessageService\n  ) {}\n\n  login(login: Login) {\n    const httpParams = new HttpParams().set('customernumber', login.customerNumber).set('lastname', login.lastName);\n    return this.ocapiService\n      .doPost(\n        this.getOcapiCallConfig<LoginDetails>(\n          ProductPriceChangesService.MESSAGE_GROUP,\n          `${ProductPriceChangesService.AUTH_ENDPOINT}?${httpParams.toString()}`\n        )\n      )\n      .pipe(\n        catchError((error: HttpErrorResponse) =>\n          this.handleError(error, ProductPriceChangesService.MESSAGE_GROUP, this.getLoginError)\n        )\n      );\n  }\n\n  getProductPriceChanges(): Observable<ProductPriceChangesByAccount[]> {\n    return this.ocapiService\n      .doGet(\n        this.getOcapiCallConfig<ProductPriceChangesByAccount[]>(\n          ProductPriceChangesService.MESSAGE_GROUP,\n          ProductPriceChangesService.PRODUCT_PRICE_CHANGES_ENDPOINT\n        )\n      )\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          const messageGroupName =\n            error.status === 403\n              ? `${ProductPriceChangesService.MESSAGE_GROUP}.hidden`\n              : ProductPriceChangesService.MESSAGE_GROUP;\n          return this.handleError(error, messageGroupName, this.getProductPriceChangesError);\n        })\n      );\n  }\n\n  private getOcapiCallConfig<R>(messageGroupName: string, endpoint: string): OcapiCallConfig<R, R> {\n    const ocapiCallConfig = new OcapiCallConfig<R, R>(messageGroupName, endpoint);\n    ocapiCallConfig.errorHandler = (error) => throwError(() => error);\n    return ocapiCallConfig;\n  }\n\n  private handleError(error: HttpErrorResponse, messageGroupName: string, getLabelKey: (status: number) => string) {\n    const errorLabelKey = getLabelKey(error.status);\n    this.addErrorMessage(errorLabelKey, messageGroupName);\n    return throwError(() => error);\n  }\n\n  private addErrorMessage(key: string, messageGroupName: string): void {\n    this.messageService.addMessage(new ErrorMessage(messageGroupName, key));\n  }\n\n  private getLoginError(status: number): string {\n    return status === 400 ? `${ProductPriceChangesService.MESSAGE_GROUP}.ocapi.wrong-credentials` : `ocapi.${status}`;\n  }\n\n  private getProductPriceChangesError(status: number): string {\n    return status === 403 ? 'ocapi.403-OCAPI-ERR-004' : `ocapi.${status}`;\n  }\n}\n"],"names":["Actions","createEffect","ofType","ProductPriceChangesDatalayerService","loadProductPriceChangesFailure","loadProductPriceChangesSuccess","selectBillingAccount","setAuthentication","map","tap","combineLatest","ProductPriceChangesDatalayerEffects","actions$","productPriceChangesDatalayerService","productPriceChangesLoaded$","productPriceChangesNotLoaded$","selectBillingAccount$","inPageLoginShown$","constructor","pipe","productPriceChanges","undefined","forEach","productPriceChange","sendSelectProductPriceChange","dispatch","status","sendImpression","EVENT_COMPONENT_NAME","EVENT_INFO_NAME_LIMITED_ACCESS","selectedBillingAccount","find","accountNumber","isAuthenticated","customLogin","EVENT_INPAGE_LOGIN_NAME","EVENT_INFO_NAME_LOGIN","sendClick","i0","ɵɵinject","i1","i2","factory","ɵfac","providedIn","EffectsModule","ProductPriceChangesEffects","StoreModule","productPriceChangesFeature","ProductPriceChangesNgrxModule","forFeature","imports","EffectsFeatureModule","StoreFeatureModule","createAction","props","loadProductPriceChanges","validateAuthentication","validateCustomAuthentication","validateCustomAuthenticationFailure","selectProductPriceChanges","loadingFinished","catchError","filter","startWith","switchMap","LoginService","ProductPriceChangesService","MessageService","productPriceChangesService","loginService","messageService","setAuthentication$","loadProductPriceChanges$","validateCustomAuthentication$","validateAuthentication$","getProductPriceChanges","clearMessages","MESSAGE_GROUP","error","source","message","loginDetails","login","getLoginDetails","isLoggedIn","_error","selectedProductPriceChanges","i3","i4","createFeature","createReducer","on","PRODUCT_PRICE_CHANGES_FEATURE_KEY","initialState","loading","loadError","loginError","name","reducer","state","action","defaultProductPriceChangesByAccount","createFeatureSelector","createSelector","selectProductPriceChangesFeature","selectIsAuthenticated","selectSelectedProductPriceChanges","selectSelectedBillingAccount","selectLoading","selectLoadError","selectAuthenticationError","BillingFrequency","inject","Store","ProductPriceChangesFacade","store","loading$","select","loadError$","authenticationError$","isAuthenticated$","productPriceChanges$","selectedProductPriceChanges$","selectedBillingAccount$","billingAccounts$","importProvidersFrom","provideProductPriceChangesDomain","DataLayerService","dataLayerService","CATEGORY_CARE","ATTRIBUTES_ITEM_NAME","EVENT_INFO_TYPE_IMPRESSION","EVENT_INFO_TYPE_CLICK","EVENT_INFO_NAME_NOT_IMPACTED","EVENT_INFO_NAME_NOT_POSSIBLE","EVENT_INFO_NAME_DISPLAYED","itemName","priceAccordingToConsumption","eventName","sendDataLayerEventWithAttributes","eventType","attributes","category","createCategory","eventInfo","createEventInfo","sendEvent","HttpParams","OcapiCallConfig","OcapiService","ErrorMessage","throwError","ocapiService","PRODUCT_PRICE_CHANGES_ENDPOINT","AUTH_ENDPOINT","httpParams","set","customerNumber","lastName","doPost","getOcapiCallConfig","toString","handleError","getLoginError","doGet","messageGroupName","getProductPriceChangesError","endpoint","ocapiCallConfig","errorHandler","getLabelKey","errorLabelKey","addErrorMessage","key","addMessage"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}