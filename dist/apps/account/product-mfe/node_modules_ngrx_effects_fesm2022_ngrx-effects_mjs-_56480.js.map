{"version":3,"file":"node_modules_ngrx_effects_fesm2022_ngrx-effects_mjs-_56480.js","mappings":"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","sources":["./node_modules/@ngrx/effects/fesm2022/ngrx-effects.mjs","./node_modules/@ngrx/operators/fesm2022/ngrx-operators.mjs"],"sourcesContent":["import * as i1 from 'rxjs';\nimport { merge, Observable, Subject, defer } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take, concatMap, finalize } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule, Optional, inject, ENVIRONMENT_INITIALIZER, makeEnvironmentProviders } from '@angular/core';\nimport * as i3 from '@ngrx/store';\nimport { ScannedActionsSubject, createAction, ROOT_STORE_PROVIDER, FEATURE_STATE_PROVIDER, Store } from '@ngrx/store';\nexport { concatLatestFrom } from '@ngrx/operators';\n\nconst DEFAULT_EFFECT_CONFIG = {\n    dispatch: true,\n    functional: false,\n    useEffectsErrorHandler: true,\n};\nconst CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\n/**\n * @description\n *\n * Creates an effect from a source and an `EffectConfig`.\n *\n * @param source A function which returns an observable or observable factory.\n * @param config A `EffectConfig` to configure the effect. By default,\n * `dispatch` is true, `functional` is false, and `useEffectsErrorHandler` is\n * true.\n * @returns If `EffectConfig`#`functional` is true, returns the source function.\n * Else, returns the source function result. When `EffectConfig`#`dispatch` is\n * true, the source function result needs to be `Observable<Action>`.\n *\n * @usageNotes\n *\n * ### Class Effects\n *\n * ```ts\n * @Injectable()\n * export class FeatureEffects {\n *   // mapping to a different action\n *   readonly effect1$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionOne),\n *       map(() => FeatureActions.actionTwo())\n *     )\n *   );\n *\n *   // non-dispatching effect\n *   readonly effect2$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionTwo),\n *       tap(() => console.log('Action Two Dispatched'))\n *     ),\n *     { dispatch: false } // FeatureActions.actionTwo is not dispatched\n *   );\n *\n *   constructor(private readonly actions$: Actions) {}\n * }\n * ```\n *\n * ### Functional Effects\n *\n * ```ts\n * // mapping to a different action\n * export const loadUsers = createEffect(\n *   (actions$ = inject(Actions), usersService = inject(UsersService)) => {\n *     return actions$.pipe(\n *       ofType(UsersPageActions.opened),\n *       exhaustMap(() => {\n *         return usersService.getAll().pipe(\n *           map((users) => UsersApiActions.usersLoadedSuccess({ users })),\n *           catchError((error) =>\n *             of(UsersApiActions.usersLoadedFailure({ error }))\n *           )\n *         );\n *       })\n *     );\n *   },\n *   { functional: true }\n * );\n *\n * // non-dispatching functional effect\n * export const logDispatchedActions = createEffect(\n *   () => inject(Actions).pipe(tap(console.log)),\n *   { functional: true, dispatch: false }\n * );\n * ```\n */\nfunction createEffect(source, config = {}) {\n    const effect = config.functional ? source : source();\n    const value = {\n        ...DEFAULT_EFFECT_CONFIG,\n        ...config, // Overrides any defaults if values are provided\n    };\n    Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n        value,\n    });\n    return effect;\n}\nfunction getCreateEffectMetadata(instance) {\n    const propertyNames = Object.getOwnPropertyNames(instance);\n    const metadata = propertyNames\n        .filter((propertyName) => {\n        if (instance[propertyName] &&\n            instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n            // If the property type has overridden `hasOwnProperty` we need to ensure\n            // that the metadata is valid (containing a `dispatch` property)\n            // https://github.com/ngrx/platform/issues/2975\n            const property = instance[propertyName];\n            return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n        }\n        return false;\n    })\n        .map((propertyName) => {\n        const metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n        return {\n            propertyName,\n            ...metaData,\n        };\n    });\n    return metadata;\n}\n\nfunction getEffectsMetadata(instance) {\n    return getSourceMetadata(instance).reduce((acc, { propertyName, dispatch, useEffectsErrorHandler }) => {\n        acc[propertyName] = { dispatch, useEffectsErrorHandler };\n        return acc;\n    }, {});\n}\nfunction getSourceMetadata(instance) {\n    return getCreateEffectMetadata(instance);\n}\n\nfunction getSourceForInstance(instance) {\n    return Object.getPrototypeOf(instance);\n}\nfunction isClassInstance(obj) {\n    return (!!obj.constructor &&\n        obj.constructor.name !== 'Object' &&\n        obj.constructor.name !== 'Function');\n}\nfunction isClass(classOrRecord) {\n    return typeof classOrRecord === 'function';\n}\nfunction getClasses(classesAndRecords) {\n    return classesAndRecords.filter(isClass);\n}\nfunction isToken(tokenOrRecord) {\n    return tokenOrRecord instanceof InjectionToken || isClass(tokenOrRecord);\n}\n\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n    const source = getSourceForInstance(sourceInstance);\n    const isClassBasedEffect = !!source && source.constructor.name !== 'Object';\n    const sourceName = isClassBasedEffect ? source.constructor.name : null;\n    const observables$ = getSourceMetadata(sourceInstance).map(({ propertyName, dispatch, useEffectsErrorHandler, }) => {\n        const observable$ = typeof sourceInstance[propertyName] === 'function'\n            ? sourceInstance[propertyName]()\n            : sourceInstance[propertyName];\n        const effectAction$ = useEffectsErrorHandler\n            ? effectsErrorHandler(observable$, globalErrorHandler)\n            : observable$;\n        if (dispatch === false) {\n            return effectAction$.pipe(ignoreElements());\n        }\n        const materialized$ = effectAction$.pipe(materialize());\n        return materialized$.pipe(map((notification) => ({\n            effect: sourceInstance[propertyName],\n            notification,\n            propertyName,\n            sourceName,\n            sourceInstance,\n        })));\n    });\n    return merge(...observables$);\n}\n\nconst MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\nfunction defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS) {\n    return observable$.pipe(catchError((error) => {\n        if (errorHandler)\n            errorHandler.handleError(error);\n        if (retryAttemptLeft <= 1) {\n            return observable$; // last attempt\n        }\n        // Return observable that produces this particular effect\n        return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n    }));\n}\n\nclass Actions extends Observable {\n    constructor(source) {\n        super();\n        if (source) {\n            this.source = source;\n        }\n    }\n    lift(operator) {\n        const observable = new Actions();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: Actions, deps: [{ token: ScannedActionsSubject }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: Actions, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: Actions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Observable, decorators: [{\n                    type: Inject,\n                    args: [ScannedActionsSubject]\n                }] }] });\n/**\n * `ofType` filters an Observable of `Actions` into an Observable of the actions\n * whose type strings are passed to it.\n *\n * For example, if `actions` has type `Actions<AdditionAction|SubstractionAction>`, and\n * the type of the `Addition` action is `add`, then\n * `actions.pipe(ofType('add'))` returns an `Observable<AdditionAction>`.\n *\n * Properly typing this function is hard and requires some advanced TS tricks\n * below.\n *\n * Type narrowing automatically works, as long as your `actions` object\n * starts with a `Actions<SomeUnionOfActions>` instead of generic `Actions`.\n *\n * For backwards compatibility, when one passes a single type argument\n * `ofType<T>('something')` the result is an `Observable<T>`. Note, that `T`\n * completely overrides any possible inference from 'something'.\n *\n * Unfortunately, for unknown 'actions: Actions' these types will produce\n * 'Observable<never>'. In such cases one has to manually set the generic type\n * like `actions.ofType<AdditionAction>('add')`.\n *\n * @usageNotes\n *\n * Filter the Actions stream on the \"customers page loaded\" action\n *\n * ```ts\n * import { ofType } from '@ngrx/effects';\n * import * fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  ofType(fromCustomers.pageLoaded)\n * )\n * ```\n */\nfunction ofType(...allowedTypes) {\n    return filter((action) => allowedTypes.some((typeOrActionCreator) => {\n        if (typeof typeOrActionCreator === 'string') {\n            // Comparing the string to type\n            return typeOrActionCreator === action.type;\n        }\n        // We are filtering by ActionCreator\n        return typeOrActionCreator.type === action.type;\n    }));\n}\n\nconst _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\nconst USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\nconst _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\nconst _ROOT_EFFECTS_INSTANCES = new InjectionToken('@ngrx/effects Internal Root Effects Instances');\nconst _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\nconst _FEATURE_EFFECTS_INSTANCE_GROUPS = new InjectionToken('@ngrx/effects Internal Feature Effects Instance Groups');\nconst EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler', { providedIn: 'root', factory: () => defaultEffectsErrorHandler });\n\nconst ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nconst rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\n\nfunction reportInvalidActions(output, reporter) {\n    if (output.notification.kind === 'N') {\n        const action = output.notification.value;\n        const isInvalidAction = !isAction(action);\n        if (isInvalidAction) {\n            reporter.handleError(new Error(`Effect ${getEffectName(output)} dispatched an invalid action: ${stringify(action)}`));\n        }\n    }\n}\nfunction isAction(action) {\n    return (typeof action !== 'function' &&\n        action &&\n        action.type &&\n        typeof action.type === 'string');\n}\nfunction getEffectName({ propertyName, sourceInstance, sourceName, }) {\n    const isMethod = typeof sourceInstance[propertyName] === 'function';\n    const isClassBasedEffect = !!sourceName;\n    return isClassBasedEffect\n        ? `\"${sourceName}.${String(propertyName)}${isMethod ? '()' : ''}\"`\n        : `\"${String(propertyName)}()\"`;\n}\nfunction stringify(action) {\n    try {\n        return JSON.stringify(action);\n    }\n    catch {\n        return action;\n    }\n}\n\nconst onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\nfunction isOnIdentifyEffects(instance) {\n    return isFunction(instance, onIdentifyEffectsKey);\n}\nconst onRunEffectsKey = 'ngrxOnRunEffects';\nfunction isOnRunEffects(instance) {\n    return isFunction(instance, onRunEffectsKey);\n}\nconst onInitEffects = 'ngrxOnInitEffects';\nfunction isOnInitEffects(instance) {\n    return isFunction(instance, onInitEffects);\n}\nfunction isFunction(instance, functionName) {\n    return (instance &&\n        functionName in instance &&\n        typeof instance[functionName] === 'function');\n}\n\nclass EffectSources extends Subject {\n    constructor(errorHandler, effectsErrorHandler) {\n        super();\n        this.errorHandler = errorHandler;\n        this.effectsErrorHandler = effectsErrorHandler;\n    }\n    addEffects(effectSourceInstance) {\n        this.next(effectSourceInstance);\n    }\n    /**\n     * @internal\n     */\n    toActions() {\n        return this.pipe(groupBy((effectsInstance) => isClassInstance(effectsInstance)\n            ? getSourceForInstance(effectsInstance)\n            : effectsInstance), mergeMap((source$) => {\n            return source$.pipe(groupBy(effectsInstance));\n        }), mergeMap((source$) => {\n            const effect$ = source$.pipe(exhaustMap((sourceInstance) => {\n                return resolveEffectSource(this.errorHandler, this.effectsErrorHandler)(sourceInstance);\n            }), map((output) => {\n                reportInvalidActions(output, this.errorHandler);\n                return output.notification;\n            }), filter((notification) => notification.kind === 'N' && notification.value != null), dematerialize());\n            // start the stream with an INIT action\n            // do this only for the first Effect instance\n            const init$ = source$.pipe(take(1), filter(isOnInitEffects), map((instance) => instance.ngrxOnInitEffects()));\n            return merge(effect$, init$);\n        }));\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectSources, deps: [{ token: i0.ErrorHandler }, { token: EFFECTS_ERROR_HANDLER }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectSources, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectSources, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.ErrorHandler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EFFECTS_ERROR_HANDLER]\n                }] }] });\nfunction effectsInstance(sourceInstance) {\n    if (isOnIdentifyEffects(sourceInstance)) {\n        return sourceInstance.ngrxOnIdentifyEffects();\n    }\n    return '';\n}\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n    return (sourceInstance) => {\n        const mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n        if (isOnRunEffects(sourceInstance)) {\n            return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n        }\n        return mergedEffects$;\n    };\n}\n\nclass EffectsRunner {\n    get isStarted() {\n        return !!this.effectsSubscription;\n    }\n    constructor(effectSources, store) {\n        this.effectSources = effectSources;\n        this.store = store;\n        this.effectsSubscription = null;\n    }\n    start() {\n        if (!this.effectsSubscription) {\n            this.effectsSubscription = this.effectSources\n                .toActions()\n                .subscribe(this.store);\n        }\n    }\n    ngOnDestroy() {\n        if (this.effectsSubscription) {\n            this.effectsSubscription.unsubscribe();\n            this.effectsSubscription = null;\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsRunner, deps: [{ token: EffectSources }, { token: i3.Store }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsRunner, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsRunner, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: EffectSources }, { type: i3.Store }] });\n\nclass EffectsRootModule {\n    constructor(sources, runner, store, rootEffectsInstances, storeRootModule, storeFeatureModule, guard) {\n        this.sources = sources;\n        runner.start();\n        for (const effectsInstance of rootEffectsInstances) {\n            sources.addEffects(effectsInstance);\n        }\n        store.dispatch({ type: ROOT_EFFECTS_INIT });\n    }\n    addEffects(effectsInstance) {\n        this.sources.addEffects(effectsInstance);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsRootModule, deps: [{ token: EffectSources }, { token: EffectsRunner }, { token: i3.Store }, { token: _ROOT_EFFECTS_INSTANCES }, { token: i3.StoreRootModule, optional: true }, { token: i3.StoreFeatureModule, optional: true }, { token: _ROOT_EFFECTS_GUARD, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsRootModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsRootModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsRootModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: () => [{ type: EffectSources }, { type: EffectsRunner }, { type: i3.Store }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_ROOT_EFFECTS_INSTANCES]\n                }] }, { type: i3.StoreRootModule, decorators: [{\n                    type: Optional\n                }] }, { type: i3.StoreFeatureModule, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ROOT_EFFECTS_GUARD]\n                }] }] });\n\nclass EffectsFeatureModule {\n    constructor(effectsRootModule, effectsInstanceGroups, storeRootModule, storeFeatureModule) {\n        const effectsInstances = effectsInstanceGroups.flat();\n        for (const effectsInstance of effectsInstances) {\n            effectsRootModule.addEffects(effectsInstance);\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsFeatureModule, deps: [{ token: EffectsRootModule }, { token: _FEATURE_EFFECTS_INSTANCE_GROUPS }, { token: i3.StoreRootModule, optional: true }, { token: i3.StoreFeatureModule, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsFeatureModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsFeatureModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsFeatureModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: () => [{ type: EffectsRootModule }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_FEATURE_EFFECTS_INSTANCE_GROUPS]\n                }] }, { type: i3.StoreRootModule, decorators: [{\n                    type: Optional\n                }] }, { type: i3.StoreFeatureModule, decorators: [{\n                    type: Optional\n                }] }] });\n\nclass EffectsModule {\n    static forFeature(...featureEffects) {\n        const effects = featureEffects.flat();\n        const effectsClasses = getClasses(effects);\n        return {\n            ngModule: EffectsFeatureModule,\n            providers: [\n                effectsClasses,\n                {\n                    provide: _FEATURE_EFFECTS,\n                    multi: true,\n                    useValue: effects,\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: _FEATURE_EFFECTS_INSTANCE_GROUPS,\n                    multi: true,\n                    useFactory: createEffectsInstances,\n                    deps: [_FEATURE_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n    static forRoot(...rootEffects) {\n        const effects = rootEffects.flat();\n        const effectsClasses = getClasses(effects);\n        return {\n            ngModule: EffectsRootModule,\n            providers: [\n                effectsClasses,\n                {\n                    provide: _ROOT_EFFECTS,\n                    useValue: [effects],\n                },\n                {\n                    provide: _ROOT_EFFECTS_GUARD,\n                    useFactory: _provideForRootGuard,\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: _ROOT_EFFECTS_INSTANCES,\n                    useFactory: createEffectsInstances,\n                    deps: [_ROOT_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: EffectsModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\nfunction createEffectsInstances(effectsGroups, userProvidedEffectsGroups) {\n    const effects = [];\n    for (const effectsGroup of effectsGroups) {\n        effects.push(...effectsGroup);\n    }\n    for (const userProvidedEffectsGroup of userProvidedEffectsGroups) {\n        effects.push(...userProvidedEffectsGroup);\n    }\n    return effects.map((effectsTokenOrRecord) => isToken(effectsTokenOrRecord)\n        ? inject(effectsTokenOrRecord)\n        : effectsTokenOrRecord);\n}\nfunction _provideForRootGuard() {\n    const runner = inject(EffectsRunner, { optional: true, skipSelf: true });\n    const rootEffects = inject(_ROOT_EFFECTS, { self: true });\n    // check whether any effects are actually passed\n    const hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n    if (hasEffects && runner) {\n        throw new TypeError(`EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.`);\n    }\n    return 'guarded';\n}\n\n/**\n * Wraps project fn with error handling making it safe to use in Effects.\n * Takes either a config with named properties that represent different possible\n * callbacks or project/error callbacks that are required.\n */\nfunction act(\n/** Allow to take either config object or project/error functions */\nconfigOrProject, errorFn) {\n    const { project, error, complete, operator, unsubscribe } = typeof configOrProject === 'function'\n        ? {\n            project: configOrProject,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            error: errorFn,\n            operator: concatMap,\n            complete: undefined,\n            unsubscribe: undefined,\n        }\n        : { ...configOrProject, operator: configOrProject.operator || concatMap };\n    return (source) => defer(() => {\n        const subject = new Subject();\n        return merge(source.pipe(operator((input, index) => defer(() => {\n            let completed = false;\n            let errored = false;\n            let projectedCount = 0;\n            return project(input, index).pipe(materialize(), map((notification) => {\n                switch (notification.kind) {\n                    case 'E':\n                        errored = true;\n                        return {\n                            kind: 'N',\n                            value: error(notification.error, input),\n                        };\n                    case 'C':\n                        completed = true;\n                        return complete\n                            ? {\n                                kind: 'N',\n                                value: complete(projectedCount, input),\n                            }\n                            : undefined;\n                    default:\n                        ++projectedCount;\n                        return notification;\n                }\n            }), filter((n) => n != null), dematerialize(), finalize(() => {\n                if (!completed && !errored && unsubscribe) {\n                    subject.next(unsubscribe(projectedCount, input));\n                }\n            }));\n        }))), subject);\n    });\n}\n\n/**\n * @usageNotes\n *\n * ### Providing effects at the root level\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideEffects(RouterEffects)],\n * });\n * ```\n *\n * ### Providing effects at the feature level\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideEffects(BooksApiEffects)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideEffects(...effects) {\n    const effectsClassesAndRecords = effects.flat();\n    const effectsClasses = getClasses(effectsClassesAndRecords);\n    return makeEnvironmentProviders([\n        effectsClasses,\n        {\n            provide: ENVIRONMENT_INITIALIZER,\n            multi: true,\n            useValue: () => {\n                inject(ROOT_STORE_PROVIDER);\n                inject(FEATURE_STATE_PROVIDER, { optional: true });\n                const effectsRunner = inject(EffectsRunner);\n                const effectSources = inject(EffectSources);\n                const shouldInitEffects = !effectsRunner.isStarted;\n                if (shouldInitEffects) {\n                    effectsRunner.start();\n                }\n                for (const effectsClassOrRecord of effectsClassesAndRecords) {\n                    const effectsInstance = isClass(effectsClassOrRecord)\n                        ? inject(effectsClassOrRecord)\n                        : effectsClassOrRecord;\n                    effectSources.addEffects(effectsInstance);\n                }\n                if (shouldInitEffects) {\n                    const store = inject(Store);\n                    store.dispatch(rootEffectsInit());\n                }\n            },\n        },\n    ]);\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Actions, EFFECTS_ERROR_HANDLER, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, act, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, provideEffects, rootEffectsInit };\n","import { of, EMPTY } from 'rxjs';\nimport { concatMap, withLatestFrom, tap, catchError, finalize } from 'rxjs/operators';\n\n/**\n * `concatLatestFrom` combines the source value\n * and the last available value from a lazily evaluated Observable\n * in a new array\n *\n * @usageNotes\n *\n * Select the active customer from the NgRx Store\n *\n * ```ts\n * import { concatLatestFrom } from '@ngrx/effects';\n * import * as fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  concatLatestFrom(() => this.store.select(fromCustomers.selectActiveCustomer))\n * )\n * ```\n *\n * Select a customer from the NgRx Store by its id that is available on the action\n *\n * ```ts\n * import { concatLatestFrom } from '@ngrx/effects';\n * import * fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  concatLatestFrom((action) => this.store.select(fromCustomers.selectCustomer(action.customerId)))\n * )\n * ```\n */\nfunction concatLatestFrom(observablesFactory) {\n    return concatMap((value) => {\n        const observables = observablesFactory(value);\n        const observablesAsArray = Array.isArray(observables)\n            ? observables\n            : [observables];\n        return of(value).pipe(withLatestFrom(...observablesAsArray));\n    });\n}\n\n/**\n * Handles the response in ComponentStore effects in a safe way, without\n * additional boilerplate. It enforces that the error case is handled and\n * that the effect would still be running should an error occur.\n *\n * Takes optional callbacks for `complete` and `finalize`.\n *\n * @usageNotes\n *\n * ```ts\n * readonly dismissAlert = this.effect<Alert>((alert$) => {\n *   return alert$.pipe(\n *     concatMap(\n *       (alert) => this.alertsService.dismissAlert(alert).pipe(\n *         tapResponse(\n *           (dismissedAlert) => this.alertDismissed(dismissedAlert),\n *           (error: { message: string }) => this.logError(error.message)\n *         )\n *       )\n *     )\n *   );\n * });\n *\n * readonly loadUsers = this.effect<void>((trigger$) => {\n *   return trigger$.pipe(\n *     tap(() => this.patchState({ loading: true })),\n *     exhaustMap(() =>\n *       this.usersService.getAll().pipe(\n *         tapResponse({\n *           next: (users) => this.patchState({ users }),\n *           error: (error: HttpErrorResponse) => this.logError(error.message),\n *           finalize: () => this.patchState({ loading: false }),\n *         })\n *       )\n *     )\n *   );\n * });\n * ```\n */\nfunction tapResponse(observerOrNext, error, complete) {\n    const observer = typeof observerOrNext === 'function'\n        ? {\n            next: observerOrNext,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            error: error,\n            complete,\n        }\n        : observerOrNext;\n    return (source) => source.pipe(tap({ next: observer.next, complete: observer.complete }), catchError((error) => {\n        observer.error(error);\n        return EMPTY;\n    }), observer.finalize ? finalize(observer.finalize) : (source$) => source$);\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { concatLatestFrom, tapResponse };\n"],"names":["i1","merge","Observable","Subject","defer","ignoreElements","materialize","map","catchError","filter","groupBy","mergeMap","exhaustMap","dematerialize","take","concatMap","finalize","i0","InjectionToken","Injectable","Inject","NgModule","Optional","inject","ENVIRONMENT_INITIALIZER","makeEnvironmentProviders","i3","ScannedActionsSubject","createAction","ROOT_STORE_PROVIDER","FEATURE_STATE_PROVIDER","Store","concatLatestFrom","DEFAULT_EFFECT_CONFIG","dispatch","functional","useEffectsErrorHandler","CREATE_EFFECT_METADATA_KEY","createEffect","source","config","effect","value","Object","defineProperty","getCreateEffectMetadata","instance","propertyNames","getOwnPropertyNames","metadata","propertyName","hasOwnProperty","property","metaData","getEffectsMetadata","getSourceMetadata","reduce","acc","getSourceForInstance","getPrototypeOf","isClassInstance","obj","constructor","name","isClass","classOrRecord","getClasses","classesAndRecords","isToken","tokenOrRecord","mergeEffects","sourceInstance","globalErrorHandler","effectsErrorHandler","isClassBasedEffect","sourceName","observables$","observable$","effectAction$","pipe","materialized$","notification","MAX_NUMBER_OF_RETRY_ATTEMPTS","defaultEffectsErrorHandler","errorHandler","retryAttemptLeft","error","handleError","Actions","lift","operator","observable","_","ɵfac","Actions_Factory","t","ɵɵinject","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","decorators","ofType","allowedTypes","action","some","typeOrActionCreator","_ROOT_EFFECTS_GUARD","USER_PROVIDED_EFFECTS","_ROOT_EFFECTS","_ROOT_EFFECTS_INSTANCES","_FEATURE_EFFECTS","_FEATURE_EFFECTS_INSTANCE_GROUPS","EFFECTS_ERROR_HANDLER","ROOT_EFFECTS_INIT","rootEffectsInit","reportInvalidActions","output","reporter","kind","isInvalidAction","isAction","Error","getEffectName","stringify","isMethod","String","JSON","onIdentifyEffectsKey","isOnIdentifyEffects","isFunction","onRunEffectsKey","isOnRunEffects","onInitEffects","isOnInitEffects","functionName","EffectSources","addEffects","effectSourceInstance","next","toActions","effectsInstance","source$","effect$","resolveEffectSource","init$","ngrxOnInitEffects","EffectSources_Factory","ErrorHandler","undefined","ngrxOnIdentifyEffects","mergedEffects$","ngrxOnRunEffects","EffectsRunner","isStarted","effectsSubscription","effectSources","store","start","subscribe","ngOnDestroy","unsubscribe","EffectsRunner_Factory","EffectsRootModule","sources","runner","rootEffectsInstances","storeRootModule","storeFeatureModule","guard","EffectsRootModule_Factory","StoreRootModule","StoreFeatureModule","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","EffectsFeatureModule","effectsRootModule","effectsInstanceGroups","effectsInstances","flat","EffectsFeatureModule_Factory","EffectsModule","forFeature","featureEffects","effects","effectsClasses","ngModule","providers","provide","multi","useValue","useFactory","createEffectsInstances","deps","forRoot","rootEffects","_provideForRootGuard","EffectsModule_Factory","effectsGroups","userProvidedEffectsGroups","effectsGroup","push","userProvidedEffectsGroup","effectsTokenOrRecord","optional","skipSelf","self","hasEffects","length","TypeError","act","configOrProject","errorFn","project","complete","subject","input","index","completed","errored","projectedCount","n","provideEffects","effectsClassesAndRecords","effectsRunner","shouldInitEffects","effectsClassOrRecord","of","EMPTY","withLatestFrom","tap","observablesFactory","observables","observablesAsArray","Array","isArray","tapResponse","observerOrNext","observer"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}