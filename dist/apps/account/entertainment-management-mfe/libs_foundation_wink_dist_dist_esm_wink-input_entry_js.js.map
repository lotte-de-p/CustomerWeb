{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-input_entry_js.js","mappings":"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","sources":["./libs/foundation/wink/dist/dist/core/src/components/_form-components/input/models/input.types.tsx","./libs/foundation/wink/dist/dist/core/src/models/sizes.types.tsx","./libs/foundation/node_modules/uuid/dist/esm-browser/rng.js","./libs/foundation/node_modules/uuid/dist/esm-browser/stringify.js","./libs/foundation/node_modules/uuid/dist/esm-browser/native.js","./libs/foundation/node_modules/uuid/dist/esm-browser/v4.js","./libs/foundation/wink/dist/dist/core/src/utils/utils.tsx","./libs/foundation/wink/dist/dist/core/src/components/_form-components/input/styles/brands/input.base.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/input/styles/brands/input.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/input/input.tsx"],"sourcesContent":["import { SIZES } from '../../../../models/sizes.types';\n\nexport const INPUT_APPEARANCES = {\n  default: 'default',\n  search: 'search',\n} as const;\n\nexport type InputAppearance = (typeof INPUT_APPEARANCES)[keyof typeof INPUT_APPEARANCES];\n\nexport const INPUT_SIZES = {\n  sm: SIZES.sm,\n  md: SIZES.md,\n} as const;\nexport type InputSize = (typeof INPUT_SIZES)[keyof typeof INPUT_SIZES];\n\nexport const INPUT_TYPES = {\n  text: 'text',\n  password: 'password',\n  number: 'number',\n  tel: 'tel',\n  url: 'url',\n  date: 'date',\n  time: 'time',\n  email: 'email',\n  hidden: 'hidden',\n} as const;\nexport type InputType = (typeof INPUT_TYPES)[keyof typeof INPUT_TYPES];\n\nexport const INPUT_AUTOCOMPLETES = {\n  on: 'on',\n  off: 'off',\n  name: 'name',\n  address: 'address',\n  email: 'email',\n  username: 'username',\n  newPassword: 'new-password',\n  currentPassword: 'current-password',\n} as const;\nexport type InputAutocomplete = (typeof INPUT_AUTOCOMPLETES)[keyof typeof INPUT_AUTOCOMPLETES];\n\nexport const INPUT_MODES = {\n  none: 'none',\n  text: 'text',\n  numeric: 'numeric',\n  decimal: 'decimal',\n  tel: 'tel',\n  email: 'email',\n  search: 'search',\n  url: 'url',\n} as const;\nexport type InputMode = (typeof INPUT_MODES)[keyof typeof INPUT_MODES];\n\nexport const INPUT_ENTERKEYHINTS = {\n  none: 'none',\n  enter: 'enter',\n  done: 'done',\n  go: 'go',\n  next: 'next',\n  previous: 'previous',\n  search: 'search',\n  send: 'send',\n} as const;\nexport type InputEnterkeyhint = (typeof INPUT_ENTERKEYHINTS)[keyof typeof INPUT_ENTERKEYHINTS];\n","export const SIZES = {\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  '3xs': '3xs',\n  '2xs': '2xs',\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'l',\n  none: 'none',\n  full: 'full',\n};\nexport type Size = (typeof SIZES)[keyof typeof SIZES];\n\nexport const WIDTHS = {};\nexport type Width = (typeof WIDTHS)[keyof typeof WIDTHS];\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\n\nexport function stArray(param: any) {\n  const isArray = Array.isArray(param);\n  if (isArray) {\n    return param;\n  } else {\n    const paramTostring = param.replace('{', '').replace('}', '').replace(\"', '\", ',');\n    return paramTostring.split(',');\n  }\n}\n\nexport function convertCssClass(param: string) {\n  return param.toLowerCase().replace(' ', '-');\n}\n\nexport function sanitizeString(str: string | undefined): string | undefined {\n  return str?.toLowerCase().trim();\n}\n\nexport const UUId = () => uuidv4();\n\nexport function getStoryArgTypes(\n  argTypes: Record<string, any>,\n  category: string,\n  disabledKeys: string[] = [],\n  basedOnArg: string = ''\n): Record<string, any> {\n  return Object.keys(argTypes || {}).reduce((acc, key) => {\n    acc[key] = {\n      ...argTypes[key],\n      table: { category, disable: disabledKeys.includes(key) },\n      ...(basedOnArg ? { if: { arg: basedOnArg, value: true } } : {}),\n    };\n    return acc;\n  }, {});\n}\n\nexport function getValuesAsArrayFromObject(object: { [key: string]: string[] }): string[] {\n  return Object.values(object).flat();\n}\n\nexport function resetIdsInTest(htmlFromTest: HTMLElement | undefined) {\n  return htmlFromTest?.outerHTML.replace(/id=\".*?\"/g, 'id=\"\"').replace(/htmlfor=\".*?\"/g, 'htmlfor=\"\"');\n}\n","@import '../vars/vars.base';\n@import '../input.default';\n","@import '../vars/vars.telenet';\n@import '../input.default';\n","import { Component, Fragment, Host, h, Prop, Event, EventEmitter, State, Method, Element } from '@stencil/core';\nimport {\n  INPUT_APPEARANCES,\n  INPUT_AUTOCOMPLETES,\n  INPUT_ENTERKEYHINTS,\n  INPUT_MODES,\n  INPUT_SIZES,\n  INPUT_TYPES,\n  InputAppearance,\n  InputAutocomplete,\n  InputEnterkeyhint,\n  InputMode,\n  InputSize,\n  InputType,\n} from './models/input.types';\nimport { UUId } from '../../../utils/utils';\n\n@Component({\n  tag: 'wink-input',\n  styleUrls: {\n    telenet: 'styles/brands/input.telenet.scss',\n    base: 'styles/brands/input.base.scss',\n  },\n  formAssociated: true,\n  scoped: true,\n})\nexport class Input {\n  @Element() host!: HTMLWinkInputElement;\n\n  @Prop({ reflect: true }) appearance: InputAppearance = INPUT_APPEARANCES.default;\n  @Prop({ mutable: true, reflect: true }) value = '';\n  @Prop() inputId!: string;\n  @Prop() name!: string;\n  @Prop() type: InputType = INPUT_TYPES.text;\n  @Prop() placeholder = '';\n  @Prop() isRequired = false;\n  @Prop() inputModeOption: InputMode = INPUT_MODES.text;\n  @Prop() autocomplete: InputAutocomplete = INPUT_AUTOCOMPLETES.off;\n  @Prop() enterkeyhintOption: InputEnterkeyhint = INPUT_ENTERKEYHINTS.none;\n  @Prop() isReadonly = false;\n  @Prop() isDisabled = false;\n  @Prop() isAutofocused = false;\n  @Prop() step?: number;\n  @Prop() minValue?: number | string;\n  @Prop() maxValue?: number | string;\n  @Prop({ reflect: true, mutable: true }) error?: string;\n\n  @Prop() prefixValue = '';\n  @Prop() postfixValue = '';\n\n  @Prop() iconLeft = '';\n  @Prop() iconRight = '';\n  @State() showIconRight = true;\n  @State() inputWidth = 0;\n\n  @Prop() label = '';\n  @Prop() helper = '';\n  @Prop() optionalText = 'Optional';\n\n  @Prop({ reflect: true }) size: InputSize = INPUT_SIZES.md;\n\n  @Event() valueChanged: EventEmitter<string> | undefined;\n\n  @Method()\n  async setValidation(errorMsg?: string) {\n    if (errorMsg) {\n      this.error = errorMsg;\n    } else {\n      this.error = '';\n    }\n  }\n\n  private getLabelId() {\n    return this.inputId + ':Label';\n  }\n  private getHelperId() {\n    return this.inputId + ':Helper';\n  }\n  private getErrorMsgId() {\n    return this.inputId + ':Error';\n  }\n\n  private getAriaDescribedby() {\n    return [this.label && this.getLabelId(), this.helper && this.getHelperId(), this.error && this.getErrorMsgId()]\n      .filter((item) => typeof item === 'string' && item.trim().length > 0)\n      .join(' ');\n  }\n\n  private get getLabel() {\n    if (this.label) {\n      return (\n        <Fragment>\n          <label\n            htmlFor={this.inputId}\n            id={this.getLabelId()}\n            class={{ label: true, 'label-disabled': this.isDisabled }}>\n            <wink-form-label\n              label={this.label}\n              helper={this.helper}\n              helper-id={this.getHelperId()}\n              show-optional={!this.isRequired}\n              optional-text={this.optionalText}\n            />\n          </label>\n        </Fragment>\n      );\n    }\n  }\n  private get getPrefix() {\n    if (this.prefixValue && !this.iconLeft) {\n      return (\n        <Fragment>\n          <div\n            class={{\n              'input-affix input-affix-prefix': true,\n              'input-affix-disabled': this.isDisabled,\n              'input-affix-readonly': this.isReadonly,\n            }}>\n            {this.prefixValue}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n\n  private get getPostfix() {\n    if (this.postfixValue && !this.iconRight) {\n      return (\n        <Fragment>\n          <div\n            class={{\n              'input-affix input-affix-postfix': true,\n              'input-affix-disabled': this.isDisabled,\n              'input-affix-readonly': this.isReadonly,\n            }}>\n            {this.postfixValue}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n  private getReadOnlyLength(value: string) {\n    if (this.isReadonly && value.length > 0) {\n      this.inputWidth = this.type === INPUT_TYPES.date ? value.length + 4 : value.length;\n    } else {\n      this.inputWidth = 0;\n    }\n  }\n\n  private showSearchBackSpaceIcon(value: string) {\n    if (value.length === 0 && this.appearance === INPUT_APPEARANCES.search) {\n      this.showIconRight = false;\n    } else {\n      this.showIconRight = true;\n    }\n  }\n\n  private handleChange(event: Event) {\n    this.value = (event.target as HTMLInputElement).value;\n    this.showSearchBackSpaceIcon(this.value);\n    this.getReadOnlyLength(this.value);\n\n    if (this.valueChanged) {\n      this.valueChanged.emit(this.value);\n    }\n  }\n\n  private handleRightIconClick() {\n    const inputEl = this.host?.querySelector('input');\n    if (inputEl?.classList.contains('input-password')) {\n      const rightIconEl = this.host?.querySelector('.input-icon-button-right wink-icon');\n      if (inputEl?.type === 'password') {\n        inputEl.type = 'text';\n        rightIconEl?.setAttribute('icon', 'eye-off');\n      } else {\n        inputEl.type = 'password';\n        rightIconEl?.setAttribute('icon', 'eye');\n      }\n    }\n  }\n\n  private getAttributes() {\n    return {\n      ...{ id: this.inputId },\n      ...{ name: this.name },\n      ...{ type: this.type },\n      ...{ value: this.value },\n      ...(this.placeholder && { placeholder: this.placeholder }),\n      ...{ 'input-mode': this.inputModeOption },\n      ...{ autocomplete: this.autocomplete },\n      ...(this.isAutofocused && { autofocus: this.isAutofocused }),\n      ...{ enterkeyhint: this.enterkeyhintOption },\n      ...(this.isRequired && { required: this.isRequired }),\n      ...(this.isDisabled && { disabled: this.isDisabled }),\n      ...(this.isReadonly && { readonly: this.isReadonly }),\n      'aria-describedby': this.getAriaDescribedby(),\n      'aria-invalid': !!this.error,\n      ...(this.minValue !== undefined && { min: this.minValue }),\n      ...(this.maxValue !== undefined && { max: this.maxValue }),\n      ...(this.step && { step: this.step }),\n    };\n  }\n\n  componentDidRender() {\n    this.showSearchBackSpaceIcon(this.value);\n    this.getReadOnlyLength(this.value);\n    this.inputId = this.inputId?.length > 0 ? this.inputId : UUId();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.getLabel}\n\n        <div\n          class={{\n            'input-wrapper': true,\n            'input-with-icon-button input-with-icon-button-left': this.iconLeft?.length > 0,\n            'input-with-icon-button input-with-icon-button-right': this.iconRight?.length > 0,\n            'input-wrapper-date': this.type === 'date',\n          }}>\n          {this.getPrefix}\n\n          {this.iconLeft?.length > 0 && (\n            <div class=\"input-icon-button input-icon-button-left\">\n              <button type=\"button\" aria-label={this.iconLeft} class=\"input-icon-button-button\">\n                <wink-icon appearance=\"default\" icon={this.iconLeft} size={this.size}></wink-icon>\n              </button>\n            </div>\n          )}\n\n          <input\n            onInput={(e) => this.handleChange(e)}\n            {...this.getAttributes()}\n            class={{\n              input: true,\n              invalid: !!this.error,\n              'input-password': this.type === INPUT_TYPES.password,\n            }}\n            style={{\n              width: this.isReadonly && this.inputWidth > 0 ? `${this.inputWidth}ch` : '',\n            }}\n          />\n\n          {this.type === INPUT_TYPES.date && !this.isReadonly && (\n            <wink-icon class={{ disabled: this.isDisabled }} icon=\"calendar\" appearance=\"transparent\" />\n          )}\n\n          {this.iconRight?.length > 0 && this.showIconRight && (\n            <div class=\"input-icon-button input-icon-button-right\">\n              <button\n                type=\"button\"\n                aria-label={this.iconRight}\n                class=\"input-icon-button-button\"\n                onClick={() => this.handleRightIconClick()}>\n                <wink-icon appearance=\"default\" icon={this.iconRight} size={this.size}></wink-icon>\n              </button>\n            </div>\n          )}\n\n          {this.getPostfix}\n        </div>\n\n        {this.error && (\n          <div id={this.getErrorMsgId()} class=\"error-msg\">\n            <wink-validation-message message={this.error} />\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"names":["INPUT_APPEARANCES","default","search","INPUT_SIZES","sm","SIZES","md","INPUT_TYPES","text","password","number","tel","url","date","time","email","hidden","INPUT_AUTOCOMPLETES","on","off","name","address","username","newPassword","currentPassword","INPUT_MODES","none","numeric","decimal","INPUT_ENTERKEYHINTS","enter","done","go","next","previous","send","lg","xl","xs","s","m","l","full","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","random","UUId","inputBaseCss","WinkInputBaseStyle0","inputTelenetCss","WinkInputTelenetStyle0","Input","valueChanged","setValidation","errorMsg","_this","_asyncToGenerator","error","getLabelId","inputId","getHelperId","getErrorMsgId","getAriaDescribedby","label","helper","filter","item","trim","length","join","getLabel","h","Fragment","htmlFor","id","class","isDisabled","isRequired","optionalText","getPrefix","prefixValue","iconLeft","isReadonly","getPostfix","postfixValue","iconRight","getReadOnlyLength","value","inputWidth","type","showSearchBackSpaceIcon","appearance","showIconRight","handleChange","event","target","emit","handleRightIconClick","inputEl","host","querySelector","classList","contains","rightIconEl","setAttribute","getAttributes","placeholder","inputModeOption","autocomplete","isAutofocused","autofocus","enterkeyhint","enterkeyhintOption","required","disabled","readonly","minValue","undefined","min","maxValue","max","step","componentDidRender","render","Host","key","icon","size","onInput","e","input","invalid","style","width","onClick","message"],"sourceRoot":"webpack:///","x_google_ignoreList":[2,3,4,5]}