{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-icon_entry_js.js","mappings":";;;;;;;;;;;;;;;;MAEaA,gBAAgB,GAAG;EAC9BC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,SAAS,EAAE;;MAIAC,UAAU,GAAG;EACxB,GAAGJ,gBAAgB;EACnBK,WAAW,EAAE;;MAIFC,UAAU,GAAG;EACxBC,EAAE,EAAEC,uDAAK,CAACD,EAAE;EACZE,EAAE,EAAED,uDAAK,CAACC,EAAE;EACZC,EAAE,EAAEF,uDAAK,CAACE,EAAE;EACZC,EAAE,EAAEH,uDAAK,CAACG;;;;;;;;;;;;;;;;MCnBCH,KAAK,GAAG;EACnBD,EAAE,EAAE,IAAI;EACRE,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACR,KAAK,EAAE,KAAK;EACZ,KAAK,EAAE,KAAK;EACZC,EAAE,EAAE,IAAI;EACRC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;ACZR,MAAMC,WAAW,GAAG,s2EAAs2E;AAC13E,MAAAC,kBAAA,GAAeD,WAAW;ACD1B,MAAME,cAAc,GAAG,s2EAAs2E;AAC73E,MAAAC,qBAAA,GAAeD,cAAc;MCUhBE,IAAI;;;sBACgBlB,sDAAU,CAACH,OAAO;gBACxBK,sDAAU,CAACG,EAAE;gBACvB,MAAM;uBAEE,KAAK;;EAE5Bc,mBAAmBA,CAAA;IACjB,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,UAAU,KAAK,SAAS,IAAIC,MAAM,CAACC,MAAM,CAACvB,sDAAU,CAAC,CAACwB,QAAQ,CAAC,IAAI,CAACH,UAAU,CAAC;;EAGzGI,MAAMA,CAAA;IACJ,OACEC,qDAAA,CAACC,iDAAI;MAAAC,GAAA;MAACC,WAAW,EAAE,cAAc,IAAI,CAACC,IAAI;IAAE,GAC1CJ,qDAAA;MAAAE,GAAA;MACEG,KAAK,EAAE;QACL,CAAC,IAAI,CAACC,IAAI,GAAG,IAAI;QACjB,CAAC,IAAI,CAACX,UAAU,GAAG,IAAI;QACvB,CAAC,UAAU,GAAG,IAAI,CAACD;OACpB;MACDa,IAAI,EAAE,aAAa,IAAI,CAACH,IAAI,EAAE;MAAA,eAClB;IAAM,EAClB,CACG","sources":["./libs/foundation/wink/dist/dist/core/src/components/icon/models/icon.types.tsx","./libs/foundation/wink/dist/dist/core/src/models/sizes.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/icon/styles/brands/icon.base.scss","./libs/foundation/wink/dist/dist/core/src/components/icon/styles/brands/icon.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/icon/icon.tsx"],"sourcesContent":["import { SIZES } from '../../../models/sizes.types';\n\nexport const ICON_TYPES_BASIS = {\n  default: 'default',\n  primary: 'primary',\n  secondary: 'secondary',\n} as const;\nexport type IconTypeBasis = (typeof ICON_TYPES_BASIS)[keyof typeof ICON_TYPES_BASIS];\n\nexport const ICON_TYPES = {\n  ...ICON_TYPES_BASIS,\n  transparent: 'transparent',\n} as const;\nexport type IconType = (typeof ICON_TYPES)[keyof typeof ICON_TYPES];\n\nexport const ICON_SIZES = {\n  sm: SIZES.sm,\n  md: SIZES.md,\n  lg: SIZES.lg,\n  xl: SIZES.xl,\n} as const;\nexport type IconSize = (typeof ICON_SIZES)[keyof typeof ICON_SIZES];\n","export const SIZES = {\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  '3xs': '3xs',\n  '2xs': '2xs',\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'l',\n  none: 'none',\n  full: 'full',\n};\nexport type Size = (typeof SIZES)[keyof typeof SIZES];\n\nexport const WIDTHS = {};\nexport type Width = (typeof WIDTHS)[keyof typeof WIDTHS];\n","@import '../vars/vars.base';\n@import '../icon.default';\n","@import '../vars/vars.telenet';\n@import '../icon.default';\n","import { Component, h, Host, Prop, State } from '@stencil/core';\nimport { ICON_SIZES, ICON_TYPES, IconSize, IconType } from './models/icon.types';\n\n@Component({\n  tag: 'wink-icon',\n  styleUrls: {\n    telenet: 'styles/brands/icon.telenet.scss',\n    base: 'styles/brands/icon.base.scss',\n  },\n  shadow: true,\n})\nexport class Icon {\n  @Prop() appearance: IconType = ICON_TYPES.default;\n  @Prop() size: IconSize = ICON_SIZES.md;\n  @Prop() icon = 'bell';\n\n  @State() hasBackdrop = false;\n\n  componentWillRender(): void {\n    this.hasBackdrop = this.appearance !== 'default' && Object.values(ICON_TYPES).includes(this.appearance);\n  }\n\n  render() {\n    return (\n      <Host exportparts={`icon, icon-${this.icon}`}>\n        <i\n          class={{\n            [this.size]: true,\n            [this.appearance]: true,\n            ['backdrop']: this.hasBackdrop,\n          }}\n          part={`icon icon-${this.icon}`}\n          aria-hidden=\"true\"\n        />\n      </Host>\n    );\n  }\n}\n"],"names":["ICON_TYPES_BASIS","default","primary","secondary","ICON_TYPES","transparent","ICON_SIZES","sm","SIZES","md","lg","xl","xs","s","m","l","none","full","iconBaseCss","WinkIconBaseStyle0","iconTelenetCss","WinkIconTelenetStyle0","Icon","componentWillRender","hasBackdrop","appearance","Object","values","includes","render","h","Host","key","exportparts","icon","class","size","part"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}