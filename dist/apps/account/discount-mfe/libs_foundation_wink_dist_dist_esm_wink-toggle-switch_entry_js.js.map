{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-toggle-switch_entry_js.js","mappings":"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","sources":["./libs/foundation/node_modules/uuid/dist/esm-browser/rng.js","./libs/foundation/node_modules/uuid/dist/esm-browser/stringify.js","./libs/foundation/node_modules/uuid/dist/esm-browser/native.js","./libs/foundation/node_modules/uuid/dist/esm-browser/v4.js","./libs/foundation/wink/dist/dist/core/src/utils/utils.tsx","./libs/foundation/wink/dist/dist/core/src/components/_form-components/toggle-switch/models/toggle-switch.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/_form-components/toggle-switch/styles/brands/toggle-switch.base.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/toggle-switch/styles/brands/toggle-switch.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/toggle-switch/toggle-switch.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\n\nexport function stArray(param: any) {\n  const isArray = Array.isArray(param);\n  if (isArray) {\n    return param;\n  } else {\n    const paramTostring = param.replace('{', '').replace('}', '').replace(\"', '\", ',');\n    return paramTostring.split(',');\n  }\n}\n\nexport function convertCssClass(param: string) {\n  return param.toLowerCase().replace(' ', '-');\n}\n\nexport function sanitizeString(str: string | undefined): string | undefined {\n  return str?.toLowerCase().trim();\n}\n\nexport const UUId = () => uuidv4();\n\nexport function getStoryArgTypes(\n  argTypes: Record<string, any>,\n  category: string,\n  disabledKeys: string[] = [],\n  basedOnArg: string = ''\n): Record<string, any> {\n  return Object.keys(argTypes || {}).reduce((acc, key) => {\n    acc[key] = {\n      ...argTypes[key],\n      table: { category, disable: disabledKeys.includes(key) },\n      ...(basedOnArg ? { if: { arg: basedOnArg, value: true } } : {}),\n    };\n    return acc;\n  }, {});\n}\n\nexport function getValuesAsArrayFromObject(object: { [key: string]: string[] }): string[] {\n  return Object.values(object).flat();\n}\n\nexport function resetIdsInTest(htmlFromTest: HTMLElement | undefined) {\n  return htmlFromTest?.outerHTML.replace(/id=\".*?\"/g, 'id=\"\"').replace(/htmlfor=\".*?\"/g, 'htmlfor=\"\"');\n}\n","export const TOGGLE_ALIGNMENT = {\n  nextTo: 'nextToEachOther',\n  spaceBetween: 'spaceBetween',\n} as const;\n\nexport type toggleAlignment = (typeof TOGGLE_ALIGNMENT)[keyof typeof TOGGLE_ALIGNMENT];\n","@import '../vars/vars.base';\n@import '../toggle-switch.default';\n","@import '../vars/vars.telenet';\n@import '../toggle-switch.default';\n","import { AttachInternals, Component, Element, h, Host, Prop } from '@stencil/core';\nimport { toggleAlignment, TOGGLE_ALIGNMENT } from './models/toggle-switch.types';\nimport { UUId } from '../../../utils/utils';\n@Component({\n  tag: 'wink-toggle-switch',\n  styleUrls: {\n    telenet: 'styles/brands/toggle-switch.telenet.scss',\n    base: 'styles/brands/toggle-switch.base.scss',\n  },\n  scoped: true,\n})\nexport class ToggleSwitch {\n  @AttachInternals() internals!: ElementInternals;\n\n  @Element() host!: HTMLWinkToggleSwitchElement;\n\n  @Prop() label = '';\n  @Prop() toggleSwitchId = '';\n  @Prop() toggleSwitchName = '';\n  @Prop() alignment: toggleAlignment = TOGGLE_ALIGNMENT.nextTo;\n  @Prop({ reflect: true }) checked = false;\n  @Prop() disabled = false;\n\n  private readonly labelOnClick = (_e: Event) => {\n    this.host?.querySelector('input')?.click();\n  };\n\n  private readonly handleKeyDown = (e: { key: string }) => {\n    if (e.key === 'Enter') {\n      this.host?.querySelector('input')?.click();\n    }\n  };\n\n  componentDidRender() {\n    this.toggleSwitchId = this.toggleSwitchId?.length > 0 ? this.toggleSwitchId : UUId();\n  }\n  render() {\n    return (\n      <Host class={`toggle-switch--${this.alignment.toLocaleLowerCase()}`}>\n        <p\n          class={`toggle-switch--label ${this.disabled ? 'toggle-switch--label--disabled' : ''}`}\n          onClick={this.labelOnClick}>\n          {this.label}\n        </p>\n        <div class=\"toggle-switch--wrapper\">\n          <input\n            type=\"checkbox\"\n            id={this.toggleSwitchId}\n            name={this.toggleSwitchName}\n            onKeyDown={this.handleKeyDown}\n            checked={this.checked}\n            disabled={this.disabled}\n          />\n          <div class=\"toggle-switch--icon\" onClick={this.labelOnClick}>\n            <wink-icon icon=\"cross-small\" size=\"sm\" />\n            <wink-icon icon=\"tick-small\" size=\"sm\" />\n          </div>\n          <label htmlFor={this.toggleSwitchId}></label>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","random","UUId","TOGGLE_ALIGNMENT","nextTo","spaceBetween","toggleSwitchBaseCss","WinkToggleSwitchBaseStyle0","toggleSwitchTelenetCss","WinkToggleSwitchTelenetStyle0","ToggleSwitch","internals","labelOnClick","_e","host","querySelector","click","handleKeyDown","e","key","componentDidRender","toggleSwitchId","length","render","h","Host","class","alignment","toLocaleLowerCase","disabled","onClick","label","type","id","name","toggleSwitchName","onKeyDown","checked","icon","size","htmlFor"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}