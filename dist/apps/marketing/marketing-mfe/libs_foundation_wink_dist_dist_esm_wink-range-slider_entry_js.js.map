{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-range-slider_entry_js.js","mappings":"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","sources":["./libs/foundation/wink/dist/dist/core/src/components/_form-components/range-slider/models/range-slider.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/_form-components/range-slider/styles/brands/range-slider.base.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/range-slider/styles/brands/range-slider.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/range-slider/range-slider.tsx"],"sourcesContent":["export const SLIDER_TYPES = {\n  single: 'single',\n  range: 'range',\n} as const;\nexport type SliderType = (typeof SLIDER_TYPES)[keyof typeof SLIDER_TYPES];\n\nexport const SLIDER_DIRECTIONS = {\n  from: 'from',\n  to: 'to',\n} as const;\nexport type SliderDirections = (typeof SLIDER_DIRECTIONS)[keyof typeof SLIDER_DIRECTIONS];\n","@import '../vars/vars.base';\n@import '../range-slider.default';\n","@import '../vars/vars.telenet';\n@import '../range-slider.default';\n","import { AttachInternals, Component, h, Method, Prop, State } from '@stencil/core';\nimport { SliderType, SLIDER_TYPES, SliderDirections, SLIDER_DIRECTIONS } from './models/range-slider.types';\n\n@Component({\n  tag: 'wink-range-slider',\n  styleUrls: {\n    telenet: 'styles/brands/range-slider.telenet.scss',\n    base: 'styles/brands/range-slider.base.scss',\n  },\n  scoped: true,\n})\nexport class RangeSlider {\n  @AttachInternals() internals!: ElementInternals;\n\n  @Prop() sliderId = '';\n  @Prop() label = '';\n  @Prop() helper = '';\n  @Prop() minValue = 0;\n  @Prop() maxValue = 100;\n  @Prop() step = 1;\n  @Prop() showValues = false;\n  @Prop() showInput = false;\n  @Prop() errorMessage = '';\n  @Prop() sliderType: SliderType = SLIDER_TYPES.range;\n  @Prop({ mutable: true, reflect: true }) bottomValue = 0;\n  @Prop({ mutable: true, reflect: true }) value = 100;\n\n  @State() topValueError?: string;\n  @State() bottomValueError?: string;\n\n  @Method()\n  async showFromValue() {\n    return this.bottomValue;\n  }\n\n  @Method()\n  async showToValue() {\n    return this.value;\n  }\n\n  @Method()\n  async getDragValue() {\n    return this.value;\n  }\n\n  componentWillRender() {\n    this.checkForErrors();\n  }\n\n  private handleValueChanged(event: CustomEvent<string>, slider: SliderDirections) {\n    const value = parseFloat(event.detail);\n    this.updateValue(value, slider);\n  }\n\n  private handleValueSlider(event: Event, slider: SliderDirections) {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement) {\n      const value = parseFloat(inputElement.value);\n      this.updateValue(value, slider);\n    }\n  }\n\n  private updateValue(value: number, slider: SliderDirections) {\n    if (slider === SLIDER_DIRECTIONS.from) {\n      this.bottomValue = value;\n    }\n\n    if (slider === SLIDER_DIRECTIONS.to) {\n      this.value = value;\n    }\n\n    if (value < this.minValue) {\n      slider === SLIDER_DIRECTIONS.from ? (this.bottomValue = this.minValue) : (this.value = this.minValue);\n    }\n\n    if (value > this.maxValue) {\n      this.value = this.maxValue;\n    }\n\n    if (this.bottomValue > this.value) {\n      this.invertValues();\n    }\n  }\n\n  private invertValues() {\n    const tempValue = this.bottomValue;\n    this.bottomValue = this.value;\n    this.value = tempValue;\n  }\n\n  private calculateTooltipPosition(value: number) {\n    const newValue = Number(((value - this.minValue) * 100) / (this.maxValue - this.minValue));\n    const newPosition = 10 - newValue * 0.2;\n\n    if (newValue < 0) {\n      return '3%';\n    }\n\n    if (newValue > 100) {\n      return '97%';\n    }\n\n    return `calc(${newValue}% + (${newPosition}px))`;\n  }\n\n  private calculateBackground() {\n    const lowTopValue = this.minValue || 0;\n    const highTopValue = this.maxValue || 100;\n    const lowValue = this.bottomValue || lowTopValue;\n    const highValue = this.value || highTopValue;\n\n    const sliderLength = highTopValue - lowTopValue;\n    const toPercentage = Math.round((((highValue - lowTopValue) / sliderLength) * 100) / this.step) * this.step;\n\n    if (this.sliderType === SLIDER_TYPES.single) {\n      return `linear-gradient(to right, var(--semantic-color-background-surface-action-default) ${toPercentage}%, var(--semantic-color-background-surface-bold-hovered) ${toPercentage}%)`;\n    }\n\n    const fromPercentage = Math.round((((lowValue - lowTopValue) / sliderLength) * 100) / this.step) * this.step;\n    return `linear-gradient(to right, var(--semantic-color-background-surface-bold-hovered) ${fromPercentage}% , var(--semantic-color-background-surface-action-default) ${fromPercentage}% , var(--semantic-color-background-surface-action-default) ${toPercentage}%, var(--semantic-color-background-surface-bold-hovered) ${toPercentage}%)`;\n  }\n\n  private renderSpecific() {\n    const fromValueProps = this.bottomValueError ? { error: this.bottomValueError } : {};\n    const toValueProps =\n      this.topValueError && this.sliderType === SLIDER_TYPES.range ? { error: this.topValueError } : {};\n\n    return (\n      <div class=\"slider-specific\">\n        {this.sliderType === SLIDER_TYPES.range && (\n          <wink-input\n            class=\"slider-specific-from\"\n            type=\"number\"\n            inputId={this.sliderId + 'from-value'}\n            name=\"fromValue\"\n            label=\"From\"\n            value={this.bottomValue.toString()}\n            min-value={this.minValue}\n            max-value={this.maxValue}\n            step={this.step}\n            isRequired\n            {...fromValueProps}\n            onValueChanged={(event) => this.handleValueChanged(event, SLIDER_DIRECTIONS.from)}></wink-input>\n        )}\n        <wink-input\n          class=\"slider-specific-to\"\n          type=\"number\"\n          inputId={this.sliderId + 'to-value'}\n          name=\"toValue\"\n          label={this.sliderType === SLIDER_TYPES.range ? 'To' : ''}\n          value={this.value.toString()}\n          min-value={this.minValue}\n          max-value={this.maxValue}\n          step={this.step}\n          isRequired\n          {...toValueProps}\n          onValueChanged={(event) => this.handleValueChanged(event, SLIDER_DIRECTIONS.to)}></wink-input>\n      </div>\n    );\n  }\n\n  private checkForErrors() {\n    if ((!this.bottomValue && this.bottomValue !== 0) || this.bottomValue % this.step !== 0) {\n      this.bottomValueError = this.errorMessage;\n    } else {\n      this.bottomValueError = undefined;\n    }\n    if ((!this.value && this.value !== 0) || this.value % this.step !== 0) {\n      this.topValueError = this.errorMessage;\n    } else {\n      this.topValueError = undefined;\n    }\n  }\n\n  render() {\n    return (\n      <label class={`slider-container slider-container-${this.sliderType}`}>\n        <wink-form-label label={this.label} helper={this.helper}></wink-form-label>\n        <div class=\"slider-wrapper\">\n          {this.showValues && <span>{this.minValue}</span>}\n          <div class=\"slider-controls\">\n            <div class={`slider-tooltip-wrapper ${!this.showInput ? 'slider-tooltip-shown' : ''}`}>\n              {this.sliderType === SLIDER_TYPES.range && (\n                <div style={{ left: this.calculateTooltipPosition(this.bottomValue) }} class=\"slider-tooltip\">\n                  {this.bottomValue}\n                </div>\n              )}\n              <div style={{ left: this.calculateTooltipPosition(this.value) }} class=\"slider-tooltip\">\n                {this.value}\n              </div>\n            </div>\n            <div style={{ background: this.calculateBackground() }} class=\"slider-track\"></div>\n            {this.sliderType === SLIDER_TYPES.range && (\n              <input\n                class=\"slider slider-from\"\n                type=\"range\"\n                value={this.bottomValue}\n                min={this.minValue}\n                max={this.maxValue}\n                step={this.step}\n                onInput={(event: Event) => this.handleValueSlider(event, SLIDER_DIRECTIONS.from)}\n              />\n            )}\n            <input\n              class=\"slider slider-to\"\n              type=\"range\"\n              value={this.value}\n              min={this.minValue}\n              max={this.maxValue}\n              step={this.step}\n              onInput={(event: Event) => this.handleValueSlider(event, SLIDER_DIRECTIONS.to)}\n            />\n          </div>\n          {this.showValues && <span>{this.maxValue}</span>}\n          {this.sliderType === SLIDER_TYPES.single && this.showInput && this.renderSpecific()}\n        </div>\n        {this.sliderType === SLIDER_TYPES.range && this.showInput && this.renderSpecific()}\n        {this.topValueError && this.sliderType === SLIDER_TYPES.single && (\n          <wink-validation-message message={this.topValueError} type=\"error\" />\n        )}\n      </label>\n    );\n  }\n}\n"],"names":["SLIDER_TYPES","single","range","SLIDER_DIRECTIONS","from","to","rangeSliderBaseCss","WinkRangeSliderBaseStyle0","rangeSliderTelenetCss","WinkRangeSliderTelenetStyle0","RangeSlider","internals","showFromValue","_this","_asyncToGenerator","bottomValue","showToValue","_this2","value","getDragValue","_this3","componentWillRender","checkForErrors","handleValueChanged","event","slider","parseFloat","detail","updateValue","handleValueSlider","inputElement","target","minValue","maxValue","invertValues","tempValue","calculateTooltipPosition","newValue","Number","newPosition","calculateBackground","lowTopValue","highTopValue","lowValue","highValue","sliderLength","toPercentage","Math","round","step","sliderType","fromPercentage","renderSpecific","fromValueProps","bottomValueError","error","toValueProps","topValueError","h","class","type","inputId","sliderId","name","label","toString","isRequired","onValueChanged","errorMessage","undefined","render","key","helper","showValues","showInput","style","left","background","min","max","onInput","message"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}