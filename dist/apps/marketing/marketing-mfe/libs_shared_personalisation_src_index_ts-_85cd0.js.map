{"version":3,"file":"libs_shared_personalisation_src_index_ts-_85cd0.js","mappings":"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","sources":["./libs/shared/personalisation/src/customer-input/index.ts","./libs/shared/personalisation/src/customer-input/models/customer-input-store.model.ts","./libs/shared/personalisation/src/customer-input/services/customer-input.store.service.ts","./libs/shared/personalisation/src/index.ts","./libs/shared/personalisation/src/pega/nba/constants/nba.constant.ts","./libs/shared/personalisation/src/pega/nba/index.ts","./libs/shared/personalisation/src/pega/nba/v1/interfaces/request-param.ts","./libs/shared/personalisation/src/pega/nba/v1/mappers/nba-list.mapper.ts","./libs/shared/personalisation/src/pega/nba/v1/models/nba-list.model.ts","./libs/shared/personalisation/src/pega/nba/v1/models/nba-request-parameters.ts","./libs/shared/personalisation/src/pega/nba/v1/models/nba.model.ts","./libs/shared/personalisation/src/pega/nba/v1/models/product.interface.testfactory.ts","./libs/shared/personalisation/src/pega/nba/v1/models/selling-argument.model.ts","./libs/shared/personalisation/src/pega/nba/v1/services/pega.service.ts","./libs/shared/personalisation/src/pega/services/pega-store.service.ts","./libs/shared/personalisation/src/sales/index.ts","./libs/shared/personalisation/src/sales/mappers/sales-data.mapper.ts","./libs/shared/personalisation/src/sales/models/sales-data.model.ts","./libs/shared/personalisation/src/sales/models/sales-data.type.ts","./libs/shared/personalisation/src/sales/service/message-bus.service.ts","./libs/shared/personalisation/src/sales/service/sales-data.service.ts","./node_modules/lodash-es/_baseFilter.js","./node_modules/lodash-es/filter.js","./node_modules/lodash-es/isNil.js"],"sourcesContent":["export * from './models/customer-input-store.model';\nexport * from './services/customer-input.store.service';\n","import { ContextHubModelInterface } from '@telenet/ng-lib-page';\n\nexport class CustomerInputStore implements ContextHubModelInterface<CustomerInputStore> {\n  public readonly isSuccess: boolean;\n\n  constructor(customerInputStore?: CustomerInputStore) {\n    this.isSuccess = true;\n    if (customerInputStore) {\n      Object.assign(this, customerInputStore);\n    }\n  }\n\n  enrich(objStore: CustomerInputStore): CustomerInputStore {\n    return new CustomerInputStore(objStore);\n  }\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport {\n  ContexthubConstants,\n  ContextHubGenericStoreService,\n  ContextHubStoreConfigInterface,\n} from '@telenet/ng-lib-page';\nimport { Builder } from '@telenet/ng-lib-shared';\nimport { CustomerInputStore } from '../models/customer-input-store.model';\n\n@Injectable({ providedIn: 'root' })\nexport class CustomerInputStoreService extends ContextHubGenericStoreService<CustomerInputStore> {\n  constructor(\n    _ngZone: NgZone,\n    @Inject('Window') window: Window,\n    protected dataLayerService: DataLayerService\n  ) {\n    super(\n      _ngZone,\n      window,\n      dataLayerService,\n      Builder<ContextHubStoreConfigInterface<CustomerInputStore>>()\n        .storeModel(new CustomerInputStore())\n        .storeName('customerinput')\n        .serviceName('CustomerInputStoreService')\n        .build()\n    );\n  }\n\n  enrichStoreData(fieldName: string, fieldData: unknown): void {\n    const customerInputStoreData = this.#getStoreData();\n\n    if (customerInputStoreData) {\n      customerInputStoreData[fieldName] = fieldData;\n      this.#updateStoreData(customerInputStoreData);\n    } else {\n      console.error('Store data not found');\n    }\n  }\n\n  #updateStoreData(storeData: unknown): void {\n    const store: CustomerInputStore = new CustomerInputStore();\n\n    Object.assign(store, storeData);\n\n    this.updateStoreData(store);\n  }\n\n  #getStoreData(): CustomerInputStore | undefined {\n    const contextHub = this.window[ContexthubConstants.CONTEXTHUB];\n\n    return contextHub?.getStore(this.storeConfig.storeName)?.getData();\n  }\n}\n","export * from './pega/nba';\nexport * from './pega/services/pega-store.service';\nexport * from './sales';\nexport * from './customer-input';\n","export class NBAConstants {\n  static API_VERSION_V1 = '/v1';\n  static CONTEXT = '/nba-service';\n  static PEGA_NBA_ENDPOINT = '/next-best-actions';\n  static SERVICE_PREFIX = '/public/api';\n  static CHANNEL = 'Web';\n}\n","export * from './v1/mappers/nba-list.mapper';\nexport * from './v1/models/nba-list.model';\nexport * from './v1/models/nba.model';\nexport * from './v1/models/nba-request-parameters';\nexport * from './v1/models/selling-argument.model';\nexport * from './v1/interfaces/request-param';\nexport * from './v1/interfaces/raw-nba-list.interface';\nexport * from './v1/services/pega.service';\nexport * from './constants/nba.constant';\nexport * from './v1/models/product.interface.testfactory';\n","export class RequestParam {\n  constructor(\n    public key: string,\n    public value: string\n  ) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\nexport enum Param {\n  sdata = 'sdata',\n  src = 'src',\n  cid = 'cid',\n  sa = 'sa',\n  did = 'did',\n  tid = 'tid',\n  pt = 'pt',\n  aid = 'aid',\n  v = 'v',\n  t = 't',\n}\n","import { Injectable } from '@angular/core';\nimport { Builder, MapperInterface } from '@telenet/ng-lib-shared';\nimport { NBAList } from '../models/nba-list.model';\nimport {\n  RawNBAInterface,\n  RawNBAListInterface,\n  RawNBAResponseInterface,\n  RawSellingArgument,\n} from '../interfaces/raw-nba-list.interface';\nimport { SellingArgument } from '../models/selling-argument.model';\nimport { NBA } from '../models/nba.model';\nimport { SalesData } from '../../../../sales';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NBAListMapper implements MapperInterface<RawNBAResponseInterface, NBAList> {\n  toModel(response: RawNBAResponseInterface): NBAList {\n    if (response && response.nextBestActions) {\n      return this.createNBAListResponse(response.nextBestActions);\n    }\n\n    return new NBAList();\n  }\n\n  public createNBAListResponse(rawNbaList: RawNBAListInterface): NBAList {\n    return (\n      Builder(NBAList)\n        // @ts-ignore\n        .actions(this.createNBAs(rawNbaList.actions))\n        .customerNumber(rawNbaList.customerNumber)\n        .interactionId(rawNbaList.interactionId)\n        .channel(rawNbaList.channel)\n        .containerName(rawNbaList.containerName)\n        .v(rawNbaList.v)\n        .isSuccess(true)\n        .build()\n    );\n  }\n\n  private createNBAs(rawActions: RawNBAInterface[]): NBA[] {\n    if (!rawActions) {\n      return [new NBA()];\n    }\n\n    return rawActions.map((rawAction) => {\n      return (\n        Builder(NBA)\n          // @ts-ignore\n          .sdata(new SalesData(rawAction.sdata))\n          .rank(rawAction.rank)\n          .group(rawAction.group)\n          .issue(rawAction.issue)\n          .name(rawAction.name)\n          .treatment(rawAction.treatment)\n          .campaignId(rawAction.campaignId)\n          .productType(rawAction.productType)\n          .sellingArguments(this.createSellingArguments(rawAction.sellingArguments))\n          .build()\n      );\n    });\n  }\n\n  private createSellingArguments(rawSellingArguments: RawSellingArgument[]): SellingArgument[] {\n    return (\n      rawSellingArguments &&\n      rawSellingArguments.map((rawSellingArgument) => {\n        return new SellingArgument(rawSellingArgument.key, rawSellingArgument.rank);\n      })\n    );\n  }\n}\n","import { ContextHubModelInterface } from '@telenet/ng-lib-page';\nimport { NBA } from './nba.model';\n\nexport class NBAList implements ContextHubModelInterface<NBAList> {\n  public readonly customerNumber: string;\n  public readonly interactionId: string;\n  public readonly channel: string;\n  public readonly containerName: string;\n  public readonly v: string;\n  public readonly actions: readonly NBA[] = [];\n  public readonly isSuccess: boolean = false;\n\n  constructor(nbaList?: unknown) {\n    if (nbaList) {\n      this.isSuccess = true;\n      Object.assign(this, nbaList);\n      if (nbaList['actions'] && nbaList['actions'][0]) {\n        this.actions = nbaList['actions'].map((nba: NBA) => new NBA(nba));\n      }\n    }\n  }\n\n  enrich(json: unknown): NBAList {\n    return new NBAList(json);\n  }\n\n  getNBA(): NBA {\n    return this.actions && this.actions[0];\n  }\n}\n","import { forkJoin, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Param, RequestParam } from '../interfaces/request-param';\nimport { Injectable } from '@angular/core';\nimport { JsonUrlService } from '@telenet/ng-lib-page';\nimport { NBAList } from './nba-list.model';\nimport { NBA } from './nba.model';\nimport { SellingArgument } from './selling-argument.model';\nimport { SalesDataService } from '../../../../sales/service/sales-data.service';\nimport { Builder } from '@telenet/ng-lib-shared';\nimport { SalesData } from '../../../../sales/models/sales-data.model';\n\n@Injectable({ providedIn: 'root' })\nexport class NBARequestParameters {\n  private readonly nbaRequestParameters: RequestParam[];\n  private requestObservables: Observable<unknown>[];\n\n  constructor(\n    private readonly salesDataService: SalesDataService,\n    private readonly jsonUrlService: JsonUrlService\n  ) {\n    const url = window.location.href;\n    this.nbaRequestParameters = Object.keys(Param)\n      .map((param) => {\n        const value = new URL(url).searchParams.get(param);\n        return value ? new RequestParam(param, value) : undefined;\n      })\n      .filter((el) => el !== undefined) as RequestParam[];\n  }\n\n  public toNBAList(): Observable<NBAList> {\n    if (this.getRequestParamValue(Param.t) !== 'nbo') {\n      return of(new NBAList());\n    } else {\n      this.requestObservables = [];\n      this.requestObservables.push(\n        this.salesDataService.getDecompressedSalesData(this.getRequestParamValue(Param.sdata))\n      );\n      if (this.getRequestParamValue(Param.tid)) {\n        this.requestObservables.push(\n          this.deCompressRequestParamValue(this.getRequestParamValue(Param.tid)).pipe(\n            map((treatmentId: unknown) => treatmentId)\n          )\n        );\n      }\n      if (this.getRequestParamValue(Param.pt)) {\n        this.requestObservables.push(\n          this.deCompressRequestParamValue(this.getRequestParamValue(Param.pt)).pipe(\n            map((productType: unknown) => productType)\n          )\n        );\n      }\n      if (this.getRequestParamValue(Param.aid)) {\n        this.requestObservables.push(\n          this.deCompressRequestParamValue(this.getRequestParamValue(Param.aid)).pipe(map((name: unknown) => name))\n        );\n      }\n      return this.constructNbaListFromRequestParam();\n    }\n  }\n\n  private constructNbaListFromRequestParam(): Observable<NBAList> {\n    return forkJoin(this.requestObservables).pipe(\n      map(([salesDataDecompressed, treatmentId, productType, name]) => {\n        const nba = Builder(NBA)\n          // @ts-ignore\n          .sdata(salesDataDecompressed as SalesData)\n          .sellingArguments(this.createSellingArguments(this.getRequestParamValueAsArray(Param.sa)))\n          .campaignId(this.getRequestParamValue(Param.cid))\n          .treatment(treatmentId ? (treatmentId as string)['tid'] : '')\n          .productType(productType ? (productType as string)['pt'] : '')\n          .name(name ? (name as string)['aid'] : '')\n          .build();\n\n        return (\n          Builder(NBAList)\n            // @ts-ignore\n            .actions([nba])\n            .channel(this.getRequestParamValue(Param.src))\n            .interactionId(this.getRequestParamValue(Param.did))\n            .v(this.getRequestParamValue(Param.v))\n            .isSuccess(true)\n            .build()\n        );\n      })\n    );\n  }\n\n  private getRequestParam(key: Param): RequestParam {\n    return this.nbaRequestParameters.find((param) => param.key === key) as RequestParam;\n  }\n\n  private getRequestParamValue(key: Param): string {\n    const requestParam = this.getRequestParam(key);\n    return requestParam ? requestParam.value : '';\n  }\n\n  private getRequestParamValueAsArray(key: Param): string[] {\n    const requestParam = this.getRequestParam(key);\n    return requestParam ? requestParam.value.split(',') : [];\n  }\n\n  private createSellingArguments(sa: string[]): SellingArgument[] {\n    let rank = 1;\n    const sellingArguments: SellingArgument[] = [];\n    sa.forEach((saParam) => sellingArguments.push(new SellingArgument(saParam, rank++)));\n\n    return sellingArguments;\n  }\n\n  private deCompressRequestParamValue(paramValue: string): Observable<unknown> {\n    return this.jsonUrlService.decompress(paramValue) as Observable<unknown>;\n  }\n}\n","import { SellingArgument } from './selling-argument.model';\nimport { filter, isNil, map } from 'lodash-es';\nimport {\n  RawSalesData,\n  SalesData,\n  SalesDataOffer,\n  SalesDataOptinType,\n  SalesDataOptionType,\n  SalesDataProductType,\n} from '../../../../sales';\n\nexport class NBA {\n  public readonly rank: string;\n  public readonly group: string;\n  public readonly issue: string;\n  public readonly name: string;\n  public readonly treatment: string;\n  public readonly campaignId: string;\n  public readonly productType: string;\n  public readonly sellingArguments: readonly SellingArgument[];\n  public readonly sdata: SalesData;\n\n  constructor(nba?: NBA) {\n    if (nba) {\n      Object.assign(this, nba);\n      this.sdata = new SalesData(nba.sdata);\n    }\n  }\n\n  hasTreatment(): boolean {\n    return this.treatment ? this.treatment.length > 0 : false;\n  }\n\n  hasProductType(): boolean {\n    return this.productType ? this.productType.length > 0 : false;\n  }\n\n  isSalesDataEmpty(): boolean {\n    return !this.sdata || !this.sdata.hasOffers();\n  }\n\n  getRawSalesData(): RawSalesData {\n    if (this.isSalesDataEmpty()) {\n      return {\n        products: [],\n        options: [],\n        optins: [],\n      };\n    }\n\n    const offers = this.sdata.flatten().getOffers();\n\n    return {\n      products: this.extractProductIds(offers),\n      options: this.extractOptionIds(offers),\n      optins: this.extractOptinIds(offers),\n    };\n  }\n\n  private extractProductIds(offers: SalesDataOffer[]): string[] {\n    return [...this.extractFlatOmapiIdList(this.getNBOElementByType(offers, Object.values(SalesDataProductType)))];\n  }\n\n  private extractOptionIds(offers: SalesDataOffer[]): string[] {\n    return [...this.extractFlatOmapiIdList(this.getNBOElementByType(offers, Object.values(SalesDataOptionType)))];\n  }\n\n  private extractOptinIds(offers: SalesDataOffer[]): string[] {\n    return [...this.extractFlatOmapiIdList(this.getNBOElementByType(offers, Object.values(SalesDataOptinType)))];\n  }\n\n  private getNBOElementByType(products: SalesDataOffer[], types: string[]): SalesDataOffer[] {\n    return products.filter((product) => product && types.includes(product.type));\n  }\n\n  private extractFlatOmapiIdList(products: SalesDataOffer[]): string[] {\n    return map(\n      filter(products, (p) => !isNil(p)),\n      (o) => o.id\n    );\n  }\n}\n","import * as Factory from 'factory.ts';\nimport { SalesDataOffer, SalesDataType } from '../../../../sales';\n\nexport const productTestFactory = Factory.Sync.makeFactory<SalesDataOffer>({\n  id: '36860',\n  offers: [],\n  type: SalesDataType.TYPE_PRODUCT,\n});\n","export class SellingArgument {\n  constructor(\n    public readonly key: string,\n    public readonly rank: number\n  ) {}\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { iif, Observable, of } from 'rxjs';\nimport { catchError, mergeMap } from 'rxjs/operators';\nimport { NBARequestParameters } from '../models/nba-request-parameters';\nimport { NBAList } from '../models/nba-list.model';\nimport { LoginService, OcapiCallConfig, OcapiService } from '@telenet/ng-lib-ocapi';\nimport { NBAListMapper } from '../mappers/nba-list.mapper';\nimport { NBAConstants } from '../../constants/nba.constant';\nimport { ContexthubConstants } from '@telenet/ng-lib-page';\nimport { Log, LogFactory } from '@telenet/ng-lib-shared';\n\nexport interface ContextHubConstants {\n  ContextHub: {\n    Constants: {\n      PROP_ENABLE_PEGA_PERSONALIZATION: string;\n    };\n  };\n}\n\n@Injectable({ providedIn: 'root' })\nexport class PegaService {\n  private readonly log: Log = LogFactory.createLogger(PegaService);\n\n  constructor(\n    @Inject('Window') private readonly window: ContextHubConstants,\n    private readonly nbaRequestParameters: NBARequestParameters,\n    private readonly nbaListMapper: NBAListMapper,\n    private readonly ocapiService: OcapiService,\n    private readonly loginService: LoginService\n  ) {}\n\n  public getNBAList(): Observable<NBAList> {\n    const nbaFromRequest$ = this.getNBAFromRequest();\n    return nbaFromRequest$.pipe(\n      mergeMap((requestNbaList: NBAList) =>\n        iif(() => !!requestNbaList.getNBA(), nbaFromRequest$, this.getNBAFromPegaAPI())\n      )\n    );\n  }\n\n  private getNBAFromRequest(): Observable<NBAList> {\n    return this.nbaRequestParameters.toNBAList();\n  }\n\n  private getNBAFromPegaAPI(): Observable<NBAList> {\n    const enablePegaPersonalisation = this.window['ContextHub']['Constants']['PROP_ENABLE_PEGA_PERSONALIZATION'];\n    return enablePegaPersonalisation === 'true' ? this.getAuthenticatedPegaNBAList() : of(new NBAList());\n  }\n\n  private getAuthenticatedPegaNBAList(): Observable<NBAList> {\n    return this.loginService\n      .getLoginDetails()\n      .pipe(mergeMap((loginDetails) => (loginDetails.isLoggedIn() ? this.getPegaNBAList() : of(new NBAList()))));\n  }\n\n  private getPegaNBAList(): Observable<NBAList> {\n    const endpoint = this.getServiceURI(NBAConstants.PEGA_NBA_ENDPOINT);\n    const ocapiCallConfig = new OcapiCallConfig(\n      ContexthubConstants.MESSAGE_GROUP_NBALIST,\n      endpoint,\n      this.nbaListMapper\n    );\n\n    return this.ocapiService.doGet(ocapiCallConfig).pipe(catchError((err: unknown) => this.handlePegaNbaError(err)));\n  }\n\n  private handlePegaNbaError(err: unknown) {\n    this.log.logError('Error while fetching NBA list from Pega.', err);\n\n    return of(new NBAList());\n  }\n\n  private getServiceURI(endpoint: string): string {\n    return NBAConstants.SERVICE_PREFIX.concat(NBAConstants.CONTEXT)\n      .concat(NBAConstants.API_VERSION_V1)\n      .concat(endpoint)\n      .concat('?channel=')\n      .concat(NBAConstants.CHANNEL);\n  }\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport {\n  ContexthubConstants,\n  ContextHubGenericStoreService,\n  ContextHubStoreConfigInterface,\n} from '@telenet/ng-lib-page';\nimport { NBAList } from '../nba/v1/models/nba-list.model';\nimport { PegaService } from '../nba/v1/services/pega.service';\nimport { Builder } from '@telenet/ng-lib-shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PegaStoreService extends ContextHubGenericStoreService<NBAList> {\n  constructor(\n    _ngZone: NgZone,\n    @Inject('Window') window: Window,\n    private readonly pegaService: PegaService,\n    protected dataLayerService: DataLayerService\n  ) {\n    super(\n      _ngZone,\n      window,\n      dataLayerService,\n      Builder<ContextHubStoreConfigInterface<NBAList>>()\n        .storeModel(new NBAList())\n        .storeName(ContexthubConstants.STORE_NAME_PEGA)\n        .serviceName('PegaStoreService')\n        .build()\n    );\n  }\n\n  onLoadData(): Observable<NBAList> {\n    return this.pegaService.getNBAList();\n  }\n}\n","export * from './mappers/sales-data.mapper';\nexport * from './models/sales-data.model';\nexport * from './models/sales-data.type';\nexport * from './service/message-bus.service';\nexport * from './service/sales-data.service';\nexport * from './mappers/sales-data.mapper';\n","import { Injectable } from '@angular/core';\nimport { map } from 'lodash-es';\nimport { RawSalesData, SalesData, SalesDataOffer } from '../models/sales-data.model';\nimport { SalesDataType } from '../models/sales-data.type';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SalesDataMapper {\n  public mapSalesData(rawSalesData: RawSalesData): SalesData {\n    const salesData = new SalesData();\n    salesData.setOffers(map(rawSalesData.products, (id) => this.mapSalesDataOffer(id, rawSalesData)));\n    return salesData;\n  }\n\n  private mapSalesDataOffer(id: string, rawSalesData: RawSalesData): SalesDataOffer {\n    return {\n      id,\n      type: SalesDataType.TYPE_PRODUCT,\n      offers: this.mapSalesDataSubOffers(rawSalesData),\n    } as SalesDataOffer;\n  }\n\n  private mapSalesDataSubOffers(rawSalesData: RawSalesData): SalesDataOffer[] {\n    return [\n      ...this.mapSubOffers(rawSalesData.options, SalesDataType.TYPE_OPTION),\n      ...this.mapSubOffers(rawSalesData.optins, SalesDataType.TYPE_OPTIN),\n    ];\n  }\n\n  private mapSubOffers(subProducts: string[], type: SalesDataType): SalesDataOffer[] {\n    return map(subProducts, (id) => {\n      return {\n        id,\n        type,\n      } as SalesDataOffer;\n    });\n  }\n}\n","import { isEmpty } from 'lodash-es';\nimport { SalesDataType } from './sales-data.type';\n\nexport interface RawSalesData {\n  products: string[];\n  options: string[];\n  optins: string[];\n}\n\nexport class SalesData {\n  private offers: SalesDataOffer[];\n\n  constructor(salesData?: SalesData) {\n    Object.assign(this, salesData);\n  }\n\n  hasOffers(): boolean {\n    return !isEmpty(this.offers);\n  }\n\n  setOffers(offers: SalesDataOffer[]) {\n    this.offers = offers;\n  }\n\n  getOffers(): SalesDataOffer[] {\n    return this.offers;\n  }\n\n  flatten(): SalesData {\n    if (!this.offers) {\n      return this;\n    }\n    const offers = this.offers.flatMap((offer: SalesDataOffer) => SalesDataOffer.flattenSalesDataOffer(offer));\n    const salesData: SalesData = new SalesData();\n    salesData.setOffers(offers);\n    return salesData;\n  }\n}\n\nexport class SalesDataOffer {\n  id: string;\n  type: SalesDataType;\n  offers?: SalesDataOffer[];\n  amountOfLimitedSims?: number;\n\n  static flattenSalesDataOffer(salesDataOffer: SalesDataOffer): SalesDataOffer[] {\n    const salesDataOfferWithoutOffers: SalesDataOffer = Object.assign(new SalesDataOffer(), salesDataOffer, {\n      offers: [],\n    });\n    return [salesDataOfferWithoutOffers].concat(\n      (salesDataOffer?.offers ?? []).flatMap((offer: SalesDataOffer) => SalesDataOffer.flattenSalesDataOffer(offer))\n    );\n  }\n\n  static of(id: string, type: SalesDataType, offers?: SalesDataOffer[]): SalesDataOffer {\n    const salesDataOffer: SalesDataOffer = new SalesDataOffer();\n    salesDataOffer.id = id;\n    salesDataOffer.type = type;\n    salesDataOffer.offers = offers;\n    return salesDataOffer;\n  }\n}\n","export enum SalesDataType {\n  TYPE_PRODUCT = 'Product',\n  TYPE_OPTION = 'Option',\n  TYPE_OPTION_DWN = 'OPTION',\n  TYPE_STREAMING_SERVICE = 'StreamingService',\n  TYPE_OPTIN = 'Optin',\n  TYPE_MOBILE = 'Mobile',\n  TYPE_SMARTPHONE = 'Smartphone',\n  TYPE_BUNDLE = 'BUNDLE',\n  TYPE_OTT_LINE = 'OTT LINE',\n  TYPE_IDTV_LINE = 'IDTV LINE',\n  TYPE_DATA_ONLY_MOBILE_LINE = 'DATA ONLY MOBILE LINE',\n  TYPE_FIXED_LINE = 'FIXED LINE',\n  TYPE_MOBILE_LINE = 'MOBILE LINE',\n  TYPE_TELEPHONE = 'TELEPHONE',\n  TYPE_INTERNET = 'INTERNET',\n  TYPE_DTV = 'DTV',\n  TYPE_INTERNET_BASE = 'Internet',\n  TYPE_DTV_BASE = 'Dtv',\n  TYPE_TV_BOX_BASE = 'TV_BOX',\n}\n\nexport enum SalesDataProductType {\n  TYPE_PRODUCT = 'Product',\n  TYPE_MOBILE = 'Mobile',\n  TYPE_BUNDLE = 'BUNDLE',\n  TYPE_INTERNET = 'INTERNET',\n  TYPE_TELEPHONE = 'TELEPHONE',\n  TYPE_DTV = 'DTV',\n  TYPE_IDTV_LINE = 'IDTV LINE',\n  TYPE_OTT_LINE = 'OTT LINE',\n}\n\nexport enum SalesDataOptionType {\n  TYPE_OPTION = 'Option',\n  TYPE_OPTION_DWN = 'OPTION',\n}\n\nexport enum SalesDataOptinType {\n  TYPE_OPTIN = 'Optin',\n  TYPE_DATA_ONLY_MOBILE_LINE = 'DATA ONLY MOBILE LINE',\n  TYPE_FIXED_LINE = 'FIXED LINE',\n  TYPE_MOBILE_LINE = 'MOBILE LINE',\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n// this service is used by ONE configurator to sync state between monorepo and tcp.angular (https://jira.rel.apps.telenet.be/browse/DIGSALE1TM-1140)\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageBusService {\n  messageBus$ = new ReplaySubject<Message>(1_000);\n}\n\nexport interface Message {\n  type: string;\n  payloadAsJson: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { JsonUrlService } from '@telenet/ng-lib-page';\nimport { RawSalesData, SalesData } from '../models/sales-data.model';\nimport { SalesDataMapper } from '../mappers/sales-data.mapper';\n\n@Injectable({ providedIn: 'root' })\nexport class SalesDataService {\n  constructor(\n    private readonly jsonUrlService: JsonUrlService,\n    private readonly salesDataMapper: SalesDataMapper\n  ) {}\n\n  public getCompressedSalesData(salesData: SalesData): Observable<string> {\n    return this.jsonUrlService.compress(salesData);\n  }\n\n  public getDecompressedSalesData(compressedSalesData: string): Observable<SalesData> {\n    if (compressedSalesData) {\n      return this.jsonUrlService.decompress(compressedSalesData).pipe(\n        // @ts-ignore\n        catchError(() => of(new SalesData())),\n        map((salesData: SalesData) => {\n          return new SalesData(salesData);\n        })\n      );\n    }\n    return of(new SalesData());\n  }\n\n  public mapSalesData(rawSalesData: RawSalesData): SalesData {\n    return this.salesDataMapper.mapSalesData(rawSalesData);\n  }\n}\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nexport default isNil;\n"],"names":["CustomerInputStore","isSuccess","constructor","customerInputStore","Object","assign","enrich","objStore","NgZone","DataLayerService","ContexthubConstants","ContextHubGenericStoreService","Builder","CustomerInputStoreService","dataLayerService","_ngZone","window","storeModel","storeName","serviceName","build","enrichStoreData","fieldName","fieldData","customerInputStoreData","getStoreData","updateStoreData","console","error","#updateStoreData","storeData","store","#getStoreData","contextHub","CONTEXTHUB","getStore","storeConfig","getData","i0","ɵɵinject","i1","factory","ɵfac","providedIn","NBAConstants","API_VERSION_V1","CONTEXT","PEGA_NBA_ENDPOINT","SERVICE_PREFIX","CHANNEL","RequestParam","key","value","Param","NBAList","SellingArgument","NBA","SalesData","NBAListMapper","toModel","response","nextBestActions","createNBAListResponse","rawNbaList","actions","createNBAs","customerNumber","interactionId","channel","containerName","v","rawActions","map","rawAction","sdata","rank","group","issue","name","treatment","campaignId","productType","sellingArguments","createSellingArguments","rawSellingArguments","rawSellingArgument","nbaList","nba","json","getNBA","forkJoin","of","JsonUrlService","SalesDataService","NBARequestParameters","salesDataService","jsonUrlService","nbaRequestParameters","requestObservables","url","location","href","keys","param","URL","searchParams","get","undefined","filter","el","toNBAList","getRequestParamValue","t","push","getDecompressedSalesData","tid","deCompressRequestParamValue","pipe","treatmentId","pt","aid","constructNbaListFromRequestParam","salesDataDecompressed","getRequestParamValueAsArray","sa","cid","src","did","getRequestParam","find","requestParam","split","forEach","saParam","paramValue","decompress","i2","isNil","SalesDataOptinType","SalesDataOptionType","SalesDataProductType","hasTreatment","length","hasProductType","isSalesDataEmpty","hasOffers","getRawSalesData","products","options","optins","offers","flatten","getOffers","extractProductIds","extractOptionIds","extractOptinIds","extractFlatOmapiIdList","getNBOElementByType","values","types","product","includes","type","p","o","id","Factory","SalesDataType","productTestFactory","Sync","makeFactory","TYPE_PRODUCT","iif","catchError","mergeMap","LoginService","OcapiCallConfig","OcapiService","LogFactory","PegaService","nbaListMapper","ocapiService","loginService","log","createLogger","getNBAList","nbaFromRequest$","getNBAFromRequest","requestNbaList","getNBAFromPegaAPI","enablePegaPersonalisation","getAuthenticatedPegaNBAList","getLoginDetails","loginDetails","isLoggedIn","getPegaNBAList","endpoint","getServiceURI","ocapiCallConfig","MESSAGE_GROUP_NBALIST","doGet","err","handlePegaNbaError","logError","concat","i3","PegaStoreService","pegaService","STORE_NAME_PEGA","onLoadData","SalesDataMapper","mapSalesData","rawSalesData","salesData","setOffers","mapSalesDataOffer","mapSalesDataSubOffers","mapSubOffers","TYPE_OPTION","TYPE_OPTIN","subProducts","isEmpty","flatMap","offer","SalesDataOffer","flattenSalesDataOffer","amountOfLimitedSims","salesDataOffer","salesDataOfferWithoutOffers","ReplaySubject","MessageBusService","messageBus$","salesDataMapper","getCompressedSalesData","compress","compressedSalesData","baseEach","baseFilter","collection","predicate","result","index","arrayFilter","baseIteratee","isArray","func"],"sourceRoot":"webpack:///","x_google_ignoreList":[21,22,23]}