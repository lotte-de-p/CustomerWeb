{"version":3,"file":"apps_marketing_marketing-mfe_src_app_cafe_priced-customer-product-holding_ui_priced-customer--2fac260.js","mappings":"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","sources":["./apps/marketing/marketing-mfe/src/app/cafe/marketing-cafe-ngxs.module.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/model/business-customer.notification.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/model/no-manager.notification.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/model/no-products.notification.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/service/notifications.service.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/service/priced-cph-datalayer.service.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/bill-price/bill-price.component.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/bill-price/bill-price.component.html","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/directives/panel-toggler.directive.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/disclaimer/disclaimer.component.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/disclaimer/disclaimer.component.html","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/drop-down-accordion-header/drop-down-accordion-header.component.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/drop-down-accordion-header/drop-down-accordion-header.component.html","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/drop-down-accordion-panel/drop-down-accordion-panel.component.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/drop-down-accordion-panel/drop-down-accordion-panel.component.html","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/drop-down-accordion/drop-down-accordion.component.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/drop-down-accordion/drop-down-accordion.component.html","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/error-notification/error-notification.component.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/error-notification/error-notification.component.html","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/group/overview-group-type.enum.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/group/overview-group.component.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/group/overview-group.component.html","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/priced-customer-product-holding/priced-customer-product-holding.component.ts","./apps/marketing/marketing-mfe/src/app/cafe/priced-customer-product-holding/ui/priced-customer-product-holding/priced-customer-product-holding.component.html","./apps/marketing/marketing-mfe/src/app/http/cafe/contact-details/enums/cafe-contact-detail-type.ts","./apps/marketing/marketing-mfe/src/app/http/cafe/contact-details/mappers/cafe-contact-details.mapper.ts","./apps/marketing/marketing-mfe/src/app/http/cafe/contact-details/models/cafe-contact-details.model.ts","./apps/marketing/marketing-mfe/src/app/http/cafe/contact-details/services/cafe-contact-details.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { PricedCphState } from './priced-customer-product-holding/state/priced-cph.state';\n\n@NgModule({\n  imports: [NgxsModule.forFeature([PricedCphState])],\n})\nexport class MarketingCafeNgxsModule {}\n","import { Notification, NotificationTypeEnum } from './notification.model';\nimport { Observable, of } from 'rxjs';\nimport { Injector } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { PricedCphConstants } from '../util/priced-cph.constants';\nimport { CafeContactDetailsService } from '../../../http/cafe/contact-details/services/cafe-contact-details.service';\n\nexport class BusinessCustomerNotification implements Notification {\n  labelKey = 'business-customer';\n  type = NotificationTypeEnum.ERROR;\n\n  shouldShow(injector?: Injector): Observable<boolean> {\n    const cafeContactDetailsService = injector?.get<CafeContactDetailsService>(CafeContactDetailsService);\n\n    return (\n      cafeContactDetailsService\n        ?.getContactDetails(PricedCphConstants.MESSAGE_GROUP)\n        .pipe(map((cafeContactDetails) => cafeContactDetails && cafeContactDetails.isOrganization())) || of(false)\n    );\n  }\n}\n","import { Notification, NotificationTypeEnum } from './notification.model';\nimport { Injector } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngxs/store';\nimport { PricedCphState } from '../state/priced-cph.state';\n\nexport class NoManagerNotification implements Notification {\n  labelKey = 'no-manager';\n  type = NotificationTypeEnum.WARNING;\n\n  shouldShow(injector?: Injector): Observable<boolean> {\n    const store = injector?.get<Store>(Store);\n    const loginDetails = store?.selectSnapshot(PricedCphState.loginDetails);\n\n    return of(!loginDetails?.hasManagerRole());\n  }\n}\n","import { Notification, NotificationTypeEnum } from './notification.model';\nimport { Observable, of } from 'rxjs';\nimport { Injector } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { PricedCphState } from '../state/priced-cph.state';\nimport { PricedCphOverview } from './priced-cph-data.model';\n\nexport class NoProductsNotification implements Notification {\n  type = NotificationTypeEnum.ERROR;\n  labelKey = 'no-products';\n\n  shouldShow(injector?: Injector): Observable<boolean> {\n    const store = injector?.get<Store>(Store);\n    const overview = store?.selectSnapshot(PricedCphState.overview);\n\n    return of(this.hasNoProducts(overview));\n  }\n\n  private hasNoProducts(overview?: PricedCphOverview[]): boolean {\n    return !overview || !overview.some((value) => value.products && value.products.length > 0);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { from, Observable } from 'rxjs';\nimport { Notification } from '../model/notification.model';\nimport { filter, map, mergeMap, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsService {\n  constructor(private readonly injector: Injector) {}\n\n  public notificationsIfConditionsMet$(notifications: Notification[]): Observable<Notification> {\n    return from(notifications).pipe(\n      mergeMap((notification) => {\n        return notification.shouldShow(this.injector).pipe(\n          filter((shouldShowNotification) => shouldShowNotification),\n          map(() => notification)\n        );\n      }),\n      take(1)\n    );\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport { PricedCphConstants } from '../util/priced-cph.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class PricedCphDatalayerService {\n  private readonly dataLayerService = inject(DataLayerService);\n  private readonly category = this.dataLayerService.createCategory('general');\n  private readonly viewedEventInfo = this.dataLayerService.createEventInfo(\n    'Priced product holding banner viewed',\n    'impression',\n    [PricedCphConstants.MESSAGE_GROUP]\n  );\n  private readonly openedEventInfo = this.dataLayerService.createEventInfo(\n    'Priced product holding banner opened',\n    'click',\n    [PricedCphConstants.MESSAGE_GROUP]\n  );\n\n  public pushComponentViewed(): void {\n    this.dataLayerService.sendEvent({ eventInfo: this.viewedEventInfo, attributes: {}, category: this.category });\n  }\n\n  public pushComponentOpened(): void {\n    this.dataLayerService.sendEvent({ eventInfo: this.openedEventInfo, attributes: {}, category: this.category });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LanguageEnum, LanguageService } from '@telenet/ng-lib-page';\nimport { TranslateHelperService } from '../../service/translate-helper.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'tg-marketing-cafe-bill-price',\n  templateUrl: './bill-price.component.html',\n  standalone: true,\n  imports: [NgIf, TranslateModule],\n})\nexport class BillPriceComponent implements OnInit {\n  @Input() price: string;\n  integer: string;\n  decimal: string;\n  isFrench: boolean;\n\n  constructor(\n    public translateHelperService: TranslateHelperService,\n    private readonly languageService: LanguageService\n  ) {}\n\n  ngOnInit(): void {\n    const priceArray: string[] = this.price.split('.');\n    this.integer = priceArray[0];\n    this.decimal = priceArray[1];\n    this.isFrench = this.languageService.getLanguage() === LanguageEnum.FR;\n  }\n}\n","<div class=\"display--flex justify-content--end align-items--center mt--xl\">\n  <div class=\"text-block__right text-align--right\">\n    <div class=\"price price__total-month-promo-description\">\n      <span *ngIf=\"!isFrench\" class=\"line-height--18 text--m text--xm--sm text-font-family--t6 vertical-align--text-top\"\n        >€</span\n      >\n      <span class=\"text-font-family--t6 text--xl--sm\">{{ integer }}</span>\n      <span *ngIf=\"decimal\" class=\"line-height--18 text--m text--xm--sm text-font-family--t6 vertical-align--text-top\"\n        >,{{ decimal }}</span\n      >\n      <span *ngIf=\"isFrench\" class=\"line-height--18 text--m text--xm--sm text-font-family--t6 vertical-align--text-top\"\n        >€</span\n      >\n      <span class=\"text--xs text--s--sm\">{{ translateHelperService.getText('price-month') | translate }}</span>\n    </div>\n  </div>\n</div>\n<div class=\"whitespace whitespace--medium\"></div>\n","import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[tgMarketingTogglePanel]',\n  standalone: true,\n})\nexport class TogglePanelDirective {\n  static readonly CLASS_PANEL_COLLAPSED = 'accordion--panel__collapsed';\n  @Input('tgMarketingTogglePanel') panelClass: string;\n\n  constructor(\n    private readonly elRef: ElementRef,\n    private readonly renderer: Renderer2\n  ) {}\n\n  @HostListener('click')\n  handleClick() {\n    const header: HTMLElement = this.elRef.nativeElement;\n    const panel: HTMLElement = this.panelClass\n      ? header?.parentElement?.querySelector(`.${this.panelClass}`)\n      : this.renderer.nextSibling(header);\n\n    if (panel && !panel.classList.contains(TogglePanelDirective.CLASS_PANEL_COLLAPSED)) {\n      this.renderer.addClass(panel, TogglePanelDirective.CLASS_PANEL_COLLAPSED);\n      return;\n    }\n\n    if (panel && panel.style.maxHeight) {\n      this.setHeight(panel, 'scrollHeight');\n      requestAnimationFrame(() => {\n        this.setHeight(panel, null);\n      });\n      return;\n    }\n\n    this.setHeight(panel, 'scrollHeight');\n\n    const eventHandler = function () {\n      if (getComputedStyle(panel).maxHeight !== '0px') {\n        panel.style.maxHeight = 'unset';\n      }\n      panel.removeEventListener('transitionend', eventHandler);\n    };\n\n    panel.addEventListener('transitionend', eventHandler);\n  }\n  private setHeight(el: HTMLElement, heightProperty: string | null): void {\n    this.renderer.setStyle(el, 'maxHeight', heightProperty ? el[heightProperty] + 'px' : null);\n  }\n}\n","import { Component } from '@angular/core';\nimport { TranslateHelperService } from '../../service/translate-helper.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'tg-marketing-cafe-disclaimer',\n  templateUrl: './disclaimer.component.html',\n  standalone: true,\n  imports: [NgIf, TranslateModule],\n})\nexport class DisclaimerComponent {\n  showMore: boolean;\n\n  constructor(public translateHelperService: TranslateHelperService) {}\n\n  toggleShowMore() {\n    this.showMore = !this.showMore;\n  }\n}\n","<span class=\"display--block text--xs text--s--sm\">\n  <span [innerHTML]=\"translateHelperService.getText('disclaimer') | translate\"> </span>\n  <span\n    *ngIf=\"!showMore\"\n    (click)=\"toggleShowMore()\"\n    [innerHTML]=\"translateHelperService.getText('disclaimer-read-more') | translate\">\n  </span>\n  <span *ngIf=\"showMore\" [innerHTML]=\"translateHelperService.getText('disclaimer-expanded') | translate\"> </span>\n</span>\n","import { Component, Input } from '@angular/core';\nimport { PricedCphDatalayerService } from '../../service/priced-cph-datalayer.service';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'tg-marketing-cafe-drop-down-accordion-header',\n  templateUrl: './drop-down-accordion-header.component.html',\n  standalone: true,\n  imports: [NgClass],\n})\nexport class DropDownAccordionHeaderComponent {\n  @Input() title: string;\n  @Input() isPanelCollapsed: boolean;\n\n  rotateChevron: boolean;\n\n  constructor(private readonly pricedCphDatalayerService: PricedCphDatalayerService) {}\n\n  handleClick(): void {\n    this.rotateChevron = !this.rotateChevron;\n    if (this.rotateChevron) {\n      this.pricedCphDatalayerService.pushComponentOpened();\n    }\n  }\n}\n","<div class=\"header-accordion heading--5 cursor--pointer user-select--none p--l m--n\" (click)=\"handleClick()\">\n  <div class=\"header-accordion--title\">\n    <div class=\"header-accordion--title__text\">\n      {{ title }}\n    </div>\n  </div>\n  <div class=\"header-accordion--link display--flex align-items--center\">\n    <i\n      class=\"icon icon-sm transition--all-3ms\"\n      [ngClass]=\"isPanelCollapsed ? 'icon-chevron-down' : 'icon-chevron-up'\"\n      [class.rotate--180]=\"rotateChevron\"></i>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { OverviewGroupTypeEnum } from '../group/overview-group-type.enum';\nimport { PricedCphOverview } from '../../model/priced-cph-data.model';\nimport { PricedCphState } from '../../state/priced-cph.state';\nimport { Notification } from '../../model/notification.model';\nimport { ErrorNotificationComponent } from '../error-notification/error-notification.component';\nimport { DisclaimerComponent } from '../disclaimer/disclaimer.component';\nimport { BillPriceComponent } from '../bill-price/bill-price.component';\nimport { OverviewGroupComponent } from '../group/overview-group.component';\nimport { NgIf, NgFor, AsyncPipe } from '@angular/common';\nimport { MarketingCafeNgxsModule } from '../../../marketing-cafe-ngxs.module';\n\n@Component({\n  selector: 'tg-marketing-cafe-drop-down-accordion-panel',\n  templateUrl: './drop-down-accordion-panel.component.html',\n  standalone: true,\n  imports: [\n    NgIf,\n    NgFor,\n    OverviewGroupComponent,\n    BillPriceComponent,\n    DisclaimerComponent,\n    ErrorNotificationComponent,\n    AsyncPipe,\n    MarketingCafeNgxsModule,\n  ],\n})\nexport class DropDownAccordionPanelComponent {\n  @Input() overviews: PricedCphOverview[];\n  @Select(PricedCphState.notification) notification: Observable<Notification>;\n\n  overviewGroupTypeEnum = OverviewGroupTypeEnum;\n}\n","<ng-container *ngIf=\"(notification | async) === null; else notificationHandling\">\n  <div *ngFor=\"let overview of overviews\">\n    <ng-container *ngIf=\"overview\">\n      <ng-container *ngIf=\"overview.products.length > 0\">\n        <tg-marketing-cafe-overview-group\n          [items]=\"overview.products\"\n          [type]=\"overviewGroupTypeEnum.PRODUCTS\"></tg-marketing-cafe-overview-group>\n        <tg-marketing-cafe-overview-group\n          [items]=\"overview.options\"\n          [type]=\"overviewGroupTypeEnum.OPTIONS\"></tg-marketing-cafe-overview-group>\n        <tg-marketing-cafe-bill-price\n          *ngIf=\"overview.lastBillPrice\"\n          [price]=\"overview.lastBillPrice\"></tg-marketing-cafe-bill-price>\n      </ng-container>\n    </ng-container>\n  </div>\n  <tg-marketing-cafe-disclaimer></tg-marketing-cafe-disclaimer>\n</ng-container>\n\n<ng-template #notificationHandling>\n  <tg-marketing-cafe-error-notification\n    [labelKey]=\"(notification | async)!.labelKey\"\n    [type]=\"(notification | async)!.type\"></tg-marketing-cafe-error-notification>\n</ng-template>\n\n<div class=\"whitespace whitespace--medium\"></div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PricedCphOverview } from '../../model/priced-cph-data.model';\nimport { Select } from '@ngxs/store';\nimport { PricedCphState } from '../../state/priced-cph.state';\nimport { Observable } from 'rxjs';\nimport { Notification } from '../../model/notification.model';\nimport { PricedCphDatalayerService } from '../../service/priced-cph-datalayer.service';\nimport { AsyncPipe } from '@angular/common';\nimport { DropDownAccordionPanelComponent } from '../drop-down-accordion-panel/drop-down-accordion-panel.component';\nimport { TogglePanelDirective } from '../directives/panel-toggler.directive';\nimport { DropDownAccordionHeaderComponent } from '../drop-down-accordion-header/drop-down-accordion-header.component';\n\n@Component({\n  selector: 'tg-marketing-cafe-drop-down-accordion',\n  templateUrl: './drop-down-accordion.component.html',\n  standalone: true,\n  imports: [DropDownAccordionHeaderComponent, TogglePanelDirective, DropDownAccordionPanelComponent, AsyncPipe],\n})\nexport class DropDownAccordionComponent implements OnInit {\n  @Input() title: string;\n  @Input() overviews: PricedCphOverview[];\n  @Select(PricedCphState.notification) notification: Observable<Notification>;\n\n  constructor(private readonly pricedCphDatalayerService: PricedCphDatalayerService) {}\n\n  ngOnInit(): void {\n    this.pricedCphDatalayerService.pushComponentViewed();\n  }\n}\n","<tg-marketing-cafe-drop-down-accordion-header\n  [title]=\"title\"\n  [isPanelCollapsed]=\"(notification | async) === null\"\n  tgMarketingTogglePanel>\n</tg-marketing-cafe-drop-down-accordion-header>\n\n<tg-marketing-cafe-drop-down-accordion-panel\n  [overviews]=\"overviews\"\n  [class.accordion--panel__collapsed]=\"(notification | async) === null\"\n  class=\"display--flex flex-direction--column flex-grow px--l\">\n</tg-marketing-cafe-drop-down-accordion-panel>\n","import { Component, Input } from '@angular/core';\nimport { TranslateHelperService } from '../../service/translate-helper.service';\nimport { NotificationTypeEnum } from '../../model/notification.model';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'tg-marketing-cafe-error-notification',\n  templateUrl: './error-notification.component.html',\n  standalone: true,\n  imports: [NgClass, TranslateModule],\n})\nexport class ErrorNotificationComponent {\n  @Input() labelKey: string;\n  @Input() type: NotificationTypeEnum;\n\n  constructor(public translateHelperService: TranslateHelperService) {}\n\n  getClass(): string {\n    switch (this.type) {\n      case NotificationTypeEnum.ERROR:\n        return 'notification--errorfield';\n      case NotificationTypeEnum.WARNING:\n        return 'notification--warning';\n      case NotificationTypeEnum.INFO:\n        return 'notification--info';\n    }\n  }\n\n  getIconClass(): string {\n    switch (this.type) {\n      case NotificationTypeEnum.ERROR:\n        return 'icon-error-shape errorfield';\n      case NotificationTypeEnum.WARNING:\n        return 'icon-alert-shape warning';\n      case NotificationTypeEnum.INFO:\n        return 'icon-information-shape info';\n    }\n  }\n}\n","<div class=\"notification\" [ngClass]=\"getClass()\">\n  <span class=\"icon\" [ngClass]=\"getIconClass()\">{{\n    translateHelperService.getText('error.' + labelKey) | translate\n  }}</span>\n</div>\n","export enum OverviewGroupTypeEnum {\n  PRODUCTS = 'products',\n  OPTIONS = 'options',\n}\n","import { Component, Input } from '@angular/core';\nimport { PricedCphItem } from '../../model/priced-cph-data.model';\nimport { OverviewGroupTypeEnum } from './overview-group-type.enum';\nimport { TranslateHelperService } from '../../service/translate-helper.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgIf, NgFor, NgTemplateOutlet, NgClass } from '@angular/common';\n\n@Component({\n  selector: 'tg-marketing-cafe-overview-group',\n  templateUrl: './overview-group.component.html',\n  standalone: true,\n  imports: [NgIf, NgFor, NgTemplateOutlet, NgClass, TranslateModule],\n})\nexport class OverviewGroupComponent {\n  @Input() items: PricedCphItem[];\n  @Input() type: OverviewGroupTypeEnum;\n\n  overviewGroupTypeEnum = OverviewGroupTypeEnum;\n\n  constructor(public translateHelperService: TranslateHelperService) {}\n\n  getLabelKey(item: PricedCphItem): string {\n    return item.amount === 1 ? 'item' : 'item-with-amount';\n  }\n\n  getLabelArgs(item: PricedCphItem): { itemName: string; amount: number } {\n    return {\n      itemName: item.key,\n      amount: item.amount,\n    };\n  }\n}\n","<div\n  *ngIf=\"items && items.length\"\n  class=\"display--flex justify-content--between align-items--center heading--6 mb--xxs mt--s\">\n  <div class=\"text-block__left\">\n    {{ translateHelperService.getTitle(type) | translate }}\n  </div>\n  <div class=\"text-block__right display--flex align-items--baseline word-break--keep-all\"></div>\n</div>\n<ng-container *ngFor=\"let item of items\">\n  <ng-container\n    *ngTemplateOutlet=\"\n      record;\n      context: {\n        labelKey: translateHelperService.getLabel(getLabelKey(item)),\n        args: getLabelArgs(item),\n        class: type === overviewGroupTypeEnum.PRODUCTS ? 'text--m text--xm--sm' : ' text--s text--m--sm p--n'\n      }\n    \">\n  </ng-container>\n  <ng-container *ngFor=\"let spec of item.specifications\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        record;\n        context: {\n          labelKey: spec.label.key,\n          args: spec.label.args,\n          icon: spec.icon,\n          rowClass: 'position--relative',\n          class: 'ml--xl text--s text--m--sm p--n'\n        }\n      \">\n    </ng-container>\n  </ng-container>\n</ng-container>\n<ng-template\n  #record\n  let-labelKey=\"labelKey\"\n  let-args=\"args\"\n  let-icon=\"icon\"\n  let-rowClass=\"rowClass\"\n  let-itemClass=\"class\">\n  <div class=\"display--flex justify-content--between align-content--center mb--xxs\" [ngClass]=\"rowClass\">\n    <i *ngIf=\"icon\" class=\"position--absolute cursor--pointer text--xxm line-height--20\" [ngClass]=\"icon\"></i>\n    <div class=\"display--flex flex-grow justify-content--between align-items--center\" [ngClass]=\"itemClass\">\n      <div class=\"text-block__left\" [innerHTML]=\"labelKey | translate: args\"></div>\n      <div class=\"text-block__right display--flex align-items--baseline word-break--keep-all\"></div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { mergeMap, take, tap } from 'rxjs/operators';\nimport { LoginDetails } from '@telenet/ng-lib-ocapi';\nimport { Observable } from 'rxjs';\nimport { Select, Store } from '@ngxs/store';\nimport { PricedCphState } from '../../state/priced-cph.state';\nimport { PricedCphOverview } from '../../model/priced-cph-data.model';\nimport { NotificationsService } from '../../service/notifications.service';\nimport { BackendErrorNotification } from '../../model/backend-error.notification';\nimport { BusinessCustomerNotification } from '../../model/business-customer.notification';\nimport { NoProductsNotification } from '../../model/no-products.notification';\nimport { NoManagerNotification } from '../../model/no-manager.notification';\nimport { Initialize, SetNotificationIfNotSet } from '../../state/priced-cph.actions';\nimport { Notification } from '../../model/notification.model';\nimport { DropDownAccordionComponent } from '../drop-down-accordion/drop-down-accordion.component';\nimport { NgIf, AsyncPipe } from '@angular/common';\nimport { MarketingCafeNgxsModule } from '../../../marketing-cafe-ngxs.module';\n\n@Component({\n  selector: 'tg-marketing-cafe-priced-customer-product-holding',\n  templateUrl: './priced-customer-product-holding.component.html',\n  standalone: true,\n  imports: [NgIf, DropDownAccordionComponent, AsyncPipe, MarketingCafeNgxsModule],\n})\nexport class PricedCustomerProductHoldingComponent implements OnInit {\n  @Input() title: string;\n\n  @Select(PricedCphState.loginDetails) loginDetails$: Observable<LoginDetails>;\n  @Select(PricedCphState.isLoggedIn) isLoggedIn$: Observable<boolean>;\n  @Select(PricedCphState.overview) overview$: Observable<PricedCphOverview[]>;\n\n  constructor(\n    private readonly store: Store,\n    private readonly notificationsService: NotificationsService\n  ) {}\n\n  ngOnInit(): void {\n    const NOTIFICATIONS = [\n      new BackendErrorNotification(),\n      new BusinessCustomerNotification(),\n      new NoManagerNotification(),\n      new NoProductsNotification(),\n    ];\n\n    this.store\n      .dispatch(new Initialize())\n      .pipe(\n        take(1),\n        mergeMap(() => this.notificationsService.notificationsIfConditionsMet$(NOTIFICATIONS)),\n        tap((notification: Notification) => {\n          if (notification) {\n            this.store.dispatch(new SetNotificationIfNotSet(notification));\n          }\n        })\n      )\n      .subscribe();\n  }\n}\n","<tg-marketing-cafe-drop-down-accordion\n  *ngIf=\"isLoggedIn$ | async\"\n  [title]=\"title\"\n  [overviews]=\"(overview$ | async)!\"\n  class=\"Container\">\n</tg-marketing-cafe-drop-down-accordion>\n","export enum CafeContactDetailType {\n  INDIVIDUAL,\n  ORGANIZATION,\n}\n","import { Injectable } from '@angular/core';\nimport { MapperInterface } from '@telenet/ng-lib-shared';\nimport { CafeContactDetails, RawContactDetails } from '../models/cafe-contact-details.model';\nimport { AddressMapper } from '../../../common/address/mappers/address.mapper';\nimport { CafeContactDetailType } from '../enums/cafe-contact-detail-type';\nimport { RawAddressInterface } from '../../../common/address/interfaces/raw-address.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CafeContactDetailsMapper\n  implements MapperInterface<{ contactdetails: RawContactDetails }, CafeContactDetails>\n{\n  constructor(private readonly addressMapper: AddressMapper) {}\n\n  toModel(response?: { contactdetails: RawContactDetails }) {\n    const contactDetails = new CafeContactDetails();\n\n    if (response === undefined || response.contactdetails === undefined) {\n      return contactDetails;\n    }\n    const rawContactDetails = response.contactdetails;\n    switch (rawContactDetails.class) {\n      case 'ORGANIZATION':\n        contactDetails.type = CafeContactDetailType.ORGANIZATION;\n        break;\n      case 'INDIVIDUAL':\n        contactDetails.type = CafeContactDetailType.INDIVIDUAL;\n        break;\n      default:\n        contactDetails.type = CafeContactDetailType.INDIVIDUAL;\n        break;\n    }\n\n    const organization = rawContactDetails.organization;\n    if (organization) {\n      contactDetails.firstName = organization.name;\n      contactDetails.lastName = '';\n      contactDetails.organisation = {\n        companyName: organization.name,\n        customerNumber: organization.customernumber,\n        legalForm: organization.type,\n        vatNumber: organization.vat,\n      };\n    } else {\n      contactDetails.epithet = rawContactDetails?.individual?.epithet ?? '';\n      contactDetails.firstName = rawContactDetails?.individual?.firstname ?? '';\n      contactDetails.lastName = rawContactDetails?.individual?.lastname ?? '';\n      contactDetails.dateofbirth = rawContactDetails?.individual?.dateofbirth;\n    }\n    contactDetails.language = rawContactDetails.language.toLowerCase();\n\n    if (rawContactDetails.contactinfo) {\n      contactDetails.telephoneNumbers = rawContactDetails.contactinfo.telephones;\n      contactDetails.mobilePhoneNumbers = rawContactDetails.contactinfo.mobiles;\n      contactDetails.emails = rawContactDetails.contactinfo.emails;\n      contactDetails.internationalPhoneNumbers = rawContactDetails.contactinfo.internationalphones;\n    }\n    contactDetails.privacySetting = rawContactDetails.privacysetting;\n    contactDetails.rightToObjectStatus = rawContactDetails.righttoobjectstatus;\n\n    this.setAddresses(contactDetails, rawContactDetails?.addresses);\n\n    return contactDetails;\n  }\n\n  private setAddresses(contactDetails: CafeContactDetails, rawAddresses?: RawAddressInterface | RawAddressInterface[]) {\n    if (rawAddresses) contactDetails.addresses = this.addressMapper.toModel(rawAddresses);\n  }\n}\n","import { Address } from '../../../common/address/models/address.model';\nimport { Email, PhoneNumber } from '../interfaces/cafe-contact-details.inteface';\nimport { CafeContactDetailType } from '../enums/cafe-contact-detail-type';\nimport { OrganizationInterface, RawOrganizationInterface } from '../interfaces/organization.interface';\nimport { RawAddressInterface } from '../../../common/address/interfaces/raw-address.interface';\n\nexport class CafeContactDetails {\n  static POSTAL_CONTACT_TYPE = 'POSTALCONTACT';\n  type: CafeContactDetailType;\n  language: string;\n  epithet: string;\n  firstName: string;\n  lastName: string;\n  dateofbirth?: string;\n  addresses: Address[] = [];\n  telephoneNumbers: PhoneNumber[] = [];\n  mobilePhoneNumbers: PhoneNumber[] = [];\n  emails: Email[] = [];\n  internationalPhoneNumbers: PhoneNumber[] = [];\n  privacySetting: number;\n  rightToObjectStatus: boolean;\n  organisation?: OrganizationInterface;\n\n  isOrganization(): boolean {\n    return this.type === CafeContactDetailType.ORGANIZATION;\n  }\n}\n\nexport class RawContactDetails {\n  class: string;\n  specurl: string;\n  privacysetting: number;\n  organization?: RawOrganizationInterface;\n  individual?: RawIndividualInterface;\n  language: string;\n  righttoobjectstatus: boolean;\n  addresses?: RawAddressInterface[];\n  contactinfo?: RawContactInfoInterface;\n}\n\nexport interface RawIndividualInterface {\n  epithet: string;\n  firstname: string;\n  lastname: string;\n  dateofbirth?: string;\n}\n\nexport interface RawContactInfoInterface {\n  telephones: PhoneNumber[];\n  mobiles: PhoneNumber[];\n  emails: Email[];\n  internationalphones: PhoneNumber[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OcapiService, OcapiCallConfig } from '@telenet/ng-lib-ocapi';\nimport { CafeContactDetailsMapper } from '../mappers/cafe-contact-details.mapper';\nimport { CafeContactDetails } from '../models/cafe-contact-details.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CafeContactDetailsService {\n  private readonly PROPERTY_URL = '/public/?p=contactdetails';\n\n  constructor(\n    private readonly ocapiService: OcapiService,\n    private readonly cafeContactDetailsMapper: CafeContactDetailsMapper\n  ) {}\n\n  getContactDetails(messageGroup: string): Observable<CafeContactDetails> {\n    return this.ocapiService.doGet(this.getOcapiCallConfig(messageGroup));\n  }\n\n  private getOcapiCallConfig(messageGroup: string): OcapiCallConfig<unknown, CafeContactDetails> {\n    return new OcapiCallConfig(messageGroup, this.PROPERTY_URL, this.cafeContactDetailsMapper);\n  }\n}\n"],"names":["NgxsModule","PricedCphState","MarketingCafeNgxsModule","forFeature","imports","i1","ɵNgxsFeatureModule","NotificationTypeEnum","of","map","PricedCphConstants","CafeContactDetailsService","BusinessCustomerNotification","labelKey","type","ERROR","shouldShow","injector","cafeContactDetailsService","get","getContactDetails","MESSAGE_GROUP","pipe","cafeContactDetails","isOrganization","Store","NoManagerNotification","WARNING","store","loginDetails","selectSnapshot","hasManagerRole","NoProductsNotification","overview","hasNoProducts","some","value","products","length","Injector","from","filter","mergeMap","take","NotificationsService","constructor","notificationsIfConditionsMet$","notifications","notification","shouldShowNotification","i0","ɵɵinject","factory","ɵfac","providedIn","inject","DataLayerService","PricedCphDatalayerService","dataLayerService","category","createCategory","viewedEventInfo","createEventInfo","openedEventInfo","pushComponentViewed","sendEvent","eventInfo","attributes","pushComponentOpened","LanguageEnum","LanguageService","TranslateHelperService","TranslateModule","NgIf","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","decimal","BillPriceComponent","translateHelperService","languageService","price","integer","isFrench","ngOnInit","priceArray","split","getLanguage","FR","ɵɵdirectiveInject","i2","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","BillPriceComponent_Template","rf","ctx","ɵɵtemplate","BillPriceComponent_span_3_Template","BillPriceComponent_span_6_Template","BillPriceComponent_span_7_Template","ɵɵelement","ɵɵproperty","ɵɵtextInterpolate","ɵɵpipeBind1","getText","i3","TranslatePipe","encapsulation","ElementRef","Renderer2","TogglePanelDirective","elRef","renderer","CLASS_PANEL_COLLAPSED","panelClass","handleClick","header","nativeElement","panel","parentElement","querySelector","nextSibling","classList","contains","addClass","style","maxHeight","setHeight","requestAnimationFrame","eventHandler","getComputedStyle","removeEventListener","addEventListener","el","heightProperty","setStyle","hostBindings","TogglePanelDirective_HostBindings","ɵɵlistener","DisclaimerComponent_span_3_Template_span_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","toggleShowMore","ctx_r0","ɵɵsanitizeHtml","DisclaimerComponent","showMore","DisclaimerComponent_Template","DisclaimerComponent_span_3_Template","DisclaimerComponent_span_4_Template","NgClass","DropDownAccordionHeaderComponent","pricedCphDatalayerService","title","isPanelCollapsed","rotateChevron","DropDownAccordionHeaderComponent_Template","DropDownAccordionHeaderComponent_Template_div_click_0_listener","ɵɵclassProp","Select","Observable","OverviewGroupTypeEnum","ErrorNotificationComponent","OverviewGroupComponent","NgFor","AsyncPipe","overview_r4","lastBillPrice","ɵɵelementContainerStart","DropDownAccordionPanelComponent_ng_container_0_div_1_ng_container_1_ng_container_1_tg_marketing_cafe_bill_price_3_Template","ɵɵelementContainerEnd","ctx_r6","overviewGroupTypeEnum","PRODUCTS","options","OPTIONS","DropDownAccordionPanelComponent_ng_container_0_div_1_ng_container_1_ng_container_1_Template","DropDownAccordionPanelComponent_ng_container_0_div_1_ng_container_1_Template","DropDownAccordionPanelComponent_ng_container_0_div_1_Template","overviews","DropDownAccordionPanelComponent","DropDownAccordionPanelComponent_Template","DropDownAccordionPanelComponent_ng_container_0_Template","DropDownAccordionPanelComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","_r2","__decorate","DropDownAccordionComponent","DropDownAccordionComponent_Template","getClass","INFO","getIconClass","ErrorNotificationComponent_Template","NgTemplateOutlet","getTitle","ɵɵelementContainer","OverviewGroupComponent_ng_container_1_ng_container_2_ng_container_1_Template","ɵɵpureFunction3","_c0","spec_r7","label","key","args","icon","OverviewGroupComponent_ng_container_1_ng_container_1_Template","OverviewGroupComponent_ng_container_1_ng_container_2_Template","_c1","getLabel","getLabelKey","item_r4","getLabelArgs","specifications","icon_r11","OverviewGroupComponent_ng_template_2_i_1_Template","rowClass_r12","itemClass_r13","ɵɵpipeBind2","labelKey_r9","args_r10","items","item","amount","itemName","OverviewGroupComponent_Template","OverviewGroupComponent_div_0_Template","OverviewGroupComponent_ng_container_1_Template","OverviewGroupComponent_ng_template_2_Template","tap","BackendErrorNotification","Initialize","SetNotificationIfNotSet","overview$","PricedCustomerProductHoldingComponent","notificationsService","loginDetails$","isLoggedIn$","NOTIFICATIONS","dispatch","subscribe","PricedCustomerProductHoldingComponent_Template","PricedCustomerProductHoldingComponent_tg_marketing_cafe_drop_down_accordion_0_Template","isLoggedIn","CafeContactDetailType","CafeContactDetails","AddressMapper","CafeContactDetailsMapper","addressMapper","toModel","response","contactDetails","undefined","contactdetails","rawContactDetails","class","ORGANIZATION","INDIVIDUAL","organization","firstName","name","lastName","organisation","companyName","customerNumber","customernumber","legalForm","vatNumber","vat","epithet","individual","firstname","lastname","dateofbirth","language","toLowerCase","contactinfo","telephoneNumbers","telephones","mobilePhoneNumbers","mobiles","emails","internationalPhoneNumbers","internationalphones","privacySetting","privacysetting","rightToObjectStatus","righttoobjectstatus","setAddresses","addresses","rawAddresses","POSTAL_CONTACT_TYPE","RawContactDetails","specurl","OcapiService","OcapiCallConfig","ocapiService","cafeContactDetailsMapper","PROPERTY_URL","messageGroup","doGet","getOcapiCallConfig"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}