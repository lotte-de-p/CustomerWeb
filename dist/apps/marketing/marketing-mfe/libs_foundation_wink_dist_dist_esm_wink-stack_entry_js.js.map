{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-stack_entry_js.js","mappings":";;;;;;;;;;;;MAAaA,KAAK,GAAG;EACnBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACR,KAAK,EAAE,KAAK;EACZ,KAAK,EAAE,KAAK;EACZC,EAAE,EAAE,IAAI;EACRC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;ACPD,MAAMC,WAAW,GAAG;EACzB,KAAK,EAAEX,uDAAK,CAAC,KAAK,CAAC;EACnB,KAAK,EAAEA,uDAAK,CAAC,KAAK,CAAC;EACnBK,EAAE,EAAEL,uDAAK,CAACK,EAAE;EACZJ,EAAE,EAAED,uDAAK,CAACC,EAAE;EACZC,EAAE,EAAEF,uDAAK,CAACE,EAAE;EACZC,EAAE,EAAEH,uDAAK,CAACG,EAAE;EACZM,IAAI,EAAET,uDAAK,CAACS;CACJ;ACbV,MAAMG,YAAY,GAAG,gzFAAgzF;AACr0F,MAAAC,mBAAA,GAAeD,YAAY;ACD3B,MAAME,eAAe,GAAG,gzFAAgzF;AACx0F,MAAAC,sBAAA,GAAeD,eAAe;MCUjBE,KAAK;;;eACI;MAAEC,OAAO,EAAE;IAAE,CAAE;eACf;MAAEA,OAAO,EAAEN,WAAW,CAACN;IAAE,CAAE;;;;;;EAM9Ba,eAAe,GAAGA,CAAA;IACjC,OAAO;MACL,GAAG,IAAI,CAACC,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC;MACzC,GAAG,IAAI,CAACA,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC;MACzC,GAAG,IAAI,CAACA,mBAAmB,CAAC,gBAAgB,EAAE,WAAW,CAAC;MAC1D,GAAG,IAAI,CAACA,mBAAmB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;MAChE,GAAG,IAAI,CAACA,mBAAmB,CAAC,aAAa,EAAE,YAAY,CAAC;MACxD,GAAG,IAAI,CAACA,mBAAmB,CAAC,WAAW,EAAE,MAAM;KAChD;GACF;EAEOA,mBAAmBA,CAACC,OAAe,EAAEC,IAAqB;IAChE,IAAI,CAAC,IAAI,CAACA,IAAI,CAAC,EAAE;MACf,OAAO,EAAE;;IAEX,OAAO;MACL,IAAI,IAAI,CAACA,IAAI,CAAC,CAACJ,OAAO,IAAI;QAAE,CAAC,GAAGG,OAAO,IAAI,IAAI,CAACC,IAAI,CAAC,CAACJ,OAAO,EAAE,GAAG;MAAI,CAAE,CAAC;MACzE,IAAI,IAAI,CAACI,IAAI,CAAC,CAACpB,EAAE,IAAI;QAAE,CAAC,GAAGmB,OAAO,IAAI,IAAI,CAACC,IAAI,CAAC,CAACpB,EAAE,KAAK,GAAG;MAAI,CAAE,CAAC;MAClE,IAAI,IAAI,CAACoB,IAAI,CAAC,CAACnB,EAAE,IAAI;QAAE,CAAC,GAAGkB,OAAO,IAAI,IAAI,CAACC,IAAI,CAAC,CAACnB,EAAE,KAAK,GAAG;MAAI,CAAE;KAClE;;EAGHoB,MAAMA,CAAA;IACJ,OACEC,qDAAA,CAACC,iDAAI;MAAAC,GAAA;MAACC,KAAK,EAAE,IAAI,CAACR,eAAe;IAAE,GACjCK,qDAAA;MAAAE,GAAA;IAAA,EAAQ,CACH","sources":["./libs/foundation/wink/dist/dist/core/src/models/sizes.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/stack/models/stack.types.ts","./libs/foundation/wink/dist/dist/core/src/components/stack/styles/brands/stack.base.scss","./libs/foundation/wink/dist/dist/core/src/components/stack/styles/brands/stack.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/stack/stack.tsx"],"sourcesContent":["export const SIZES = {\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  '3xs': '3xs',\n  '2xs': '2xs',\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'l',\n  none: 'none',\n  full: 'full',\n};\nexport type Size = (typeof SIZES)[keyof typeof SIZES];\n\nexport const WIDTHS = {};\nexport type Width = (typeof WIDTHS)[keyof typeof WIDTHS];\n","import { SIZES } from '../../../models/sizes.types';\nimport { AlignItems, FlexDirection, JustifyContent, Wrap } from '../../../models/flex.types';\n\nexport type CssClass = { [className: string]: boolean };\n\nexport const STACK_SIZES = {\n  '3xs': SIZES['3xs'],\n  '2xs': SIZES['2xs'],\n  xs: SIZES.xs,\n  sm: SIZES.sm,\n  md: SIZES.md,\n  lg: SIZES.lg,\n  none: SIZES.none,\n} as const;\nexport type StackSize = (typeof STACK_SIZES)[keyof typeof STACK_SIZES];\n\nexport type Size = {\n  default?: StackSize | FlexDirection | JustifyContent | AlignItems | Wrap | number;\n  sm?: StackSize | FlexDirection | JustifyContent | AlignItems | Wrap | number;\n  md?: StackSize | FlexDirection | JustifyContent | AlignItems | Wrap | number;\n};\n","@import '../vars/vars.base';\n@import '../stack.default';\n","@import '../vars/vars.telenet';\n@import '../stack.default';\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { CssClass, STACK_SIZES, Size } from './models/stack.types';\n\n@Component({\n  tag: 'wink-stack',\n  styleUrls: {\n    telenet: 'styles/brands/stack.telenet.scss',\n    base: 'styles/brands/stack.base.scss',\n  },\n  shadow: true,\n})\nexport class Stack {\n  @Prop() col: Size = { default: 12 };\n  @Prop() gap: Size = { default: STACK_SIZES.xs };\n  @Prop() direction?: Size;\n  @Prop() justifyContent?: Size;\n  @Prop() alignItems?: Size;\n  @Prop() wrap?: Size;\n\n  private readonly getStackClasses = (): CssClass => {\n    return {\n      ...this.getClassesByPostfix('col', 'col'),\n      ...this.getClassesByPostfix('gap', 'gap'),\n      ...this.getClassesByPostfix('flex-direction', 'direction'),\n      ...this.getClassesByPostfix('justify-content', 'justifyContent'),\n      ...this.getClassesByPostfix('align-items', 'alignItems'),\n      ...this.getClassesByPostfix('flex-wrap', 'wrap'),\n    };\n  };\n\n  private getClassesByPostfix(postFix: string, prop: string | number): CssClass {\n    if (!this[prop]) {\n      return {};\n    }\n    return {\n      ...(this[prop].default && { [`${postFix}-${this[prop].default}`]: true }),\n      ...(this[prop].sm && { [`${postFix}-${this[prop].sm}-sm`]: true }),\n      ...(this[prop].md && { [`${postFix}-${this[prop].md}-md`]: true }),\n    };\n  }\n\n  render() {\n    return (\n      <Host class={this.getStackClasses()}>\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"names":["SIZES","sm","md","lg","xl","xs","s","m","l","none","full","STACK_SIZES","stackBaseCss","WinkStackBaseStyle0","stackTelenetCss","WinkStackTelenetStyle0","Stack","default","getStackClasses","getClassesByPostfix","postFix","prop","render","h","Host","key","class"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}