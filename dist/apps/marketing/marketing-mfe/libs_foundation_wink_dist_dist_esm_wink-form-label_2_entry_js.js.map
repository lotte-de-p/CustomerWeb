{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-form-label_2_entry_js.js","mappings":";;;;;;;;;;;;MAAaA,oBAAoB,GAAG;EAClCC,OAAO,EAAE,SAAS;EAClBC,YAAY,EAAE;;;;;;;;;;;;;;;;MCFHC,eAAe,GAAG;EAC7BC,WAAW,EAAE,aAAa;EAC1BC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;;;ACJX,MAAMC,gBAAgB,GAAG,iiEAAiiE;AAC1jE,MAAAC,uBAAA,GAAeD,gBAAgB;ACD/B,MAAME,mBAAmB,GAAG,ymEAAymE;AACroE,MAAAC,0BAAA,GAAeD,mBAAmB;MCUrBE,SAAS;;;iBACJ,EAAE;;;;qBAIsBZ,4DAAoB,CAACC,OAAO;wBAC7C,WAAW;wBACX,KAAK;sBACP,KAAK;;EAE1BY,MAAMA,CAAA;IACJ,OACEC,qDAAA,CAACC,iDAAI;MAAAC,GAAA;MAACC,KAAK,EAAE,GAAG,IAAI,CAACC,UAAU,GAAG,iBAAiB,GAAG,EAAE,WAAW,IAAI,CAACC,SAAS,EAAE,CAACC,iBAAiB;IAAE,GACrGN,qDAAA;MAAAE,GAAA;MAAMC,KAAK,EAAC;IAAwB,GAClCH,qDAAA;MAAAE,GAAA;MAAMC,KAAK,EAAC;IAAa,GAAE,IAAI,CAACI,KAAK,CAAQ,EAC5C,IAAI,CAACC,MAAM,IACVR,qDAAA;MAAMG,KAAK,EAAC,eAAe;MAACM,EAAE,EAAE,IAAI,CAACC;IAAQ,GAC1C,IAAI,CAACF,MAAM,CAEf,CACI,EACN,IAAI,CAACG,YAAY,IAAIX,qDAAA;MAAMG,KAAK,EAAC;IAAiB,GAAE,IAAI,CAACS,YAAY,CAAQ,CACzE;;;;;;;AC/BN,MAAMC,gBAAgB,GAAG;EAC9BrB,KAAK,EAAEH,0DAAe,CAACG;CACf;ACJV,MAAMsB,wBAAwB,GAAG,41BAA41B;AAC73B,MAAAC,+BAAA,GAAeD,wBAAwB;ACDvC,MAAME,2BAA2B,GAAG,82BAA82B;AACl5B,MAAAC,kCAAA,GAAeD,2BAA2B;MCU7BE,iBAAiB;;;;gBAEIL,gBAAgB,CAACrB,KAAK;;EAEtDO,MAAMA,CAAA;IACJ,OACEC,qDAAA;MAAAE,GAAA;MAAKC,KAAK,EAAE,uBAAuB,IAAI,CAACgB,IAAI;IAAE,GAC5CnB,qDAAA;MAAAE,GAAA;MAAWkB,IAAI,EAAC;IAAa,EAAG,EAC/B,IAAI,CAACC,OAAO,CACT","sources":["./libs/foundation/wink/dist/dist/core/src/components/_form-components/form-label/models/form-label.types.tsx","./libs/foundation/wink/dist/dist/core/src/models/statuses.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/_form-components/form-label/styles/brands/form-label.base.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/form-label/styles/brands/form-label.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/form-label/form-label.tsx","./libs/foundation/wink/dist/dist/core/src/components/_form-components/validation-message/models/validation-message.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/_form-components/validation-message/styles/brands/validation-message.base.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/validation-message/styles/brands/validation-message.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/validation-message/validation-message.tsx"],"sourcesContent":["export const FORM_LABEL_RENDITION = {\n  default: 'default',\n  subComponent: 'subComponent',\n} as const;\nexport type FormLabelRendition = (typeof FORM_LABEL_RENDITION)[keyof typeof FORM_LABEL_RENDITION];\n","export const STATUS_VARIANTS = {\n  information: 'information',\n  success: 'success',\n  error: 'error',\n  warning: 'warning',\n} as const;\nexport type StatusVariants = (typeof STATUS_VARIANTS)[keyof typeof STATUS_VARIANTS];\n","@import '../vars/vars.base';\n@import '../form-label.default';\n","@import '../vars/vars.telenet';\n@import '../form-label.default';\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { FORM_LABEL_RENDITION, FormLabelRendition } from './models/form-label.types';\n\n@Component({\n  tag: 'wink-form-label',\n  styleUrls: {\n    telenet: 'styles/brands/form-label.telenet.scss',\n    base: 'styles/brands/form-label.base.scss',\n  },\n  scoped: true,\n})\nexport class FormLabel {\n  @Prop() label = '';\n  @Prop() helper?: string;\n  @Prop() labelId?: string;\n  @Prop() helperId?: string;\n  @Prop() rendition: FormLabelRendition = FORM_LABEL_RENDITION.default;\n  @Prop() optionalText = 'Optioneel';\n  @Prop() showOptional = false;\n  @Prop() isDisabled = false;\n\n  render() {\n    return (\n      <Host class={`${this.isDisabled ? 'label--disabled' : ''} label--${this.rendition}`.toLocaleLowerCase()}>\n        <span class=\"label--content-wrapper\">\n          <span class=\"label--text\">{this.label}</span>\n          {this.helper && (\n            <span class=\"label--helper\" id={this.helperId}>\n              {this.helper}\n            </span>\n          )}\n        </span>\n        {this.showOptional && <span class=\"label--optional\">{this.optionalText}</span>}\n      </Host>\n    );\n  }\n}\n","import { STATUS_VARIANTS } from '../../../../models/statuses.types';\n\nexport const VALIDATION_TYPES = {\n  error: STATUS_VARIANTS.error,\n} as const;\nexport type ValidationTypes = (typeof VALIDATION_TYPES)[keyof typeof VALIDATION_TYPES];\n","@import '../vars/vars.base';\n@import '../validation-message.default';\n","@import '../vars/vars.telenet';\n@import '../validation-message.default';\n","import { Component, h, Prop } from '@stencil/core';\nimport { VALIDATION_TYPES, ValidationTypes } from './models/validation-message.types';\n\n@Component({\n  tag: 'wink-validation-message',\n  styleUrls: {\n    telenet: 'styles/brands/validation-message.telenet.scss',\n    base: 'styles/brands/validation-message.base.scss',\n  },\n  scoped: true,\n})\nexport class ValidationMessage {\n  @Prop() message?: string;\n  @Prop() type: ValidationTypes = VALIDATION_TYPES.error;\n\n  render() {\n    return (\n      <div class={`validation-message--${this.type}`}>\n        <wink-icon icon=\"error-shape\" />\n        {this.message}\n      </div>\n    );\n  }\n}\n"],"names":["FORM_LABEL_RENDITION","default","subComponent","STATUS_VARIANTS","information","success","error","warning","formLabelBaseCss","WinkFormLabelBaseStyle0","formLabelTelenetCss","WinkFormLabelTelenetStyle0","FormLabel","render","h","Host","key","class","isDisabled","rendition","toLocaleLowerCase","label","helper","id","helperId","showOptional","optionalText","VALIDATION_TYPES","validationMessageBaseCss","WinkValidationMessageBaseStyle0","validationMessageTelenetCss","WinkValidationMessageTelenetStyle0","ValidationMessage","type","icon","message"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}