{"version":3,"file":"node_modules_angular_material_fesm2022_icon_mjs-_bb190.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/icon.mjs","./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS classes to apply when an `<mat-icon>` component has no icon name, url, or font\n         * specified. The default 'material-icons' value assumes that the material icon font has been\n         * loaded as described at https://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = ['material-icons', 'mat-ligature-font'];\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for CSS class names to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * If the registered font is a ligature font, then don't forget to also include the special\n     * class `mat-ligature-font` to allow the usage via attribute. So register like this:\n     *\n     * ```ts\n     * iconRegistry.registerFontClassAlias('f1', 'font1 mat-ligature-font');\n     * ```\n     *\n     * And use like this:\n     *\n     * ```html\n     * <mat-icon fontSet=\"f1\" fontIcon=\"home\"></mat-icon>\n     * ```\n     *\n     * @param alias Alias for the font.\n     * @param classNames Class names override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, classNames = alias) {\n        this._fontCssClassesByAlias.set(alias, classNames);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    setDefaultFontSetClass(...classNames) {\n        this._defaultFontSetClass = classNames;\n        return this;\n    }\n    /**\n     * Returns the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = options?.withCredentials ?? false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ErrorHandler }] });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/** Injection token to be used to override the default options for `mat-icon`. */\nconst MAT_ICON_DEFAULT_OPTIONS = new InjectionToken('MAT_ICON_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the `fontIcon` attribute or the\n *   content of the `<mat-icon>` component. If you register a custom font class, don't forget to also\n *   include the special class `mat-ligature-font`. It is recommended to use the attribute alternative\n *   to prevent the ligature text to be selectable and to appear in search engine results.\n *   By default, the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon fontIcon=\"home\"></mat-icon>\n *     <mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\" fontIcon=\"sun\"></mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon {\n    /** Theme palette color of the icon. */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    constructor(_elementRef, _iconRegistry, ariaHidden, _location, _errorHandler, defaults) {\n        this._elementRef = _elementRef;\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        /**\n         * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n         * the element the icon is contained in.\n         */\n        this.inline = false;\n        this._previousFontSetClass = [];\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.fontSet) {\n                this.fontSet = defaults.fontSet;\n            }\n        }\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            _elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClasses = (this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/)\n            : this._iconRegistry.getDefaultFontSetClass()).filter(className => className.length > 0);\n        this._previousFontSetClass.forEach(className => elem.classList.remove(className));\n        fontSetClasses.forEach(className => elem.classList.add(className));\n        this._previousFontSetClass = fontSetClasses;\n        if (this.fontIcon !== this._previousFontIconClass &&\n            !fontSetClasses.includes('mat-ligature-font')) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }, { token: MAT_ICON_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: MatIcon, isStandalone: true, selector: \"mat-icon\", inputs: { color: \"color\", inline: [\"inline\", \"inline\", booleanAttribute], svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"attr.fontIcon\": \"_usingFontIcon() ? fontIcon : null\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[attr.fontIcon]': '_usingFontIcon() ? fontIcon : null',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\"mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-hidden']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_ICON_LOCATION]\n                }] }, { type: i0.ErrorHandler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_ICON_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], inline: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\nclass MatIconModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIconModule, imports: [MatCommonModule, MatIcon], exports: [MatIcon, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIconModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatIcon],\n                    exports: [MatIcon, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_DEFAULT_OPTIONS, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","/**\n * @license Angular v17.1.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ɵɵinject, ApplicationRef, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Injector, ENVIRONMENT_INITIALIZER, inject, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version, makeStateKey as makeStateKey$1, TransferState as TransferState$1 } from '@angular/core';\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener);\n        return () => {\n            el.removeEventListener(evt, listener);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n    // The base URL doesn't really matter, we just need it so relative paths have something\n    // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n    return new URL(url, document.baseURI).pathname;\n}\n\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            const decrement = function () {\n                count--;\n                if (count == 0) {\n                    callback();\n                }\n            };\n            testabilities.forEach((testability) => {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: BrowserXhr }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach((plugin) => {\n            plugin.manager = this;\n        });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        let plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        plugin = plugins.find((plugin) => plugin.supports(eventName));\n        if (!plugin) {\n            throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `No event manager plugin found for event ${eventName}`);\n        }\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: EventManager }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }] });\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n    // TODO: remove (has some usage in G3)\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\nclass SharedStylesHost {\n    constructor(doc, appId, nonce, platformId = {}) {\n        this.doc = doc;\n        this.appId = appId;\n        this.nonce = nonce;\n        this.platformId = platformId;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this.styleRef = new Map();\n        this.hostNodes = new Set();\n        this.styleNodesInDOM = this.collectServerRenderedStyles();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.resetHostNodes();\n    }\n    addStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, 1);\n            if (usageCount === 1) {\n                this.onStyleAdded(style);\n            }\n        }\n    }\n    removeStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, -1);\n            if (usageCount <= 0) {\n                this.onStyleRemoved(style);\n            }\n        }\n    }\n    ngOnDestroy() {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        if (styleNodesInDOM) {\n            styleNodesInDOM.forEach((node) => node.remove());\n            styleNodesInDOM.clear();\n        }\n        for (const style of this.getAllStyles()) {\n            this.onStyleRemoved(style);\n        }\n        this.resetHostNodes();\n    }\n    addHost(hostNode) {\n        this.hostNodes.add(hostNode);\n        for (const style of this.getAllStyles()) {\n            this.addStyleToHost(hostNode, style);\n        }\n    }\n    removeHost(hostNode) {\n        this.hostNodes.delete(hostNode);\n    }\n    getAllStyles() {\n        return this.styleRef.keys();\n    }\n    onStyleAdded(style) {\n        for (const host of this.hostNodes) {\n            this.addStyleToHost(host, style);\n        }\n    }\n    onStyleRemoved(style) {\n        const styleRef = this.styleRef;\n        styleRef.get(style)?.elements?.forEach((node) => node.remove());\n        styleRef.delete(style);\n    }\n    collectServerRenderedStyles() {\n        const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n        if (styles?.length) {\n            const styleMap = new Map();\n            styles.forEach((style) => {\n                if (style.textContent != null) {\n                    styleMap.set(style.textContent, style);\n                }\n            });\n            return styleMap;\n        }\n        return null;\n    }\n    changeUsageCount(style, delta) {\n        const map = this.styleRef;\n        if (map.has(style)) {\n            const styleRefValue = map.get(style);\n            styleRefValue.usage += delta;\n            return styleRefValue.usage;\n        }\n        map.set(style, { usage: delta, elements: [] });\n        return delta;\n    }\n    getStyleElement(host, style) {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        const styleEl = styleNodesInDOM?.get(style);\n        if (styleEl?.parentNode === host) {\n            // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n            styleNodesInDOM.delete(style);\n            styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // This attribute is solely used for debugging purposes.\n                styleEl.setAttribute('ng-style-reused', '');\n            }\n            return styleEl;\n        }\n        else {\n            const styleEl = this.doc.createElement('style');\n            if (this.nonce) {\n                styleEl.setAttribute('nonce', this.nonce);\n            }\n            styleEl.textContent = style;\n            if (this.platformIsServer) {\n                styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n            }\n            host.appendChild(styleEl);\n            return styleEl;\n        }\n    }\n    addStyleToHost(host, style) {\n        const styleEl = this.getStyleElement(host, style);\n        const styleRef = this.styleRef;\n        const styleElRef = styleRef.get(style)?.elements;\n        if (styleElRef) {\n            styleElRef.push(styleEl);\n        }\n        else {\n            styleRef.set(style, { elements: [styleEl], usage: 1 });\n        }\n    }\n    resetHostNodes() {\n        const hostNodes = this.hostNodes;\n        hostNodes.clear();\n        // Re-add the head element back since this is the default host.\n        hostNodes.add(this.doc.head);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: SharedStylesHost, deps: [{ token: DOCUMENT }, { token: APP_ID }, { token: CSP_NONCE, optional: true }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: SharedStylesHost }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken('RemoveStylesOnCompDestroy', {\n    providedIn: 'root',\n    factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT,\n});\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n    return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.ngZone = ngZone;\n        this.nonce = nonce;\n        this.rendererByCompId = new Map();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.defaultRenderer =\n            new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n            // Domino does not support shadow DOM.\n            type = { ...type, encapsulation: ViewEncapsulation.Emulated };\n        }\n        const renderer = this.getOrCreateRenderer(element, type);\n        // Renderers have different logic due to different encapsulation behaviours.\n        // Ex: for emulated, an attribute is added to the element.\n        if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n            renderer.applyToHost(element);\n        }\n        else if (renderer instanceof NoneEncapsulationDomRenderer) {\n            renderer.applyStyles();\n        }\n        return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n        const rendererByCompId = this.rendererByCompId;\n        let renderer = rendererByCompId.get(type.id);\n        if (!renderer) {\n            const doc = this.doc;\n            const ngZone = this.ngZone;\n            const eventManager = this.eventManager;\n            const sharedStylesHost = this.sharedStylesHost;\n            const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n            const platformIsServer = this.platformIsServer;\n            switch (type.encapsulation) {\n                case ViewEncapsulation.Emulated:\n                    renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n                    break;\n                case ViewEncapsulation.ShadowDom:\n                    return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n                default:\n                    renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer);\n                    break;\n            }\n            rendererByCompId.set(type.id, renderer);\n        }\n        return renderer;\n    }\n    ngOnDestroy() {\n        this.rendererByCompId.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: SharedStylesHost }, { token: APP_ID }, { token: REMOVE_STYLES_ON_COMPONENT_DESTROY }, { token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: CSP_NONCE }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomRendererFactory2 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: EventManager }, { type: SharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }] });\nclass DefaultDomRenderer2 {\n    constructor(eventManager, doc, ngZone, platformIsServer) {\n        this.eventManager = eventManager;\n        this.doc = doc;\n        this.ngZone = ngZone;\n        this.platformIsServer = platformIsServer;\n        this.data = Object.create(null);\n        /**\n         * By default this renderer throws when encountering synthetic properties\n         * This can be disabled for example by the AsyncAnimationRendererFactory\n         */\n        this.throwOnSyntheticProps = true;\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return this.doc.createElement(name);\n    }\n    createComment(value) {\n        return this.doc.createComment(value);\n    }\n    createText(value) {\n        return this.doc.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new ɵRuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            // removeProperty has no effect when used on camelCased properties.\n            el.style.removeProperty(style);\n        }\n        else {\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        if (el == null) {\n            return;\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps &&\n            checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n            if (!target) {\n                throw new Error(`Unsupported event target ${target} for event ${event}`);\n            }\n        }\n        return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n    }\n    decoratePreventDefault(eventHandler) {\n        // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n        // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n        // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n        // unwrap the listener (see below).\n        return (event) => {\n            // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n            // debug_node can inspect the listener toString contents for the existence of this special\n            // token. Because the token is a string literal, it is ensured to not be modified by compiled\n            // code.\n            if (event === '__ngUnwrap__') {\n                return eventHandler;\n            }\n            // Run the event handler inside the ngZone because event handlers are not patched\n            // by Zone on the server. This is required only for tests.\n            const allowDefaultBehavior = this.platformIsServer ?\n                this.ngZone.runGuarded(() => eventHandler(event)) :\n                eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                event.preventDefault();\n            }\n            return undefined;\n        };\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = shimStylesContent(component.id, component.styles);\n        for (const style of styles) {\n            const styleEl = document.createElement('style');\n            if (nonce) {\n                styleEl.setAttribute('nonce', nonce);\n            }\n            styleEl.textContent = style;\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n        this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n    }\n    applyStyles() {\n        this.sharedStylesHost.addStyles(this.styles);\n    }\n    destroy() {\n        if (!this.removeStylesOnCompDestroy) {\n            return;\n        }\n        this.sharedStylesHost.removeStyles(this.styles);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n    constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer) {\n        const compId = appId + '-' + component.id;\n        super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, compId);\n        this.contentAttr = shimContentAttribute(compId);\n        this.hostAttr = shimHostAttribute(compId);\n    }\n    applyToHost(element) {\n        this.applyStyles();\n        this.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\n\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomEventsPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        return keyName === 'esc' ? 'escape' : keyName;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: KeyEventsPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return ɵinternalCreateApplication({ rootComponent, ...createProvidersConfig(options) });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n    return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...(options?.providers ?? []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app\n    // code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken((typeof ngDevMode === 'undefined' || ngDevMode) ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: ɵTESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: ɵTESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    },\n    {\n        provide: Testability, // Also provide as `Testability` for backwards-compatibility.\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    DomRendererFactory2, SharedStylesHost, EventManager,\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    (typeof ngDevMode === 'undefined' || ngDevMode) ?\n        { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } :\n        []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n            throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     *\n     * @deprecated Use {@link APP_ID} instead to set the application ID.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: BrowserModule, providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS], imports: [CommonModule, ApplicationModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                }] }] });\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\nconst win = typeof window !== 'undefined' && window || {};\n\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerGestureConfig }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerGesturesPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }] });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\nclass HammerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerModule, providers: [\n            {\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: HammerGesturesPlugin,\n                multi: true,\n                deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n            },\n            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n        ] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(() => DomSanitizerImpl) }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n            default:\n                throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind;\n(function (HydrationFeatureKind) {\n    HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n    HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n})(HydrationFeatureKind || (HydrationFeatureKind = {}));\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n    return { ɵkind, ɵproviders };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n    // This feature has no providers and acts as a flag that turns off\n    // HTTP transfer cache (which otherwise is turned on by default).\n    return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts a an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * wether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n    // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n    return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, ɵwithHttpTransferCache(options));\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n    return [{\n            provide: ENVIRONMENT_INITIALIZER,\n            useValue: () => {\n                const ngZone = inject(NgZone);\n                // Checking `ngZone instanceof NgZone` would be insufficient here,\n                // because custom implementations might use NgZone as a base class.\n                if (ngZone.constructor !== NgZone) {\n                    const console = inject(ɵConsole);\n                    const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' +\n                        'that uses a custom or a noop Zone.js implementation. ' +\n                        'This is not yet a fully supported configuration.');\n                    // tslint:disable-next-line:no-console\n                    console.warn(message);\n                }\n            },\n            multi: true,\n        }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](/guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or configure features\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nfunction provideClientHydration(...features) {\n    const providers = [];\n    const featuresKind = new Set();\n    const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n    for (const { ɵproviders, ɵkind } of features) {\n        featuresKind.add(ɵkind);\n        if (ɵproviders.length) {\n            providers.push(ɵproviders);\n        }\n    }\n    if (typeof ngDevMode !== 'undefined' && ngDevMode &&\n        featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n        // TODO: Make this a runtime error\n        throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n    }\n    return makeEnvironmentProviders([\n        (typeof ngDevMode !== 'undefined' && ngDevMode) ? provideZoneJsCompatibilityDetector() : [],\n        ɵwithDomHydration(),\n        ((featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions) ?\n            [] :\n            ɵwithHttpTransferCache({})),\n        providers,\n    ]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('17.1.0');\n\n// Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nconst makeStateKey = makeStateKey$1;\n// The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\nconst TransferState = TransferState$1;\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withHttpTransferCacheOptions, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };\n"],"names":["i0","SecurityContext","Injectable","Optional","Inject","SkipSelf","ErrorHandler","InjectionToken","inject","booleanAttribute","Component","ViewEncapsulation","ChangeDetectionStrategy","Attribute","Input","NgModule","MatCommonModule","DOCUMENT","of","throwError","forkJoin","Subscription","tap","map","catchError","finalize","share","take","i1","HttpClient","i2","DomSanitizer","_c0","policy","getPolicy","undefined","window","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","getMatIconNameNotFoundError","iconName","Error","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","constructor","svgText","options","MatIconRegistry","_httpClient","_sanitizer","document","_errorHandler","_svgIconConfigs","Map","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","_document","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","push","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","classNames","set","classNameForFontAlias","get","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","pipe","svg","getNamedSvgIcon","name","key","iconKey","config","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","ngOnDestroy","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","filter","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","foundIcon","i","length","toString","indexOf","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","nodeName","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","appendChild","str","div","createElement","innerHTML","element","attributes","value","setAttribute","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","delete","configNamespace","svgElement","result","isSafeUrlWithOptions","_","ɵfac","MatIconRegistry_Factory","t","ɵɵinject","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","decorators","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","provide","deps","useFactory","MAT_ICON_DEFAULT_OPTIONS","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","join","funcIriPattern","MatIcon","color","_color","_defaultColor","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_elementRef","_iconRegistry","ariaHidden","defaults","inline","_previousFontSetClass","_currentIconFetch","EMPTY","nativeElement","_splitIconName","parts","split","ngOnInit","ngAfterViewChecked","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","unsubscribe","_usingFontIcon","_setSvgElement","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","remove","elem","fontSetClasses","className","forEach","classList","add","_previousFontIconClass","includes","trim","elements","attrs","elementsWithFuncIri","querySelectorAll","elementWithReference","getAttribute","match","rawName","_svgNamespace","_svgName","subscribe","MatIcon_Factory","ɵɵdirectiveInject","ElementRef","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","hostVars","hostBindings","MatIcon_HostBindings","rf","ctx","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","inputs","ɵɵInputFlags","HasDecoratorInputTransform","exportAs","standalone","features","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","template","MatIcon_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","selector","host","None","OnPush","transform","MatIconModule","MatIconModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","ɵglobal","ɵRuntimeError","APP_ID","CSP_NONCE","PLATFORM_ID","RendererStyleFlags2","ɵinternalCreateApplication","ɵsetDocument","PLATFORM_INITIALIZER","createPlatformFactory","platformCore","ɵTESTABILITY_GETTER","ɵTESTABILITY","Testability","NgZone","TestabilityRegistry","ɵINJECTOR_SCOPE","RendererFactory2","ApplicationModule","ApplicationRef","ɵConsole","forwardRef","ɵXSS_SECURITY_URL","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","Injector","ENVIRONMENT_INITIALIZER","ɵformatRuntimeError","makeEnvironmentProviders","ɵwithDomHydration","Version","makeStateKey","makeStateKey$1","TransferState","TransferState$1","ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","isPlatformServer","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","ɵwithHttpTransferCache","GenericBrowserDomAdapter","arguments","supportsDOMEvents","BrowserDomAdapter","makeCurrent","onAndCancel","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","node","parentNode","removeChild","tagName","doc","getDefaultDocument","createHtmlDocument","implementation","createHTMLDocument","isElementNode","Node","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","body","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","getCookie","cookie","URL","baseURI","BrowserGetTestability","addToWindow","registry","findInAncestors","testability","findTestabilityInTree","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","decrement","whenStable","getTestability","parentElement","BrowserXhr","build","XMLHttpRequest","BrowserXhr_Factory","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","plugin","manager","_plugins","slice","reverse","eventName","handler","_findPluginFor","getZone","find","supports","EventManager_Factory","EventManagerPlugin","_doc","APP_ID_ATTRIBUTE_NAME","SharedStylesHost","appId","nonce","platformId","styleRef","hostNodes","Set","styleNodesInDOM","collectServerRenderedStyles","platformIsServer","resetHostNodes","addStyles","style","usageCount","changeUsageCount","onStyleAdded","removeStyles","onStyleRemoved","getAllStyles","addHost","hostNode","addStyleToHost","removeHost","keys","head","styleMap","textContent","delta","has","styleRefValue","usage","getStyleElement","styleEl","styleElRef","SharedStylesHost_Factory","Document","NAMESPACE_URIS","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT","REMOVE_STYLES_ON_COMPONENT_DESTROY","shimContentAttribute","componentShortId","replace","shimHostAttribute","shimStylesContent","compId","DomRendererFactory2","eventManager","sharedStylesHost","removeStylesOnCompDestroy","ngZone","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","ShadowDom","Emulated","renderer","getOrCreateRenderer","EmulatedEncapsulationDomRenderer2","applyToHost","NoneEncapsulationDomRenderer","applyStyles","id","ShadowDomRenderer","DomRendererFactory2_Factory","Object","data","create","throwOnSyntheticProps","destroyNode","destroy","createElementNS","createComment","createText","createTextNode","parent","newChild","targetParent","isTemplateNode","content","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","addClass","removeClass","setStyle","flags","DashCase","Important","setProperty","removeStyle","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","event","decoratePreventDefault","eventHandler","allowDefaultBehavior","runGuarded","preventDefault","AT_CHARCODE","charCodeAt","nameKind","hostEl","component","shadowRoot","attachShadow","mode","nodeOrShadowRoot","contentAttr","hostAttr","DomEventsPlugin","DomEventsPlugin_Factory","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","runOutsideAngular","domEventName","shift","_normalizeKey","pop","fullKey","codeIX","splice","modifierName","index","matchEventFullKeyCode","fullKeyCode","keycode","code","modifierGetter","zone","keyName","KeyEventsPlugin_Factory","bootstrapApplication","rootComponent","createProvidersConfig","createApplication","appProviders","BROWSER_MODULE_PROVIDERS","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","useValue","multi","platformBrowser","BROWSER_MODULE_PROVIDERS_MARKER","useClass","useExisting","BrowserModule","providersAlreadyPresent","withServerTransition","params","ngModule","BrowserModule_Factory","createMeta","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","reduce","getTag","attrSelector","getTags","list","call","updateTag","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","_containsAttributes","getElementsByTagName","prop","_getMetaKeyMap","every","META_KEYS_MAP","Meta_Factory","r","httpEquiv","createTitle","Title","getTitle","title","setTitle","newTitle","Title_Factory","exportNgVar","COMPILED","ng","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","injector","timeChangeDetection","record","profileName","isProfilerAvailable","console","profile","start","performanceNow","tick","end","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","By","all","css","debugElement","elementMatches","directive","debugNode","providerTokens","n","matches","msMatchesSelector","webkitMatchesSelector","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","enable","HammerGestureConfig_Factory","HammerGesturesPlugin","_config","loader","_loaderPromise","hasOwnProperty","isCustomEvent","warn","cancelRegistration","deregister","then","catch","eventObj","on","off","HammerGesturesPlugin_Factory","HammerModule","HammerModule_Factory","DomSanitizer_Factory","DomSanitizerImpl","domSanitizerImplFactory","NONE","String","STYLE","SCRIPT","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizerImpl_Factory","HydrationFeatureKind","hydrationFeature","ɵkind","ɵproviders","ɵoptions","withNoHttpTransferCache","NoHttpTransferCache","withHttpTransferCacheOptions","HttpTransferCacheOptions","provideZoneJsCompatibilityDetector","provideClientHydration","featuresKind","hasHttpTransferCacheOptions","VERSION","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵSharedStylesHost","ɵinitDomAdapter"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}