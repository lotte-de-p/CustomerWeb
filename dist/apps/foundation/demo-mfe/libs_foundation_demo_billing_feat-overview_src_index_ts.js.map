{"version":3,"file":"libs_foundation_demo_billing_feat-overview_src_index_ts.js","mappings":"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","sources":["./libs/foundation/demo/billing/feat-overview/src/index.ts","./libs/foundation/demo/billing/feat-overview/src/lib/billing-overview-content/billing-overview-card-content/billing-overview-card-content.component.ts","./libs/foundation/demo/billing/feat-overview/src/lib/billing-overview-content/billing-overview-content.component.ts","./libs/foundation/demo/billing/feat-overview/src/lib/billing-overview.component.ts","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export { BillingOverviewComponent } from './lib/billing-overview.component';\n","import { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { Invoice, InvoiceStatus } from '@demo/billing/data-access';\nimport { DatePipe, NgIf } from '@angular/common';\nimport { ButtonComponent } from '@demo/billing/ui';\nimport { TgTranslateTestingModule } from '@telenet/ng-lib-page';\nimport { WinkButton } from '@telenet/wink-ng';\n\n@Component({\n  standalone: true,\n  selector: 'tg-demo-billing-overview-card-content',\n  imports: [DatePipe, NgIf, ButtonComponent, TgTranslateTestingModule, WinkButton],\n  styleUrls: ['./billing-overview-card-content.component.scss'],\n  template: `\n    <div class=\"pt--xxxs\" [attr.data-testid]=\"'invoice-card-content'\">\n      <div class=\"row mt--default--lg pl--xxxs\">\n        <div class=\"col--4\"></div>\n        <div class=\"col--18\">\n          <div class=\"mb--l\">\n            <p [attr.data-testid]=\"'invoice-description'\" style=\"white-space: pre-wrap\" class=\"text--m mb--m\">\n              {{ invoice.description }}\n            </p>\n            <div class=\"mt--default--lg text--m\">{{ 'ng.billing-overview.lbl.reception-date' | translate }}</div>\n            <div class=\"mb--default--lg text--m text-weight--g mb--m\">\n              {{ invoice.invoiceDate | date: 'dd/MM/yyyy' }}\n            </div>\n\n            <wink-button\n              *ngIf=\"showPayNowButton\"\n              text=\"{{ 'ng.billing-overview.lbl.pay-now' | translate }}\"\n              element=\"button\"\n              type=\"button\"\n              appearance=\"primary\"\n              size=\"sm\"\n              width=\"full\"\n              status=\"none\"\n              [attr.data-testid]=\"'invoice-open-file'\"\n              (click)=\"this.payInvoice.emit(invoice)\"\n              [attr.data-testid]=\"'invoice-pay-now'\"></wink-button>\n            <br />\n            <wink-button\n              *ngIf=\"invoice.openFileLink\"\n              text=\"{{ 'ng.billing-overview.lbl.open-file' | translate }}\"\n              element=\"button\"\n              type=\"button\"\n              appearance=\"secondary\"\n              size=\"sm\"\n              width=\"full\"\n              status=\"none\"\n              icon=\"map-search\"\n              icon-position=\"left\"\n              (click)=\"$event.stopPropagation()\"\n              [attr.data-testid]=\"'invoice-open-file'\">\n            </wink-button>\n          </div>\n          <div class=\"mb--l display--flex gap--m\"></div>\n        </div>\n        <div class=\"col--2\"></div>\n      </div>\n    </div>\n  `,\n})\nexport class BillingOverviewCardContentComponent implements OnChanges {\n  @Input() invoice: Invoice = {} as Invoice;\n  @Output() payInvoice = new EventEmitter<Invoice>();\n\n  showPayNowButton = false;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['invoice']) {\n      this.showPayNowButton = this.invoice.status !== InvoiceStatus.PAID;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Invoice, InvoiceStatus } from '@demo/billing/data-access';\nimport {\n  TableConfig,\n  Sorting,\n  BadgeColor,\n  TableHeaderComponent,\n  AccordionListComponent,\n  BadgeComponent,\n} from '@demo/billing/ui';\nimport { NgIf, DatePipe } from '@angular/common';\nimport { BillingOverviewCardContentComponent } from './billing-overview-card-content/billing-overview-card-content.component';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  standalone: true,\n  selector: 'tg-demo-billing-overview-content',\n  imports: [\n    TableHeaderComponent,\n    NgIf,\n    AccordionListComponent,\n    BadgeComponent,\n    DatePipe,\n    BillingOverviewCardContentComponent,\n    TranslateModule,\n  ],\n  styleUrls: ['./billing-overview-content.component.scss'],\n  template: `\n    <tg-demo-billing-table-header [config]=\"tableConfig\" (updateSorting)=\"onUpdateSorting($event)\">\n    </tg-demo-billing-table-header>\n    <div *ngIf=\"!displayItems()\" class=\"text-align--center\">There are no invoices available.</div>\n    <tg-demo-accordion-list\n      [expanded]=\"expanded\"\n      *ngIf=\"displayItems()\"\n      [items]=\"invoicesToShow\"\n      [accordionHeaderRef]=\"headerTemplateRef\"\n      rendition=\"panel\"\n      [accordionContentRef]=\"contentTemplateRef\"\n      [attr.data-testid]=\"'billing-panel'\">\n      <ng-template #headerTemplateRef let-invoice>\n        <div class=\"col--4\">\n          <tg-demo-badge\n            [content]=\"'ng.billing-overview.lbl.' + invoice.status | translate\"\n            [color]=\"getStatusBadgeColor(invoice.status)\"\n            [attr.data-testid]=\"'invoice-status'\"></tg-demo-badge>\n        </div>\n        <div class=\"col--4\">\n          <span class=\"text-weight--g\" [attr.data-testid]=\"'invoice-amount'\">€ {{ invoice.amount }}</span>\n        </div>\n        <div class=\"col--11 display--flex flex-direction--column align-items--start justify-content--start\">\n          <p class=\"heading--nomargin text-align--left text-s text-flow--h6\" [attr.data-testid]=\"'invoice-id'\">\n            {{ invoice.id }}\n          </p>\n          <p class=\"color-grey text--xs text-align--left\" [attr.data-testid]=\"'invoice-companyName'\">\n            {{ invoice.companyName }}\n          </p>\n        </div>\n        <div class=\"col--4\">\n          <span class=\"text--s\" [attr.data-testid]=\"'invoice-expiration-date'\">{{\n            invoice.expirationDate | date: 'dd/MM/yyyy'\n          }}</span>\n        </div>\n      </ng-template>\n\n      <ng-template #contentTemplateRef let-invoice>\n        <tg-demo-billing-overview-card-content\n          [invoice]=\"invoice\"\n          (payInvoice)=\"payInvoice.emit($event)\"></tg-demo-billing-overview-card-content>\n      </ng-template>\n    </tg-demo-accordion-list>\n  `,\n})\nexport class BillingOverviewContentComponent implements OnInit, OnChanges {\n  @Input() invoices: Invoice[] = [];\n  @Input() expanded = false;\n  @Output() updateSorting: EventEmitter<Sorting<Invoice>> = new EventEmitter<Sorting<Invoice>>();\n  @Output() payInvoice: EventEmitter<Invoice> = new EventEmitter<Invoice>();\n\n  readonly tableConfig: TableConfig<Invoice> = {\n    columns: [\n      {\n        property: 'status',\n        translation: 'ng.billing-overview.lbl.',\n        sortable: true,\n        sorting: { default: true, order: 'asc' },\n        cols: 4,\n      },\n      { property: 'amount', sortable: false, cols: 4 },\n      { property: 'id', sortable: false, cols: 11 },\n      { property: 'expirationDate', sortable: true, cols: 4 },\n    ],\n    component: 'billing-overview',\n  };\n\n  totalAmountOfPages = 0;\n  pageNumber = 1;\n  invoicesToShow: Invoice[] = [];\n\n  ngOnInit() {\n    this.navigateToPage(this.pageNumber);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes) {\n      this.navigateToPage(this.pageNumber);\n    }\n  }\n\n  displayItems(): boolean {\n    return this.invoices.length > 0;\n  }\n\n  navigateToPage(pageNumber: number): void {\n    this.pageNumber = pageNumber;\n    this.populateDataTable(this.invoices);\n  }\n\n  getStatusBadgeColor(invoiceStatus: InvoiceStatus): BadgeColor {\n    let badgeColor: BadgeColor;\n    switch (invoiceStatus) {\n      case 'paid':\n        badgeColor = 'yellow';\n        break;\n      case 'overdue':\n        badgeColor = 'darkBrown';\n        break;\n      default:\n        badgeColor = 'lemon';\n        break;\n    }\n    return badgeColor;\n  }\n\n  onUpdateSorting(sorting: Sorting<Invoice>): void {\n    this.updateSorting.emit(sorting);\n  }\n\n  private populateDataTable(invoices: Invoice[]): void {\n    this.totalAmountOfPages = this.calculateTotalAmountOfPages(10, invoices.length);\n    this.createPage(10, this.pageNumber);\n  }\n\n  private createPage(pageSize: number, pageNumber: number): void {\n    const start = this.calculatePageStartIndex(pageSize, pageNumber);\n    const end = this.calculatePageEndIndex(pageSize, pageNumber);\n    this.invoicesToShow = this.invoices.slice(start, end);\n  }\n\n  private calculatePageStartIndex(pageSize: number, pageNumber: number): number {\n    return (pageNumber - 1) * pageSize;\n  }\n\n  private calculatePageEndIndex(pageSize: number, pageNumber: number): number {\n    return pageNumber * pageSize;\n  }\n\n  private calculateTotalAmountOfPages(pageSize: number, amountOfEntries: number): number {\n    return Math.ceil(amountOfEntries / pageSize);\n  }\n}\n","import { Component, inject, Input, OnInit } from '@angular/core';\nimport { AccordionListComponent } from '@demo/billing/ui';\nimport { BillingFacade, Invoice } from '@demo/billing/data-access';\nimport { AsyncPipe, JsonPipe } from '@angular/common';\nimport { BillingOverviewContentComponent } from './billing-overview-content/billing-overview-content.component';\n\n@Component({\n  standalone: true,\n  imports: [AccordionListComponent, AsyncPipe, JsonPipe, BillingOverviewContentComponent],\n  template: `\n    <h1>{{ title }}</h1>\n    <tg-demo-billing-overview-content\n      [invoices]=\"invoices()!\"\n      [expanded]=\"expanded\"\n      (payInvoice)=\"payInvoice($event)\"></tg-demo-billing-overview-content>\n  `,\n})\nexport class BillingOverviewComponent implements OnInit {\n  private readonly billingFacade: BillingFacade = inject(BillingFacade);\n\n  @Input() expanded = false;\n  @Input() title = '';\n\n  protected invoices = this.billingFacade.invoices;\n\n  async ngOnInit(): Promise<void> {\n    await this.billingFacade.loadInvoices();\n  }\n\n  payInvoice(invoice: Invoice): void {\n    this.billingFacade.payInvoice(invoice);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["BillingOverviewComponent","SimpleChanges","EventEmitter","InvoiceStatus","DatePipe","NgIf","TgTranslateTestingModule","WinkButton","i0","ɵɵelementStart","ɵɵlistener","BillingOverviewCardContentComponent_wink_button_13_Template_wink_button_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","payInvoice","emit","invoice","ɵɵelementEnd","ɵɵpropertyInterpolate","ɵɵpipeBind1","ɵɵattribute","BillingOverviewCardContentComponent_wink_button_15_Template_wink_button_click_0_listener","$event","stopPropagation","BillingOverviewCardContentComponent","constructor","showPayNowButton","ngOnChanges","changes","status","PAID","_","_2","selectors","inputs","outputs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","BillingOverviewCardContentComponent_Template","rf","ctx","ɵɵelement","ɵɵtext","ɵɵtemplate","BillingOverviewCardContentComponent_wink_button_13_Template","BillingOverviewCardContentComponent_wink_button_15_Template","ɵɵadvance","ɵɵtextInterpolate1","description","ɵɵtextInterpolate","ɵɵpipeBind2","invoiceDate","ɵɵproperty","openFileLink","i1","TranslatePipe","styles","TableHeaderComponent","AccordionListComponent","BadgeComponent","TranslateModule","invoice_r6","getStatusBadgeColor","amount","id","companyName","expirationDate","BillingOverviewContentComponent_tg_demo_accordion_list_2_ng_template_3_Template_tg_demo_billing_overview_card_content_payInvoice_0_listener","_r9","ctx_r8","invoice_r7","BillingOverviewContentComponent_tg_demo_accordion_list_2_ng_template_1_Template","ɵɵtemplateRefExtractor","BillingOverviewContentComponent_tg_demo_accordion_list_2_ng_template_3_Template","ctx_r1","expanded","invoicesToShow","_r5","BillingOverviewContentComponent","invoices","updateSorting","tableConfig","columns","property","translation","sortable","sorting","default","order","cols","component","totalAmountOfPages","pageNumber","ngOnInit","navigateToPage","displayItems","length","populateDataTable","invoiceStatus","badgeColor","onUpdateSorting","calculateTotalAmountOfPages","createPage","pageSize","start","calculatePageStartIndex","end","calculatePageEndIndex","slice","amountOfEntries","Math","ceil","BillingOverviewContentComponent_Template","BillingOverviewContentComponent_Template_tg_demo_billing_table_header_updateSorting_0_listener","BillingOverviewContentComponent_div_1_Template","BillingOverviewContentComponent_tg_demo_accordion_list_2_Template","inject","BillingFacade","billingFacade","title","_this","_asyncToGenerator","loadInvoices","BillingOverviewComponent_Template","BillingOverviewComponent_Template_tg_demo_billing_overview_content_payInvoice_2_listener","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[4]}