{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-radio-button_entry_js.js","mappings":";;;;;;;;;;;;MAAaA,oBAAoB,GAAG;EAClCC,OAAO,EAAE,SAAS;EAClBC,YAAY,EAAE;;;;;;;;;;;;;;;;;;;;ACFhB,MAAMC,kBAAkB,GAAG,sgIAAsgI;AACjiI,MAAAC,yBAAA,GAAeD,kBAAkB;ACDjC,MAAME,qBAAqB,GAAG,8qIAA8qI;AAC5sI,MAAAC,4BAAA,GAAeD,qBAAqB;MCUvBE,WAAW;;;iBAKN,EAAE;kBACD,EAAE;yBACK,EAAE;gBACX,EAAE;mBACkB,KAAK;oBACrB,KAAK;iBACR,KAAK;;EAVFC,SAAS;;;;EAYXC,aAAa,GAAIC,CAAkB;IAClD,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrB,IAAI,CAACC,IAAI,EAAEC,aAAa,CAAC,OAAO,CAAC,EAAEC,KAAK,EAAE;;GAE7C;EAEDC,MAAMA,CAAA;IACJ,OACEC,qDAAA;MAAAL,GAAA;IAAA,GACEK,qDAAA;MAAAL,GAAA;MACEM,IAAI,EAAC,OAAO;MACZC,EAAE,EAAE,IAAI,CAACC,aAAa;MACtBC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,KAAK,EAAE,IAAI,CAACC,KAAK;MACjBC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAA,gBACT,IAAI,CAACC,KAAK;MACxBC,SAAS,EAAE,IAAI,CAACjB;IAAa,EAC7B,EACFO,qDAAA;MAAAL,GAAA;MAAiBW,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEK,MAAM,EAAE,IAAI,CAACA,MAAM;MAAEC,SAAS,EAAE5B,4DAAoB,CAACE;IAAY,EAAI,CACnG","sources":["./libs/foundation/wink/dist/dist/core/src/components/_form-components/form-label/models/form-label.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/_form-components/radio-button/styles/brands/radio-button.base.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/radio-button/styles/brands/radio-button.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/radio-button/radio-button.tsx"],"sourcesContent":["export const FORM_LABEL_RENDITION = {\n  default: 'default',\n  subComponent: 'subComponent',\n} as const;\nexport type FormLabelRendition = (typeof FORM_LABEL_RENDITION)[keyof typeof FORM_LABEL_RENDITION];\n","@import '../vars/vars.base';\n@import '../radio-button.default';\n","@import '../vars/vars.telenet';\n@import '../radio-button.default';\n","import { AttachInternals, Component, Element, h, Prop } from '@stencil/core';\nimport { FORM_LABEL_RENDITION } from '../form-label/models/form-label.types';\n\n@Component({\n  tag: 'wink-radio-button',\n  styleUrls: {\n    telenet: 'styles/brands/radio-button.telenet.scss',\n    base: 'styles/brands/radio-button.base.scss',\n  },\n  scoped: true,\n})\nexport class RadioButton {\n  @AttachInternals() internals!: ElementInternals;\n\n  @Element() host!: HTMLWinkRadioButtonElement;\n\n  @Prop() label = '';\n  @Prop() helper = '';\n  @Prop() radioButtonId = '';\n  @Prop() name = '';\n  @Prop({ reflect: true }) checked = false;\n  @Prop() disabled = false;\n  @Prop() error = false;\n\n  private readonly handleKeyDown = (e: { key: string }) => {\n    if (e.key === 'Enter') {\n      this.host?.querySelector('input')?.click();\n    }\n  };\n\n  render() {\n    return (\n      <label>\n        <input\n          type=\"radio\"\n          id={this.radioButtonId}\n          name={this.name}\n          value={this.label}\n          checked={this.checked}\n          disabled={this.disabled}\n          aria-invalid={this.error}\n          onKeyDown={this.handleKeyDown}\n        />\n        <wink-form-label label={this.label} helper={this.helper} rendition={FORM_LABEL_RENDITION.subComponent} />\n      </label>\n    );\n  }\n}\n"],"names":["FORM_LABEL_RENDITION","default","subComponent","radioButtonBaseCss","WinkRadioButtonBaseStyle0","radioButtonTelenetCss","WinkRadioButtonTelenetStyle0","RadioButton","internals","handleKeyDown","e","key","host","querySelector","click","render","h","type","id","radioButtonId","name","value","label","checked","disabled","error","onKeyDown","helper","rendition"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}