{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-check-box-group_entry_js.js","mappings":";;;;;;;;;;;;;MAAaA,oBAAoB,GAAG;EAClCC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE;;MAIIC,UAAU,GAAG;EACxBC,UAAU,EAAE,YAAY;EACxBC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;ACTZ,MAAMC,oBAAoB,GAAG,opCAAopC;AACjrC,MAAAC,2BAAA,GAAeD,oBAAoB;ACDnC,MAAME,uBAAuB,GAAG,isCAAisC;AACjuC,MAAAC,8BAAA,GAAeD,uBAAuB;MCUzBE,aAAa;;;iBAGR,EAAE;kBACD,EAAE;qBACaP,2DAAU,CAACE,QAAQ;;sBAE9B,KAAK;wBACH,WAAW;;EAPfM,SAAS;EAUtBC,aAAaA,CAACC,QAAiB;IAAA,IAAAC,KAAA;IAAA,OAAAC,2JAAA;MACnC,IAAIF,QAAQ,EAAE;QACZC,KAAI,CAACE,KAAK,GAAGH,QAAQ;OACtB,MAAM;QACLC,KAAI,CAACE,KAAK,GAAG,EAAE;;IAChB;;EAGHC,MAAMA,CAAA;IACJ,OACEC,qDAAA;MAAAC,GAAA;IAAA,GACED,qDAAA;MAAAC,GAAA;MAAQC,KAAK,EAAC;IAA0B,GACtCF,qDAAA;MAAAC,GAAA;MACEE,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,MAAM,EAAE,IAAI,CAACA,MAAM;MAAA,iBACJ,CAAC,IAAI,CAACC,UAAU;MAAA,iBAChB,IAAI,CAACC;IAAY,EAChC,CACK,EACTN,qDAAA;MAAAC,GAAA;MAAKC,KAAK,EAAE,oBAAoB,IAAI,CAACK,SAAS;IAAE,GAC9CP,qDAAA;MAAAC,GAAA;IAAA,EAAQ,CACJ,EACL,IAAI,CAACH,KAAK,IAAIE,qDAAA;MAAyBQ,OAAO,EAAE,IAAI,CAACV,KAAK;MAAEW,IAAI,EAAC;IAAO,EAAG,CACnE","sources":["./libs/foundation/wink/dist/dist/core/src/models/positions.types.ts","./libs/foundation/wink/dist/dist/core/src/components/_form-components/check-box/_sub-comps/check-box-group/styles/brands/check-box-group.base.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/check-box/_sub-comps/check-box-group/styles/brands/check-box-group.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/_form-components/check-box/_sub-comps/check-box-group/check-box-group.tsx"],"sourcesContent":["export const POSITIONS_HORIZONTAL = {\n  left: 'left',\n  center: 'center',\n  right: 'right',\n} as const;\nexport type PositionHorizontal = (typeof POSITIONS_HORIZONTAL)[keyof typeof POSITIONS_HORIZONTAL];\n\nexport const DIRECTIONS = {\n  horizontal: 'horizontal',\n  vertical: 'vertical',\n} as const;\n\nexport type Directions = (typeof DIRECTIONS)[keyof typeof DIRECTIONS];\n","@import '../vars/vars.base';\n@import '../check-box-group.default';\n","@import '../vars/vars.telenet';\n@import '../check-box-group.default';\n","import { AttachInternals, Component, h, Prop, Method } from '@stencil/core';\nimport { Directions, DIRECTIONS } from '../../../../../models/positions.types';\n\n@Component({\n  tag: 'wink-check-box-group',\n  styleUrls: {\n    telenet: 'styles/brands/check-box-group.telenet.scss',\n    base: 'styles/brands/check-box-group.base.scss',\n  },\n  scoped: true,\n})\nexport class CheckBoxGroup {\n  @AttachInternals() internals!: ElementInternals;\n\n  @Prop() label = '';\n  @Prop() helper = '';\n  @Prop() direction: Directions = DIRECTIONS.vertical;\n  @Prop({ reflect: true, mutable: true }) error?: string;\n  @Prop() isRequired = false;\n  @Prop() optionalText = 'Optioneel';\n\n  @Method()\n  async setValidation(errorMsg?: string) {\n    if (errorMsg) {\n      this.error = errorMsg;\n    } else {\n      this.error = '';\n    }\n  }\n\n  render() {\n    return (\n      <fieldset>\n        <legend class=\"check-box-group__wrapper\">\n          <wink-form-label\n            label={this.label}\n            helper={this.helper}\n            show-optional={!this.isRequired}\n            optional-text={this.optionalText}\n          />\n        </legend>\n        <div class={`check-box-group--${this.direction}`}>\n          <slot />\n        </div>\n        {this.error && <wink-validation-message message={this.error} type=\"error\" />}\n      </fieldset>\n    );\n  }\n}\n"],"names":["POSITIONS_HORIZONTAL","left","center","right","DIRECTIONS","horizontal","vertical","checkBoxGroupBaseCss","WinkCheckBoxGroupBaseStyle0","checkBoxGroupTelenetCss","WinkCheckBoxGroupTelenetStyle0","CheckBoxGroup","internals","setValidation","errorMsg","_this","_asyncToGenerator","error","render","h","key","class","label","helper","isRequired","optionalText","direction","message","type"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}