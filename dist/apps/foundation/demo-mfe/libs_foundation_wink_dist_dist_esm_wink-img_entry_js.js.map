{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-img_entry_js.js","mappings":";;;;;;;;;;;;MAAaA,WAAW,GAAG;EACzBC,MAAM,EAAE,oBAAoB;EAC5BC,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;ACFH,MAAMC,aAAa,GAAG;EAC3BC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;CACC;ACHV,MAAMC,YAAY,GAAG,oNAAoN;AACzO,MAAAC,iBAAA,GAAeD,YAAY;ACD3B,MAAME,eAAe,GAAG,oNAAoN;AAC5O,MAAAC,oBAAA,GAAeD,eAAe;MCWjBE,KAAK;;;sBACsB,EAAE;;;;mBAITP,aAAa,CAACC,IAAI;;EAEjDO,MAAMA,CAAA;IACJ,MAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,EAAEC,MAAM,GAAG,CAAC,IAAI,IAAI,CAACC,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,YAAYC,MAAM,CAACC,QAAQ,CAACC,IAAI,EAAE;IACvG,OACEC,qDAAA,CAACC,iDAAI;MAAAC,GAAA;IAAA,GACF,IAAI,CAACR,UAAU,GACdM,qDAAA,kBACG,IAAI,CAACG,SAAS,IAAIH,qDAAA;MAAQI,MAAM,EAAE,IAAI,CAACD,SAAS;MAAEE,KAAK,EAAExB,6DAAW,CAACC;IAAM,EAAI,EAC/E,IAAI,CAACwB,SAAS,IAAIN,qDAAA;MAAQI,MAAM,EAAE,IAAI,CAACE,SAAS;MAAED,KAAK,EAAExB,6DAAW,CAACE;IAAM,EAAI,EAChFiB,qDAAA;MAAKO,GAAG,EAAE,IAAI,CAACb,UAAU;MAAEE,GAAG,EAAEH,OAAO;MAAEe,OAAO,EAAE,IAAI,CAACA;IAAO,EAAI,CAC1D,GAEVR,qDAAA,8BACD,CACI","sources":["./libs/foundation/wink/dist/dist/core/src/models/breakpoints.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/image/models/image.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/image/styles/brands/image.base.scss","./libs/foundation/wink/dist/dist/core/src/components/image/styles/brands/image.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/image/image.tsx"],"sourcesContent":["export const BREAKPOINTS = {\n  mobile: '(max-width: 576px)',\n  tablet: '(max-width: 769px)',\n};\n","export const LOADING_TYPES = {\n  lazy: 'lazy',\n  eager: 'eager',\n} as const;\nexport type LoadingType = (typeof LOADING_TYPES)[keyof typeof LOADING_TYPES];\n","@import '../vars/vars.base';\n@import '../image.default';\n","@import '../vars/vars.telenet';\n@import '../image.default';\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { LOADING_TYPES, LoadingType } from './models/image.types';\nimport { BREAKPOINTS } from '../../models/breakpoints.types';\n\n@Component({\n  tag: 'wink-img',\n  styleUrls: {\n    telenet: 'styles/brands/image.telenet.scss',\n    base: 'styles/brands/image.base.scss',\n  },\n  shadow: true,\n})\nexport class Image {\n  @Prop({ reflect: true }) srcDesktop = '';\n  @Prop() srcTablet?: string;\n  @Prop() srcMobile?: string;\n  @Prop() alt?: string;\n  @Prop() loading: LoadingType = LOADING_TYPES.lazy;\n\n  render() {\n    const altText = this.srcDesktop?.length > 0 && this.alt ? this.alt : `Image of ${window.location.host}`;\n    return (\n      <Host>\n        {this.srcDesktop ? (\n          <picture>\n            {this.srcMobile && <source srcSet={this.srcMobile} media={BREAKPOINTS.mobile} />}\n            {this.srcTablet && <source srcSet={this.srcTablet} media={BREAKPOINTS.tablet} />}\n            <img src={this.srcDesktop} alt={altText} loading={this.loading} />\n          </picture>\n        ) : (\n          <p>Please set src </p>\n        )}\n      </Host>\n    );\n  }\n}\n"],"names":["BREAKPOINTS","mobile","tablet","LOADING_TYPES","lazy","eager","imageBaseCss","WinkImgBaseStyle0","imageTelenetCss","WinkImgTelenetStyle0","Image","render","altText","srcDesktop","length","alt","window","location","host","h","Host","key","srcMobile","srcSet","media","srcTablet","src","loading"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}