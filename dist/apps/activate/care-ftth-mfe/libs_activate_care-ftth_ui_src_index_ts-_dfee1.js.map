{"version":3,"file":"libs_activate_care-ftth_ui_src_index_ts-_dfee1.js","mappings":"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","sources":["./libs/activate/care-ftth/ui/src/index.ts","./libs/activate/care-ftth/ui/src/lib/address-viewer/address-viewer.component.ts","./libs/activate/care-ftth/ui/src/lib/address-viewer/address-viewer.component.html","./libs/activate/care-ftth/ui/src/lib/box-number-input-field/box-number-input-field.component.ts","./libs/activate/care-ftth/ui/src/lib/box-number-input-field/box-number-input-field.component.html","./libs/activate/care-ftth/ui/src/lib/house-number-input-field/house-number-input-field.component.ts","./libs/activate/care-ftth/ui/src/lib/house-number-input-field/house-number-input-field.component.html","./libs/activate/care-ftth/ui/src/lib/street-input-field/street-input-field.component.ts","./libs/activate/care-ftth/ui/src/lib/street-input-field/street-input-field.component.html","./libs/activate/care-ftth/ui/src/lib/zipcode-input-field/zipcode-input-field.component.ts","./libs/activate/care-ftth/ui/src/lib/zipcode-input-field/zipcode-input-field.component.html"],"sourcesContent":["export * from './lib/address-viewer/address-viewer.component';\nexport * from './lib/zipcode-input-field/zipcode-input-field.component';\nexport * from './lib/box-number-input-field/box-number-input-field.component';\nexport * from './lib/street-input-field/street-input-field.component';\nexport * from './lib/house-number-input-field/house-number-input-field.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddressInterface } from '@care-ftth/data-access';\n\n@Component({\n  selector: 'tg-address-viewer',\n  templateUrl: 'address-viewer.component.html',\n  standalone: true,\n  imports: [CommonModule, TranslateModule],\n})\nexport class AddressViewerComponent {\n  @Input() address: AddressInterface;\n  @Input() messageGroupName: string;\n  @Output() edit = new EventEmitter<string>();\n\n  editAddress() {\n    this.edit.emit(this.address.addressGeoId);\n  }\n}\n","<div *ngIf=\"address\" class=\"user-input-options\">\n  <div class=\"cards mt--m border-color--all--mid-grey border-width--all--r border-style--all--solid\">\n    <div class=\"cards--append cards--container p--m\">\n      <div class=\"cards--body\">\n        <div class=\"cards--body--inner-container\">\n          <div class=\"cards-content__body\">\n            <div class=\"text-flow text-flow--button cards-content__body-label\">\n              <div class=\"row vertical-align-content\">\n                <div class=\"col-md-1 col-1 p--n\">\n                  <i class=\"color-text heading--3 icon icon-locations icon-md mr--s\"></i>\n                </div>\n                <div class=\"col-md-8 col-7 p--n\">\n                  <h5 class=\"text-flow--text heading--nomargin\">\n                    {{ address.street }} {{ address.houseNumber }}{{ address.subHouseNumber ?? ' ' }}\n                  </h5>\n                  <span class=\"text-flow--text color-shade_24\">\n                    {{ address.zipcode }}, {{ address.subMunicipality }}\n                  </span>\n                </div>\n                <div\n                  class=\"col-md-3 col-4 cur-pointer p--n text-align--center\"\n                  id=\"editAddress\"\n                  (click)=\"editAddress()\">\n                  <i class=\"color-text heading--3 icon icon-edit icon-md mr--s--md\"></i>\n                  <span class=\"link\">{{ 'ng.' + messageGroupName + '.lbl.edit' | translate }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\n\n@UntilDestroy()\n@Component({\n  selector: 'tg-box-number-input-field',\n  templateUrl: './box-number-input-field.component.html',\n  standalone: true,\n  providers: [],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    HttpClientModule,\n    TranslateModule,\n  ],\n})\nexport class BoxNumberInputFieldComponent implements ControlValueAccessor {\n  @Input() messageGroup: string;\n\n  constructor(@Self() @Optional() public controls?: NgControl) {\n    if (this.controls) {\n      this.controls.valueAccessor = this;\n    }\n  }\n\n  get formControl(): FormControl {\n    return this.controls?.control as FormControl;\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  onChange: (value: string) => void = (value) => {\n    this.controls?.control?.setValue(value);\n  };\n\n  writeValue(_obj: unknown): void {\n    // empty implementation\n  }\n\n  onTouched: () => void = () => {\n    // empty implementation\n  };\n}\n","<div class=\"input-v2--wrapper mb--m\">\n  <label for=\"new-bn\" id=\"boxNumber:Label\" class=\"label-v2\">\n    <div class=\"label-v2__label\">\n      <div [ngClass]=\"{ 'label-v2--disabled': controls?.disabled }\" class=\"font--caption cur-default my--xxxs\">\n        {{ 'ng.' + messageGroup + '.lbl.box-number' | translate }}\n      </div>\n    </div>\n  </label>\n  <div class=\"display--flex width--full\">\n    <input\n      id=\"new-bn\"\n      type=\"text\"\n      [formControl]=\"formControl\"\n      aria-describedby=\"boxNumber:Helper boxNumber:Error\"\n      class=\"input-v2\"\n      autocomplete=\"off\" />\n  </div>\n</div>\n<div\n  class=\"formErrorInput text-align--left\"\n  *ngIf=\"controls?.touched && (controls?.hasError('pattern') || controls?.hasError('invalid'))\">\n  <div>{{ 'ng.' + messageGroup + '.boxNumber-pattern.error' | translate }}</div>\n</div>\n","import { Component, inject, Input, OnInit, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { debounceTime, distinctUntilChanged, filter, switchMap, tap } from 'rxjs/operators';\nimport { FiberAddressCheckerEnum, FiberAddressCheckerService, NumberSuggestions } from '@care-ftth/data-access';\nimport { map, Observable, of } from 'rxjs';\n\n@UntilDestroy()\n@Component({\n  selector: 'tg-house-number-input-field',\n  templateUrl: './house-number-input-field.component.html',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    HttpClientModule,\n    TranslateModule,\n  ],\n})\nexport class HouseNumberInputFieldComponent implements OnInit, ControlValueAccessor {\n  private readonly addressCheckerService: FiberAddressCheckerService = inject(FiberAddressCheckerService);\n  @Input() messageGroup: string;\n  @Input() geoId: string;\n  @Input() street: string;\n  suggestions$: Observable<NumberSuggestions[]>;\n\n  constructor(@Self() @Optional() public controls: NgControl) {\n    if (this.controls) {\n      this.controls.valueAccessor = this;\n    }\n  }\n\n  get formControl(): FormControl {\n    return this.controls?.control as FormControl;\n  }\n\n  ngOnInit(): void {\n    this.suggestions$ = this.formControl?.valueChanges?.pipe(\n      untilDestroyed(this),\n      distinctUntilChanged(),\n      debounceTime(500),\n      filter((inputValue) => typeof inputValue === 'string'),\n      switchMap((inputValue) => this.#getNumberSuggestions(inputValue)),\n      tap(({ suggestions, inputValue }) => this.#presetValueWhenSuggestionExists(suggestions, inputValue)),\n      map(({ suggestions }) => suggestions)\n    );\n  }\n\n  #getNumberSuggestions(inputValue: string) {\n    if (!inputValue) {\n      return of({ suggestions: [], inputValue });\n    }\n\n    return this.addressCheckerService\n      .getSuggestionsForNumber(FiberAddressCheckerEnum.MESSAGE_GROUP, inputValue, this.street, this.geoId)\n      .pipe(\n        untilDestroyed(this),\n        map((suggestions) => ({ suggestions, inputValue }))\n      );\n  }\n\n  #presetValueWhenSuggestionExists(numberSuggestions: NumberSuggestions[], value: string): void {\n    const numberSuggestion = numberSuggestions.find((suggestion) => suggestion.houseNumber === value);\n    if (numberSuggestion) {\n      this.formControl?.setValue(numberSuggestion);\n    }\n  }\n\n  formattedNumber = (houseNumber: NumberSuggestions): string => {\n    if (!houseNumber) {\n      return '';\n    }\n    return houseNumber.houseNumber;\n  };\n\n  registerOnChange(fn: (value: string | NumberSuggestions) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(_obj: unknown): void {\n    // empty implementation\n  }\n\n  onChange: (value: NumberSuggestions) => void = () => {\n    // empty implementation\n  };\n\n  onTouched: () => void = () => {\n    // empty implementation\n  };\n}\n","<div class=\"input-v2--wrapper mb--m\">\n  <label for=\"new-hn\" id=\"houseNumber:Label\" class=\"label-v2\">\n    <div class=\"label-v2__label\">\n      <div [ngClass]=\"{ 'label-v2--disabled': controls.disabled }\" class=\"font--caption cur-default my--xxxs\">\n        {{ 'ng.' + messageGroup + '.lbl.house-number' | translate }}\n      </div>\n    </div>\n  </label>\n  <div class=\"display--flex width--full\">\n    <input\n      id=\"new-hn\"\n      type=\"text\"\n      aria-describedby=\"houseNumber:Helper houseNumber:Error\"\n      class=\"input-v2\"\n      [formControl]=\"formControl\"\n      [matAutocomplete]=\"houseNumberList\"\n      autocomplete=\"off\" />\n    <mat-autocomplete #houseNumberList=\"matAutocomplete\" [autoActiveFirstOption]=\"true\" [displayWith]=\"formattedNumber\">\n      <mat-option *ngFor=\"let suggestion of suggestions$ | async\" [value]=\"suggestion\">\n        {{ suggestion.houseNumber }}\n      </mat-option>\n    </mat-autocomplete>\n  </div>\n</div>\n<div class=\"formErrorInput text-align--left\" *ngIf=\"controls.touched && controls.hasError('required')\">\n  {{ 'ng.' + messageGroup + '.error.houseNumber.required' | translate }}\n</div>\n","import { Component, inject, Input, OnInit, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { FiberAddressCheckerEnum, FiberAddressCheckerService } from '@care-ftth/data-access';\nimport { Observable, of } from 'rxjs';\n\n@UntilDestroy()\n@Component({\n  selector: 'tg-street-input-field',\n  templateUrl: './street-input-field.component.html',\n  standalone: true,\n  providers: [],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    HttpClientModule,\n    TranslateModule,\n  ],\n})\nexport class StreetInputFieldComponent implements OnInit, ControlValueAccessor {\n  private readonly MINIMUM_WORD_LENGTH_TO_SEARCH = 2;\n  @Input() messageGroup: string;\n  @Input() geoId: string;\n  private readonly addressCheckerService: FiberAddressCheckerService = inject(FiberAddressCheckerService);\n  suggestions$: Observable<string[]>;\n\n  get formControl(): FormControl {\n    return this.controls?.control as FormControl;\n  }\n\n  constructor(@Self() @Optional() public controls: NgControl) {\n    if (this.controls) {\n      this.controls.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    this.suggestions$ = this.formControl?.valueChanges?.pipe(\n      untilDestroyed(this),\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((value) => {\n        if (value?.length < this.MINIMUM_WORD_LENGTH_TO_SEARCH) {\n          return of([]);\n        }\n\n        return this.addressCheckerService.getSuggestionsForStreet(\n          FiberAddressCheckerEnum.MESSAGE_GROUP,\n          value,\n          this.geoId\n        );\n      })\n    );\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  onChange: (value: string) => void = () => {\n    // empty implementation\n  };\n\n  onTouched: () => void = () => {\n    // empty implementation\n  };\n\n  writeValue(_obj: unknown): void {\n    // empty implementation\n  }\n}\n","<div class=\"input-v2--wrapper mb--m\">\n  <label for=\"new-as\" id=\"street:Label\" class=\"label-v2\">\n    <div class=\"label-v2__label\">\n      <div [ngClass]=\"{ 'label-v2--disabled': controls.disabled }\" class=\"font--caption cur-default my--xxxs\">\n        {{ 'ng.' + messageGroup + '.lbl.street' | translate }}\n      </div>\n    </div>\n  </label>\n  <div class=\"display--flex width--full\">\n    <input\n      id=\"new-as\"\n      type=\"text\"\n      [formControl]=\"formControl\"\n      aria-describedby=\"street:Helper street:Error\"\n      class=\"input-v2\"\n      [matAutocomplete]=\"streetList\"\n      autocomplete=\"off\" />\n    <mat-autocomplete #streetList=\"matAutocomplete\">\n      <mat-option *ngFor=\"let street of suggestions$ | async\" [value]=\"street\">\n        {{ street }}\n      </mat-option>\n    </mat-autocomplete>\n  </div>\n  <div class=\"formErrorInput text-align--left\" *ngIf=\"controls.touched && controls.hasError('required')\">\n    {{ 'ng.' + messageGroup + '.error.street.required' | translate }}\n  </div>\n  <div class=\"formErrorInput text-align--left\" *ngIf=\"controls.hasError('invalid')\">\n    {{ 'ng.' + messageGroup + '.error.street.invalid' | translate }}\n  </div>\n</div>\n","import { Component, inject, Input, OnInit, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { debounceTime, distinctUntilChanged, filter, switchMap, tap } from 'rxjs/operators';\nimport { CitySuggestions, FiberAddressCheckerEnum, FiberAddressCheckerService } from '@care-ftth/data-access';\nimport { map, Observable } from 'rxjs';\n\n@UntilDestroy()\n@Component({\n  selector: 'tg-zipcode-input-field',\n  templateUrl: './zipcode-input-field.component.html',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    HttpClientModule,\n    TranslateModule,\n  ],\n})\nexport class ZipcodeInputFieldComponent implements OnInit, ControlValueAccessor {\n  @Input() messageGroup: string;\n  suggestions$: Observable<CitySuggestions[]>;\n  private readonly addressCheckerService: FiberAddressCheckerService = inject(FiberAddressCheckerService);\n\n  get formControl(): FormControl {\n    return this.controls?.control as FormControl;\n  }\n\n  constructor(@Self() @Optional() public controls: NgControl) {\n    if (this.controls) {\n      this.controls.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    this.suggestions$ = this.formControl?.valueChanges?.pipe(\n      untilDestroyed(this),\n      distinctUntilChanged(),\n      debounceTime(150),\n      filter((inputValue) => !!inputValue),\n      filter((inputValue) => typeof inputValue === 'string'),\n      switchMap((inputValue) => this.#getSuggestions(inputValue)),\n      tap(({ suggestions, inputValue }) => this.#presetValueWhenSuggestionExists(suggestions, inputValue)),\n      map(({ suggestions }) => suggestions)\n    );\n  }\n\n  #getSuggestions(inputValue: string) {\n    return this.addressCheckerService\n      .getSuggestionsForZipcodeOrCity(inputValue, FiberAddressCheckerEnum.MESSAGE_GROUP)\n      .pipe(\n        untilDestroyed(this),\n        map((suggestions) => ({ suggestions, inputValue }))\n      );\n  }\n\n  #presetValueWhenSuggestionExists(suggestions: CitySuggestions[], inputValue: string): void {\n    const matchSuggestion = suggestions.find(\n      (suggestion: CitySuggestions) =>\n        suggestion.zipCode === inputValue || suggestion.subMunicipality.toLowerCase() === inputValue.toLowerCase()\n    );\n    if (matchSuggestion) {\n      this.formControl?.setValue(matchSuggestion);\n    }\n  }\n\n  formattedLocation = (cityOrZipcode: CitySuggestions): string => {\n    if (!cityOrZipcode) {\n      return '';\n    }\n    return `${cityOrZipcode.zipCode} - ${cityOrZipcode.subMunicipality}`;\n  };\n\n  registerOnChange(fn: (value: string | CitySuggestions) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(_obj: unknown): void {\n    // empty implementation\n  }\n\n  onChange: (value: CitySuggestions) => void = () => {\n    // empty implementation\n  };\n  onTouched: () => void = () => {\n    // empty implementation\n  };\n}\n","<div class=\"form-group pb--l\">\n  <div class=\"input-v2--wrapper\">\n    <label for=\"new-zc\" id=\"zipcode:Label\" class=\"label-v2\">\n      <div class=\"label-v2__label\">\n        <div class=\"font--caption cur-default my--xxxs\">\n          {{ 'ng.' + messageGroup + '.lbl.zip-code' | translate }}\n        </div>\n      </div>\n    </label>\n    <div class=\"display--flex width--full\">\n      <input\n        id=\"new-zc\"\n        type=\"text\"\n        [formControl]=\"formControl\"\n        [matAutocomplete]=\"zipCodeList\"\n        aria-describedby=\"zipcode:Helper zipcode:Error\"\n        class=\"input-v2\"\n        required=\"true\"\n        autocomplete=\"off\" />\n    </div>\n  </div>\n  <mat-autocomplete #zipCodeList=\"matAutocomplete\" [autoActiveFirstOption]=\"true\" [displayWith]=\"formattedLocation\">\n    <mat-option *ngFor=\"let location of suggestions$ | async\" [value]=\"location\">\n      {{ location.zipCode }} - {{ location.subMunicipality }}\n    </mat-option>\n  </mat-autocomplete>\n  <div class=\"formErrorInput text-align--left\" *ngIf=\"controls.touched && controls.hasError('required')\">\n    {{ 'ng.' + messageGroup + '.error.selectedCityOrZipCode.required' | translate }}\n  </div>\n</div>\n"],"names":["EventEmitter","CommonModule","TranslateModule","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","AddressViewerComponent_div_0_Template_div_click_15_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","editAddress","ɵɵadvance","ɵɵtextInterpolate3","ctx_r0","address","street","houseNumber","tmp_0_0","subHouseNumber","undefined","ɵɵtextInterpolate2","zipcode","subMunicipality","ɵɵtextInterpolate","ɵɵpipeBind1","messageGroupName","AddressViewerComponent","edit","emit","addressGeoId","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AddressViewerComponent_Template","rf","ctx","ɵɵtemplate","AddressViewerComponent_div_0_Template","ɵɵproperty","i1","NgIf","i2","TranslatePipe","encapsulation","FormControl","NgControl","ReactiveFormsModule","UntilDestroy","HttpClientModule","MatSelectModule","MatAutocompleteModule","MatDialogModule","messageGroup","BoxNumberInputFieldComponent","controls","constructor","valueAccessor","formControl","control","registerOnChange","fn","onChange","registerOnTouched","onTouched","value","setValue","writeValue","_obj","ɵɵdirectiveInject","ɵɵProvidersFeature","BoxNumberInputFieldComponent_Template","BoxNumberInputFieldComponent_div_8_Template","ɵɵpureFunction1","_c0","disabled","ɵɵtextInterpolate1","touched","hasError","NgClass","DefaultValueAccessor","NgControlStatus","FormControlDirective","i3","__decorate","inject","untilDestroyed","debounceTime","distinctUntilChanged","filter","switchMap","tap","FiberAddressCheckerEnum","FiberAddressCheckerService","map","of","suggestion_r3","ctx_r2","HouseNumberInputFieldComponent","addressCheckerService","geoId","suggestions$","ngOnInit","valueChanges","pipe","inputValue","getNumberSuggestions","suggestions","presetValueWhenSuggestionExists","#getNumberSuggestions","getSuggestionsForNumber","MESSAGE_GROUP","#presetValueWhenSuggestionExists","numberSuggestions","numberSuggestion","find","suggestion","formattedNumber","HouseNumberInputFieldComponent_Template","HouseNumberInputFieldComponent_mat_option_10_Template","HouseNumberInputFieldComponent_div_12_Template","_r0","NgForOf","AsyncPipe","MatAutocomplete","i4","MatOption","MatAutocompleteTrigger","i5","street_r4","ctx_r3","StreetInputFieldComponent","MINIMUM_WORD_LENGTH_TO_SEARCH","length","getSuggestionsForStreet","StreetInputFieldComponent_Template","StreetInputFieldComponent_mat_option_10_Template","StreetInputFieldComponent_div_12_Template","StreetInputFieldComponent_div_13_Template","location_r3","zipCode","ZipcodeInputFieldComponent","getSuggestions","#getSuggestions","getSuggestionsForZipcodeOrCity","matchSuggestion","toLowerCase","formattedLocation","cityOrZipcode","ZipcodeInputFieldComponent_Template","ZipcodeInputFieldComponent_mat_option_11_Template","ZipcodeInputFieldComponent_div_13_Template","RequiredValidator"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}