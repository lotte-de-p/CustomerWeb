{"version":3,"file":"libs_billing_limits_mobile-usage-limits_data-access_src_index_ts-_02db1.js","mappings":"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","sources":["./libs/billing/limits/mobile-usage-limits/data-access/src/index.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/+state/mobile-usage-limits-datalayer.effects.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/+state/mobile-usage-limits-ngrx.module.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/+state/mobile-usage-limits.actions.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/+state/mobile-usage-limits.effects.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/+state/mobile-usage-limits.reducers.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/+state/mobile-usage-limits.selectors.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/mobile-usage-limits.facade.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/services/datalayer/mobile-usage-limits-datalayer.service.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/services/mobile-usage-limits-service.constants.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/services/out-of-bundle-limits/out-of-bundle-limits.service.ts","./libs/billing/limits/mobile-usage-limits/data-access/src/lib/services/usage-limits/usage-limits.service.ts"],"sourcesContent":["export { MobileUsageLimitsFacade } from './lib/mobile-usage-limits.facade';\nexport { MobileUsageLimitsNgrxModule } from './lib/+state/mobile-usage-limits-ngrx.module';\nexport { UpdateUsageLimitsRequest } from './lib/entities/usage-limits/update-usage-limits-request.model';\nexport { UsageLimits, OutOfBundle, PremiumService } from './lib/entities/usage-limits/usage-limits.model';\nexport { WarningDialogModel } from './lib/entities/warning-dialog/warning-dialog.model';\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { tap } from 'rxjs/operators';\nimport { MobileUsageLimitsDatalayerService } from '../services/datalayer/mobile-usage-limits-datalayer.service';\nimport {\n  updateMobileUsageDataLayerEvent,\n  updateMobileUsageLimits,\n  updateMobileUsageLimitsSuccess,\n} from './mobile-usage-limits.actions';\nimport { combineLatest } from 'rxjs';\nimport { OUT_OF_BUNDLE, THIRD_PARTY_SERVICES } from '../services/mobile-usage-limits-service.constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MobileUsageLimitsDatalayerEffects {\n  constructor(\n    private readonly actions$: Actions,\n    private readonly mobileUsageLimitsDatalayerService: MobileUsageLimitsDatalayerService\n  ) {}\n\n  updateLimitsSuccess$ = createEffect(\n    () =>\n      combineLatest([\n        this.actions$.pipe(ofType(updateMobileUsageLimits)),\n        this.actions$.pipe(ofType(updateMobileUsageLimitsSuccess)),\n        this.actions$.pipe(ofType(updateMobileUsageDataLayerEvent)),\n      ]).pipe(\n        tap(([usageLimitsRequest, usageLimitsResponse, updatedDataLayerAttributes]) => {\n          if (!usageLimitsResponse.usageLimits && usageLimitsRequest) return;\n          const { outOfBundleLimit, premiumServiceLimit } = usageLimitsRequest.updateUsageLimitsRequest;\n          this.sendDataLayerEvent(premiumServiceLimit?.value, outOfBundleLimit?.value, updatedDataLayerAttributes);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  cancelUpdateLimitOnWarning$ = createEffect(\n    () =>\n      combineLatest([this.actions$.pipe(ofType(updateMobileUsageDataLayerEvent))]).pipe(\n        tap(([updatedDataLayerAttributes]) => {\n          this.sendDataLayerEvent(undefined, undefined, updatedDataLayerAttributes);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  private sendDataLayerEvent(\n    premiumServiceLimitValue: number | undefined,\n    outOfBundleLimitValue: number | undefined,\n    updatedDataLayerAttributes:\n      | {\n          limitAlreadyExceeded: boolean;\n          updateDeclined: boolean;\n          cancelledLimit?: string;\n          itemName?: string;\n        }\n      | undefined\n  ) {\n    if (updatedDataLayerAttributes) {\n      if (premiumServiceLimitValue !== undefined) {\n        this.mobileUsageLimitsDatalayerService.sendDataLayerEventWithAttributes(\n          updatedDataLayerAttributes.limitAlreadyExceeded,\n          updatedDataLayerAttributes.updateDeclined,\n          premiumServiceLimitValue.toString(),\n          THIRD_PARTY_SERVICES\n        );\n      } else if (outOfBundleLimitValue !== undefined) {\n        this.mobileUsageLimitsDatalayerService.sendDataLayerEventWithAttributes(\n          updatedDataLayerAttributes.limitAlreadyExceeded,\n          updatedDataLayerAttributes.updateDeclined,\n          outOfBundleLimitValue.toString(),\n          OUT_OF_BUNDLE\n        );\n      } else if (updatedDataLayerAttributes.cancelledLimit !== undefined) {\n        this.mobileUsageLimitsDatalayerService.sendDataLayerEventWithAttributes(\n          updatedDataLayerAttributes.limitAlreadyExceeded,\n          updatedDataLayerAttributes.updateDeclined,\n          updatedDataLayerAttributes.cancelledLimit,\n          updatedDataLayerAttributes.itemName\n        );\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { MobileUsageLimitsEffects } from './mobile-usage-limits.effects';\nimport { mobileUsageLimitsFeature } from './mobile-usage-limits.reducers';\nimport { MobileUsageLimitsDatalayerEffects } from './mobile-usage-limits-datalayer.effects';\n\n@NgModule({\n  imports: [\n    EffectsModule.forFeature([MobileUsageLimitsEffects, MobileUsageLimitsDatalayerEffects]),\n    StoreModule.forFeature(mobileUsageLimitsFeature),\n  ],\n})\nexport class MobileUsageLimitsNgrxModule {}\n","import { createAction, props } from '@ngrx/store';\nimport { UsageLimits } from '../entities/usage-limits/usage-limits.model';\nimport { UpdateUsageLimitsRequest } from '../entities/usage-limits/update-usage-limits-request.model';\nimport { MobileLine } from '@billing/shared/data-access';\n\nexport const fetchMobileUsageLimitsDetails = createAction(\n  '[mobile-usage-limits] fetch mobile usage limits',\n  props<{ mobileLine: MobileLine }>()\n);\n\nexport const fetchMobileUsageLimitsDetailsSuccess = createAction(\n  '[mobile-usage-limits] fetch mobile usage limits details success',\n  props<{ usageLimits: UsageLimits }>()\n);\nexport const fetchMobileUsageLimitsDetailsFailure = createAction(\n  '[mobile-usage-limits] fetch mobile usage limits details failure',\n  props<{ error: string }>()\n);\n\nexport const updateMobileUsageLimits = createAction(\n  '[mobile-usage-limits] update mobile usage limits',\n  props<{ updateUsageLimitsRequest: UpdateUsageLimitsRequest; mobileLine: MobileLine }>()\n);\n\nexport const updateMobileUsageLimitsFailure = createAction(\n  '[mobile-usage-limits] update mobile usage limits failure',\n  props<{ error: string }>()\n);\n\nexport const updateMobileUsageLimitsSuccess = createAction(\n  '[mobile-usage-limits] update mobile usage limits success',\n  props<{ usageLimits: UsageLimits }>()\n);\n\nexport const fetchOutOfBundleLimits = createAction(\n  '[mobile-usage-limits] fetch out of bundle limits',\n  props<{ mobileLine: MobileLine }>()\n);\n\nexport const fetchOutOfBundleLimitsSuccess = createAction(\n  '[mobile-usage-limits] fetch out of bundle limits success',\n  props<{ outOfBundleLimits: string[] }>()\n);\nexport const fetchOutOfBundleLimitsFailure = createAction(\n  '[mobile-usage-limits] fetch out of bundle limits failure',\n  props<{ error: string }>()\n);\n\nexport const updateMobileUsageDataLayerEvent = createAction(\n  '[mobile-usage-limits] updateMobileUsageDataLayerEvent',\n  props<{\n    limitAlreadyExceeded: boolean;\n    updateDeclined: boolean;\n    cancelledLimit?: string;\n    itemName?: string;\n  }>()\n);\n\nexport const resetMobileUsageLimits = createAction('[MobileUsageLimits] Reset Mobile Usage Limits');\n","import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Injectable } from '@angular/core';\nimport { catchError, concatMap, map, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport {\n  fetchMobileUsageLimitsDetails,\n  fetchMobileUsageLimitsDetailsFailure,\n  fetchMobileUsageLimitsDetailsSuccess,\n  fetchOutOfBundleLimits,\n  fetchOutOfBundleLimitsFailure,\n  fetchOutOfBundleLimitsSuccess,\n  updateMobileUsageLimits,\n  updateMobileUsageLimitsFailure,\n  updateMobileUsageLimitsSuccess,\n} from './mobile-usage-limits.actions';\nimport { UsageLimitsService } from '../services/usage-limits/usage-limits.service';\nimport { OutOfBundleLimitsService } from '../services/out-of-bundle-limits/out-of-bundle-limits.service';\nimport { ErrorMessage, MessageService, SuccessMessage } from '@telenet/ng-lib-message';\nimport { UsageLimits } from '../entities/usage-limits/usage-limits.model';\nimport {\n  MESSAGE_GROUP,\n  OCAPI_ERROR_OUT_OF_BUNDLE_NOT_FOUND,\n  USAGE_LIMIT_DECLINED,\n  USAGE_LIMIT_UPDATED,\n} from '../services/mobile-usage-limits-service.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class MobileUsageLimitsEffects {\n  fetchMobileUsageLimitsDetails$;\n  fetchOutOfBundleLimits$;\n  updateMobileUsageLimits$;\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly outOfBundleLimitsService: OutOfBundleLimitsService,\n    private readonly usageLimitsService: UsageLimitsService,\n    private readonly messageService: MessageService\n  ) {\n    this.fetchMobileUsageLimitsDetails$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(fetchMobileUsageLimitsDetails),\n        concatMap(({ mobileLine }) =>\n          this.usageLimitsService.getUsageLimits(mobileLine.msisdn).pipe(\n            map((usageLimits) => fetchMobileUsageLimitsDetailsSuccess({ usageLimits })),\n            catchError((error) => of(fetchMobileUsageLimitsDetailsFailure({ error })))\n          )\n        )\n      )\n    );\n    this.fetchOutOfBundleLimits$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(fetchOutOfBundleLimits),\n        concatMap(({ mobileLine }) =>\n          this.outOfBundleLimitsService.getOutOfBundleLimits(mobileLine.msisdn).pipe(\n            map((outOfBundleLimits) => fetchOutOfBundleLimitsSuccess({ outOfBundleLimits })),\n            catchError((error) => {\n              if (error.includes(OCAPI_ERROR_OUT_OF_BUNDLE_NOT_FOUND)) {\n                this.messageService.clearMessages(MESSAGE_GROUP);\n              }\n              return of(fetchOutOfBundleLimitsFailure({ error }));\n            })\n          )\n        )\n      )\n    );\n\n    this.updateMobileUsageLimits$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(updateMobileUsageLimits),\n        concatMap(({ updateUsageLimitsRequest, mobileLine }) =>\n          this.usageLimitsService.updateUsageLimits(updateUsageLimitsRequest, mobileLine.msisdn)\n        ),\n        tap(() =>\n          this.messageService.addMessage(new SuccessMessage(MESSAGE_GROUP, `${MESSAGE_GROUP}.${USAGE_LIMIT_UPDATED}`))\n        ),\n        map((usageLimits: UsageLimits) => updateMobileUsageLimitsSuccess({ usageLimits })),\n        catchError((error) => {\n          this.messageService.addMessage(new ErrorMessage(MESSAGE_GROUP, `${MESSAGE_GROUP}.${USAGE_LIMIT_DECLINED}`));\n          return of(updateMobileUsageLimitsFailure({ error }));\n        })\n      )\n    );\n  }\n}\n","import { createFeature, createReducer, on } from '@ngrx/store';\nimport {\n  fetchMobileUsageLimitsDetails,\n  fetchMobileUsageLimitsDetailsFailure,\n  fetchMobileUsageLimitsDetailsSuccess,\n  fetchOutOfBundleLimits,\n  fetchOutOfBundleLimitsFailure,\n  fetchOutOfBundleLimitsSuccess,\n  resetMobileUsageLimits,\n  updateMobileUsageLimits,\n  updateMobileUsageLimitsFailure,\n  updateMobileUsageLimitsSuccess,\n} from './mobile-usage-limits.actions';\nimport { UsageLimits } from '../entities/usage-limits/usage-limits.model';\nimport { UpdateUsageLimitsRequest } from '../entities/usage-limits/update-usage-limits-request.model';\nimport { MobileLine } from '@billing/shared/data-access';\n\nexport const MOBILE_USAGE_LIMITS_FEATURE_KEY = 'mobile-usage-limits';\n\nexport interface MobileUsageLimitsState {\n  selectedMobileUsageLimits: UsageLimits | null;\n  selectedMobileUsageLimitsLoaded: boolean;\n  selectedOutOfBundleLimits: string[];\n  selectedOutOfBundleLimitsLoaded: boolean;\n}\n\nexport const initialState: MobileUsageLimitsState = {\n  selectedMobileUsageLimits: null,\n  selectedOutOfBundleLimits: [],\n  selectedMobileUsageLimitsLoaded: false,\n  selectedOutOfBundleLimitsLoaded: false,\n};\n\nexport const mobileUsageLimitsFeature = createFeature({\n  name: MOBILE_USAGE_LIMITS_FEATURE_KEY,\n  reducer: createReducer(\n    initialState,\n    on(fetchMobileUsageLimitsDetails, (state: MobileUsageLimitsState, action: { mobileLine: MobileLine }) => ({\n      ...state,\n      selectedMobileLine: action.mobileLine,\n      selectedMobileUsageLimitsLoaded: false,\n      selectedOutOfBundleLimitsLoaded: false,\n    })),\n    on(fetchMobileUsageLimitsDetailsSuccess, (state: MobileUsageLimitsState, action: { usageLimits: UsageLimits }) => ({\n      ...state,\n      selectedMobileUsageLimits: action.usageLimits,\n      selectedMobileUsageLimitsLoaded: true,\n    })),\n    on(fetchMobileUsageLimitsDetailsFailure, (state: MobileUsageLimitsState) => ({\n      ...state,\n      selectedMobileUsageLimits: null,\n      selectedMobileUsageLimitsLoaded: true,\n    })),\n\n    on(fetchOutOfBundleLimits, (state: MobileUsageLimitsState, action: { mobileLine: MobileLine }) => ({\n      ...state,\n      selectedMobileLine: action.mobileLine,\n      selectedOutOfBundleLimitsLoaded: false,\n    })),\n    on(fetchOutOfBundleLimitsSuccess, (state: MobileUsageLimitsState, action: { outOfBundleLimits: string[] }) => ({\n      ...state,\n      selectedOutOfBundleLimits: action.outOfBundleLimits,\n      selectedOutOfBundleLimitsLoaded: true,\n    })),\n    on(fetchOutOfBundleLimitsFailure, (state: MobileUsageLimitsState) => ({\n      ...state,\n      selectedOutOfBundleLimits: [],\n      selectedOutOfBundleLimitsLoaded: false,\n    })),\n\n    on(\n      updateMobileUsageLimits,\n      (\n        state: MobileUsageLimitsState,\n        action: {\n          updateUsageLimitsRequest: UpdateUsageLimitsRequest;\n          mobileLine: MobileLine | null;\n        }\n      ) => ({\n        ...state,\n        selectedMobileLine: action.mobileLine,\n        selectedMobileUsageLimitsLoaded: false,\n      })\n    ),\n    on(updateMobileUsageLimitsSuccess, (state: MobileUsageLimitsState, action: { usageLimits: UsageLimits }) => ({\n      ...state,\n      selectedMobileUsageLimits: action.usageLimits,\n      selectedMobileUsageLimitsLoaded: true,\n    })),\n    on(updateMobileUsageLimitsFailure, (state: MobileUsageLimitsState) => ({\n      ...state,\n      selectedMobileUsageLimitsLoaded: true,\n    })),\n    on(resetMobileUsageLimits, (state) => ({\n      ...state,\n      selectedMobileUsageLimitsLoaded: false,\n      selectedOutOfBundleLimitsLoaded: false,\n    }))\n  ),\n});\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { MOBILE_USAGE_LIMITS_FEATURE_KEY, MobileUsageLimitsState } from './mobile-usage-limits.reducers';\n\nexport const selectMobileUsageLimitsFeature = createFeatureSelector<MobileUsageLimitsState>(\n  MOBILE_USAGE_LIMITS_FEATURE_KEY\n);\n\nexport const selectedMobileUsageLimits = createSelector(\n  selectMobileUsageLimitsFeature,\n  (state) => state.selectedMobileUsageLimits\n);\nexport const selectedMobileUsageLimitsLoaded = createSelector(\n  selectMobileUsageLimitsFeature,\n  (state) => state.selectedMobileUsageLimitsLoaded\n);\n\nexport const selectedOutOfBundleLimits = createSelector(\n  selectMobileUsageLimitsFeature,\n  (state) => state.selectedOutOfBundleLimits\n);\n\nexport const selectedOutOfBundleLimitsLoaded = createSelector(\n  selectMobileUsageLimitsFeature,\n  (state) => state.selectedOutOfBundleLimitsLoaded\n);\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { MobileUsageLimitsState } from './+state/mobile-usage-limits.reducers';\nimport { Observable } from 'rxjs';\nimport {\n  selectedMobileUsageLimits,\n  selectedMobileUsageLimitsLoaded,\n  selectedOutOfBundleLimits,\n  selectedOutOfBundleLimitsLoaded,\n} from './+state/mobile-usage-limits.selectors';\nimport {\n  fetchMobileUsageLimitsDetails,\n  fetchOutOfBundleLimits,\n  resetMobileUsageLimits,\n  updateMobileUsageDataLayerEvent,\n  updateMobileUsageLimits,\n} from './+state/mobile-usage-limits.actions';\nimport { UsageLimits } from './entities/usage-limits/usage-limits.model';\nimport { UpdateUsageLimitsRequest } from './entities/usage-limits/update-usage-limits-request.model';\nimport { MobileLine } from '@billing/shared/data-access';\n\n@Injectable({ providedIn: 'root' })\nexport class MobileUsageLimitsFacade {\n  constructor(private readonly store: Store<MobileUsageLimitsState>) {}\n\n  selectedMobileUsageLimits$: Observable<UsageLimits | null> = this.store.select(selectedMobileUsageLimits);\n  selectedOutOfBundleLimits$: Observable<string[]> = this.store.select(selectedOutOfBundleLimits);\n  selectedOutOfBundleLimitsLoaded$: Observable<boolean> = this.store.select(selectedOutOfBundleLimitsLoaded);\n  selectedMobileUsageLimitsLoaded$: Observable<boolean> = this.store.select(selectedMobileUsageLimitsLoaded);\n\n  loadMobileUsageLimits(params: { mobileLine: MobileLine }): void {\n    this.store.dispatch(fetchMobileUsageLimitsDetails(params));\n  }\n\n  loadOutOfBundleLimits(params: { mobileLine: MobileLine }): void {\n    this.store.dispatch(fetchOutOfBundleLimits(params));\n  }\n\n  updateMobileUsageLimits(params: {\n    updateUsageLimitsRequest: UpdateUsageLimitsRequest;\n    mobileLine: MobileLine;\n  }): void {\n    this.store.dispatch(updateMobileUsageLimits(params));\n  }\n\n  updateMobileUsageDataLayerEvent(params: {\n    limitAlreadyExceeded: boolean;\n    updateDeclined: boolean;\n    cancelledLimit?: string;\n    itemName?: string;\n  }): void {\n    this.store.dispatch(updateMobileUsageDataLayerEvent(params));\n  }\n\n  resetMobileUsageLimits(): void {\n    this.store.dispatch(resetMobileUsageLimits());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport {\n  ATTRIBUTE_ITEM_DATA,\n  ATTRIBUTE_ITEM_GROUP,\n  ATTRIBUTE_ITEM_NAME,\n  CATEGORY_PRIMARY_CARE,\n  CATEGORY_SUBCATEGORY_MOBILE,\n  EVENT_NAME_CHANGED,\n  EVENT_NAME_DECLINED,\n  EVENT_TYPE,\n  ITEM_DATA_LIMIT_EXCEEDED,\n  ITEM_DATA_LIMIT_NOT_EXCEEDED,\n  MESSAGE_GROUP,\n} from '../mobile-usage-limits-service.constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MobileUsageLimitsDatalayerService {\n  constructor(private readonly dataLayerService: DataLayerService) {}\n\n  public sendDataLayerEventWithAttributes(\n    limitAlreadyExceeded: boolean,\n    updateDeclined: boolean,\n    updatedLimit?: string,\n    itemName?: string\n  ) {\n    if (itemName !== null && itemName !== undefined) {\n      const eventName = updateDeclined ? EVENT_NAME_DECLINED : EVENT_NAME_CHANGED;\n      const attributes: Record<string, unknown> = {\n        [ATTRIBUTE_ITEM_NAME]: itemName,\n      };\n      attributes[ATTRIBUTE_ITEM_DATA] = updatedLimit;\n      if (!updateDeclined) {\n        attributes[ATTRIBUTE_ITEM_GROUP] = limitAlreadyExceeded\n          ? ITEM_DATA_LIMIT_EXCEEDED\n          : ITEM_DATA_LIMIT_NOT_EXCEEDED;\n      }\n\n      const category = this.dataLayerService.createCategory(CATEGORY_PRIMARY_CARE, CATEGORY_SUBCATEGORY_MOBILE);\n      const eventInfo = this.dataLayerService.createEventInfo(eventName, EVENT_TYPE, [MESSAGE_GROUP]);\n      this.dataLayerService.sendEvent({ eventInfo, attributes, category });\n    }\n  }\n}\n","export const MESSAGE_GROUP = 'mobile-usage-limits';\nexport const SECONDARY_CATEGORY = 'billing';\nexport const PRIMARY_CATEGORY = 'care';\nexport const MOBILE_LINES_ENDPOINT = '/public/api/mobile-usage-limits-service/v1/mobile-lines';\nexport const OUT_OF_BUNDLE_LIMITS_ENDPOINT =\n  '/public/api/mobile-usage-limits-service/v1/mobile-usage-limits/outofbundle/limits/';\nexport const MOBILE_USAGE_LIMITS_ENDPOINT = '/public/api/mobile-usage-limits-service/v1/mobile-usage-limits/';\nexport const USAGE_LIMIT_UPDATED = 'lbl.successfully-saved';\nexport const OCAPI_ERROR_OUT_OF_BUNDLE_NOT_FOUND = 'ocapi.400';\n\nexport const ATTRIBUTE_ITEM_NAME = 'itemName';\nexport const ATTRIBUTE_ITEM_DATA = 'itemData';\nexport const ATTRIBUTE_ITEM_GROUP = 'itemGroup';\nexport const CATEGORY_PRIMARY_CARE = 'care';\nexport const CATEGORY_SUBCATEGORY_MOBILE = 'mobile';\nexport const EVENT_NAME_CHANGED = 'mobile usage limit changed';\nexport const EVENT_NAME_DECLINED = 'mobile usage limit declined';\nexport const EVENT_TYPE = 'click';\nexport const ITEM_DATA_LIMIT_EXCEEDED = 'limit already exceeded';\nexport const ITEM_DATA_LIMIT_NOT_EXCEEDED = 'limit not exceeded';\nexport const THIRD_PARTY_SERVICES = 'Third-party Services';\nexport const OUT_OF_BUNDLE = 'Out of Bundle';\nexport const USAGE_LIMIT_DECLINED = 'lbl.something-went-wrong';\n","import { OcapiCallConfig, OcapiService } from '@telenet/ng-lib-ocapi';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MESSAGE_GROUP, OUT_OF_BUNDLE_LIMITS_ENDPOINT } from '../mobile-usage-limits-service.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class OutOfBundleLimitsService {\n  constructor(private readonly ocapiService: OcapiService) {}\n\n  getOutOfBundleLimits(msisdn: string): Observable<string[]> {\n    const endpoint = OUT_OF_BUNDLE_LIMITS_ENDPOINT + msisdn;\n    return this.ocapiService.doGet(new OcapiCallConfig(MESSAGE_GROUP, endpoint));\n  }\n}\n","import { OcapiCallConfig, OcapiService } from '@telenet/ng-lib-ocapi';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MESSAGE_GROUP, MOBILE_USAGE_LIMITS_ENDPOINT } from '../mobile-usage-limits-service.constants';\nimport { UpdateUsageLimitsRequest } from '../../entities/usage-limits/update-usage-limits-request.model';\nimport { UsageLimits } from '../../entities/usage-limits/usage-limits.model';\n\n@Injectable({ providedIn: 'root' })\nexport class UsageLimitsService {\n  constructor(private readonly ocapiService: OcapiService) {}\n\n  getUsageLimits(msisdn: string): Observable<UsageLimits> {\n    const endpoint = MOBILE_USAGE_LIMITS_ENDPOINT + msisdn;\n    return this.ocapiService.doGet(new OcapiCallConfig(MESSAGE_GROUP, endpoint));\n  }\n\n  updateUsageLimits(payload: UpdateUsageLimitsRequest, msisdn: string): Observable<UsageLimits> {\n    const endpoint = MOBILE_USAGE_LIMITS_ENDPOINT + msisdn;\n    return this.ocapiService.doPut(\n      new OcapiCallConfig<UsageLimits, UsageLimits>(MESSAGE_GROUP, endpoint, undefined, payload)\n    );\n  }\n}\n"],"names":["MobileUsageLimitsFacade","MobileUsageLimitsNgrxModule","Actions","createEffect","ofType","tap","MobileUsageLimitsDatalayerService","updateMobileUsageDataLayerEvent","updateMobileUsageLimits","updateMobileUsageLimitsSuccess","combineLatest","OUT_OF_BUNDLE","THIRD_PARTY_SERVICES","MobileUsageLimitsDatalayerEffects","constructor","actions$","mobileUsageLimitsDatalayerService","updateLimitsSuccess$","pipe","usageLimitsRequest","usageLimitsResponse","updatedDataLayerAttributes","usageLimits","outOfBundleLimit","premiumServiceLimit","updateUsageLimitsRequest","sendDataLayerEvent","value","dispatch","cancelUpdateLimitOnWarning$","undefined","premiumServiceLimitValue","outOfBundleLimitValue","sendDataLayerEventWithAttributes","limitAlreadyExceeded","updateDeclined","toString","cancelledLimit","itemName","_","i0","ɵɵinject","i1","i2","_2","factory","ɵfac","providedIn","EffectsModule","StoreModule","MobileUsageLimitsEffects","mobileUsageLimitsFeature","_3","forFeature","imports","EffectsFeatureModule","StoreFeatureModule","createAction","props","fetchMobileUsageLimitsDetails","fetchMobileUsageLimitsDetailsSuccess","fetchMobileUsageLimitsDetailsFailure","updateMobileUsageLimitsFailure","fetchOutOfBundleLimits","fetchOutOfBundleLimitsSuccess","fetchOutOfBundleLimitsFailure","resetMobileUsageLimits","catchError","concatMap","map","of","UsageLimitsService","OutOfBundleLimitsService","ErrorMessage","MessageService","SuccessMessage","MESSAGE_GROUP","OCAPI_ERROR_OUT_OF_BUNDLE_NOT_FOUND","USAGE_LIMIT_DECLINED","USAGE_LIMIT_UPDATED","outOfBundleLimitsService","usageLimitsService","messageService","fetchMobileUsageLimitsDetails$","mobileLine","getUsageLimits","msisdn","error","fetchOutOfBundleLimits$","getOutOfBundleLimits","outOfBundleLimits","includes","clearMessages","updateMobileUsageLimits$","updateUsageLimits","addMessage","i3","i4","createFeature","createReducer","on","MOBILE_USAGE_LIMITS_FEATURE_KEY","initialState","selectedMobileUsageLimits","selectedOutOfBundleLimits","selectedMobileUsageLimitsLoaded","selectedOutOfBundleLimitsLoaded","name","reducer","state","action","selectedMobileLine","createFeatureSelector","createSelector","selectMobileUsageLimitsFeature","Store","store","selectedMobileUsageLimits$","select","selectedOutOfBundleLimits$","selectedOutOfBundleLimitsLoaded$","selectedMobileUsageLimitsLoaded$","loadMobileUsageLimits","params","loadOutOfBundleLimits","DataLayerService","ATTRIBUTE_ITEM_DATA","ATTRIBUTE_ITEM_GROUP","ATTRIBUTE_ITEM_NAME","CATEGORY_PRIMARY_CARE","CATEGORY_SUBCATEGORY_MOBILE","EVENT_NAME_CHANGED","EVENT_NAME_DECLINED","EVENT_TYPE","ITEM_DATA_LIMIT_EXCEEDED","ITEM_DATA_LIMIT_NOT_EXCEEDED","dataLayerService","updatedLimit","eventName","attributes","category","createCategory","eventInfo","createEventInfo","sendEvent","SECONDARY_CATEGORY","PRIMARY_CATEGORY","MOBILE_LINES_ENDPOINT","OUT_OF_BUNDLE_LIMITS_ENDPOINT","MOBILE_USAGE_LIMITS_ENDPOINT","OcapiCallConfig","OcapiService","ocapiService","endpoint","doGet","payload","doPut"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}