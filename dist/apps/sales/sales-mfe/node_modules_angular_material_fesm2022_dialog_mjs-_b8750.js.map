{"version":3,"file":"node_modules_angular_material_fesm2022_dialog_mjs-_b8750.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/a11y.mjs","./node_modules/@angular/cdk/fesm2022/bidi.mjs","./node_modules/@angular/cdk/fesm2022/coercion.mjs","./node_modules/@angular/cdk/fesm2022/collections.mjs","./node_modules/@angular/cdk/fesm2022/dialog.mjs","./node_modules/@angular/cdk/fesm2022/keycodes.mjs","./node_modules/@angular/cdk/fesm2022/layout.mjs","./node_modules/@angular/cdk/fesm2022/observers.mjs","./node_modules/@angular/cdk/fesm2022/overlay.mjs","./node_modules/@angular/cdk/fesm2022/platform.mjs","./node_modules/@angular/cdk/fesm2022/portal.mjs","./node_modules/@angular/cdk/fesm2022/scrolling.mjs","./node_modules/@angular/material/fesm2022/dialog.mjs"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, booleanAttribute, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform, _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    if (ids.some(existingId => existingId.trim() === id)) {\n        return;\n    }\n    ids.push(id);\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    const filteredIds = ids.filter(val => val !== id);\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    const attrValue = el.getAttribute(attr);\n    return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: AriaDescriber, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }] });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }] });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap?.enabled || false;\n    }\n    set enabled(value) {\n        if (this.focusTrap) {\n            this.focusTrap.enabled = value;\n        }\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        const platform = inject(Platform);\n        if (platform.isBrowser) {\n            this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n        }\n    }\n    ngOnDestroy() {\n        this.focusTrap?.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap?.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (this.focusTrap && !this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap?.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap?.focusInitialElementWhenReady();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkTrapFocus, isStandalone: true, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\", booleanAttribute], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { enabled: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocus', transform: booleanAttribute }]\n            }], autoCapture: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocusAutoCapture', transform: booleanAttribute }]\n            }] } });\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }] });\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n    // `event.detail` is zero depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `detail` works on Chrome, but fails on Firefox.\n    return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }] });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `SnakBarContainer` and other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }] });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkAriaLive, isStandalone: true, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }], propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** Detection mode used for attributing the origin of a focus event. */\nvar FocusMonitorDetectionMode;\n(function (FocusMonitorDetectionMode) {\n    /**\n     * Any mousedown, keydown, or touchstart event that happened in the previous\n     * tick or the current tick will be used to assign a focus event's origin (to\n     * either mouse, keyboard, or touch). This is the default option.\n     */\n    FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n    /**\n     * A focus event's origin is always attributed to the last corresponding\n     * mousedown, keydown, or touchstart event, no matter how long ago it occurred.\n     */\n    FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"EVENTUAL\"] = 1] = \"EVENTUAL\";\n})(FocusMonitorDetectionMode || (FocusMonitorDetectionMode = {}));\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            // Note: we don't want the observable to emit at all so we don't pass any parameters.\n            return of();\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === FocusMonitorDetectionMode.EVENTUAL ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusMonitor, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }] });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkMonitorFocus, isStandalone: true, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: FocusMonitor }], propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** Set of possible high-contrast mode backgrounds. */\nvar HighContrastMode;\n(function (HighContrastMode) {\n    HighContrastMode[HighContrastMode[\"NONE\"] = 0] = \"NONE\";\n    HighContrastMode[HighContrastMode[\"BLACK_ON_WHITE\"] = 1] = \"BLACK_ON_WHITE\";\n    HighContrastMode[HighContrastMode[\"WHITE_ON_BLACK\"] = 2] = \"WHITE_ON_BLACK\";\n})(HighContrastMode || (HighContrastMode = {}));\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return HighContrastMode.NONE;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return HighContrastMode.WHITE_ON_BLACK;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return HighContrastMode.BLACK_ON_WHITE;\n        }\n        return HighContrastMode.NONE;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === HighContrastMode.BLACK_ON_WHITE) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: A11yModule, imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: A11yModule, imports: [ObserversModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: () => [{ type: HighContrastModeDetector }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusMonitorDetectionMode, FocusTrap, FocusTrapFactory, HighContrastMode, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Directionality, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }] });\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                    standalone: true,\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BidiModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import { ConnectableObservable, isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable } from '@angular/core';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/** Indicates how a view was changed by a {@link _ViewRepeater}. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n    /** The content of an existing view was replaced with another item. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n    /** A new view was created with `createEmbeddedView`. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n    /** The position of a view changed, but the content remains the same. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n    /** A view was detached from the view container. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = _ViewRepeaterOperation.INSERTED;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        this.compareWith = compareWith;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param values The values to select\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param values The values to deselect\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Sets the selected values\n     * @param values The new selected values\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    setSelection(...values) {\n        this._verifyValueAssignment(values);\n        const oldValues = this.selected;\n        const newSelectedSet = new Set(values);\n        values.forEach(value => this._markSelected(value));\n        oldValues\n            .filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet)))\n            .forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param value The value to toggle\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    toggle(value) {\n        return this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @param flushEvent Whether to flush the changes in an event.\n     *   If false, the changes to the selection will be flushed along with the next event.\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    clear(flushEvent = true) {\n        this._unmarkAll();\n        const changed = this._hasQueuedChanges();\n        if (flushEvent) {\n            this._emitChangeEvent();\n        }\n        return changed;\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(this._getConcreteValue(value));\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        value = this._getConcreteValue(value);\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            if (!this.isSelected(value)) {\n                this._selection.add(value);\n            }\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        value = this._getConcreteValue(value);\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n    /** Whether there are queued up change to be emitted. */\n    _hasQueuedChanges() {\n        return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n    }\n    /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n    _getConcreteValue(inputValue, selection) {\n        if (!this.compareWith) {\n            return inputValue;\n        }\n        else {\n            selection = selection ?? this._selection;\n            for (let selectedValue of selection) {\n                if (this.compareWith(inputValue, selectedValue)) {\n                    return selectedValue;\n                }\n            }\n            return inputValue;\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: UniqueSelectionDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: UniqueSelectionDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: UniqueSelectionDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation, getMultipleValuesInSingleSelectionError, isDataSource };\n","import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Optional CSS class or classes applied to the overlay panel. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Optional CSS class or classes applied to the overlay backdrop. */\n        this.backdropClass = '';\n        /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Dialog label applied via `aria-label` */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the previously-focused element upon closing.\n         * Has the following behavior based on the type that is passed in:\n         * - `boolean` - when true, will return focus to the element that was focused before the dialog\n         *    was opened, otherwise won't restore focus at all.\n         * - `string` - focus will be restored to the first element that matches the CSS selector.\n         * - `HTMLElement` - focus will be restored to the specific element.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user navigates backwards or forwards through browser\n         * history. This does not apply to navigation via anchor element unless using URL-hash based\n         * routing (`HashLocationStrategy` in the Angular router).\n         */\n        this.closeOnNavigation = true;\n        /**\n         * Whether the dialog should close when the dialog service is destroyed. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead.\n         */\n        this.closeOnDestroy = true;\n        /**\n         * Whether the dialog should close when the underlying overlay is detached. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n         * external detachment can happen as a result of a scroll strategy triggering it or when the\n         * browser location changes.\n         */\n        this.closeOnOverlayDetachments = true;\n    }\n}\n\nfunction throwDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._overlayRef = _overlayRef;\n        this._focusMonitor = _focusMonitor;\n        this._platform = inject(Platform);\n        /** The class that traps and manages focus within the dialog. */\n        this._focusTrap = null;\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Queue of the IDs of the dialog's label element, based on their definition order. The first\n         * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n         * where there are two or more titles in the DOM at a time and the first one is destroyed while\n         * the rest are present.\n         */\n        this._ariaLabelledByQueue = [];\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwDialogContentAlreadyAttachedError();\n            }\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._contentAttached();\n            return result;\n        };\n        this._document = _document;\n        if (this._config.ariaLabelledBy) {\n            this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n        }\n    }\n    _addAriaLabelledBy(id) {\n        this._ariaLabelledByQueue.push(id);\n        this._changeDetectorRef.markForCheck();\n    }\n    _removeAriaLabelledBy(id) {\n        const index = this._ariaLabelledByQueue.indexOf(id);\n        if (index > -1) {\n            this._ariaLabelledByQueue.splice(index, 1);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _contentAttached() {\n        this._initializeFocusTrap();\n        this._handleBackdropClicks();\n        this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n        this._trapFocus();\n    }\n    ngOnDestroy() {\n        this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap?.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const focusConfig = this._config.restoreFocus;\n        let focusTargetElement = null;\n        if (typeof focusConfig === 'string') {\n            focusTargetElement = this._document.querySelector(focusConfig);\n        }\n        else if (typeof focusConfig === 'boolean') {\n            focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n        }\n        else if (focusConfig) {\n            focusTargetElement = focusConfig;\n        }\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            focusTargetElement &&\n            typeof focusTargetElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    focusTargetElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            // Save the previously focused element. This element will be re-focused\n            // when the dialog closes.\n            if (this._document) {\n                this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n            }\n        }\n    }\n    /** Sets up the listener that handles clicks on the dialog backdrop. */\n    _handleBackdropClicks() {\n        // Clicking on the backdrop will move focus out of dialog.\n        // Recapture it if closing via the backdrop is disabled.\n        this._overlayRef.backdropClick().subscribe(() => {\n            if (this._config.disableClose) {\n                this._recaptureFocus();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: DialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkDialogContainer, isStandalone: true, selector: \"cdk-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.id\": \"_config.id || null\", \"attr.role\": \"_config.role\", \"attr.aria-modal\": \"_config.ariaModal\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\" }, classAttribute: \"cdk-dialog-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'cdk-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.id]': '_config.id || null',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    }, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DialogConfig]\n                }] }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n    constructor(overlayRef, config) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        /** Emits when the dialog has been closed. */\n        this.closed = new Subject();\n        this.disableClose = config.disableClose;\n        this.backdropClick = overlayRef.backdropClick();\n        this.keydownEvents = overlayRef.keydownEvents();\n        this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n        this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n        this.keydownEvents.subscribe(event => {\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.close(undefined, { focusOrigin: 'keyboard' });\n            }\n        });\n        this.backdropClick.subscribe(() => {\n            if (!this.disableClose) {\n                this.close(undefined, { focusOrigin: 'mouse' });\n            }\n        });\n        this._detachSubscription = overlayRef.detachments().subscribe(() => {\n            // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n            if (config.closeOnOverlayDetachments !== false) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param result Optional result to return to the dialog opener.\n     * @param options Additional options to customize the closing behavior.\n     */\n    close(result, options) {\n        if (this.containerInstance) {\n            const closedSubject = this.closed;\n            this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n            // Drop the detach subscription first since it can be triggered by the\n            // `dispose` call and override the result of this closing sequence.\n            this._detachSubscription.unsubscribe();\n            this.overlayRef.dispose();\n            closedSubject.next(result);\n            closedSubject.complete();\n            this.componentInstance = this.containerInstance = null;\n        }\n    }\n    /** Updates the position of the dialog based on the current position strategy. */\n    updatePosition() {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this.overlayRef.updateSize({ width, height });\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this.overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this.overlayRef.removePanelClass(classes);\n        return this;\n    }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaults = (this._defaultOptions || new DialogConfig());\n        config = { ...defaults, ...config };\n        config.id = config.id || `cdk-dialog-${uniqueId++}`;\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayConfig = this._getOverlayConfig(config);\n        const overlayRef = this._overlay.create(overlayConfig);\n        const dialogRef = new DialogRef(overlayRef, config);\n        const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n        dialogRef.containerInstance = dialogContainer;\n        this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n        // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n        // determines when `aria-hidden` is removed from elements outside the dialog.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => {\n            // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n            if (dialog.config.closeOnDestroy === false) {\n                this._removeOpenDialog(dialog, false);\n            }\n        });\n        // Make a second pass and close the remaining dialogs. We do this second pass in order to\n        // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n        // that should be closed and dialogs that should not.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n        const state = new OverlayConfig({\n            positionStrategy: config.positionStrategy ||\n                this._overlay.position().global().centerHorizontally().centerVertically(),\n            scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n            panelClass: config.panelClass,\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            width: config.width,\n            height: config.height,\n            disposeOnNavigation: config.closeOnNavigation,\n        });\n        if (config.backdropClass) {\n            state.backdropClass = config.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DialogConfig, useValue: config },\n            { provide: DialogRef, useValue: dialogRef },\n            { provide: OverlayRef, useValue: overlay },\n        ];\n        let containerType;\n        if (config.container) {\n            if (typeof config.container === 'function') {\n                containerType = config.container;\n            }\n            else {\n                containerType = config.container.type;\n                providers.push(...config.container.providers(config));\n            }\n        }\n        else {\n            containerType = CdkDialogContainer;\n        }\n        const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({ parent: userInjector || this._injector, providers }), config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n            let context = { $implicit: config.data, dialogRef };\n            if (config.templateContext) {\n                context = {\n                    ...context,\n                    ...(typeof config.templateContext === 'function'\n                        ? config.templateContext()\n                        : config.templateContext),\n                };\n            }\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentRef = contentRef;\n            dialogRef.componentInstance = contentRef.instance;\n        }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DIALOG_DATA, useValue: config.data },\n            { provide: DialogRef, useValue: dialogRef },\n        ];\n        if (config.providers) {\n            if (typeof config.providers === 'function') {\n                providers.push(...config.providers(dialogRef, config, dialogContainer));\n            }\n            else {\n                providers.push(...config.providers);\n            }\n        }\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, { optional: true }))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || fallbackInjector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                if (emitEvent) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Dialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: DEFAULT_DIALOG_CONFIG, optional: true }, { token: Dialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: DIALOG_SCROLL_STRATEGY }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Dialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Dialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: DialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEFAULT_DIALOG_CONFIG]\n                }] }, { type: Dialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DIALOG_SCROLL_STRATEGY]\n                }] }] });\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n    let i = items.length;\n    while (i--) {\n        callback(items[i]);\n    }\n}\n\nclass DialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: DialogModule, imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer], exports: [\n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule,\n            CdkDialogContainer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: DialogModule, providers: [Dialog], imports: [OverlayModule, PortalModule, A11yModule, \n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n                    exports: [\n                        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n                        // don't have to remember to import it or be faced with an unhelpful error.\n                        PortalModule,\n                        CdkDialogContainer,\n                    ],\n                    providers: [Dialog],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\nclass LayoutModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: LayoutModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: LayoutModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform, _nonce) {\n        this._platform = _platform;\n        this._nonce = _nonce;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query, this._nonce);\n        }\n        return this._matchMedia(query);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }, { token: CSP_NONCE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MediaMatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }] });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            if (nonce) {\n                mediaQueryStyleNode.nonce = nonce;\n            }\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: MediaMatcher }, { type: i0.NgZone }] });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, booleanAttribute, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ContentObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: MutationObserverFactory }] });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkObserveContent, isStandalone: true, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\", booleanAttribute], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkObserveContentDisabled', transform: booleanAttribute }]\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ObserversModule, imports: [CdkObserveContent], exports: [CdkObserveContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkObserveContent],\n                    exports: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, ElementRef, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, inject, Directive, EventEmitter, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport { filter, take, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n            return (!scrollable ||\n                !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement));\n        }));\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._ngZone = _ngZone;\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    const keydownEvents = overlays[i]._keydownEvents;\n                    /** @breaking-change 14.0.0 _ngZone will be required. */\n                    if (this._ngZone) {\n                        this._ngZone.run(() => keydownEvents.next(event));\n                    }\n                    else {\n                        keydownEvents.next(event);\n                    }\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n            }\n            else {\n                this._document.body.addEventListener('keydown', this._keydownListener);\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }] });\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                const outsidePointerEvents = overlayRef._outsidePointerEvents;\n                /** @breaking-change 14.0.0 _ngZone will be required. */\n                if (this._ngZone) {\n                    this._ngZone.run(() => outsidePointerEvents.next(event));\n                }\n                else {\n                    outsidePointerEvents.next(event);\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n            }\n            else {\n                this._addEventListeners(body);\n            }\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    _addEventListeners(body) {\n        body.addEventListener('pointerdown', this._pointerDownListener, true);\n        body.addEventListener('click', this._clickListener, true);\n        body.addEventListener('auxclick', this._clickListener, true);\n        body.addEventListener('contextmenu', this._clickListener, true);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }] });\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        this._backdropTransitionendHandler = (event) => {\n            this._disposeBackdrop(event.target);\n        };\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._animationsDisabled) {\n            this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        if (this._animationsDisabled) {\n            this._disposeBackdrop(backdropToDetach);\n            return;\n        }\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n            this._disposeBackdrop(backdropToDetach);\n        }, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.removeEventListener('click', this._backdropClickHandler);\n            backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n        if (this._backdropTimeout) {\n            clearTimeout(this._backdropTimeout);\n            this._backdropTimeout = undefined;\n        }\n    }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the DOMRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._alignItems = '';\n        this._xPosition = '';\n        this._xOffset = '';\n        this._width = '';\n        this._height = '';\n        this._isDisposed = false;\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: OverlayContainer }] });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations');\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Overlay, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }, {\n                    type: Optional\n                }] }] });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n    },\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkOverlayOrigin, isStandalone: true, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n    get disposeOnNavigation() {\n        return this._disposeOnNavigation;\n    }\n    set disposeOnNavigation(value) {\n        this._disposeOnNavigation = value;\n    }\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        this._disposeOnNavigation = false;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Whether or not the overlay should attach a backdrop. */\n        this.hasBackdrop = false;\n        /** Whether or not the overlay should be locked when scrolling. */\n        this.lockPosition = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this.flexibleDimensions = false;\n        /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n        this.growAfterOpen = false;\n        /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n        this.push = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n            disposeOnNavigation: this.disposeOnNavigation,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkConnectedOverlay, isStandalone: true, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute], push: [\"cdkConnectedOverlayPush\", \"push\", booleanAttribute], disposeOnNavigation: [\"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                }] }, { type: i5.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayHasBackdrop', transform: booleanAttribute }]\n            }], lockPosition: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayLockPosition', transform: booleanAttribute }]\n            }], flexibleDimensions: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayFlexibleDimensions', transform: booleanAttribute }]\n            }], growAfterOpen: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayGrowAfterOpen', transform: booleanAttribute }]\n            }], push: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayPush', transform: booleanAttribute }]\n            }], disposeOnNavigation: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayDisposeOnNavigation', transform: booleanAttribute }]\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nclass OverlayModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayModule, imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Platform, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nclass PlatformModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PlatformModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PlatformModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType;\n(function (RtlScrollAxisType) {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n})(RtlScrollAxisType || (RtlScrollAxisType = {}));\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, RtlScrollAxisType, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Injector, Directive, EventEmitter, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver, projectableNodes) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.projectableNodes = projectableNodes;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef, \n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef, \n    /** Contextual data to be passed in to the embedded view. */\n    context, \n    /** The injector to use for the embedded view. */\n    injector) {\n        super();\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n        this.injector = injector;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _componentFactoryResolver Used to resolve the component factory.\n     *   Only required when attaching component portals.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     * @param _document Reference to the document. Used when attaching a DOM portal. Will eventually\n     *   become a required parameter.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = (portal.componentFactoryResolver || this._componentFactoryResolver);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !resolver) {\n            throw Error('Cannot attach component portal to outlet without a ComponentFactoryResolver.');\n        }\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector, portal.projectableNodes || undefined);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector || Injector.NULL);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (this._appRef.viewCount > 0) {\n                    this._appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkPortal, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkPortal, isStandalone: true, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }] });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: TemplatePortalDirective, isStandalone: true, selector: \"[cdk-portal], [portal]\", providers: [\n            {\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective,\n            },\n        ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedRef = this._attachedPortal = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector, portal.projectableNodes || undefined);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkPortalOutlet, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkPortalOutlet, isStandalone: true, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                    inputs: ['portal: cdkPortalOutlet'],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: PortalHostDirective, isStandalone: true, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n            {\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective,\n            },\n        ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: ['portal: cdkPortalHost'],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }] });\nclass PortalModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalModule, imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkFixedSizeVirtualScroll, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    standalone: true,\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollDispatcher, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll')\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkScrollable, isStandalone: true, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ViewportRuler, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ViewportRuler, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkVirtualScrollable, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        this.scrollable = scrollable;\n        this._platform = inject(Platform);\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        /**\n         * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n         * will be removed.\n         */\n        this.appendOnly = false;\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER), \n            // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n            // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n            // to unsubscribe here just in case.\n            takeUntil(this._destroyed))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: VIRTUAL_SCROLL_STRATEGY, optional: true }, { token: i2.Directionality, optional: true }, { token: ScrollDispatcher }, { token: ViewportRuler }, { token: VIRTUAL_SCROLLABLE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkVirtualScrollViewport, isStandalone: true, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute] }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n            },\n        ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLL_STRATEGY]\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: ScrollDispatcher }, { type: ViewportRuler }, { type: CdkVirtualScrollable, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLLABLE]\n                }] }], propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges.pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualForOf, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: _VIEW_REPEATER_STRATEGY }, { token: CdkVirtualScrollViewport, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkVirtualForOf, isStandalone: true, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: i2$1._RecycleViewRepeaterStrategy, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.NgZone }], propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkVirtualScrollableElement, isStandalone: true, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor(scrollDispatcher, ngZone, dir) {\n        super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [{ token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkVirtualScrollableWindow, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\nclass CdkScrollableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollableModule, imports: [CdkScrollable], exports: [CdkScrollable] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollableModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    imports: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport,\n            CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollViewport,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollingModule, imports: [BidiModule,\n            CdkScrollableModule, BidiModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkVirtualScrollViewport,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, InjectionToken, inject, ANIMATION_MODULE_TYPE as ANIMATION_MODULE_TYPE$1, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { MatCommonModule } from '@angular/material/core';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n    constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, _animationMode, focusMonitor) {\n        super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n        this._animationMode = _animationMode;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Whether animations are enabled. */\n        this._animationsEnabled = this._animationMode !== 'NoopAnimations';\n        /** Host element of the dialog container component. */\n        this._hostElement = this._elementRef.nativeElement;\n        /** Duration of the dialog open animation. */\n        this._enterAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION\n            : 0;\n        /** Duration of the dialog close animation. */\n        this._exitAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION\n            : 0;\n        /** Current timer for dialog animations. */\n        this._animationTimer = null;\n        /**\n         * Completes the dialog open by clearing potential animation classes, trapping\n         * focus and emitting an opened event.\n         */\n        this._finishDialogOpen = () => {\n            this._clearAnimationClasses();\n            this._openAnimationDone(this._enterAnimationDuration);\n        };\n        /**\n         * Completes the dialog close by clearing potential animation classes, restoring\n         * focus and emitting a closed event.\n         */\n        this._finishDialogClose = () => {\n            this._clearAnimationClasses();\n            this._animationStateChanged.emit({ state: 'closed', totalTime: this._exitAnimationDuration });\n        };\n    }\n    _contentAttached() {\n        // Delegate to the original dialog-container initialization (i.e. saving the\n        // previous element, setting up the focus trap and moving focus to the container).\n        super._contentAttached();\n        // Note: Usually we would be able to use the MDC dialog foundation here to handle\n        // the dialog animation for us, but there are a few reasons why we just leverage\n        // their styles and not use the runtime foundation code:\n        //   1. Foundation does not allow us to disable animations.\n        //   2. Foundation contains unnecessary features we don't need and aren't\n        //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n        //   3. Foundation uses unnecessary timers for animations to work around limitations\n        //      in React's `setState` mechanism.\n        //      https://github.com/material-components/material-components-web/pull/3682.\n        this._startOpenAnimation();\n    }\n    /** Starts the dialog open animation if enabled. */\n    _startOpenAnimation() {\n        this._animationStateChanged.emit({ state: 'opening', totalTime: this._enterAnimationDuration });\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            // One would expect that the open class is added once the animation finished, but MDC\n            // uses the open class in combination with the opening class to start the animation.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n            this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n        }\n        else {\n            this._hostElement.classList.add(OPEN_CLASS);\n            // Note: We could immediately finish the dialog opening here with noop animations,\n            // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n            // Executing this immediately would mean that `afterOpened` emits synchronously\n            // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n            Promise.resolve().then(() => this._finishDialogOpen());\n        }\n    }\n    /**\n     * Starts the exit animation of the dialog if enabled. This method is\n     * called by the dialog ref.\n     */\n    _startExitAnimation() {\n        this._animationStateChanged.emit({ state: 'closing', totalTime: this._exitAnimationDuration });\n        this._hostElement.classList.remove(OPEN_CLASS);\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n            this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n        }\n        else {\n            // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n            // set up before any user can subscribe to the backdrop click. The subscription triggers\n            // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n            // animation state event if animations are disabled, the overlay would be disposed\n            // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n            // skipped. We work around this by waiting with the dialog close until the next tick when\n            // all subscriptions have been fired as expected. This is not an ideal solution, but\n            // there doesn't seem to be any other good way. Alternatives that have been considered:\n            //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n            //      Also this issue is specific to the MDC implementation where the dialog could\n            //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n            //      and closing always takes at least a tick.\n            //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n            //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n            //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n            // Based on the fact that this is specific to the MDC-based implementation of the dialog\n            // animations, the defer is applied here.\n            Promise.resolve().then(() => this._finishDialogClose());\n        }\n    }\n    /** Clears all dialog animation classes. */\n    _clearAnimationClasses() {\n        this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n    }\n    _waitForAnimationToComplete(duration, callback) {\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n        // Note that we want this timer to run inside the NgZone, because we want\n        // the related events like `afterClosed` to be inside the zone as well.\n        this._animationTimer = setTimeout(callback, duration);\n    }\n    /** Runs a callback in `requestAnimationFrame`, if available. */\n    _requestAnimationFrame(callback) {\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame === 'function') {\n                requestAnimationFrame(callback);\n            }\n            else {\n                callback();\n            }\n        });\n    }\n    _captureInitialFocus() {\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n        if (this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n        this._animationStateChanged.next({ state: 'opened', totalTime });\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n    }\n    attachComponentPortal(portal) {\n        // When a component is passed into the dialog, the host element interrupts\n        // the `display:flex` from affecting the dialog title, content, and\n        // actions. To fix this, we make the component host `display: contents` by\n        // marking its host with the `mat-mdc-dialog-component-host` class.\n        //\n        // Note that this problem does not exist when a template ref is used since\n        // the title, contents, and actions are then nested directly under the\n        // dialog surface.\n        const ref = super.attachComponentPortal(portal);\n        ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n        return ref;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatDialogContainer, isStandalone: true, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.aria-modal\": \"_config.ariaModal\", \"id\": \"_config.id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-mdc-dialog-container mdc-dialog\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0;transform:scale(0.8)}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--closing .mdc-dialog__surface{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{opacity:1}.mdc-dialog--open .mdc-dialog__surface{transform:none}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{width:100%;height:100%}.mat-mdc-dialog-component-host{display:contents}.mat-mdc-dialog-container{--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'mat-mdc-dialog-container mdc-dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[id]': '_config.id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0;transform:scale(0.8)}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--closing .mdc-dialog__surface{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{opacity:1}.mdc-dialog--open .mdc-dialog__surface{transform:none}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{width:100%;height:100%}.mat-mdc-dialog-component-host{display:contents}.mat-mdc-dialog-container{--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: i1.FocusMonitor }] });\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n    if (time == null) {\n        return null;\n    }\n    if (typeof time === 'number') {\n        return time;\n    }\n    if (time.endsWith('ms')) {\n        return coerceNumberProperty(time.substring(0, time.length - 2));\n    }\n    if (time.endsWith('s')) {\n        return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n    }\n    if (time === '0') {\n        return 0;\n    }\n    return null; // anything else is invalid.\n}\n\nvar MatDialogState;\n(function (MatDialogState) {\n    MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n    MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n    MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_ref, config, _containerInstance) {\n        this._ref = _ref;\n        this._containerInstance = _containerInstance;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = MatDialogState.OPEN;\n        this.disableClose = config.disableClose;\n        this.id = _ref.id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _ref.overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._finishDialogClose();\n        });\n        merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n            if (!this.disableClose) {\n                event.preventDefault();\n                _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._ref.overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = MatDialogState.CLOSING;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._ref.closed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._ref.backdropClick;\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._ref.keydownEvents;\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._ref.config.positionStrategy;\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._ref.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._ref.updateSize(width, height);\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._ref.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._ref.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = MatDialogState.CLOSED;\n        this._ref.close(this._result, { focusOrigin: this._closeInteractionType });\n        this.componentInstance = null;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    ref._closeInteractionType = interactionType;\n    return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    constructor(_overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, _defaultOptions, _scrollStrategy, _parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    _overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._defaultOptions = _defaultOptions;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentDialog = _parentDialog;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this.dialogConfigClass = MatDialogConfig;\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._dialog = injector.get(Dialog);\n        this._dialogRefConstructor = MatDialogRef;\n        this._dialogContainerType = MatDialogContainer;\n        this._dialogDataToken = MAT_DIALOG_DATA;\n    }\n    open(componentOrTemplateRef, config) {\n        let dialogRef;\n        config = { ...(this._defaultOptions || new MatDialogConfig()), ...config };\n        config.id = config.id || `mat-mdc-dialog-${uniqueId++}`;\n        config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n        const cdkRef = this._dialog.open(componentOrTemplateRef, {\n            ...config,\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n            // Disable closing since we need to sync it up to the animation ourselves.\n            disableClose: true,\n            // Disable closing on destroy, because this service cleans up its open dialogs as well.\n            // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n            // the dialogs immediately whereas we want it to wait for the animations to finish.\n            closeOnDestroy: false,\n            // Disable closing on detachments so that we can sync up the animation.\n            // The Material dialog ref handles this manually.\n            closeOnOverlayDetachments: false,\n            container: {\n                type: this._dialogContainerType,\n                providers: () => [\n                    // Provide our config as the CDK config as well since it has the same interface as the\n                    // CDK one, but it contains the actual values passed in by the user for things like\n                    // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n                    { provide: this.dialogConfigClass, useValue: config },\n                    { provide: DialogConfig, useValue: config },\n                ],\n            },\n            templateContext: () => ({ dialogRef }),\n            providers: (ref, cdkConfig, dialogContainer) => {\n                dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n                dialogRef.updatePosition(config?.position);\n                return [\n                    { provide: this._dialogContainerType, useValue: dialogContainer },\n                    { provide: this._dialogDataToken, useValue: cdkConfig.data },\n                    { provide: this._dialogRefConstructor, useValue: dialogRef },\n                ];\n            },\n        });\n        // This can't be assigned in the `providers` callback, because\n        // the instance hasn't been assigned to the CDK ref yet.\n        dialogRef.componentRef = cdkRef.componentRef;\n        dialogRef.componentInstance = cdkRef.componentInstance;\n        this.openDialogs.push(dialogRef);\n        this.afterOpened.next(dialogRef);\n        dialogRef.afterClosed().subscribe(() => {\n            const index = this.openDialogs.indexOf(dialogRef);\n            if (index > -1) {\n                this.openDialogs.splice(index, 1);\n                if (!this.openDialogs.length) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE$1, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                    type: Optional\n                }] }, { type: MatDialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_SCROLL_STRATEGY]\n                }] }, { type: MatDialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE$1]\n                }] }] });\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatDialogClose, isStandalone: true, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    standalone: true,\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-mdc-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                // Note: we null check the queue, because there are some internal\n                // tests that are mocking out `MatDialogRef` incorrectly.\n                this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n            });\n        }\n    }\n    ngOnDestroy() {\n        // Note: we null check because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        const instance = this._dialogRef?._containerInstance;\n        if (instance) {\n            Promise.resolve().then(() => {\n                instance._removeAriaLabelledBy?.(this.id);\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatDialogTitle, isStandalone: true, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-dialog-title mdc-dialog__title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }], propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatDialogContent, isStandalone: true, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-mdc-dialog-content mdc-dialog__content\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-mdc-dialog-content mdc-dialog__content' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n    constructor() {\n        /**\n         * Horizontal alignment of action buttons.\n         */\n        this.align = 'start';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatDialogActions, isStandalone: true, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-dialog-actions-align-center\": \"align === \\\"center\\\"\", \"class.mat-mdc-dialog-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-dialog-actions mdc-dialog__actions\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n                        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n                        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\nconst DIRECTIVES = [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n];\nclass MatDialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogModule, imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent], exports: [MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogModule, providers: [MatDialog], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatDialog],\n                }]\n        }] });\n\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst _defaultParams = {\n    params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' },\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n        transition('* => void, * => exit', group([\n            animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n    ]),\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogState, MatDialogTitle, _closeDialogVia, _defaultParams, matDialogAnimations };\n"],"names":["DOCUMENT","i0","inject","APP_ID","Injectable","Inject","QueryList","booleanAttribute","Directive","Input","InjectionToken","Optional","EventEmitter","Output","NgModule","i1","Platform","_getFocusedElementPierceShadowDom","normalizePassiveListenerOptions","_getEventTarget","_getShadowRoot","Subject","Subscription","BehaviorSubject","of","hasModifierKey","A","Z","ZERO","NINE","PAGE_DOWN","PAGE_UP","END","HOME","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","TAB","ALT","CONTROL","MAC_META","META","SHIFT","tap","debounceTime","filter","map","take","skip","distinctUntilChanged","takeUntil","i1$1","ObserversModule","coerceElement","BreakpointObserver","ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","trim","some","existingId","push","setAttribute","join","removeAriaReferencedId","filteredIds","val","length","removeAttribute","attrValue","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","constructor","_document","_platform","_messageRegistry","Map","_messagesContainer","_id","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","remove","ngOnDestroy","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","delete","containerClassName","serverContainers","messagesContainer","style","visibility","classList","add","isBrowser","body","element","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","_","ɵfac","AriaDescriber_Factory","t","ɵɵinject","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","undefined","decorators","serviceId","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_homeAndEnd","_pageUpAndDown","enabled","delta","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","_itemChangesSubscription","changes","subscribe","newItems","itemArray","toArray","newIndex","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","withHorizontalOrientation","direction","_horizontal","withAllowedModifierKeys","keys","withTypeAhead","debounceInterval","getLabel","Error","unsubscribe","pipe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","cancelTypeahead","withHomeAndEnd","withPageUpDown","previousActiveItem","updateActiveItem","next","onKeydown","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","targetIndex","_setActiveItemByIndex","itemsLength","toLocaleUpperCase","String","fromCharCode","preventDefault","activeItemIndex","activeItem","isTyping","_setActiveItemByDelta","destroy","complete","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","arguments","_origin","setFocusOrigin","origin","focus","IsFocusableConfig","ignoreVisibility","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","WEBKIT","IOS","isPotentiallyTabbableIOS","FIREFOX","tabIndex","isFocusable","config","isPotentiallyFocusable","InteractivityChecker_Factory","window","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_enabled","value","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","startAnchor","endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","options","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","create","deferCaptureElements","FocusTrapFactory_Factory","NgZone","CdkTrapFocus","focusTrap","_elementRef","_focusTrapFactory","_previouslyFocusedElement","platform","nativeElement","ngAfterContentInit","autoCapture","_captureFocus","ngDoCheck","ngOnChanges","autoCaptureChange","firstChange","CdkTrapFocus_Factory","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","selectors","inputs","ɵɵInputFlags","HasDecoratorInputTransform","exportAs","standalone","features","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","selector","alias","transform","ConfigurableFocusTrap","_focusTrapManager","register","deregister","_inertStrategy","defer","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","target","focusTrapRoot","contains","closest","setTimeout","activeElement","FocusTrapManager","_focusTrapStack","ft","stack","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","isFakeMousedownFromScreenReader","buttons","detail","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","TOUCH_BUFFER_MS","modalityEventListenerOptions","passive","capture","InputModalityDetector","mostRecentModality","_modality","ngZone","document","_mostRecentTarget","_lastTouchMs","_onKeydown","_options","_onMousedown","Date","now","_onTouchstart","modalityDetected","modalityChanged","InputModalityDetector_Factory","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","elementClass","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","LiveAnnouncer_Factory","CdkAriaLive","_politeness","_subscription","_contentObserver","observe","elementText","_previousAnnouncedText","_liveAnnouncer","CdkAriaLive_Factory","ContentObserver","None","FocusMonitorDetectionMode","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","IMMEDIATE","monitor","checkChildren","rootNode","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","focusedElement","_getClosestElementsInfo","forEach","currentElement","_originChanged","_setOrigin","_info","_getWindow","doc","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","EVENTUAL","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","observers","run","rootNodeFocusListeners","modality","results","mostRecentTarget","labels","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","focusOrigin","ngAfterViewInit","_monitorSubscription","emit","CdkMonitorFocus_Factory","outputs","HighContrastMode","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","NONE","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","WHITE_ON_BLACK","BLACK_ON_WHITE","bodyClasses","mode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","A11yModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","navigator","language","test","Directionality","bodyDir","dir","htmlDir","documentElement","Directionality_Factory","Dir","_dir","_isInitialized","previousValue","_rawDir","Dir_Factory","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","ɵɵProvidersFeature","provide","useExisting","providers","host","BidiModule","BidiModule_Factory","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","elementOrRef","coerceStringArray","separator","result","sourceValues","split","sourceValue","trimmedString","ConnectableObservable","isObservable","DataSource","isDataSource","connect","ArrayDataSource","_data","disconnect","_ViewRepeaterOperation","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","applyChanges","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","context","INSERTED","REMOVED","move","MOVED","detach","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","REPLACED","_detachAndCacheView","_moveView","cachedView","_insertViewFromCache","$implicit","viewArgs","detachedView","_maybeCacheView","pop","insert","SelectionModel","selected","_selected","from","_selection","values","_multiple","initiallySelectedValues","_emitChanges","compareWith","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","select","_verifyValueAssignment","_hasQueuedChanges","_emitChangeEvent","deselect","_unmarkSelected","setSelection","oldValues","newSelectedSet","_getConcreteValue","isSelected","flushEvent","_unmarkAll","isEmpty","size","hasValue","sort","isMultipleSelection","source","added","removed","getMultipleValuesInSingleSelectionError","inputValue","selection","selectedValue","UniqueSelectionDispatcher","_listeners","notify","name","listener","listen","registered","UniqueSelectionDispatcher_Factory","Overlay","OverlayConfig","OverlayRef","OverlayModule","BasePortalOutlet","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","ChangeDetectorRef","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","Injector","TemplateRef","SkipSelf","ESCAPE","startWith","CdkDialogContainer_ng_template_0_Template","DialogConfig","panelClass","hasBackdrop","backdropClass","disableClose","width","height","data","ariaDescribedBy","ariaLabelledBy","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","closeOnOverlayDetachments","throwDialogContentAlreadyAttachedError","CdkDialogContainer","_config","_interactivityChecker","_overlayRef","_focusTrap","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_ariaLabelledByQueue","_changeDetectorRef","attachDomPortal","portal","_portalOutlet","_contentAttached","_addAriaLabelledBy","markForCheck","_removeAriaLabelledBy","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_restoreFocus","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_forceFocus","callback","_focusByCssSelector","elementToFocus","then","focusedSuccessfully","_focusDialogContainer","focusConfig","focusTargetElement","backdropClick","CdkDialogContainer_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","CdkDialogContainer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","CdkDialogContainer_HostBindings","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","CdkDialogContainer_Template","ɵɵtemplate","dependencies","styles","encapsulation","changeDetection","Default","static","DialogRef","overlayRef","closed","keydownEvents","outsidePointerEvents","close","_detachSubscription","detachments","containerInstance","closedSubject","dispose","componentInstance","updatePosition","updateSize","addPanelClass","classes","removePanelClass","DIALOG_SCROLL_STRATEGY","overlay","scrollStrategies","block","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","DIALOG_SCROLL_STRATEGY_PROVIDER","deps","useFactory","uniqueId","Dialog","openDialogs","_parentDialog","_openDialogsAtThisLevel","afterOpened","_afterOpenedAtThisLevel","_overlay","_injector","_overlayContainer","scrollStrategy","_afterAllClosedAtThisLevel","_ariaHiddenElements","afterAllClosed","_getAfterAllClosed","_scrollStrategy","open","componentOrTemplateRef","defaults","getDialogById","overlayConfig","_getOverlayConfig","dialogRef","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","reverseForEach","dialog","find","state","positionStrategy","global","centerHorizontally","centerVertically","minWidth","minHeight","maxWidth","maxHeight","disposeOnNavigation","userInjector","injector","useValue","containerType","container","containerPortal","parent","componentFactoryResolver","containerRef","attach","instance","_createInjector","templateContext","contentRef","componentRef","fallbackInjector","optional","emitEvent","overlayContainer","getContainerElement","siblings","sibling","Dialog_Factory","OverlayContainer","DialogModule","DialogModule_Factory","MAC_ENTER","BACKSPACE","NUM_CENTER","ENTER","PAUSE","CAPS_LOCK","SPACE","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","altKey","shiftKey","ctrlKey","metaKey","CSP_NONCE","combineLatest","concat","Observable","LayoutModule","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_nonce","_matchMedia","matchMedia","bind","noopMatchMedia","query","BLINK","createEmptyStyleRule","MediaMatcher_Factory","nonce","head","sheet","insertRule","error","matches","media","addListener","removeListener","_mediaMatcher","_zone","_queries","_destroySubject","isMatched","queries","splitQueries","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","breakpointStates","response","breakpoints","queryObservable","observer","handler","output","BreakpointObserver_Factory","reduce","a1","a2","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","MutationObserverFactory","MutationObserver","MutationObserverFactory_Factory","_mutationObserverFactory","_observedElements","_cleanupObserver","stream","_observeElement","subscription","_unobserveElement","mutations","characterData","childList","subtree","count","ContentObserver_Factory","CdkObserveContent","_disabled","_unsubscribe","_subscribe","debounce","_debounce","_currentSubscription","CdkObserveContent_Factory","ObserversModule_Factory","ScrollingModule","CdkScrollable","ScrollDispatcher","ViewportRuler","i6","ApplicationRef","ANIMATION_MODULE_TYPE","supportsScrollBehavior","_isTestEnvironment","takeWhile","i5","DomPortalOutlet","merge","scrollBehaviorSupported","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","top","left","_isEnabled","enable","_canBeEnabled","_previousScrollPosition","getViewportScrollPosition","disable","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","getViewportSize","scrollHeight","scrollWidth","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_scrollSubscription","_detach","scrolled","scrollable","overlayElement","getElementRef","threshold","_initialScrollPosition","scrollPosition","Math","abs","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","reposition","ScrollStrategyOptions_Factory","configKeys","Object","ConnectionPositionPair","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_keydownListener","overlays","_keydownEvents","_isAttached","OverlayKeyboardDispatcher_Factory","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","slice","_outsidePointerEvents","_addEventListeners","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","_containerElement","_createContainer","containerClass","oppositePlatformContainers","OverlayContainer_Factory","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_backdropTransitionendHandler","_disposeBackdrop","_positionStrategy","backdropElement","_previousHostParent","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","_togglePointerEvents","_attachBackdrop","_toggleClasses","onDestroy","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","attachments","getConfig","apply","updatePositionStrategy","strategy","sizeConfig","setDirection","getDirection","updateScrollStrategy","enablePointer","pointerEvents","showingClass","requestAnimationFrame","backdropToDetach","_backdropTimeout","cssClasses","isAdd","c","backdrop","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","positions","_preferredPositions","connectedTo","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","_containerRect","originRect","viewportRect","containerRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","_hasExactPosition","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","axis","pair","cssClass","Element","destination","hasOwnProperty","input","units","clientRect","floor","STANDARD_DROPDOWN_BELOW_POSITIONS","STANDARD_DROPDOWN_ADJACENT_POSITIONS","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","end","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","OverlayPositionBuilder","flexibleConnectedTo","OverlayPositionBuilder_Factory","nextUniqueId","_componentFactoryResolver","_positionBuilder","_directionality","_animationsModuleType","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","_appRef","Overlay_Factory","ComponentFactoryResolver","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","CdkOverlayOrigin_Factory","CdkConnectedOverlay","_position","_updatePositionStrategy","_disposeOnNavigation","scrollStrategyFactory","_backdropSubscription","_attachSubscription","_positionSubscription","viewportMargin","lockPosition","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","CdkConnectedOverlay_Factory","ViewContainerRef","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule_Factory","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","PLATFORM_ID","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","_platformId","EDGE","userAgent","TRIDENT","chrome","CSS","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","RtlScrollAxisType","rtlScrollAxisType","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","NORMAL","scrollContainer","containerStyle","overflow","content","contentStyle","scrollLeft","NEGATED","INVERTED","shadowDomIsSupported","_supportsShadowDom","createShadowRoot","attachShadow","getRootNode","ShadowRoot","shadowRoot","newActiveElement","composedPath","__karma__","jasmine","jest","Mocha","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","_attachedHost","setAttachedHost","component","projectableNodes","DomPortal","_attachedPortal","_invokeDisposeFn","setDisposeFn","_disposeFn","BasePortalHost","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","createComponent","NULL","attachView","hostView","viewCount","detachView","_getComponentRootNode","viewContainer","viewRef","rootNodes","detectChanges","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","ɵTemplatePortalDirective_BaseFactory","TemplatePortalDirective_Factory","ɵɵgetInheritedFactory","_viewContainerRef","attached","_getRootNode","attachedRef","_attachedRef","ngOnInit","ref","CdkPortalOutlet_Factory","PortalHostDirective","ɵPortalHostDirective_BaseFactory","PortalHostDirective_Factory","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","forwardRef","fromEvent","animationFrameScheduler","asapScheduler","auditTime","pairwise","switchMap","shareReplay","i2","i2$1","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","scrollDispatcher","_destroyed","_elementScrolled","_applyScrollToOptions","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","_change","_changeListener","_viewportSize","_updateViewportSize","getViewportRect","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","VIRTUAL_SCROLLABLE","CdkVirtualScrollable","measureViewportSize","orientation","viewportEl","CdkVirtualScrollable_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_orientation","_calculateSpacerSize","viewportRuler","_detachedSubject","_renderedRangeSubject","appendOnly","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","newLength","_doChangeDetection","measureBoundingClientRectWithScrollOffset","range","getOffsetToRenderedContentStart","to","isHorizontal","axisDirection","_renderedContentTransform","measureRenderedContentSize","_from","measureViewportOffset","fromRect","scrollerClientRect","viewportClientRect","contentEl","_contentWrapper","measureRangeSize","runAfter","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","CdkVirtualScrollViewport_Query","CdkVirtualScrollViewport_HostBindings","ɵɵclassProp","virtualScrollable","ngContentSelectors","CdkVirtualScrollViewport_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵstyleProp","OnPush","getOffset","rect","CdkVirtualForOf","cdkVirtualForOf","_cdkVirtualForOf","_dataSourceChanges","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","_needsUpdate","cdkVirtualForTemplate","_template","cdkVirtualForTemplateCacheSize","_viewRepeater","_differs","viewChange","prev","cur","_changeDataSource","_differ","_onRenderedDataChange","renderedStartIndex","rangeLen","firstNode","lastNode","diff","_renderedItems","_updateContext","_applyChanges","oldDs","newDs","_updateComputedContextProperties","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","CdkVirtualForOf_Factory","IterableDiffers","useClass","CdkVirtualScrollableElement","CdkVirtualScrollableElement_Factory","CdkVirtualScrollableWindow","CdkVirtualScrollableWindow_Factory","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule_Factory","ANIMATION_MODULE_TYPE$1","MatCommonModule","trigger","transition","group","animate","animateChild","MatDialogContainer_ng_template_2_Template","MatDialogConfig","delayFocusTrap","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","OPEN_ANIMATION_DURATION","CLOSE_ANIMATION_DURATION","MatDialogContainer","focusTrapFactory","dialogConfig","interactivityChecker","_animationMode","focusMonitor","_animationStateChanged","_animationsEnabled","_hostElement","_enterAnimationDuration","parseCssTime","enterAnimationDuration","_exitAnimationDuration","exitAnimationDuration","_animationTimer","_finishDialogOpen","_clearAnimationClasses","_openAnimationDone","_finishDialogClose","totalTime","_startOpenAnimation","setProperty","TRANSITION_DURATION_PROPERTY","_requestAnimationFrame","_waitForAnimationToComplete","_startExitAnimation","location","MatDialogContainer_Factory","MatDialogContainer_HostBindings","ɵɵhostProperty","MatDialogContainer_Template","time","endsWith","substring","MatDialogState","MatDialogRef","_ref","_containerInstance","_afterOpened","_beforeClosed","_state","OPEN","_closeFallbackTimeout","_result","_closeDialogVia","dialogResult","CLOSING","afterClosed","beforeClosed","getState","CLOSED","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","MatDialog","dialogConfigClass","_dialog","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","cdkRef","cdkConfig","_closeDialogs","dialogs","MatDialog_Factory","dialogElementUid","MatDialogClose","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","MatDialogClose_Factory","MatDialogClose_HostBindings","ɵɵlistener","MatDialogClose_click_HostBindingHandler","$event","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","align","MatDialogActions_Factory","MatDialogActions_HostBindings","DIRECTIVES","MatDialogModule","MatDialogModule_Factory","_defaultParams","params","matDialogAnimations","opacity"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}