{"version":3,"file":"libs_sales_address_ui_src_index_ts-_14b60.js","mappings":"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","sources":["./libs/sales/address/ui/src/index.ts","./libs/sales/address/ui/src/lib/address-list/address-list.component.ts","./libs/sales/address/ui/src/lib/address-list/address-list.component.html","./libs/sales/address/ui/src/lib/constants/installation-address.const.ts","./libs/sales/address/ui/src/lib/events/installation-address-step-finished.const.ts","./libs/sales/address/ui/src/lib/installation-address/installation-address.component.ts","./libs/sales/address/ui/src/lib/installation-address/installation-address.component.html"],"sourcesContent":["export * from './lib/installation-address/installation-address.component';\nexport * from './lib/address-list/address-list.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { InstallationAddressInterface } from '@sales/address/data-access';\nimport { InstallationAddressComponent } from '../installation-address/installation-address.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'tg-sales-address-list',\n  standalone: true,\n  imports: [InstallationAddressComponent, TranslateModule, NgClass],\n  templateUrl: './address-list.component.html',\n})\nexport class AddressListComponent {\n  @Input() addresses: InstallationAddressInterface[] = [];\n\n  @Output() addressSelected = new EventEmitter<InstallationAddressInterface>();\n\n  showAddress = true;\n\n  onAddressSelected(address: InstallationAddressInterface): void {\n    this.addressSelected.emit(address);\n  }\n}\n","<div class=\"installation-location__content px--xxs\">\n  <div class=\"installation-location__title row row--no-gutters justify-content--between mb--l font-weight--bold\">\n    <div class=\"heading--6 heading--nomargin\">\n      {{ 'ng.sales-checkout.lbl.select-installation-location.location-title' | translate }}\n    </div>\n    <i\n      class=\"icon\"\n      data-cy=\"address-list-chevron\"\n      [ngClass]=\"showAddress ? 'icon-chevron-up' : 'icon-chevron-down'\"\n      (click)=\"showAddress = !showAddress\"></i>\n  </div>\n  <div\n    class=\"select-tile--group display--grid grid-template-column--1 gap--xm\"\n    data-cy=\"address-list\"\n    [class.display--none-important]=\"!showAddress\">\n    @for (address of addresses; track address.id; let i = $index) {\n      <tg-sales-installation-address [address]=\"address\" [index]=\"i\" (addressSelected)=\"onAddressSelected($event)\">\n      </tg-sales-installation-address>\n    }\n  </div>\n</div>\n","export const InstallationAddressStepKey = 'delivery';\nexport const stepImage = 'installation.svg';\n","import { EventInterface, EventTypeEnum, StepEventBody } from '@sales/events/data-access';\nimport { InstallationAddressStepKey } from '../constants/installation-address.const';\n\nexport const installationAddressStepFinished: EventInterface<StepEventBody> = {\n  eventType: EventTypeEnum.STEP_FINISHED,\n  body: {\n    stepKey: InstallationAddressStepKey,\n  },\n};\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { InstallationAddressInterface } from '@sales/address/data-access';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { StepComponent } from '@sales/shared/data-access';\nimport { Observable, of } from 'rxjs';\nimport { EventFacade } from '@sales/events/data-access';\nimport { installationAddressStepFinished } from '../events/installation-address-step-finished.const';\n\n@Component({\n  selector: 'tg-sales-installation-address',\n  standalone: true,\n  imports: [TranslateModule],\n  templateUrl: './installation-address.component.html',\n})\nexport class InstallationAddressComponent implements StepComponent {\n  @Input() address: InstallationAddressInterface | undefined;\n\n  @Input() index = 0;\n\n  @Output() addressSelected = new EventEmitter<InstallationAddressInterface>();\n\n  constructor(private readonly eventFacade: EventFacade) {}\n\n  onSelect() {\n    this.addressSelected.emit(this.address);\n  }\n\n  onNextStep(): Observable<boolean> {\n    this.eventFacade.triggerEvent(installationAddressStepFinished);\n    return of(false);\n  }\n}\n","<label\n  class=\"select-tile display--flex flex-direction--column m--n color-text animation-show-slide-up\"\n  data-cy=\"address-item\">\n  <div class=\"select-tile__content display--flex flex-direction--column flex-grow gap--xxs gap--xs--sm p--m p--l--sm\">\n    <div class=\"select-tile__content--inner display--flex flex-direction--column\">\n      <div class=\"display--flex gap--m gap--l--sm\">\n        <div class=\"select-tile__content_text display--flex flex-direction--column flex-grow gap--xxs\">\n          @if (address?.isNew) {\n            <div class=\"select-tile__badge_container display--flex gap--xxs flex-wrap--wrap\">\n              <div class=\"cmp-badge\">\n                <div class=\"background-jeans-blue_40 background-white color-text display--inline-flex\">\n                  <span class=\"font--caption-bold text-weight--xl space--nowrap\">\n                    {{ 'ng.sales-checkout.lbl.installation-address.new-line' | translate }}\n                  </span>\n                </div>\n              </div>\n            </div>\n          }\n          <div class=\"heading--6 heading--nomargin\" data-cy=\"installation-address-first-line\">\n            <span> {{ address?.street }} {{ address?.houseNumber }}</span>\n            @if (address?.subHouseNumber) {\n              <span>/{{ address?.subHouseNumber }}</span>\n            }\n            @if (address?.box) {\n              <span>/{{ address?.box }}</span>\n            }\n          </div>\n          <div class=\"font--caption-bold\" data-cy=\"installation-address-second-line\">\n            {{ address?.postalCode }} {{ address?.municipality }} , {{ address?.country }}\n          </div>\n        </div>\n        <input\n          data-cy=\"feat-installation-address-list-item\"\n          name=\"select-address-radio-group-name\"\n          id=\"choices-{{ index }}\"\n          type=\"radio\"\n          [checked]=\"address?.selected\"\n          (click)=\"onSelect()\"\n          class=\"select-tile__input display--flex align-items--center justify-content--center font--caption cursor--pointer border-radius--circle\" />\n      </div>\n    </div>\n  </div>\n</label>\n"],"names":["EventEmitter","InstallationAddressComponent","TranslateModule","NgClass","i0","ɵɵelementStart","ɵɵlistener","AddressListComponent_For_8_Template_tg_sales_installation_address_addressSelected_0_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","onAddressSelected","ɵɵelementEnd","ɵɵproperty","address_r1","i_r2","AddressListComponent","constructor","addresses","addressSelected","showAddress","address","emit","_","_2","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AddressListComponent_Template","rf","ctx","ɵɵtext","AddressListComponent_Template_i_click_5_listener","ɵɵrepeaterCreate","AddressListComponent_For_8_Template","_forTrack0","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵclassProp","ɵɵrepeater","i1","TranslatePipe","encapsulation","InstallationAddressStepKey","stepImage","EventTypeEnum","installationAddressStepFinished","eventType","STEP_FINISHED","body","stepKey","of","EventFacade","ctx_r1","subHouseNumber","ctx_r2","box","eventFacade","index","onSelect","onNextStep","triggerEvent","ɵɵdirectiveInject","InstallationAddressComponent_Template","ɵɵtemplate","InstallationAddressComponent_Conditional_5_Template","InstallationAddressComponent_Conditional_9_Template","InstallationAddressComponent_Conditional_10_Template","InstallationAddressComponent_Template_input_click_13_listener","ɵɵconditional","isNew","ɵɵtextInterpolate2","street","houseNumber","ɵɵtextInterpolate3","postalCode","municipality","country","ɵɵpropertyInterpolate1","selected","i2"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}