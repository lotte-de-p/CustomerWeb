{"version":3,"file":"apps_sales_sales-mfe_src_app_hardware-checkout_hardware-checkout_component_ts.js","mappings":"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","sources":["./apps/sales/sales-mfe/src/app/hardware-checkout/classes/hardware-checkout-error.class.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/constants/analytics/analytics.constants.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/constants/errors.constants.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/constants/hardware-checkout.constants.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/constants/omapi.constants.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/constants/ordercorrections.constants.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/constants/step.constants.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/enums/business-domains.enum.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/enums/error.enum.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/enums/omapi.enum.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/enums/order-item-action.enum.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/facades/hardware-checkout.facade.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/factory/event-strategy.factory.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/hardware-checkout.component.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/hardware-checkout.component.html","./apps/sales/sales-mfe/src/app/hardware-checkout/services/data-layer.service.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/services/hardware-checkout-helper.service.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/services/payment.service.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/services/reverse-proxy.service.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/delivery/delivery-address-changed.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/delivery/delivery-step-finished.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/delivery/delivery-step-loaded.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/error.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/etf/etf-step-finished-no-changes.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/etf/etf-step-finished.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/etf/etf-step-loaded.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/etf/etf-step-reloaded.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/navigation.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/no-action.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/summary/summary-show-contract-summary.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/summary/summary-step-finished.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/summary/summary-step-loaded.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/thank-you/thank-you-step-loaded.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/strategy/waiting-for-state-update.strategy.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/address.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/analytics.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/customer-account-details.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/customer-category.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/delivery.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/discount.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/header.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/omapi.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/order-item.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/payment-request.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/personal-info.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/sales-order.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/sdata-sales-offer.util.ts","./apps/sales/sales-mfe/src/app/hardware-checkout/utils/strategy.util.ts","./node_modules/@ngneat/until-destroy/fesm2022/ngneat-until-destroy.mjs"],"sourcesContent":["import { ErrorObject } from '../interfaces/error.interface';\n\nexport class HardwareCheckoutError extends Error {\n  errorObject: ErrorObject;\n  constructor(errorObject: ErrorObject) {\n    super(errorObject.key);\n    this.errorObject = errorObject;\n  }\n}\n","import { CategoryBuilder } from 'udl';\nimport { EventCategoryEnum } from '@telenet/ng-lib-datalayer';\n\nexport const HardwareCheckoutAnalytics = {\n  PAGE_ID: 'sales',\n  PAGE_NAME: 'sales',\n  FLOW: 'MARKETING',\n  SOURCE: 'MARKETING',\n  INTENT: 'hardware',\n};\n\nexport const PrimaryCategories = {\n  SALES: new CategoryBuilder().withPrimaryCategory(EventCategoryEnum.PRIMARY_CATEGORY_SALES).build(),\n};\n\nexport const Errors = {\n  CONSOLE_MESSAGE: 'Analytics issue: ',\n};\n","import { ErrorRedirectUrlEnum } from '../enums/error.enum';\nimport { ErrorObject } from '../interfaces/error.interface';\n\nexport const errorTitlePrefix = 'ng.sales-checkout.title.error-';\nexport const errorMessagePrefix = 'ng.sales-checkout.text.error-';\nexport const errorButtonPrefix = 'ng.sales-checkout.button.error-';\n\nexport const UserNotLoggedInError = 'UserNotLoggedIn';\n\nexport const GenericError: ErrorObject = {\n  key: 'HC-0000',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const GetCustomerDataError: ErrorObject = {\n  key: 'HC-0001',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const EventStrategyError: ErrorObject = {\n  key: 'HC-0002',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\nexport const NoHardwareItemsFound: ErrorObject = {\n  key: 'HC-0003',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const OrderItemCreationFailed: ErrorObject = {\n  key: 'HC-0004',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const SalesOfferNotFound: ErrorObject = {\n  key: 'HC-0005',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const DiscountRuleNotFound: ErrorObject = {\n  key: 'HC-0006',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const DiscountCouldNotBeRemoved: ErrorObject = {\n  key: 'HC-0007',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const DiscountCouldNotBeAdded: ErrorObject = {\n  key: 'HC-0008',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const SalesOrderNotSet: ErrorObject = {\n  key: 'HC-0009',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const EligibilityError: ErrorObject = {\n  key: 'HC-0010',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const ContractSummaryUrlError: ErrorObject = {\n  key: 'HC-0011',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const NoBillingAccount: ErrorObject = {\n  key: 'HC-0012',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const NoDeliveryOrderItemFound: ErrorObject = {\n  key: 'HC-0014',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const SubmitSalesOrderFailed: ErrorObject = {\n  key: 'HC-0015',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\nexport const UpdateHomeDeliveryCharsError: ErrorObject = {\n  key: 'HC-0016',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CheckoutDeliveryError: ErrorObject = {\n  key: 'HC-0017',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CouldNotReadContractSummaryRequired: ErrorObject = {\n  key: 'HC-0018',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CouldNotStoreSalesOrderOnSummary: ErrorObject = {\n  key: 'HC-0019',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CreatePaymentTransactionFailed: ErrorObject = {\n  key: 'HC-0020',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const updateAwaitingPaymentFailed: ErrorObject = {\n  key: 'HC-0021',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const HardwareCreationFailed: ErrorObject = {\n  key: 'HC-0022',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const UserNotLoggedIn: ErrorObject = {\n  key: 'HC-0023',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const OcapiNotConfigured: ErrorObject = {\n  key: 'HC-0024',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CustomerHasNoLocationAssociated: ErrorObject = {\n  key: 'HC-0025',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const NoHomeDeliveryOrderItem: ErrorObject = {\n  key: 'HC-0026',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CorruptSdata: ErrorObject = {\n  key: 'HC-0026',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const AemInputNotSet: ErrorObject = {\n  key: 'HC-0027',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CouldNotUpdateInstallationLocation: ErrorObject = {\n  key: 'HC-0028',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const AbandonableMailCouldNOtBeSet: ErrorObject = {\n  key: 'HC-0029',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const OmapiQueryNotConfigured: ErrorObject = {\n  key: 'HC-0030',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const PersonalIdentityCouldNotBeHandled: ErrorObject = {\n  key: 'HC-0031',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CustomerAccountCouldNotBeHandled: ErrorObject = {\n  key: 'HC-0032',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nconst PreviousProcessingBaseErrorObject: Omit<ErrorObject, 'key'> = {\n  titleKey: 'generic',\n  descriptionKey: 'previous-order-processing',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const MandatoryFieldsAreMissing: ErrorObject = {\n  key: 'HC-0034',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CouldNotParseAddress: ErrorObject = {\n  key: 'HC-0035',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const UpdateDeliveryCharsError: ErrorObject = {\n  key: 'HC-0036',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const FeasibilityError: ErrorObject = {\n  key: 'HC-0010',\n  titleKey: 'generic',\n  descriptionKey: 'generic',\n  buttonTextKey: 'generic',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const ProductNotActive: ErrorObject = {\n  key: 'HC-0031',\n  ...PreviousProcessingBaseErrorObject,\n};\n\nexport const PreviousSalesOrderStillInProcessing: ErrorObject = {\n  key: 'HC-0032',\n  ...PreviousProcessingBaseErrorObject,\n};\n\nexport const OperationProhibitedDueToIncompatibleStateOfOrderItem: ErrorObject = {\n  key: 'HC-0033',\n  ...PreviousProcessingBaseErrorObject,\n};\n\nexport const NcErrors: { key: string; error: ErrorObject }[] = [\n  {\n    key: 'OE-0100',\n    error: ProductNotActive,\n  },\n  {\n    key: 'OE-0071',\n    error: PreviousSalesOrderStillInProcessing,\n  },\n  {\n    key: 'OE-0069',\n    error: OperationProhibitedDueToIncompatibleStateOfOrderItem,\n  },\n];\n","export class HardwareCheckoutConstants {\n  static MESSAGE_GROUP = 'hardware-checkout';\n  static SDATA = 'sdata';\n  static SALES_ORDER_URL_ID = 'orderid';\n  static STATUS_URL = 'status';\n  static CONTRACT_SUMMARY_ENDPOINT = '/public/api/sales-service/v1/contractsummary/';\n  static ORDER_CORRECTION_IMAGE = 'order-correction.svg';\n  static ORDER_CORRECTION_MOBILE_IMAGE = 'order-correction-mobile.svg';\n}\n","export const preAndBackOrderLabelTagKeys = ['back_order_label', 'pre_order_label'];\n","import { ErrorRedirectUrlEnum } from '../enums/error.enum';\nimport { ErrorObject } from '../interfaces/error.interface';\n\nexport const OrderCorrectionTitlePrefix = 'ng.sales-checkout.title.order-correction-';\nexport const OrderCorrectionMessagePrefix = 'ng.sales-checkout.text.order-correction-';\nexport const OrderCorrectionButtonPrefix = 'ng.sales-checkout.button.order-correction-';\nexport const CustomerIncorrectStatus: ErrorObject = {\n  key: 'OC-0001',\n  titleKey: 'blocked-status-title',\n  descriptionKey: 'blocked-status-description',\n  buttonTextKey: 'blocked-status',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n\nexport const CustomerHasBadCreditClassification: ErrorObject = {\n  key: 'OC-0002',\n  titleKey: 'blocked-status-title',\n  descriptionKey: 'blocked-status-description',\n  buttonTextKey: 'blocked-status',\n  type: ErrorRedirectUrlEnum.CONTACT_US_REDIRECT_URL,\n};\n","import { ComponentStep, NextButtonLabelEnum } from '@sales/shared/data-access';\nimport { DeliveryComponent } from '@sales/delivery/feat-delivery';\nimport { SummaryStepComponent } from '@sales/summary/feat-summary';\nimport { EtfComponent } from '@sales/etf/feat-etf';\nimport { ThankYouStepComponent } from '@sales/thank-you/feat-thank-you';\n\nexport const HardwareCheckoutSteps: ComponentStep[] = [\n  {\n    key: 'etf',\n    component: EtfComponent,\n  },\n  {\n    key: 'delivery',\n    component: DeliveryComponent,\n  },\n  {\n    key: 'summary',\n    nextButtonLabel: NextButtonLabelEnum.ORDER,\n    component: SummaryStepComponent,\n  },\n  {\n    key: 'confirmation',\n    component: ThankYouStepComponent,\n  },\n];\n","export enum BusinessDomainsEnum {\n  HARDWARE_TLO = 'Hardware TLO',\n  DELIVERY_METHOD = 'Delivery Method',\n  HOME_DELIVERY = 'Home Delivery',\n  ETF = 'Equipment ETF',\n}\n","export enum ErrorRedirectUrlEnum {\n  CUSTOMER_SERVICE_REDIRECT_URL,\n  CONTACT_US_REDIRECT_URL,\n}\n","export enum OmapiAttributeKeysEnum {\n  MAIN_IMAGE = 'main_image',\n  PICTURE_5 = 'picture_5',\n}\n","export enum OrderItemActionEnum {\n  ADD = 'Add',\n  NONE = '-',\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { mergeMap, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport {\n  addDeliveryNotification,\n  bigItemDeliveryNotification,\n  contactAddress,\n  deliveryAddress,\n  DeliveryAddress,\n  multipleItemDelivery,\n  PersonalInfo,\n  personalInfo,\n  PersonalInfo as DeliveryPersonalInfo,\n  resetNotifications,\n  setAvailableAddresses,\n  setDeliveryAddress,\n  setDeliveryItems,\n  setDeliveryPersonalInfo,\n} from '@sales/delivery/data-access';\nimport {\n  addSummaryDeliveryNotification,\n  addSummaryGeneralNotification,\n  DeliveryInfo,\n  DeliveryInfoAddress,\n  DeliveryPersonalInfo as SummaryDeliveryPersonalInfo,\n  setIngenicoFormUrl,\n  setSummaryContractSummaryRequired,\n  setSummaryDeliveryAddress,\n  setSummaryDeliveryInfo,\n  setSummaryDeliveryPersonalInfo,\n  setSummaryDepreciationItems,\n  setSummaryInvoiceInfo,\n  setSummaryOrderItems,\n  setSummaryPersonalInfo,\n  setSummaryPrices,\n  setTermsAndConditionsUrl,\n  SummaryNotification,\n  SummaryPersonalInfo,\n} from '@sales/summary/data-access';\nimport { ReverseProxyService } from '../services/reverse-proxy.service';\nimport { AddressUnit } from '@sales/shared/address/data-access';\nimport {\n  AemInput,\n  aemInput,\n  BillingAccount,\n  contractSummaryGenerationNotPossible,\n  contractSummaryRequired,\n  contractSummaryUrl,\n  CustomerAccountDetails,\n  customerAccountDetails,\n  customerType,\n  CustomerTypeEnum,\n  defaultBillingAccount,\n  DeliveryMethods,\n  ingenicoResult,\n  omapiProducts,\n  omapiQueryProducts,\n  OrderItem,\n  PaymentRequestDataInterface,\n  PaymentResponseDataInterface,\n  personalIdentity,\n  PersonalIdentity,\n  referrerUrl,\n  Rule,\n  salesOffer,\n  SalesOrder,\n  salesOrderFromState,\n  salesOrderState,\n  SalesOrderStateEnum,\n  saveSalesOrder,\n  SdataSalesOffer,\n  SessionStorageConstants,\n  setAemInput,\n  setAnalyticsAttributes,\n  setBackButtonVisibility,\n  setBillingAccounts,\n  setCart,\n  setContractSummaryGenerationNotPossible,\n  setContractSummaryRequired,\n  setContractSummaryUrl,\n  setCustomerAccountDetails,\n  setCustomerType,\n  setNavigationState,\n  setOmapiProducts,\n  setOmapiQueryProducts,\n  setPersonalIdentity,\n  setReferrerUrl,\n  setSalesOrderState,\n  setStartStepLoadTime,\n  setUrlRequestParameters,\n  setViewState,\n  UrlRequestParameters,\n  ViewState,\n  viewState,\n} from '@sales/hardware-checkout/data-access';\nimport {\n  CustomerDiscounts,\n  OrderItemWithDiscount,\n  setOrderItemsWithDiscount,\n  setUsedSlots,\n  UsedSlot,\n  usedSlots,\n} from '@sales/etf/data-access';\nimport { SalesOrderUtil } from '../utils/sales-order.util';\nimport {\n  DiscountRuleNotFound,\n  OmapiQueryNotConfigured,\n  UpdateHomeDeliveryCharsError,\n} from '../constants/errors.constants';\nimport { DeliveryUtil } from '../utils/delivery.util';\nimport {\n  OmapiQueryProductService,\n  RawOmapiQueryProductInterface,\n  RawOmapiQueryProductInterfaceData,\n} from '@telenet/ng-lib-omapi-query';\nimport { HardwareCheckoutConstants } from '../constants/hardware-checkout.constants';\nimport { ErrorRecord } from '../interfaces/eligibility-response.interface';\nimport { ContractSummaryCheckResponse } from '../interfaces/contract-summary-check-response.interface';\nimport { ContractSummaryGenerationResponse } from '../interfaces/contract-summary-generation-response.interface';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { EventInterface, selectEvent } from '@sales/events/data-access';\nimport { setOrderNumber, setRedirectUrl } from '@sales/thank-you/data-access';\nimport { PaymentService } from '../services/payment.service';\nimport { OmapiUtil } from '../utils/omapi.util';\nimport { LanguageService } from '@telenet/ng-lib-page';\nimport { OmapiProduct, OmapiProductService } from '@telenet/ng-lib-omapi';\nimport { UpdateDeliveryCharsRequest } from '../interfaces/update-installation-address-request.interface';\nimport { ConfigConstants, ConfigService } from '@telenet/ng-lib-config';\nimport { Cart } from 'udl';\n\n@Injectable({ providedIn: 'root' })\nexport class HardwareCheckoutFacade {\n  stepEvent: Observable<EventInterface | undefined> = this.store.pipe(\n    select(selectEvent),\n    filter((val) => val !== undefined)\n  );\n  salesOffer$ = this.store.select<SdataSalesOffer | undefined>(salesOffer);\n  referrerUrl$ = this.store.select<string | undefined>(referrerUrl);\n  defaultBillingAccount$ = this.store.select<BillingAccount | undefined>(defaultBillingAccount);\n  salesOrderFromState$ = this.store.select(salesOrderFromState);\n  omapiProducts$ = this.store.select(omapiProducts);\n  omapiQueryProducts$ = this.store.select(omapiQueryProducts);\n  viewState$ = this.store.select<ViewState>(viewState);\n  salesOrderState$ = this.store.select<SalesOrderStateEnum>(salesOrderState);\n  deliveryPersonalInfo$ = this.store.select<PersonalInfo | undefined>(personalInfo);\n  deliveryAddress$ = this.store.select<DeliveryAddress | undefined>(deliveryAddress);\n  deliveryContactAddress$ = this.store.select<DeliveryAddress | undefined>(contactAddress);\n  contractSummaryRequired$ = this.store.select<boolean | undefined>(contractSummaryRequired);\n  contractSummaryUrl$ = this.store.select<string | undefined>(contractSummaryUrl);\n  contractSummaryGenerationNotPossible$ = this.store.select<boolean>(contractSummaryGenerationNotPossible);\n  customerType$ = this.store.select<CustomerTypeEnum>(customerType);\n  customerAccountDetails$ = this.store.select<CustomerAccountDetails | undefined>(customerAccountDetails);\n  personalIdentity$ = this.store.select<PersonalIdentity | undefined>(personalIdentity);\n  aemInput$ = this.store.select<AemInput | undefined>(aemInput);\n  usedDiscountSlots$: Observable<UsedSlot[] | undefined> = this.store.select(usedSlots);\n  ingenicoResultUtil$ = this.store.select(ingenicoResult);\n  omapiQueryBaseUrl: string;\n\n  constructor(\n    private readonly store: Store,\n    private readonly reverseProxyService: ReverseProxyService,\n    private readonly paymentService: PaymentService,\n    private readonly omapiQueryProductService: OmapiQueryProductService,\n    private readonly omapiProductService: OmapiProductService,\n    private readonly languageService: LanguageService,\n    private readonly configService: ConfigService\n  ) {\n    this.omapiQueryBaseUrl = this.configService.getConfig(ConfigConstants.OMAPI_QUERY_URL);\n    if (!this.omapiQueryBaseUrl) {\n      throw new HardwareCheckoutError(OmapiQueryNotConfigured);\n    }\n  }\n\n  getPid(): Observable<PersonalIdentity> {\n    return this.reverseProxyService.getPid().pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  getCustomerAccountDetails(): Observable<CustomerAccountDetails> {\n    return this.reverseProxyService.getCustomerAccountDetails().pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  createSalesOrder(locationId: string): Observable<SalesOrder> {\n    return this.reverseProxyService.createSalesOrder(locationId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  retrieveSalesOrder(salesOrderId: string): Observable<SalesOrder> {\n    return this.reverseProxyService.getSalesOrder(salesOrderId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  createHardwareTLO(salesOrderId: string, customerType: CustomerTypeEnum): Observable<SalesOrder> {\n    return this.reverseProxyService.createHardwareTLO(salesOrderId, customerType).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  addOrderItem(salesOrderId: string, TLOOrderItemId: string, OrderItemCode: string): Observable<SalesOrder> {\n    return this.reverseProxyService\n      .addOrderItem(salesOrderId, TLOOrderItemId, OrderItemCode)\n      .pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  deleteOrderItem(salesOrderId: string, orderItemId: string): Observable<SalesOrder> {\n    return this.reverseProxyService.deleteOrderItem(salesOrderId, orderItemId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  saveSalesOrder(salesOrder: SalesOrder): void {\n    this.store.dispatch(saveSalesOrder(salesOrder));\n  }\n\n  setThankYouRedirectUrl(url: string | undefined): void {\n    this.store.dispatch(setRedirectUrl({ redirectUrl: url }));\n  }\n\n  setTermsAndConditionsUrl(url: string | undefined): void {\n    this.store.dispatch(setTermsAndConditionsUrl({ termsAndConditionsUrl: url }));\n  }\n\n  updateDeliveryChars(\n    salesOrderId: string,\n    orderItemId: string,\n    deliveryInfoChange: UpdateDeliveryCharsRequest\n  ): Observable<SalesOrder> {\n    return this.reverseProxyService\n      .updateDeliveryChars(salesOrderId, orderItemId, deliveryInfoChange)\n      .pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  addDiscount(salesOrderId: string, ruleElementId: string): Observable<SalesOrder> {\n    return this.reverseProxyService.addDiscount(salesOrderId, ruleElementId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  getDeliveryOptions(salesOrderId: string): Observable<DeliveryMethods> {\n    return this.reverseProxyService.getDeliveryOptions(salesOrderId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  calculateDelivery(salesOrderId: string, deliveryMethods: DeliveryMethods): Observable<SalesOrder> {\n    return this.reverseProxyService\n      .calculateDelivery(salesOrderId, deliveryMethods)\n      .pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  checkoutDelivery(salesOrderId: string): Observable<SalesOrder> {\n    return this.reverseProxyService.checkoutDelivery(salesOrderId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  getAddressById(addressUnitId: string): Observable<AddressUnit> {\n    return this.reverseProxyService.getAddressById(addressUnitId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  getCustomerDiscounts(): Observable<CustomerDiscounts> {\n    return this.reverseProxyService.getCustomerDiscounts().pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  getBillingAccounts(): Observable<BillingAccount[]> {\n    return this.reverseProxyService.getBillingAccounts().pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  checkFeasibility(salesOrderId: string): Observable<SalesOrder> {\n    return this.reverseProxyService.checkFeasibility(salesOrderId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  checkEligibility(salesOrderId: string): Observable<ErrorRecord[]> {\n    return this.reverseProxyService.checkEligibility(salesOrderId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  checkContractSummary(salesOrderId: string): Observable<ContractSummaryCheckResponse> {\n    return this.reverseProxyService.checkContractSummary(salesOrderId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  generateContractSummary(salesOrderId: string): Observable<ContractSummaryGenerationResponse> {\n    return this.reverseProxyService.generateContractSummary(salesOrderId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  setUrlRequestParameters(urlRequestParameters: UrlRequestParameters): void {\n    this.store.dispatch(setUrlRequestParameters({ urlRequestParameters: urlRequestParameters }));\n  }\n\n  setOmapiQueryProducts(rawOmapiQueryProduct: RawOmapiQueryProductInterface): void {\n    this.store.dispatch(setOmapiQueryProducts({ omapiProducts: rawOmapiQueryProduct.products }));\n  }\n\n  setOmapiProducts(omapiProducts: OmapiProduct[]): void {\n    this.store.dispatch(setOmapiProducts({ omapiProducts: omapiProducts }));\n  }\n\n  setContractSummaryRequired(isRequired: boolean) {\n    this.store.dispatch(setContractSummaryRequired({ contractSummaryRequired: isRequired }));\n    this.store.dispatch(setSummaryContractSummaryRequired({ contractSummaryRequired: isRequired }));\n  }\n\n  setContractSummaryUrl(url: string) {\n    this.store.dispatch(setContractSummaryUrl({ contractSummaryUrl: url }));\n  }\n\n  setContractSummaryGenerationNotPossible() {\n    this.store.dispatch(setContractSummaryGenerationNotPossible());\n  }\n\n  submitSalesOrder(salesOrderId: string): Observable<SalesOrder> {\n    return this.reverseProxyService.submitSalesOrder(salesOrderId).pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  setSalesorderAsAbandonable(salesOrderId: string, customerId: string, basketUrl: string): Observable<SalesOrder> {\n    return this.reverseProxyService\n      .setSalesorderAsAbandonable(salesOrderId, customerId, basketUrl)\n      .pipe(SalesOrderUtil.handleNcErrors());\n  }\n\n  setPersonalIdentity(personalIdentity: PersonalIdentity): void {\n    this.store.dispatch(setPersonalIdentity({ personalIdentity: personalIdentity }));\n  }\n\n  setPersonalInfo(deliveryPersonalInfo: DeliveryPersonalInfo, summaryPersonalInfo: SummaryPersonalInfo): void {\n    this.store.dispatch(setDeliveryPersonalInfo({ personalInfo: deliveryPersonalInfo }));\n    this.store.dispatch(setSummaryPersonalInfo({ personalInfo: summaryPersonalInfo }));\n    this.store.dispatch(setSummaryDeliveryPersonalInfo({ personalInfo: deliveryPersonalInfo }));\n  }\n\n  setDeliveryPersonalInfo(deliveryPersonalInfo: DeliveryPersonalInfo): void {\n    this.store.dispatch(setDeliveryPersonalInfo({ personalInfo: deliveryPersonalInfo }));\n  }\n\n  setSummaryDeliveryPersonalInfo(summaryPersonalInfo: SummaryDeliveryPersonalInfo): void {\n    this.store.dispatch(setSummaryDeliveryPersonalInfo({ personalInfo: summaryPersonalInfo }));\n  }\n\n  setAddress(contactAddress: DeliveryAddress): void {\n    this.store.dispatch(setAvailableAddresses({ availableAddresses: [contactAddress] }));\n    this.store.dispatch(setDeliveryAddress({ deliveryAddress: contactAddress }));\n  }\n\n  setBillingAccounts(billingAccounts: BillingAccount[]): void {\n    this.store.dispatch(setBillingAccounts({ billingAccounts: billingAccounts }));\n  }\n\n  setDeliveryAddress(contactAddress: DeliveryAddress): void {\n    this.store.dispatch(setDeliveryAddress({ deliveryAddress: contactAddress }));\n  }\n\n  setDeliveryViewModel(salesOffer: SdataSalesOffer): void {\n    const deliveryItems = DeliveryUtil.createDeliveryItems(salesOffer.offers);\n    if (deliveryItems) {\n      this.store.dispatch(setDeliveryItems({ deliveryItems: deliveryItems }));\n    }\n  }\n\n  setDeliveryNotifications(salesOrder: SalesOrder, products?: RawOmapiQueryProductInterfaceData[]): void {\n    const bigItemDeliveryNeeded = SalesOrderUtil.isBigItemDeliveryOrder(salesOrder, products);\n    const hasMultipleItems = SalesOrderUtil.hasMultipleItems(salesOrder);\n    this.store.dispatch(resetNotifications());\n    if (bigItemDeliveryNeeded) {\n      this.store.dispatch(addDeliveryNotification({ notification: bigItemDeliveryNotification }));\n    }\n    if (hasMultipleItems) {\n      this.store.dispatch(addDeliveryNotification({ notification: multipleItemDelivery }));\n    }\n  }\n\n  setSummaryNotifications(salesOrder: SalesOrder, products?: RawOmapiQueryProductInterfaceData[]): void {\n    if (products) {\n      const isBigItemDelivery = SalesOrderUtil.isBigItemDeliveryOrder(salesOrder, products);\n      if (isBigItemDelivery) {\n        this.addSummaryDeliveryNotification(bigItemDeliveryNotification);\n      }\n\n      const preOrderNotification = OmapiUtil.getPreOrderNotification(products, this.languageService.getLanguage());\n      if (preOrderNotification) {\n        this.addSummaryDeliveryNotification({\n          weight: 2,\n          message: preOrderNotification,\n          type: 'notification',\n        });\n      }\n\n      const backOrderNotification = OmapiUtil.getBackOrderNotification(products, this.languageService.getLanguage());\n      if (backOrderNotification) {\n        this.addSummaryDeliveryNotification({\n          weight: 3,\n          message: backOrderNotification,\n          type: 'notification',\n        });\n      }\n    }\n  }\n\n  setSummaryViewModel(\n    salesOrder: SalesOrder,\n    orderItems: OrderItem[],\n    omapiProducts: OmapiProduct[],\n    omapiQueryProducts: RawOmapiQueryProductInterfaceData[],\n    isSoho: boolean\n  ) {\n    const summaryOrderItems = SalesOrderUtil.createSummaryOrderItems(\n      orderItems,\n      salesOrder.discountItems,\n      omapiQueryProducts,\n      omapiProducts,\n      isSoho,\n      this.languageService.getLanguage().toLocaleLowerCase()\n    );\n\n    this.store.dispatch(\n      setSummaryOrderItems({\n        orderItems: summaryOrderItems,\n      })\n    );\n\n    const summaryPrices = SalesOrderUtil.getSummaryPrices(salesOrder, isSoho);\n    this.store.dispatch(setSummaryPrices({ prices: summaryPrices }));\n\n    const depreciationItems = SalesOrderUtil.getDepreciationItems(salesOrder, isSoho);\n    this.store.dispatch(setSummaryDepreciationItems({ depreciationItems: depreciationItems }));\n  }\n\n  setSummaryDeliveryInfo(personalInfo: PersonalInfo, contactAddress: DeliveryAddress) {\n    const deliveryInfo: DeliveryInfo = {\n      personalInfo: {\n        firstname: personalInfo.firstname,\n        lastname: personalInfo.lastname,\n        email: personalInfo.email,\n        mobile: personalInfo.mobile,\n      },\n      address: {\n        street: contactAddress.street ? contactAddress.street : '',\n        box: contactAddress.box ? contactAddress.box : '',\n        country: contactAddress.country ? contactAddress.country : '',\n        houseNumber: contactAddress.houseNumber ? contactAddress.houseNumber : '',\n        postalCode: contactAddress.postalCode ? contactAddress.postalCode : '',\n        municipality: contactAddress.municipality ? contactAddress.municipality : '',\n        subHouseNumber: contactAddress.subHouseNumber ? contactAddress.subHouseNumber : '',\n      },\n    };\n\n    this.store.dispatch(setSummaryDeliveryInfo({ deliveryInfo: deliveryInfo }));\n  }\n\n  setSummaryDeliveryAddress(contactAddress: DeliveryAddress) {\n    const deliveryInfoAddress: DeliveryInfoAddress = {\n      street: contactAddress.street ? contactAddress.street : '',\n      box: contactAddress.box ? contactAddress.box : '',\n      country: contactAddress.country ? contactAddress.country : '',\n      houseNumber: contactAddress.houseNumber ? contactAddress.houseNumber : '',\n      postalCode: contactAddress.postalCode ? contactAddress.postalCode : '',\n      municipality: contactAddress.municipality ? contactAddress.municipality : '',\n      subHouseNumber: contactAddress.subHouseNumber ? contactAddress.subHouseNumber : '',\n    };\n\n    this.store.dispatch(setSummaryDeliveryAddress({ deliveryAddress: deliveryInfoAddress }));\n  }\n\n  setSummaryInvoiceInfo(address: DeliveryAddress) {\n    this.store.dispatch(setSummaryInvoiceInfo({ billingAddress: address }));\n  }\n\n  setViewState(viewState: ViewState) {\n    this.store.dispatch(setViewState({ viewState: viewState }));\n  }\n\n  setBackButtonVisibility(backButtonVisibility: boolean) {\n    this.store.dispatch(setBackButtonVisibility({ backButtonVisibility: backButtonVisibility }));\n  }\n\n  setNavigationState(navigationState: boolean) {\n    this.store.dispatch(setNavigationState({ navigationState: navigationState }));\n  }\n\n  setEtfOrderItems(orderItems: OrderItem[], rules: Rule[]) {\n    const orderItemsWithDiscount: OrderItemWithDiscount[] = orderItems.map((orderItem) => {\n      const discountRule = SalesOrderUtil.getOrderItemDiscountRuleByTarget(orderItem, rules);\n      if (!discountRule) {\n        throw new HardwareCheckoutError(DiscountRuleNotFound);\n      }\n      return {\n        name: orderItem.name,\n        id: orderItem.id,\n        rule: discountRule,\n        showEtfOptions: false,\n        hasMadeASelection: false,\n        prices: orderItem.prices,\n      };\n    });\n    this.store.dispatch(setOrderItemsWithDiscount({ orderItemsWithDiscount: orderItemsWithDiscount }));\n  }\n\n  setEtfUsedSlots(discountSlots: CustomerDiscounts) {\n    this.store.dispatch(setUsedSlots({ usedSlots: discountSlots.usedSlots }));\n  }\n\n  setSalesOrderState(salesOrderState: SalesOrderStateEnum) {\n    this.store.dispatch(setSalesOrderState({ salesOrderState: salesOrderState }));\n  }\n\n  getOmapiQueryProducts(productIds: string[]): Observable<RawOmapiQueryProductInterface> {\n    const endpoint = `${this.omapiQueryBaseUrl}/hc-products/v1/products?itemcodes=${productIds.join(',')}&flow=esales`;\n    return this.omapiQueryProductService.getRawQueryProductByEndpoint(\n      HardwareCheckoutConstants.MESSAGE_GROUP,\n      endpoint\n    );\n  }\n\n  getOmapiProduct(productId: string): Observable<OmapiProduct> {\n    return this.omapiProductService.getProductById('hardware-checkout', productId);\n  }\n\n  updateOrderItemCharsHomeDelivery(\n    salesOrderId: string,\n    customerAccountDetails: CustomerAccountDetails\n  ): Observable<SalesOrder> {\n    return this.deliveryPersonalInfo$.pipe(\n      mergeMap((deliveryPersonalInfo: DeliveryPersonalInfo | undefined): Observable<SalesOrder> => {\n        if (!deliveryPersonalInfo || !deliveryPersonalInfo.email) {\n          throw new HardwareCheckoutError(UpdateHomeDeliveryCharsError);\n        }\n\n        return this.reverseProxyService\n          .updateSalesOrderDeliveryEmail(salesOrderId, customerAccountDetails.id, deliveryPersonalInfo.email)\n          .pipe(SalesOrderUtil.handleNcErrors());\n      })\n    );\n  }\n\n  setCustomerType(customerType: CustomerTypeEnum) {\n    this.store.dispatch(setCustomerType({ customerType: customerType }));\n  }\n\n  setCustomerAccountDetails(customerAccountDetails: CustomerAccountDetails) {\n    this.store.dispatch(setCustomerAccountDetails({ customerAccountDetails: customerAccountDetails }));\n  }\n\n  getPaymentRequestObject(request: PaymentRequestDataInterface): Observable<PaymentResponseDataInterface> {\n    return this.paymentService.getPaymentObject(request);\n  }\n\n  setAemInputs(aemInputs: AemInput) {\n    this.store.dispatch(setAemInput({ aemInput: aemInputs }));\n  }\n\n  setReferrerUrl(referrerUrl: string) {\n    this.store.dispatch(setReferrerUrl({ referrerUrl: referrerUrl }));\n  }\n\n  setStartStepLoadTime() {\n    this.store.dispatch(setStartStepLoadTime());\n  }\n\n  setIngenicoFormUrl(ingenicoFormUrl: string | undefined): void {\n    this.store.dispatch(setIngenicoFormUrl({ ingenicoFormUrl: ingenicoFormUrl }));\n  }\n\n  addSummaryDeliveryNotification(summaryNotification: SummaryNotification) {\n    this.store.dispatch(addSummaryDeliveryNotification({ notification: summaryNotification }));\n  }\n\n  addSummaryGeneralNotification(summaryNotification: SummaryNotification) {\n    this.store.dispatch(addSummaryGeneralNotification({ notification: summaryNotification }));\n  }\n\n  setAnalyticsAttributesFromSessionStorage() {\n    const analyticsAttributes = JSON.parse(\n      window.sessionStorage.getItem(SessionStorageConstants.CHECKOUT_ANALYTICS_ATTRIBUTES) || '{}'\n    );\n    this.store.dispatch(setAnalyticsAttributes({ analyticsAttributes: analyticsAttributes }));\n  }\n\n  setAnalyticsCartFromSessionStorage() {\n    const cart = new Cart(\n      JSON.parse(window.sessionStorage.getItem(SessionStorageConstants.CHECKOUT_ANALYTICS_CART) || '{}')\n    );\n    this.store.dispatch(setCart({ cart: cart }));\n  }\n\n  setOrderNumber(orderNumber: string) {\n    this.store.dispatch(setOrderNumber({ orderNumber: orderNumber }));\n  }\n}\n","import { EventStrategy } from '../interfaces/event-strategy.interface';\nimport { NoActionStrategy } from '../strategy/no-action.strategy';\nimport { Injectable } from '@angular/core';\nimport { deliveryEventStepKey, DeliveryEventTypeEnum } from '@sales/delivery/feat-delivery';\nimport { DeliveryStepFinishedStrategy } from '../strategy/delivery/delivery-step-finished.strategy';\nimport { DeliveryStepLoadedStrategy } from '../strategy/delivery/delivery-step-loaded.strategy';\nimport { DeliveryAddressChangedStrategy } from '../strategy/delivery/delivery-address-changed.strategy';\nimport { HardwareCheckoutFacade } from '../facades/hardware-checkout.facade';\nimport { SummaryStepLoadedStrategy } from '../strategy/summary/summary-step-loaded.strategy';\nimport { SummaryStepFinishedStrategy } from '../strategy/summary/summary-step-finished.strategy';\nimport { SalesOrderStateEnum } from '@sales/hardware-checkout/data-access';\nimport { WaitingForStateUpdateStrategy } from '../strategy/waiting-for-state-update.strategy';\nimport { etfEventStepKey, etfResponse } from '@sales/etf/feat-etf';\nimport { EtfStepLoadedStrategy } from '../strategy/etf/etf-step-loaded.strategy';\nimport { EtfStepFinishedStrategy } from '../strategy/etf/etf-step-finished.strategy';\nimport { EtfFacade } from '@sales/etf/data-access';\nimport { EtfStepReloadedStrategy } from '../strategy/etf/etf-step-reloaded.strategy';\nimport { EtfStepFinishedNoChangesStrategy } from '../strategy/etf/etf-step-finished-no-changes.strategy';\nimport { summaryEventStepKey, SummaryEventTypeEnum } from '@sales/summary/feat-summary';\nimport { SummaryShowContractSummaryStrategy } from '../strategy/summary/summary-show-contract-summary.strategy';\nimport { MediaQueryService, UrlService } from '@telenet/ng-lib-page';\nimport { ConfigService } from '@telenet/ng-lib-config';\nimport { NavigationStrategy } from '../strategy/navigation.strategy';\nimport { SummaryFacade } from '@sales/summary/data-access';\nimport { DeliveryStateChangeInterface } from '@sales/delivery/data-access';\nimport { ErrorStrategy } from '../strategy/error.strategy';\nimport { ErrorEventBody, EventFacade, EventInterface, EventTypeEnum, StepEventBody } from '@sales/events/data-access';\nimport { thankYouEventStepKey } from '@sales/thank-you/feat-thank-you';\nimport { ThankYouStepLoadedStrategy } from '../strategy/thank-you/thank-you-step-loaded.strategy';\n\ninterface strategy {\n  key: EventTypeEnum | DeliveryEventTypeEnum | SummaryEventTypeEnum;\n  getStrategy: () => EventStrategy;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class EventStrategyFactory {\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly etfFacade: EtfFacade,\n    private readonly summaryFacade: SummaryFacade,\n    private readonly eventFacade: EventFacade,\n    private readonly urlService: UrlService,\n    private readonly mediaQueryService: MediaQueryService,\n    private readonly configService: ConfigService\n  ) {}\n\n  public getStrategy(event: EventInterface, salesOrderState: SalesOrderStateEnum): EventStrategy {\n    const strategies: strategy[] = [\n      {\n        key: EventTypeEnum.ERROR,\n        getStrategy: () => {\n          return new ErrorStrategy(event.body as ErrorEventBody);\n        },\n      },\n      {\n        key: EventTypeEnum.STEP_LOADED,\n        getStrategy: () => {\n          return this.getStepLoadedStrategy(event.body as StepEventBody, salesOrderState);\n        },\n      },\n      {\n        key: EventTypeEnum.STEP_FINISHED,\n        getStrategy: () => {\n          if (event.body) {\n            return this.getStepFinishedStrategy(\n              event.body as {\n                stepKey: string;\n              },\n              salesOrderState\n            );\n          }\n          return new NoActionStrategy();\n        },\n      },\n      {\n        key: EventTypeEnum.SHOW_NAVIGATION,\n        getStrategy: () => {\n          return new NavigationStrategy(this.hardwareCheckoutFacade, event);\n        },\n      },\n      {\n        key: EventTypeEnum.HIDE_NAVIGATION,\n        getStrategy: () => {\n          return new NavigationStrategy(this.hardwareCheckoutFacade, event);\n        },\n      },\n      {\n        key: DeliveryEventTypeEnum.CHANGE_ADDRESS,\n        getStrategy: () => {\n          if (salesOrderState >= SalesOrderStateEnum.DELIVERY_CALCULATED && event.body) {\n            return new DeliveryAddressChangedStrategy(\n              this.hardwareCheckoutFacade,\n              this.eventFacade,\n              event.body as DeliveryStateChangeInterface\n            );\n          }\n          return new NoActionStrategy(true);\n        },\n      },\n      {\n        key: SummaryEventTypeEnum.SHOW_CONTRACT_SUMMARY,\n        getStrategy: () => {\n          if (salesOrderState >= SalesOrderStateEnum.CHECKOUT_DELIVERY_FINISHED) {\n            return new SummaryShowContractSummaryStrategy(\n              this.urlService,\n              this.configService,\n              this.hardwareCheckoutFacade\n            );\n          }\n          return new NoActionStrategy(true);\n        },\n      },\n    ];\n    return this.findStrategy(strategies, event);\n  }\n\n  private findStrategy(strategies: strategy[], event: EventInterface<unknown>) {\n    const foundStrategy = strategies.find((strategy) => strategy.key === event.eventType);\n    return foundStrategy ? foundStrategy.getStrategy() : new NoActionStrategy();\n  }\n\n  private getStepLoadedStrategy(stepEventBody: StepEventBody, salesOrderState: SalesOrderStateEnum): EventStrategy {\n    switch (stepEventBody.stepKey) {\n      case etfEventStepKey:\n        if (salesOrderState <= SalesOrderStateEnum.INITIALISING) {\n          return new EtfStepLoadedStrategy(this.hardwareCheckoutFacade, this.eventFacade);\n        } else if (salesOrderState >= SalesOrderStateEnum.DELIVERY_CALCULATED) {\n          return new EtfStepReloadedStrategy(this.hardwareCheckoutFacade, this.etfFacade);\n        }\n        return new NoActionStrategy();\n      case deliveryEventStepKey:\n        if (salesOrderState <= SalesOrderStateEnum.INITIALISING) {\n          return new DeliveryStepLoadedStrategy(this.hardwareCheckoutFacade, this.eventFacade);\n        }\n        return new NoActionStrategy();\n      case summaryEventStepKey:\n        if (salesOrderState < SalesOrderStateEnum.CHECKOUT_DELIVERY_FINISHED) {\n          return new SummaryStepLoadedStrategy(this.hardwareCheckoutFacade);\n        }\n        return new NoActionStrategy();\n      case thankYouEventStepKey:\n        return new ThankYouStepLoadedStrategy(this.eventFacade);\n      default:\n        return new NoActionStrategy();\n    }\n  }\n\n  private getStepFinishedStrategy(stepEventBody: StepEventBody, salesOrderState: SalesOrderStateEnum): EventStrategy {\n    switch (stepEventBody.stepKey) {\n      case etfEventStepKey:\n        if (salesOrderState < SalesOrderStateEnum.DELIVERY_CALCULATED) {\n          if (\n            (stepEventBody as etfResponse).existingDiscountsToRemove.length > 0 &&\n            (stepEventBody as etfResponse).targetOrderItemIdsToDiscount.length > 0\n          ) {\n            return new EtfStepFinishedStrategy(\n              this.hardwareCheckoutFacade,\n              this.etfFacade,\n              stepEventBody as etfResponse\n            );\n          } else {\n            return new EtfStepFinishedNoChangesStrategy(this.hardwareCheckoutFacade);\n          }\n        }\n        return new NoActionStrategy();\n      case deliveryEventStepKey:\n        if (salesOrderState >= SalesOrderStateEnum.DELIVERY_CALCULATED) {\n          return new DeliveryStepFinishedStrategy(this.hardwareCheckoutFacade);\n        }\n        return new WaitingForStateUpdateStrategy();\n      case summaryEventStepKey:\n        if (salesOrderState >= SalesOrderStateEnum.CHECKOUT_DELIVERY_FINISHED) {\n          return new SummaryStepFinishedStrategy(\n            this.hardwareCheckoutFacade,\n            this.summaryFacade,\n            this.urlService,\n            this.mediaQueryService,\n            this.eventFacade\n          );\n        }\n        return new WaitingForStateUpdateStrategy();\n      default:\n        return new NoActionStrategy();\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { StepsNgrxModule } from '@sales/shared/data-access';\nimport { HardwareCheckoutSteps } from './constants/step.constants';\nimport { HardwareCheckoutConstants } from './constants/hardware-checkout.constants';\nimport { SalesStepperComponent } from '@sales/shared/feature-sales-stepper';\nimport { LoaderModule, LoaderService } from '@telenet/ng-lib-page';\nimport { CommonModule, NgIf } from '@angular/common';\nimport { EventFacade, EventInterface, EventsNgrxModule, EventTypeEnum } from '@sales/events/data-access';\nimport { HardwareCheckoutFacade } from './facades/hardware-checkout.facade';\nimport { combineLatest, Observable } from 'rxjs';\nimport { ChangeDeliveryInfoComponent, DeliveryComponent } from '@sales/delivery/feat-delivery';\nimport { SummaryStepComponent } from '@sales/summary/feat-summary';\nimport { HardwareCheckoutHelperService } from './services/hardware-checkout-helper.service';\nimport { AemInput, HardwareCheckoutNgrxModule, ViewState, ViewStateEnum } from '@sales/hardware-checkout/data-access';\nimport { ErrorComponent } from '@sales/error/feat-error';\nimport { EtfComponent } from '@sales/etf/feat-etf';\nimport { DeliveryNgrxModule } from '@sales/delivery/data-access';\nimport { SummaryNgrxModule } from '@sales/summary/data-access';\nimport { EtfNgrxModule } from '@sales/etf/data-access';\nimport { HardwareCheckoutDataLayerService } from './services/data-layer.service';\nimport { filter } from 'rxjs/operators';\nimport { ThankYouNgrxModule } from '@sales/thank-you/data-access';\nimport { ThankYouStepComponent } from '@sales/thank-you/feat-thank-you';\n\n@Component({\n  standalone: true,\n  selector: 'tg-sales-hardware-checkout',\n  templateUrl: './hardware-checkout.component.html',\n  imports: [\n    CommonModule,\n    StepsNgrxModule,\n    HardwareCheckoutNgrxModule,\n    EventsNgrxModule,\n    DeliveryNgrxModule,\n    SummaryNgrxModule,\n    EtfNgrxModule,\n    ThankYouNgrxModule,\n    SalesStepperComponent,\n    LoaderModule,\n    NgIf,\n    ChangeDeliveryInfoComponent,\n    DeliveryComponent,\n    SummaryStepComponent,\n    ErrorComponent,\n    EtfComponent,\n    ThankYouStepComponent,\n  ],\n})\n@UntilDestroy()\nexport class HardwareCheckoutComponent implements OnInit {\n  @Input() enableMask: boolean;\n  @Input() enableLoader = true;\n  @Input() pageType: string;\n  @Input() customerServiceRedirectUrlInput: string | undefined;\n  @Input() contactUsRedirectUrlInput: string | undefined;\n  @Input() thankyouRedirectUrl: string | undefined;\n  @Input() termsAndConditionsUrl: string | undefined;\n  @Input() ingenicoFormUrl: string | undefined;\n\n  viewState$: Observable<ViewState>;\n  viewStateEnum = ViewStateEnum;\n  isLoaded = false;\n\n  componentSteps = HardwareCheckoutSteps;\n  public readonly messageGroup = HardwareCheckoutConstants.MESSAGE_GROUP;\n\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly eventFacade: EventFacade,\n    private readonly loaderService: LoaderService,\n    private readonly hardwareCheckoutHelperService: HardwareCheckoutHelperService,\n    private readonly dataLayerService: HardwareCheckoutDataLayerService\n  ) {\n    this.viewState$ = this.hardwareCheckoutFacade.viewState$;\n  }\n\n  ngOnInit(): void {\n    this.hardwareCheckoutFacade.setThankYouRedirectUrl(this.thankyouRedirectUrl);\n    this.hardwareCheckoutFacade.setTermsAndConditionsUrl(this.termsAndConditionsUrl);\n    this.hardwareCheckoutFacade.setIngenicoFormUrl(this.ingenicoFormUrl);\n    this.loaderService.start();\n    this.dataLayerService.setPageProperties();\n    this.hardwareCheckoutFacade.setStartStepLoadTime();\n\n    this.hardwareCheckoutFacade.stepEvent.pipe(untilDestroyed(this)).subscribe({\n      next: (event: EventInterface<unknown> | undefined) => {\n        if (event) {\n          this.dataLayerService.handleAnalyticsEvent(event);\n        }\n      },\n      error: (err) => console.error('Analytics issue ', err),\n    });\n\n    combineLatest([this.hardwareCheckoutFacade.stepEvent, this.hardwareCheckoutFacade.salesOrderState$])\n      .pipe(\n        this.filterOutAnalyticsEvents(),\n        this.hardwareCheckoutHelperService.logDebug(),\n        this.hardwareCheckoutHelperService.executeEventStrategy(),\n        untilDestroyed(this)\n      )\n      .subscribe({\n        next: (event: EventInterface) => {\n          this.loaderService.stop();\n          this.hardwareCheckoutHelperService.goToNextStepIfNeeded(event);\n        },\n        error: (error) => {\n          this.handleError(error);\n        },\n      });\n\n    this.setAemInputs();\n    this.initialiseFlow();\n  }\n\n  nextButtonClickedEvent(): void {\n    this.eventFacade.triggerAnalyticsClickEvent({ name: 'continue button clicked' });\n  }\n\n  private initialiseFlow() {\n    try {\n      this.hardwareCheckoutHelperService\n        .initialiseFlow(this.componentSteps)\n        .pipe(untilDestroyed(this))\n        .subscribe({\n          next: () => {\n            this.isLoaded = true;\n            this.loaderService.stop();\n          },\n          error: (error) => {\n            this.handleError(error);\n          },\n        });\n    } catch (error) {\n      this.handleError(error as Error);\n    }\n  }\n\n  private handleError(error: Error) {\n    this.loaderService.stop();\n    this.hardwareCheckoutHelperService.setError(\n      error,\n      this.customerServiceRedirectUrlInput,\n      this.contactUsRedirectUrlInput\n    );\n  }\n\n  private setAemInputs() {\n    const aemInputs: AemInput = {\n      customerServiceRedirectUrlInput: this.customerServiceRedirectUrlInput,\n      contactUsRedirectUrlInput: this.contactUsRedirectUrlInput,\n      thankyouRedirectUrl: this.thankyouRedirectUrl,\n    };\n    this.hardwareCheckoutFacade.setAemInputs(aemInputs);\n  }\n\n  private filterOutAnalyticsEvents() {\n    // @ts-expect-error need to declare salesOrderState here\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return filter(([stepEvent, salesOrderState]) => {\n      return !stepEvent || stepEvent.eventType !== EventTypeEnum.ANALYTICS;\n    });\n  }\n}\n","<app-loader\n  id=\"page-loader\"\n  [enableLoader]=\"enableLoader\"\n  [enableMask]=\"enableMask\"\n  [pageType]=\"pageType\"\n  [startByDefault]=\"false\">\n</app-loader>\n<ng-container *ngIf=\"viewState$ | async as viewState\">\n  <tg-sales-error *ngIf=\"viewState.key === viewStateEnum.ERROR\" [error]=\"viewState.error\"></tg-sales-error>\n  <ng-container *ngIf=\"isLoaded && viewState.key !== viewStateEnum.ERROR\">\n    <tg-sales-stepper\n      (nextButtonClicked)=\"nextButtonClickedEvent()\"\n      [showNavigation]=\"viewState.showNavigation\"\n      [showBackButton]=\"viewState.showBackButton\"\n      [showStepProgressBar]=\"true\"\n      [steps]=\"componentSteps\">\n    </tg-sales-stepper>\n  </ng-container>\n</ng-container>\n","import { Injectable } from '@angular/core';\nimport { Cart, CartBuilder, Page, PageInfo } from 'udl';\nimport { DataLayerAttributes, DataLayerService, DataLayerTransactionBuilder } from '@telenet/ng-lib-datalayer';\nimport { Errors, HardwareCheckoutAnalytics, PrimaryCategories } from '../constants/analytics/analytics.constants';\nimport {\n  AnalyticsInterface,\n  AnalyticsTypeEnum,\n  EventInterface,\n  EventTypeEnum,\n  StepEventBody,\n} from '@sales/events/data-access';\nimport { Store } from '@ngrx/store';\nimport { AnalyticsUtil } from '../utils/analytics.util';\nimport { forkJoin } from 'rxjs';\nimport { analyticsAttributes, cart, resetStepLoadTime, stepAnalytics } from '@sales/hardware-checkout/data-access';\nimport { take, tap } from 'rxjs/operators';\nimport { summaryEventStepKey } from '@sales/summary/feat-summary';\nimport { thankYouEventStepKey } from '@sales/thank-you/feat-thank-you';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HardwareCheckoutDataLayerService {\n  constructor(\n    private readonly dataLayerService: DataLayerService,\n    private readonly store: Store\n  ) {}\n\n  setPageProperties(): void {\n    const pageInfo = new PageInfo();\n    pageInfo.setPageID(HardwareCheckoutAnalytics.PAGE_ID);\n    pageInfo.setPageName(HardwareCheckoutAnalytics.PAGE_NAME);\n    const pageJSON = {\n      pageInfo: pageInfo,\n    };\n    const page = new Page(pageJSON);\n    this.dataLayerService.setPage(page);\n  }\n\n  handleAnalyticsEvent(analyticsEvent: EventInterface) {\n    switch (analyticsEvent.eventType) {\n      case EventTypeEnum.STEP_LOADED: {\n        const stepKey = this.getStepKey(analyticsEvent as EventInterface<StepEventBody>);\n        this.addStepViewEvent({ stepId: stepKey.toUpperCase() });\n        if (stepKey === summaryEventStepKey) {\n          this.setCart();\n        }\n        this.addStepLoadTimeEvent(stepKey);\n        break;\n      }\n      case EventTypeEnum.ANALYTICS:\n        this.addEvent(analyticsEvent as EventInterface<AnalyticsInterface>);\n        break;\n    }\n  }\n\n  private addEvent(analyticsEvent: EventInterface<AnalyticsInterface>) {\n    if (analyticsEvent.body?.type === AnalyticsTypeEnum.TRANSACTION) {\n      this.transactionEvent(analyticsEvent);\n    } else {\n      this.defaultEvent(analyticsEvent);\n    }\n  }\n\n  private stepLoadTimeEvent(attributes: DataLayerAttributes | undefined): void {\n    this.selectAnalyticsData().subscribe({\n      next: ([analyticsAttributes, cart]) => {\n        this.dataLayerService\n          .addStepLoadTimeEvent(AnalyticsUtil.enrichWithCommonAttributes(analyticsAttributes, attributes, cart))\n          .catch((err) => this.logAnalyticsError(err))\n          .then();\n      },\n      error: (error) => console.warn(Errors.CONSOLE_MESSAGE, error),\n    });\n  }\n\n  private logAnalyticsError(err: Error) {\n    console.warn(Errors.CONSOLE_MESSAGE, 'ANALYTICS EVENT NOT SEND: ', err);\n  }\n\n  private defaultEvent(analyticsEvent: EventInterface<AnalyticsInterface>): void {\n    const eventBody = analyticsEvent.body;\n    const eventInfo = this.dataLayerService.createEventInfo(eventBody?.name || 'TBD', eventBody?.type || 'TBD');\n    eventInfo.setEventStatus('success');\n    this.selectAnalyticsData().subscribe({\n      next: ([analyticsAttributes, cart]) => {\n        this.dataLayerService\n          .addEvent(\n            eventInfo,\n            AnalyticsUtil.enrichWithCommonAttributes(analyticsAttributes, eventBody?.attributes, cart),\n            PrimaryCategories.SALES\n          )\n          .catch((err) => this.logAnalyticsError(err))\n          .then();\n      },\n      error: (error) => console.warn(Errors.CONSOLE_MESSAGE, error),\n    });\n  }\n  private transactionEvent(analyticsEvent: EventInterface<AnalyticsInterface>) {\n    this.selectAnalyticsData().subscribe({\n      next: ([analyticsAttributes, cart]) => {\n        if (cart) {\n          const transactionBuilder = new DataLayerTransactionBuilder()\n            .withDataLayerAttributes(\n              AnalyticsUtil.enrichWithCommonAttributes(analyticsAttributes, analyticsEvent.body?.attributes, new Cart())\n            )\n            .withTransactionID(cart.getCartID())\n            .withItems(cart.getItems())\n            .withPrice(cart.getPrice());\n\n          this.dataLayerService\n            .setTransaction(transactionBuilder.build())\n            .catch((err) => this.logAnalyticsError(err))\n            .then();\n        } else {\n          this.logAnalyticsError(new Error('No transaction analytics due to missing CART object'));\n        }\n      },\n      error: (error) => this.logAnalyticsError(error),\n    });\n  }\n\n  private addStepViewEvent(attributes: DataLayerAttributes) {\n    this.selectAnalyticsData().subscribe({\n      next: ([analyticsAttributes, cart]) => {\n        const enrichedAttributes = Object.assign(attributes, analyticsAttributes);\n        this.recalculateStepKey(enrichedAttributes);\n        if (cart !== undefined) {\n          enrichedAttributes.cart = cart;\n        }\n        this.dataLayerService.addStepViewEvent(enrichedAttributes).then();\n      },\n      error: (error) => this.logAnalyticsError(error),\n    });\n  }\n\n  private recalculateStepKey(attributes: DataLayerAttributes) {\n    if (attributes.stepId?.toUpperCase() === thankYouEventStepKey.toUpperCase()) {\n      attributes.stepId = attributes.stepId + '-hardware';\n    }\n  }\n\n  private setCart() {\n    this.selectAnalyticsData().subscribe({\n      next: ([analyticsAttributes, cart]) => {\n        if (cart !== undefined) {\n          const enrichedAttributes = AnalyticsUtil.enrichWithCommonAttributes(analyticsAttributes, undefined, cart);\n          const copyCart = new CartBuilder()\n            .withCartId(cart.getCartID())\n            .withDirectCallLabel(cart.getDirectCallLabel())\n            .build();\n          copyCart.setAttributes(enrichedAttributes);\n          copyCart.setItems(cart.getItems());\n          this.dataLayerService.setCart(copyCart).then();\n        }\n      },\n      error: (error) => this.logAnalyticsError(error),\n    });\n  }\n\n  private addStepLoadTimeEvent(stepName: string) {\n    this.store\n      .select(stepAnalytics)\n      .pipe(\n        take(1),\n        tap((stepAnalytics) => {\n          if (stepAnalytics.startLoadTime) {\n            this.stepLoadTimeEvent({\n              itemName: ((new Date().getTime() - stepAnalytics.startLoadTime) / 1000).toFixed(2).toString(),\n            });\n            this.store.dispatch(resetStepLoadTime());\n          } else {\n            this.logAnalyticsError(\n              new Error('step-load-time could not be triggered because of missing start time for step ' + stepName)\n            );\n          }\n        })\n      )\n      .subscribe();\n  }\n  private selectAnalyticsData() {\n    return forkJoin([this.store.select(analyticsAttributes).pipe(take(1)), this.store.select(cart).pipe(take(1))]);\n  }\n\n  private getStepKey(stepEvent: EventInterface<StepEventBody>): string {\n    return stepEvent.body?.stepKey || 'TBD';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AssetService, JsonUrlService, LoaderService, UrlService } from '@telenet/ng-lib-page';\nimport { HardwareCheckoutConstants } from '../constants/hardware-checkout.constants';\nimport {\n  ContactDetailsCustomerCategoryEnum,\n  CustomerAccountDetails,\n  customerAccountTypeBlockedConst,\n  CustomerAccountUtil,\n  CustomerCreditClassificationTypeEnum,\n  CustomerTypeEnum,\n  PersonalIdentity,\n  SalesOrderStateEnum,\n  SdataSalesOffer,\n  UrlRequestParameters,\n  ViewStateEnum,\n} from '@sales/hardware-checkout/data-access';\nimport { AddressUnit } from '@sales/shared/address/data-access';\nimport { HardwareCheckoutFacade } from '../facades/hardware-checkout.facade';\nimport { EMPTY, forkJoin, MonoTypeOperatorFunction, Observable, of, OperatorFunction, throwError } from 'rxjs';\nimport { catchError, map, mergeMap, take, tap } from 'rxjs/operators';\nimport {\n  AemInputNotSet,\n  CorruptSdata,\n  errorButtonPrefix,\n  errorMessagePrefix,\n  errorTitlePrefix,\n  EventStrategyError,\n  GenericError,\n  GetCustomerDataError,\n  UserNotLoggedInError,\n} from '../constants/errors.constants';\nimport { ErrorRedirectUrlEnum } from '../enums/error.enum';\nimport { LogFactory } from '@telenet/ng-lib-shared';\nimport { AddressUtil } from '../utils/address.util';\nimport { ErrorViewModel } from '@sales/error/data-access';\nimport { WaitingForStateUpdateStrategy } from '../strategy/waiting-for-state-update.strategy';\nimport { NoActionStrategy } from '../strategy/no-action.strategy';\nimport { EventStrategyFactory } from '../factory/event-strategy.factory';\nimport { ComponentStep, createIngenicoResultUtil, StepFacade } from '@sales/shared/data-access';\nimport { StrategyUtil } from '../utils/strategy.util';\nimport { CustomerDiscounts } from '@sales/etf/data-access';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { EventFacade, EventInterface, EventTypeEnum, StepEventBody } from '@sales/events/data-access';\nimport { LoginDetails, LoginService } from '@telenet/ng-lib-ocapi';\nimport {\n  CustomerHasBadCreditClassification,\n  CustomerIncorrectStatus,\n  OrderCorrectionButtonPrefix,\n  OrderCorrectionMessagePrefix,\n  OrderCorrectionTitlePrefix,\n} from '../constants/ordercorrections.constants';\nimport { ErrorObject } from '../interfaces/error.interface';\nimport { HardwareCheckoutAnalytics } from '../constants/analytics/analytics.constants';\nimport { thankYouEventStepKey } from '@sales/thank-you/feat-thank-you';\nimport { summaryEventStepKey } from '@sales/summary/feat-summary';\nimport { SdataSalesOfferUtil } from '../utils/sdata-sales-offer.util';\nimport { PersonalInfo } from '@sales/delivery/data-access';\nimport { PersonalInfoUtil } from '../utils/personal-info.util';\nimport { CustomerCategoryUtil } from '../utils/customer-category.util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HardwareCheckoutHelperService {\n  private readonly log = LogFactory.createLogger(HardwareCheckoutHelperService);\n\n  constructor(\n    private readonly jsonUrlService: JsonUrlService,\n    private readonly urlService: UrlService,\n    private readonly stepFacade: StepFacade,\n    private readonly eventFacade: EventFacade,\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly eventStrategyFactory: EventStrategyFactory,\n    private readonly loaderService: LoaderService,\n    private readonly loginService: LoginService\n  ) {}\n\n  getUrlRequestParameters(): Observable<UrlRequestParameters> {\n    return this.getSalesOrderRequestFromSdata().pipe(\n      take(1),\n      map(\n        (salesOffer) =>\n          <UrlRequestParameters>{\n            salesOffer: salesOffer,\n            flow: HardwareCheckoutAnalytics.FLOW,\n            source: HardwareCheckoutAnalytics.SOURCE,\n            intent: HardwareCheckoutAnalytics.INTENT,\n          }\n      )\n    );\n  }\n\n  handleDeliveryData() {\n    return forkJoin({\n      customerAccountDetails: this.handleCustomerAccountData(),\n      personalIdentity: this.handlePersonalIdentityData(),\n    }).pipe(\n      tap(({ customerAccountDetails, personalIdentity }) => {\n        const contractHolderContactDetails = CustomerAccountUtil.getContractHolder(customerAccountDetails);\n        const contractHolderEmail = CustomerAccountUtil.getContactEmail(contractHolderContactDetails);\n\n        const deliveryInfo: PersonalInfo = PersonalInfoUtil.getPersonalInfoFromIdentityAndCustomerAccount(\n          personalIdentity,\n          customerAccountDetails\n        );\n        this.hardwareCheckoutFacade.setPersonalInfo(deliveryInfo, {\n          epithet: contractHolderContactDetails.title,\n          firstname: contractHolderContactDetails.firstNameOfficial,\n          lastname: contractHolderContactDetails.lastName,\n          email: contractHolderEmail,\n        });\n      })\n    );\n  }\n\n  handlePersonalIdentityData(): Observable<PersonalIdentity> {\n    return this.hardwareCheckoutFacade.getPid().pipe(\n      tap((personalIdentity) => {\n        this.hardwareCheckoutFacade.setPersonalIdentity(personalIdentity);\n      })\n    );\n  }\n\n  handleCustomerAccountData(): Observable<CustomerAccountDetails> {\n    return this.hardwareCheckoutFacade.getCustomerAccountDetails().pipe(\n      tap((customerAccountDetails) => {\n        this.hardwareCheckoutFacade.setCustomerAccountDetails(customerAccountDetails);\n        this.handleCustomerType(customerAccountDetails);\n        this.handleCustomerStatus(customerAccountDetails);\n        this.handleCustomerBadPayer(customerAccountDetails);\n      }),\n      mergeMap((contactDetails: CustomerAccountDetails) => {\n        let addressUnitId: string | undefined = '';\n        const customerCategory = CustomerCategoryUtil.getCustomerCategory(contactDetails.customerCategory.name);\n        if (customerCategory === ContactDetailsCustomerCategoryEnum.RESIDENTIAL) {\n          addressUnitId = contactDetails.customerAddress?.id;\n        } else if (customerCategory === ContactDetailsCustomerCategoryEnum.SOHO) {\n          addressUnitId = contactDetails.legalAddress?.id;\n        }\n        if (addressUnitId) {\n          return this.hardwareCheckoutFacade.getAddressById(addressUnitId).pipe(\n            tap((address: AddressUnit) => {\n              this.setCustomerAddress(address);\n            }),\n            map(() => contactDetails) // Ensure the main observable still returns CustomerAccountDetails\n          );\n        } else {\n          return of(contactDetails); // Return contactDetails if there's no address to fetch\n        }\n      }),\n      catchError((error) => {\n        if (error instanceof HardwareCheckoutError) {\n          throw error;\n        } else {\n          throw new HardwareCheckoutError(GetCustomerDataError);\n        }\n      })\n    );\n  }\n\n  setCustomerAddress(address: AddressUnit) {\n    this.hardwareCheckoutFacade.setAddress(AddressUtil.convertNcAddressToDeliveryAddress(address));\n  }\n\n  executeEventStrategy(): OperatorFunction<[EventInterface | undefined, SalesOrderStateEnum], EventInterface> {\n    return mergeMap(([stepEvent, salesOrderState]) => {\n      if (stepEvent) {\n        const eventStrategy = this.eventStrategyFactory.getStrategy(stepEvent, salesOrderState);\n        if (eventStrategy) {\n          if (eventStrategy.showLoader()) {\n            this.loaderService.start();\n          }\n          if (\n            !(eventStrategy instanceof WaitingForStateUpdateStrategy) &&\n            !(eventStrategy instanceof NoActionStrategy)\n          ) {\n            return eventStrategy.execute().pipe(\n              map(() => {\n                return stepEvent;\n              })\n            );\n          } else return EMPTY;\n        }\n      }\n      throw EventStrategyError;\n    });\n  }\n\n  goToNextStepIfNeeded(event: EventInterface) {\n    if (event && event.eventType === EventTypeEnum.STEP_FINISHED) {\n      if ((<StepEventBody>event.body)?.stepKey !== summaryEventStepKey) {\n        this.eventFacade.triggerAnalyticsClickEvent({ name: 'navigated to next step' });\n      }\n      this.hardwareCheckoutFacade.setStartStepLoadTime();\n      this.loaderService.stop();\n      this.stepFacade.goToNextStep();\n    }\n  }\n\n  logDebug() {\n    return tap({\n      next: ([stepEvent, salesOrderState]) => {\n        this.log.logDebug('Received event: ', {\n          stepEvent: stepEvent,\n          salesOrderState: salesOrderState,\n          strategy: this.eventStrategyFactory.getStrategy(stepEvent, salesOrderState),\n        });\n      },\n    });\n  }\n\n  initialiseFlow(componentSteps: ComponentStep[]): Observable<boolean> {\n    this.hardwareCheckoutFacade.setReferrerUrl(this.getReferrerUrl());\n    const salesOrderIdFromUrl = this.getSalesOrderIdFromUrl();\n    if (salesOrderIdFromUrl === '') {\n      return this.initialiseFlowFromBasket(componentSteps);\n    } else {\n      return this.initialiseFlowComingBackFromIngenico(componentSteps, salesOrderIdFromUrl);\n    }\n  }\n\n  setOrderCorrection(errorObject: ErrorObject, url: string) {\n    const errorViewModel: ErrorViewModel = {\n      key: errorObject.key,\n      titleKey: OrderCorrectionTitlePrefix.concat(errorObject.titleKey),\n      buttonTextKey: OrderCorrectionButtonPrefix.concat(errorObject.buttonTextKey),\n      descriptionKey: OrderCorrectionMessagePrefix.concat(errorObject.descriptionKey),\n      image: AssetService.getImagePath('HARDWARE_CHECKOUT', HardwareCheckoutConstants.ORDER_CORRECTION_IMAGE),\n      mobileImage: AssetService.getImagePath(\n        'HARDWARE_CHECKOUT',\n        HardwareCheckoutConstants.ORDER_CORRECTION_MOBILE_IMAGE\n      ),\n      redirectUrl: url,\n    };\n\n    this.hardwareCheckoutFacade.setViewState({\n      key: ViewStateEnum.ERROR,\n      showNavigation: false,\n      showBackButton: true,\n      error: errorViewModel,\n    });\n  }\n\n  setError(error: Error, customerServiceRedirectUrl: string | undefined, contactUsRedirectUrl: string | undefined) {\n    console.error(error.message, error);\n\n    if (window['dtrum'] && window['dtrum'].reportError) {\n      window['dtrum'].reportError(error);\n    } else {\n      console.warn('Dynatrace dtrum API not available');\n    }\n\n    let hardwareCheckoutError: HardwareCheckoutError;\n\n    if (error instanceof HardwareCheckoutError) {\n      hardwareCheckoutError = error;\n    } else {\n      hardwareCheckoutError = new HardwareCheckoutError(GenericError);\n    }\n\n    const errorViewModel: ErrorViewModel = {\n      key: hardwareCheckoutError.errorObject.key,\n      titleKey: errorTitlePrefix.concat(hardwareCheckoutError.errorObject.titleKey),\n      descriptionKey: errorMessagePrefix.concat(hardwareCheckoutError.errorObject.descriptionKey),\n      buttonTextKey: errorButtonPrefix.concat(hardwareCheckoutError.errorObject.buttonTextKey),\n      redirectUrl: undefined,\n      image: AssetService.getImagePath('HARDWARE_CHECKOUT', HardwareCheckoutConstants.ORDER_CORRECTION_IMAGE),\n      mobileImage: AssetService.getImagePath(\n        'HARDWARE_CHECKOUT',\n        HardwareCheckoutConstants.ORDER_CORRECTION_MOBILE_IMAGE\n      ),\n    };\n    if (customerServiceRedirectUrl && contactUsRedirectUrl) {\n      errorViewModel.redirectUrl =\n        hardwareCheckoutError.errorObject.type === ErrorRedirectUrlEnum.CUSTOMER_SERVICE_REDIRECT_URL\n          ? customerServiceRedirectUrl\n          : contactUsRedirectUrl;\n    }\n    this.hardwareCheckoutFacade.setViewState({\n      key: ViewStateEnum.ERROR,\n      showNavigation: false,\n      showBackButton: true,\n      error: errorViewModel,\n    });\n  }\n\n  getSalesOrderIdFromUrl(): string {\n    return this.urlService.getRequestParamValue(HardwareCheckoutConstants.SALES_ORDER_URL_ID, '');\n  }\n\n  getSalesOrderRequestFromSdata(): Observable<SdataSalesOffer> {\n    const encodedString = this.urlService.getRequestParamValue(HardwareCheckoutConstants.SDATA, '');\n\n    if (encodedString !== '') {\n      return this.jsonUrlService.decompress(encodedString).pipe(\n        map((response) => {\n          if (response && response['offers'] && response['offers'][0]) {\n            return response['offers'][0];\n          }\n        })\n      );\n    }\n    throw new HardwareCheckoutError(CorruptSdata);\n  }\n\n  private initialiseFlowFromBasket(componentSteps: ComponentStep[]) {\n    return this.getUrlRequestParameters().pipe(\n      this.confirmUserIsLoggedIn(),\n      tap((urlRequestParams) => {\n        this.hardwareCheckoutFacade.setUrlRequestParameters(urlRequestParams);\n        this.eventFacade.triggerAnalyticsSalesFlowStartEvent();\n      }),\n      mergeMap((urlRequestParams) => {\n        return this.hardwareCheckoutFacade.getCustomerDiscounts().pipe(\n          this.handleComponentSteps(componentSteps, urlRequestParams.salesOffer),\n          tap(() => {\n            this.hardwareCheckoutFacade.setDeliveryViewModel(urlRequestParams.salesOffer);\n          })\n        );\n      }),\n      mergeMap(() => this.handleDeliveryData().pipe(take(1))),\n      map(() => true),\n      StrategyUtil.handleBillingAccount(this.hardwareCheckoutFacade),\n      catchError((error) => {\n        console.log('error', error);\n\n        if (error.message === UserNotLoggedInError) {\n          return EMPTY;\n        } else {\n          return throwError(() => error);\n        }\n      })\n    );\n  }\n\n  private initialiseFlowComingBackFromIngenico(\n    componentSteps: ComponentStep[],\n    salesOrderIdFromUrl: string\n  ): Observable<boolean> {\n    const ingenicoResult = this.urlService.getRequestParamValue(HardwareCheckoutConstants.STATUS_URL, '');\n    const ingenicoResultUtil = createIngenicoResultUtil(ingenicoResult);\n    // coming back from Ingenico we no longer have the URL request parameters, so setting to default\n    this.setDefaultUrlRequestParameters(ingenicoResult);\n\n    if (ingenicoResultUtil.isSuccessful()) {\n      // for success status we only show thank you step\n      return this.initialisePaymentSuccessFlow(componentSteps, salesOrderIdFromUrl);\n    } else {\n      // for error/cancel status we need to reload the sales order and show the summary step\n      return this.initialisePaymentFailedFlow(salesOrderIdFromUrl, componentSteps);\n    }\n  }\n\n  private initialisePaymentSuccessFlow(componentSteps: ComponentStep[], salesOrderIdFromUrl: string) {\n    this.hardwareCheckoutFacade.setOrderNumber(salesOrderIdFromUrl);\n    // reset analytics info from session storage\n    this.hardwareCheckoutFacade.setAnalyticsAttributesFromSessionStorage();\n    this.hardwareCheckoutFacade.setAnalyticsCartFromSessionStorage();\n\n    const filteredSteps = componentSteps.filter((step) => step.key === thankYouEventStepKey).map((step) => step.key);\n    this.stepFacade.setStepConfig({ steps: filteredSteps });\n    this.hardwareCheckoutFacade.setBackButtonVisibility(false);\n\n    return of(true);\n  }\n\n  private initialisePaymentFailedFlow(salesOrderIdFromUrl: string, componentSteps: ComponentStep[]) {\n    return forkJoin({\n      deliveryData: this.handleDeliveryData().pipe(take(1)),\n      salesOrder: this.hardwareCheckoutFacade.retrieveSalesOrder(salesOrderIdFromUrl),\n    }).pipe(\n      tap(() => {\n        const filteredSteps = componentSteps\n          .filter((step) => {\n            return step.key === 'summary';\n          })\n          .map((step) => step.key);\n        this.stepFacade.setStepConfig({ steps: filteredSteps });\n        this.hardwareCheckoutFacade.setBackButtonVisibility(false);\n      }),\n      map(({ salesOrder }) => salesOrder),\n      StrategyUtil.setOmapiDetails(this.hardwareCheckoutFacade),\n      mergeMap((salesOrder) => {\n        this.hardwareCheckoutFacade.saveSalesOrder(salesOrder);\n        return of(salesOrder);\n      }),\n      StrategyUtil.setOmapiDetails(this.hardwareCheckoutFacade),\n      map(() => true),\n      StrategyUtil.handleBillingAccount(this.hardwareCheckoutFacade)\n    );\n  }\n\n  private confirmUserIsLoggedIn(): MonoTypeOperatorFunction<UrlRequestParameters> {\n    return mergeMap((urlRequestParams) => {\n      return this.loginService.getLoginDetails().pipe(\n        map((loginDetails: LoginDetails) => {\n          if (!loginDetails.isLoggedIn()) {\n            this.loginService.login(loginDetails.state, loginDetails.nonce);\n            throw new Error(UserNotLoggedInError);\n          }\n          return urlRequestParams;\n        })\n      );\n    });\n  }\n\n  private handleComponentSteps(componentSteps: ComponentStep[], sdataSalesOffer: SdataSalesOffer) {\n    componentSteps = componentSteps.filter((step) => {\n      return step.key !== thankYouEventStepKey;\n    });\n    const numberOfOrderedProducts = SdataSalesOfferUtil.getSdataSalesOfferItemsWithDiscount(sdataSalesOffer).length;\n    return tap((customerDiscounts: CustomerDiscounts) => {\n      if (Number(customerDiscounts.usedSlots.length) + numberOfOrderedProducts <= 5) {\n        componentSteps = componentSteps.filter((step) => {\n          return step.key !== 'etf';\n        });\n      } else {\n        this.hardwareCheckoutFacade.setEtfUsedSlots(customerDiscounts);\n      }\n\n      const stepKeys = componentSteps.map((step) => step.key);\n      this.stepFacade.setStepConfig({ steps: stepKeys });\n    });\n  }\n\n  private handleCustomerType(customerAccountDetails: CustomerAccountDetails) {\n    let customerType = CustomerTypeEnum.RESIDENTIAL;\n    if (\n      CustomerCategoryUtil.getCustomerCategory(customerAccountDetails.customerCategory.name.valueOf()) ===\n      CustomerTypeEnum.SOHO.valueOf()\n    ) {\n      customerType = CustomerTypeEnum.SOHO;\n    }\n    this.hardwareCheckoutFacade.setCustomerType(customerType);\n  }\n\n  private handleCustomerStatus(customerAccountDetails: CustomerAccountDetails) {\n    const isBlocked = customerAccountTypeBlockedConst.includes(customerAccountDetails.status);\n    if (isBlocked) {\n      this.hardwareCheckoutFacade.aemInput$.pipe(take(1)).subscribe({\n        next: (aemInput) => {\n          if (aemInput && aemInput.customerServiceRedirectUrlInput) {\n            this.setOrderCorrection(CustomerIncorrectStatus, aemInput.customerServiceRedirectUrlInput);\n          } else {\n            this.setError(new HardwareCheckoutError(AemInputNotSet), undefined, undefined);\n          }\n        },\n      });\n    }\n  }\n\n  private handleCustomerBadPayer(customerAccountDetails: CustomerAccountDetails) {\n    const isBlocked = customerAccountDetails.creditClassificationCode === CustomerCreditClassificationTypeEnum.NO_SALES;\n\n    if (isBlocked) {\n      this.hardwareCheckoutFacade.aemInput$.pipe(take(1)).subscribe({\n        next: (aemInput) => {\n          if (aemInput && aemInput.customerServiceRedirectUrlInput) {\n            this.setOrderCorrection(CustomerHasBadCreditClassification, aemInput.customerServiceRedirectUrlInput);\n          } else {\n            this.setError(new HardwareCheckoutError(AemInputNotSet), undefined, undefined);\n          }\n        },\n      });\n    }\n  }\n\n  private getReferrerUrl() {\n    return document.referrer;\n  }\n\n  private setDefaultUrlRequestParameters(ingenicoResult: string) {\n    this.hardwareCheckoutFacade.setUrlRequestParameters(<UrlRequestParameters>{\n      salesOffer: {},\n      flow: HardwareCheckoutAnalytics.FLOW,\n      source: HardwareCheckoutAnalytics.SOURCE,\n      intent: HardwareCheckoutAnalytics.INTENT,\n      ingenicoResult: ingenicoResult,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UrlService } from '@telenet/ng-lib-page';\nimport { ConfigConstants, ConfigService } from '@telenet/ng-lib-config';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { OcapiNotConfigured } from '../constants/errors.constants';\nimport { PaymentRequestDataInterface, PaymentResponseDataInterface } from '@sales/hardware-checkout/data-access';\nimport { Observable } from 'rxjs';\nimport { HeaderUtil } from '../utils/header.util';\n\n@Injectable({ providedIn: 'root' })\nexport class PaymentService {\n  baseUrl: string;\n  basePath = '/public/api/mytelenet-web-sales-checkout';\n  constructor(\n    private readonly http: HttpClient,\n    private readonly urlService: UrlService,\n    private readonly configService: ConfigService\n  ) {\n    const ocapiUrl = this.configService.getConfig(ConfigConstants.OCAPI_URl);\n    if (!ocapiUrl) {\n      throw new HardwareCheckoutError(OcapiNotConfigured);\n    }\n    this.baseUrl = this.configService.getConfig(ConfigConstants.OCAPI_URl);\n  }\n\n  getPaymentObject(request: PaymentRequestDataInterface): Observable<PaymentResponseDataInterface> {\n    const url = this.getUrl('/v1/payment');\n    return this.doPost(url, request);\n  }\n\n  private getUrl(endpoint: string): string {\n    return `${this.baseUrl}${this.basePath}${endpoint}`;\n  }\n\n  private doPost<T>(url: string, body: unknown): Observable<T> {\n    return this.http.post<T>(url, body, {\n      headers: HeaderUtil.createHttpHeaders(this.urlService.getCurrentUrl()),\n      withCredentials: true,\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddressUnit } from '@sales/shared/address/data-access';\nimport { CustomerDiscounts } from '@sales/etf/data-access';\nimport {\n  BillingAccount,\n  CustomerAccountDetails,\n  CustomerTypeEnum,\n  DeliveryMethods,\n  PersonalIdentity,\n  PersonalIdentityResponse,\n  PersonalIdentityUtils,\n  SalesOrder,\n} from '@sales/hardware-checkout/data-access';\nimport { ErrorRecord } from '../interfaces/eligibility-response.interface';\nimport { ContractSummaryCheckResponse } from '../interfaces/contract-summary-check-response.interface';\nimport { ContractSummaryGenerationResponse } from '../interfaces/contract-summary-generation-response.interface';\nimport { UrlService } from '@telenet/ng-lib-page';\nimport { ConfigConstants, ConfigService } from '@telenet/ng-lib-config';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { OcapiNotConfigured } from '../constants/errors.constants';\nimport { HeaderUtil } from '../utils/header.util';\nimport { UpdateDeliveryCharsRequest } from '../interfaces/update-installation-address-request.interface';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ReverseProxyService {\n  baseUrl: string;\n  basePath = '/public/api/mytelenet-web-sales-checkout-rp';\n\n  fields =\n    'id,name,validationElements,orderItems,price,status,customerId,cartStatus,chars,discountItems,locationIds,eligibleForEasySwitch,warningElements,isAbandonable,rules';\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly urlService: UrlService,\n    private readonly configService: ConfigService\n  ) {\n    const ocapiUrl = this.configService.getConfig(ConfigConstants.OCAPI_URl);\n    if (!ocapiUrl) {\n      throw new HardwareCheckoutError(OcapiNotConfigured);\n    }\n    this.baseUrl = this.configService.getConfig(ConfigConstants.OCAPI_URl);\n  }\n\n  getPid(): Observable<PersonalIdentity> {\n    const path = `${this.baseUrl}/public/api/sales-service/v2/pid`;\n    return this.doGet<PersonalIdentityResponse>(path).pipe(\n      map((personalIdentityResponse: PersonalIdentityResponse) =>\n        PersonalIdentityUtils.getPersonalIdentity(personalIdentityResponse)\n      )\n    );\n  }\n\n  getCustomerAccountDetails(): Observable<CustomerAccountDetails> {\n    const path = `/v1/customerManagement/customerAccount`;\n    return this.doGet<CustomerAccountDetails>(this.getUrl(path));\n  }\n\n  createSalesOrder(locationId: string): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/customerAccount/location/${locationId}/salesOrder`;\n    const body = {};\n    return this.doPost<SalesOrder>(this.getUrl(path), body);\n  }\n\n  updateSalesOrderDeliveryEmail(\n    salesOrderId: string,\n    customerId: string,\n    deliveryEmail: string\n  ): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}`;\n    const body = {\n      id: customerId,\n      chars: {\n        'Delivery E-mail': deliveryEmail,\n      },\n    };\n    return this.doPut<SalesOrder>(this.getUrl(path), body);\n  }\n\n  createHardwareTLO(salesOrderId: string, customerType: CustomerTypeEnum): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/orderItem`;\n    let epc = 'HWTO0001';\n    if (customerType === CustomerTypeEnum.SOHO) {\n      epc = 'HWTO0107';\n    }\n    const body = {\n      epc: epc,\n    };\n    return this.doPost<SalesOrder>(this.getUrl(path), body);\n  }\n\n  addOrderItem(salesOrderId: string, TLOOrderItemId: string, OrderItemCode: string): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/orderItem/${TLOOrderItemId}/hwcvpOrderItem`;\n    const body = {\n      itemCode: OrderItemCode,\n    };\n\n    return this.doPost<SalesOrder>(this.getUrl(path), body);\n  }\n\n  deleteOrderItem(salesOrderId: string, orderItemId: string): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/orderItem/${orderItemId}`;\n    return this.doDelete<SalesOrder>(this.getUrl(path));\n  }\n\n  updateDeliveryChars(\n    salesOrderId: string,\n    orderItemId: string,\n    deliveryInfoChange: UpdateDeliveryCharsRequest\n  ): Observable<SalesOrder> {\n    const body = {\n      chars: deliveryInfoChange,\n    };\n    return this.doPut<SalesOrder>(\n      this.getUrl(`/v1/orderManagement/salesOrder/${salesOrderId}/orderItem/${orderItemId}`),\n      body\n    );\n  }\n\n  getDeliveryOptions(salesOrderId: string): Observable<DeliveryMethods> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/deliveryMethods`;\n    return this.doGet(this.getUrl(path));\n  }\n\n  addDiscount(salesOrderId: string, ruleElementId: string): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/discount`;\n    const body = {\n      ruleElementId: ruleElementId,\n    };\n    return this.doPost<SalesOrder>(this.getUrl(path), body);\n  }\n\n  calculateDelivery(salesOrderId: string, deliveryMethods: DeliveryMethods): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/calculateDelivery`;\n    const body = {\n      chosenStandaloneDeliveryItems: this.getChosenStandaloneDeliveryItems(deliveryMethods),\n    };\n\n    return this.doPost(this.getUrl(path), body);\n  }\n\n  setSalesorderAsAbandonable(salesOrderId: string, customerId: string, basketUrl: string): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}?isAbandonable=true`;\n    const body = {\n      id: customerId,\n      chars: {\n        'eShop URL for PEGA Characteristic Involvement': basketUrl,\n      },\n    };\n    return this.doPut<SalesOrder>(this.getUrl(path), body);\n  }\n\n  submitSalesOrder(salesOrderId: string): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/submit`;\n    const body = {};\n    return this.doPost<SalesOrder>(this.getUrl(path), body);\n  }\n\n  getBillingAccounts(): Observable<BillingAccount[]> {\n    const path = `/v1/billingManagement/customerAccount/billingAccount`;\n    return this.doGet<BillingAccount[]>(this.getUrl(path));\n  }\n\n  checkoutDelivery(salesOrderId: string): Observable<SalesOrder> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/checkoutDelivery`;\n    return this.doPost<SalesOrder>(this.getUrl(path), {});\n  }\n\n  checkContractSummary(salesOrderId: string): Observable<ContractSummaryCheckResponse> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/document/cs/generationRequired`;\n    return this.doGet<ContractSummaryCheckResponse>(this.getUrl(path));\n  }\n\n  generateContractSummary(salesOrderId: string): Observable<ContractSummaryGenerationResponse> {\n    const path = `/v1/orderManagement/salesOrder/${salesOrderId}/document/cs/generation`;\n    const body = {};\n    return this.doPost<ContractSummaryGenerationResponse>(this.getUrl(path), body);\n  }\n\n  checkFeasibility(salesOrderId: string): Observable<SalesOrder> {\n    const body = {};\n    return this.doPost<SalesOrder>(\n      this.getUrl(`/v1/orderManagement/salesOrder/${salesOrderId}/feasibilityCheck`),\n      body\n    );\n  }\n\n  checkEligibility(salesOrderId: string): Observable<ErrorRecord[]> {\n    const body = {};\n    return this.doPost<ErrorRecord[]>(\n      this.getUrl(`/v1/orderManagement/salesOrder/${salesOrderId}/eligibilityCheck`),\n      body\n    );\n  }\n\n  getAddressById(addressUnitId: string): Observable<AddressUnit> {\n    const url = this.getUrl(`/v1/addressManagement/address/${addressUnitId}`);\n    return this.doGet<AddressUnit>(url);\n  }\n\n  getCustomerDiscounts(): Observable<CustomerDiscounts> {\n    const url = this.getUrl(`/v1/customerManagement/discountSlots`);\n    return this.doGet(url);\n  }\n\n  getSalesOrder(salesOrderId: string): Observable<SalesOrder> {\n    const url = this.getUrl(`/v1/orderManagement/salesOrder/${salesOrderId}`);\n    return this.doGet(url);\n  }\n\n  private getChosenStandaloneDeliveryItems(deliveryMethods: DeliveryMethods) {\n    return deliveryMethods.standaloneDeliveryItems?.map((standaloneDeliveryItem) => {\n      return {\n        deliveryOrderItem: {\n          id: standaloneDeliveryItem.deliveryOrderItem.id,\n          name: standaloneDeliveryItem.deliveryOrderItem.name,\n        },\n        deliveryMethod: {\n          id: standaloneDeliveryItem.deliveryMethods[0].id,\n          name: standaloneDeliveryItem.deliveryMethods[0].name,\n        },\n      };\n    });\n  }\n\n  private getUrl(path: string) {\n    return `${this.baseUrl}${this.basePath}${path}`;\n  }\n\n  private doGet<T>(url: string): Observable<T> {\n    return this.http.get<T>(url, {\n      headers: HeaderUtil.createHttpHeaders(this.urlService.getCurrentUrl()),\n      withCredentials: true,\n    });\n  }\n\n  private doPut<T>(url: string, body: unknown): Observable<T> {\n    return this.http.put<T>(url, body, {\n      headers: HeaderUtil.createHttpHeaders(this.urlService.getCurrentUrl()),\n      withCredentials: true,\n    });\n  }\n\n  private doPost<T>(url: string, body: unknown): Observable<T> {\n    return this.http.post<T>(url, body, {\n      headers: HeaderUtil.createHttpHeaders(this.urlService.getCurrentUrl()),\n      withCredentials: true,\n    });\n  }\n\n  private doDelete<T>(url: string): Observable<T> {\n    return this.http.delete<T>(url, {\n      headers: HeaderUtil.createHttpHeaders(this.urlService.getCurrentUrl()),\n      withCredentials: true,\n    });\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { Observable, pipe, UnaryFunction } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport { DeliveryStateChangeInterface, PersonalInfo } from '@sales/delivery/data-access';\nimport { EventFacade } from '@sales/events/data-access';\nimport { SalesOrder } from '@sales/hardware-checkout/data-access';\nimport { AddressUtil } from '../../utils/address.util';\n\nexport class DeliveryAddressChangedStrategy implements EventStrategy {\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly eventFacade: EventFacade,\n    private readonly personalInfoChanges: DeliveryStateChangeInterface\n  ) {}\n\n  showLoader(): boolean {\n    return true;\n  }\n\n  execute(): Observable<boolean> {\n    return this.hardwareCheckoutFacade.salesOrderFromState$.pipe(\n      take(1),\n      this.handleDeliveryInfoChange(),\n      tap(() => {\n        const personalInfo = this.personalInfoChanges.personalInfo.personalInfo;\n        if (personalInfo) {\n          this.triggerMobileChangedEvent(personalInfo);\n        }\n      }),\n      map(() => {\n        return true;\n      })\n    );\n  }\n\n  private handleDeliveryInfoChange(): UnaryFunction<\n    Observable<SalesOrder | undefined>,\n    Observable<SalesOrder | undefined>\n  > {\n    const personalInfo = this.personalInfoChanges.personalInfo.personalInfo;\n    const DeliveryAddress = this.personalInfoChanges.personalInfo.deliveryAddress;\n\n    return pipe(\n      tap(() => {\n        if (personalInfo) {\n          this.hardwareCheckoutFacade.setDeliveryPersonalInfo(personalInfo);\n          this.hardwareCheckoutFacade.setSummaryDeliveryPersonalInfo(personalInfo);\n        }\n        if (DeliveryAddress) {\n          const deliveryAddress = AddressUtil.convertFieldValueToDeliveryAddress(DeliveryAddress);\n\n          if (deliveryAddress) {\n            this.hardwareCheckoutFacade.setDeliveryAddress(deliveryAddress);\n            this.hardwareCheckoutFacade.setSummaryDeliveryAddress(deliveryAddress);\n          }\n        }\n      })\n    );\n  }\n\n  private triggerMobileChangedEvent(newPersonalInfo: PersonalInfo) {\n    this.hardwareCheckoutFacade.deliveryPersonalInfo$\n      .pipe(\n        take(1),\n        filter((personalInfo) => personalInfo?.mobile !== newPersonalInfo.mobile)\n      )\n      .subscribe(() => this.eventFacade.triggerAnalyticsClickEvent({ name: 'phone number updated' }));\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { Observable } from 'rxjs';\nimport { StrategyUtil } from '../../utils/strategy.util';\nimport { map, take } from 'rxjs/operators';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport { HardwareCheckoutError } from '../../classes/hardware-checkout-error.class';\nimport { SalesOrderNotSet } from '../../constants/errors.constants';\n\nexport class DeliveryStepFinishedStrategy implements EventStrategy {\n  constructor(private readonly hardwareCheckoutFacade: HardwareCheckoutFacade) {}\n\n  showLoader(): boolean {\n    return true;\n  }\n\n  execute(): Observable<boolean> {\n    return this.hardwareCheckoutFacade.salesOrderFromState$.pipe(\n      take(1),\n      map((salesOrder) => {\n        if (salesOrder === undefined) {\n          throw new HardwareCheckoutError(SalesOrderNotSet);\n        }\n        return salesOrder;\n      }),\n      StrategyUtil.updateDeliveryChars(this.hardwareCheckoutFacade),\n      map(() => true)\n    );\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { forkJoin, Observable, pipe, switchMap, UnaryFunction } from 'rxjs';\nimport { mergeMap, take, tap } from 'rxjs/operators';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport {\n  CustomerAccountDetails,\n  CustomerTypeEnum,\n  OrderItem,\n  SalesOrder,\n  SalesOrderStateEnum,\n  SdataSalesOffer,\n  SdataSalesOfferItem,\n} from '@sales/hardware-checkout/data-access';\nimport { StrategyUtil } from '../../utils/strategy.util';\nimport { CustomerAccountDetailsUtil } from '../../utils/customer-account-details.util';\nimport { HardwareCheckoutError } from '../../classes/hardware-checkout-error.class';\nimport { CustomerHasNoLocationAssociated, SalesOfferNotFound } from '../../constants/errors.constants';\nimport { EventFacade } from '@sales/events/data-access';\nimport { SdataSalesOfferUtil } from '../../utils/sdata-sales-offer.util';\nimport { SalesOrderUtil } from '../../utils/sales-order.util';\n\nexport class DeliveryStepLoadedStrategy implements EventStrategy {\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly eventFacade: EventFacade\n  ) {}\n\n  showLoader(): boolean {\n    return false;\n  }\n\n  execute(): Observable<boolean> {\n    return forkJoin({\n      customerAccount: this.hardwareCheckoutFacade.customerAccountDetails$.pipe(take(1)),\n      customerType: this.hardwareCheckoutFacade.customerType$.pipe(take(1)),\n    })\n      .pipe(\n        mergeMap((value: { customerAccount: CustomerAccountDetails | undefined; customerType: CustomerTypeEnum }) => {\n          const locationId = CustomerAccountDetailsUtil.getCustomerLocationId(\n            value.customerAccount,\n            value.customerType === CustomerTypeEnum.SOHO\n          );\n          if (!locationId) {\n            throw new HardwareCheckoutError(CustomerHasNoLocationAssociated);\n          }\n          this.eventFacade.triggerAnalyticsScAddEvent({ name: 'new product selected' });\n          return this.hardwareCheckoutFacade.createSalesOrder(locationId);\n        })\n      )\n      .pipe(\n        tap((salesOrder: SalesOrder) => {\n          this.hardwareCheckoutFacade.saveSalesOrder(salesOrder);\n          this.hardwareCheckoutFacade.setSalesOrderState(SalesOrderStateEnum.SALES_ORDER_CREATED);\n        })\n      )\n      .pipe(StrategyUtil.createHardwareItems(this.hardwareCheckoutFacade), this.addDiscounts())\n      .pipe(StrategyUtil.setSalesOrderAsAbandonable(this.hardwareCheckoutFacade))\n      .pipe(StrategyUtil.processSalesOrderToDeliveryCalculated(this.hardwareCheckoutFacade));\n  }\n\n  addDiscounts(): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((initialSalesOrder: SalesOrder) =>\n        this.hardwareCheckoutFacade.salesOffer$.pipe(\n          take(1),\n          switchMap((sdataSalesOffer) => {\n            if (!sdataSalesOffer) {\n              throw new HardwareCheckoutError(SalesOfferNotFound);\n            }\n            return this.processOrderItemsSequentially(initialSalesOrder, sdataSalesOffer);\n          })\n        )\n      )\n    );\n  }\n\n  processOrderItemsSequentially(salesOrder: SalesOrder, sdataSalesOffer: SdataSalesOffer): Observable<SalesOrder> {\n    const salesOfferItemsWithDiscount: SdataSalesOfferItem[] =\n      SdataSalesOfferUtil.getSdataSalesOfferItemsWithDiscount(sdataSalesOffer);\n    const hardwareOrderItem: OrderItem = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n\n    if (!hardwareOrderItem.orderItems) {\n      throw new Error('Something is amiss with the order items.');\n    }\n\n    const matchingDiscounts = SalesOrderUtil.orderItemsWithMatchingDiscounts(\n      hardwareOrderItem.orderItems,\n      salesOfferItemsWithDiscount\n    );\n\n    return StrategyUtil.applyDiscountsRecursively(this.hardwareCheckoutFacade, matchingDiscounts, salesOrder);\n  }\n}\n","import { EventStrategy } from '../interfaces/event-strategy.interface';\nimport { Observable } from 'rxjs';\nimport { ErrorEventBody } from '@sales/events/data-access';\n\nexport class ErrorStrategy implements EventStrategy {\n  constructor(private readonly errorEventBody: ErrorEventBody) {}\n\n  showLoader(): boolean {\n    return false;\n  }\n\n  execute(): Observable<boolean> {\n    throw this.errorEventBody.error;\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { Observable, pipe, UnaryFunction } from 'rxjs';\nimport { map, mergeMap, tap, take } from 'rxjs/operators';\nimport { DeliveryMethods, SalesOrder, SalesOrderStateEnum } from '@sales/hardware-checkout/data-access';\nimport { SalesOrderUtil } from '../../utils/sales-order.util';\nimport { NoHardwareItemsFound, SalesOrderNotSet } from '../../constants/errors.constants';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport { StrategyUtil } from '../../utils/strategy.util';\nimport { HardwareCheckoutError } from '../../classes/hardware-checkout-error.class';\n\nexport class EtfStepFinishedNoChangesStrategy implements EventStrategy {\n  constructor(private readonly hardwareCheckoutFacade: HardwareCheckoutFacade) {}\n\n  showLoader(): boolean {\n    return true;\n  }\n\n  execute(): Observable<boolean> {\n    return this.hardwareCheckoutFacade.salesOrderFromState$.pipe(\n      take(1),\n      this.handleDelivery(),\n      StrategyUtil.checkEligibility(this.hardwareCheckoutFacade),\n      StrategyUtil.checkContractSummary(this.hardwareCheckoutFacade),\n      StrategyUtil.setOmapiDetails(this.hardwareCheckoutFacade),\n      StrategyUtil.handleNotifications(this.hardwareCheckoutFacade),\n      StrategyUtil.setSummaryDetails(this.hardwareCheckoutFacade),\n      tap((salesOrder: SalesOrder) => {\n        const hardwareOrderItems = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n        if (hardwareOrderItems && hardwareOrderItems.orderItems) {\n          this.hardwareCheckoutFacade.saveSalesOrder(salesOrder);\n          this.hardwareCheckoutFacade.setSalesOrderState(SalesOrderStateEnum.DELIVERY_CALCULATED);\n        } else {\n          throw new HardwareCheckoutError(NoHardwareItemsFound);\n        }\n      }),\n      map(() => {\n        return false;\n      })\n    );\n  }\n\n  private handleDelivery(): UnaryFunction<Observable<SalesOrder | undefined>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder: SalesOrder | undefined) => {\n        if (salesOrder) {\n          return this.hardwareCheckoutFacade.getDeliveryOptions(salesOrder.id).pipe(\n            map((deliveryMethods) => {\n              return { salesOrder: salesOrder, deliveryMethods: deliveryMethods };\n            })\n          );\n        } else {\n          throw new HardwareCheckoutError(SalesOrderNotSet);\n        }\n      }),\n      mergeMap((res: { salesOrder: SalesOrder; deliveryMethods: DeliveryMethods }) => {\n        return this.hardwareCheckoutFacade.calculateDelivery(res.salesOrder.id, res.deliveryMethods);\n      })\n    );\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { from, Observable, of, OperatorFunction, pipe, UnaryFunction } from 'rxjs';\nimport { map, mergeMap, reduce, take } from 'rxjs/operators';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport { etfResponse } from '@sales/etf/feat-etf';\nimport { DiscountCouldNotBeRemoved, SalesOrderNotSet } from '../../constants/errors.constants';\nimport { OrderItem, SalesOrder } from '@sales/hardware-checkout/data-access';\nimport { SalesOrderUtil } from '../../utils/sales-order.util';\nimport { EtfFacade } from '@sales/etf/data-access';\nimport { StrategyUtil } from '../../utils/strategy.util';\nimport { HardwareCheckoutError } from '../../classes/hardware-checkout-error.class';\n\nexport class EtfStepFinishedStrategy implements EventStrategy {\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly etfFacade: EtfFacade,\n    private readonly stepEventBody: etfResponse\n  ) {}\n\n  showLoader(): boolean {\n    return true;\n  }\n\n  execute(): Observable<boolean> {\n    return this.hardwareCheckoutFacade.salesOrderFromState$\n      .pipe(take(1), this.terminateOrderItems(), this.addDiscounts())\n      .pipe(StrategyUtil.processSalesOrderToDeliveryCalculated(this.hardwareCheckoutFacade));\n  }\n\n  private addDiscounts(addedDiscountIds: string[] = []): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder: SalesOrder) => {\n        if (addedDiscountIds.length < this.stepEventBody.targetOrderItemIdsToDiscount.length) {\n          const nextBasicDiscountItemId = this.stepEventBody.targetOrderItemIdsToDiscount\n            .filter((orderItemToDiscount) => {\n              return !addedDiscountIds.includes(orderItemToDiscount.id);\n            })\n            .pop();\n          if (nextBasicDiscountItemId) {\n            const rule = SalesOrderUtil.getDiscountRuleByTargetOrderId(salesOrder.rules, nextBasicDiscountItemId.id);\n            if (rule) {\n              addedDiscountIds.push(nextBasicDiscountItemId.id);\n              return this.hardwareCheckoutFacade\n                .addDiscount(salesOrder.id, rule.id)\n                .pipe(this.addDiscounts(addedDiscountIds));\n            }\n          }\n        }\n        return of(salesOrder);\n      })\n    );\n  }\n\n  private terminateOrderItems(): UnaryFunction<Observable<SalesOrder | undefined>, Observable<SalesOrder>> {\n    return mergeMap((salesOrder: SalesOrder | undefined) => {\n      if (salesOrder) {\n        const existingHardwareOrderItem = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n        return from(this.stepEventBody.existingDiscountsToRemove).pipe(\n          this.deleteDiscounts(existingHardwareOrderItem, salesOrder),\n          this.takeLatestSalesOrder(),\n          map((salesOrder) => {\n            if (salesOrder) {\n              return salesOrder;\n            }\n            throw new HardwareCheckoutError(SalesOrderNotSet);\n          })\n        );\n      }\n      throw new HardwareCheckoutError(SalesOrderNotSet);\n    });\n  }\n\n  private takeLatestSalesOrder(): OperatorFunction<SalesOrder, SalesOrder | undefined> {\n    return reduce((latestSalesOrder: SalesOrder | undefined, salesOrder: SalesOrder) => {\n      if (!latestSalesOrder || (salesOrder && salesOrder.orderItems.length > latestSalesOrder.orderItems.length)) {\n        latestSalesOrder = salesOrder;\n      }\n      return latestSalesOrder;\n    }, undefined);\n  }\n\n  private deleteDiscounts(\n    existingHardwareOrderItem: OrderItem,\n    salesOrder: SalesOrder\n  ): OperatorFunction<{ id: string }, SalesOrder> {\n    return mergeMap((discount: { id: string }) => {\n      return this.etfFacade.usedAndPendingDiscountSlots$.pipe(\n        take(1),\n        mergeMap((usedDiscountSlots) => {\n          if (usedDiscountSlots) {\n            const selectedOrderItemToDelete = existingHardwareOrderItem.orderItems?.find(\n              (orderItem) => orderItem.customerProductId === discount.id\n            );\n            if (selectedOrderItemToDelete) {\n              return this.hardwareCheckoutFacade.deleteOrderItem(salesOrder.id, selectedOrderItemToDelete.id);\n            }\n          }\n          throw new HardwareCheckoutError(DiscountCouldNotBeRemoved);\n        })\n      );\n    });\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { forkJoin, mergeMap, Observable, of, pipe, switchMap, UnaryFunction } from 'rxjs';\nimport { catchError, map, take, tap } from 'rxjs/operators';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport {\n  CustomerAccountDetails,\n  CustomerTypeEnum,\n  SalesOrder,\n  SalesOrderStateEnum,\n} from '@sales/hardware-checkout/data-access';\nimport { SalesOrderUtil } from '../../utils/sales-order.util';\nimport { StrategyUtil } from '../../utils/strategy.util';\nimport { HardwareCheckoutError } from '../../classes/hardware-checkout-error.class';\nimport {\n  CustomerHasNoLocationAssociated,\n  HardwareCreationFailed,\n  SalesOfferNotFound,\n} from '../../constants/errors.constants';\nimport { CustomerAccountDetailsUtil } from '../../utils/customer-account-details.util';\nimport { EventFacade } from '@sales/events/data-access';\nimport { UsedSlot } from '@sales/etf/data-access';\nimport { OrderItemWithMatchingDiscount } from '../../interfaces/order-item-with-matching-discount.interface';\nimport { DiscountUtil } from '../../utils/discount.util';\nimport { OrderItemActionEnum } from '../../enums/order-item-action.enum';\n\nexport class EtfStepLoadedStrategy implements EventStrategy {\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly eventFacade: EventFacade\n  ) {}\n\n  showLoader(): boolean {\n    return true;\n  }\n\n  execute(): Observable<boolean> {\n    return forkJoin({\n      customerAccount: this.hardwareCheckoutFacade.customerAccountDetails$.pipe(take(1)),\n      customerType: this.hardwareCheckoutFacade.customerType$.pipe(take(1)),\n      usedDiscountSlots: this.hardwareCheckoutFacade.usedDiscountSlots$.pipe(take(1)),\n    })\n      .pipe(\n        mergeMap(\n          (value: {\n            customerAccount: CustomerAccountDetails | undefined;\n            customerType: CustomerTypeEnum;\n            usedDiscountSlots: UsedSlot[] | undefined;\n          }) => {\n            const locationId = CustomerAccountDetailsUtil.getCustomerLocationId(\n              value.customerAccount,\n              value.customerType === CustomerTypeEnum.SOHO\n            );\n            if (!locationId) {\n              throw new HardwareCheckoutError(CustomerHasNoLocationAssociated);\n            }\n            this.eventFacade.triggerAnalyticsScAddEvent({ name: 'new product selected' });\n            return this.hardwareCheckoutFacade\n              .createSalesOrder(locationId)\n              .pipe(StrategyUtil.createHardwareItems(this.hardwareCheckoutFacade))\n              .pipe(StrategyUtil.setSalesOrderAsAbandonable(this.hardwareCheckoutFacade))\n              .pipe(map((salesOrder) => ({ salesOrder, usedDiscountSlots: value.usedDiscountSlots })))\n              .pipe(this.applyDiscounts());\n          }\n        )\n      )\n      .pipe(\n        tap(({ salesOrder, remainingItems }) => {\n          SalesOrderUtil.getHardwareOrderItem(salesOrder);\n          this.hardwareCheckoutFacade.saveSalesOrder(salesOrder);\n          this.hardwareCheckoutFacade.setEtfOrderItems(\n            remainingItems.map((orderItemsWithDiscount) => orderItemsWithDiscount.orderItem),\n            salesOrder.rules\n          ); // Set remaining items\n          this.hardwareCheckoutFacade.setSalesOrderState(SalesOrderStateEnum.ETF_NEEDED);\n        }),\n        map(() => true),\n        catchError((error) => {\n          if (error instanceof HardwareCheckoutError) {\n            throw error;\n          } else {\n            throw new HardwareCheckoutError(HardwareCreationFailed);\n          }\n        })\n      );\n  }\n\n  public applyDiscounts(): UnaryFunction<\n    Observable<{\n      salesOrder: SalesOrder;\n      usedDiscountSlots: UsedSlot[] | undefined;\n    }>,\n    Observable<{ salesOrder: SalesOrder; remainingItems: OrderItemWithMatchingDiscount[] }>\n  > {\n    return pipe(\n      mergeMap(({ salesOrder, usedDiscountSlots }) =>\n        this.hardwareCheckoutFacade.salesOffer$.pipe(\n          take(1),\n          switchMap((sdataSalesOffer) => {\n            if (!sdataSalesOffer) {\n              throw new HardwareCheckoutError(SalesOfferNotFound);\n            }\n\n            const orderItemsWithDiscounts: OrderItemWithMatchingDiscount[] =\n              DiscountUtil.getDiscountedOrderItemsFromSalesOffer(salesOrder, sdataSalesOffer, OrderItemActionEnum.ADD);\n\n            const { itemsToDiscount, remainingItems } = DiscountUtil.getItemsToDiscountAndRemaining(\n              orderItemsWithDiscounts,\n              usedDiscountSlots\n            );\n\n            if (itemsToDiscount.length > 0) {\n              return StrategyUtil.applyDiscountsRecursively(\n                this.hardwareCheckoutFacade,\n                itemsToDiscount,\n                salesOrder\n              ).pipe(\n                map(() => ({ salesOrder, remainingItems })) // Pass salesOrder and remainingItems to the next stage\n              );\n            }\n            return of({ salesOrder, remainingItems });\n          })\n        )\n      )\n    );\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { Observable, of } from 'rxjs';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport { SalesOrderStateEnum } from '@sales/hardware-checkout/data-access';\nimport { EtfFacade } from '@sales/etf/data-access';\n\nexport class EtfStepReloadedStrategy implements EventStrategy {\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly etfFacade: EtfFacade\n  ) {}\n\n  showLoader(): boolean {\n    return true;\n  }\n\n  execute(): Observable<boolean> {\n    this.hardwareCheckoutFacade.setSalesOrderState(SalesOrderStateEnum.INITIALISING);\n    this.etfFacade.resetEtfState();\n    return of(true);\n  }\n}\n","import { EventStrategy } from '../interfaces/event-strategy.interface';\nimport { Observable, of } from 'rxjs';\nimport { EventInterface, EventTypeEnum } from '@sales/events/data-access';\nimport { HardwareCheckoutFacade } from '../facades/hardware-checkout.facade';\n\nexport class NavigationStrategy implements EventStrategy {\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly event: EventInterface\n  ) {}\n\n  showLoader(): boolean {\n    return false;\n  }\n\n  execute(): Observable<boolean> {\n    let navigationState = true;\n    if (this.event.eventType === EventTypeEnum.HIDE_NAVIGATION) {\n      navigationState = false;\n    }\n    this.hardwareCheckoutFacade.setNavigationState(navigationState);\n    return of(false);\n  }\n}\n","import { EventStrategy } from '../interfaces/event-strategy.interface';\nimport { Observable, of } from 'rxjs';\n\nexport class NoActionStrategy implements EventStrategy {\n  constructor(private readonly shouldShowLoader = false) {}\n\n  showLoader(): boolean {\n    return this.shouldShowLoader;\n  }\n\n  execute(): Observable<boolean> {\n    return of(false);\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { forkJoin, iif, Observable, of } from 'rxjs';\nimport { UrlService } from '@telenet/ng-lib-page';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport { catchError, map, mergeMap, take } from 'rxjs/operators';\nimport { ConfigConstants, ConfigService } from '@telenet/ng-lib-config';\nimport { HardwareCheckoutConstants } from '../../constants/hardware-checkout.constants';\nimport { contractGenerationErrorNotification } from '@sales/summary/data-access';\n\nexport class SummaryShowContractSummaryStrategy implements EventStrategy {\n  constructor(\n    private readonly urlService: UrlService,\n    private readonly configService: ConfigService,\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade\n  ) {}\n\n  showLoader(): boolean {\n    return true;\n  }\n\n  execute(): Observable<boolean> {\n    return forkJoin([\n      this.hardwareCheckoutFacade.contractSummaryUrl$.pipe(take(1)),\n      this.hardwareCheckoutFacade.contractSummaryGenerationNotPossible$.pipe(take(1)),\n    ]).pipe(\n      mergeMap(([contractSummaryUrl, contractSummaryGenerationNotPossible]) => {\n        if (contractSummaryGenerationNotPossible && !contractSummaryUrl) {\n          this.hardwareCheckoutFacade.addSummaryGeneralNotification(contractGenerationErrorNotification);\n          return of(undefined);\n        } else {\n          return iif(() => !contractSummaryUrl, this.generateContractSummary(), of(contractSummaryUrl));\n        }\n      }),\n      map((contractSummaryUrl) => {\n        if (contractSummaryUrl) {\n          this.urlService.openNewTab(contractSummaryUrl);\n        }\n      }),\n      map(() => false)\n    );\n  }\n\n  private generateContractSummary() {\n    return this.hardwareCheckoutFacade.salesOrderFromState$.pipe(\n      take(1),\n      mergeMap((salesOrder) => {\n        if (salesOrder) {\n          return this.hardwareCheckoutFacade.generateContractSummary(salesOrder?.id).pipe(\n            catchError((error) => {\n              console.error('Error while generating contract summary', error);\n              return of(undefined);\n            })\n          );\n        }\n        console.error('Error while generating contract summary.  SalesOrder not set in state');\n        return of(undefined);\n      }),\n      map((contractSummaryResponse) => {\n        let contractSummaryUrl: string | undefined;\n        if (contractSummaryResponse) {\n          contractSummaryUrl = this.generateContractSummaryURL(contractSummaryResponse.uuid);\n          this.hardwareCheckoutFacade.setContractSummaryUrl(contractSummaryUrl);\n        }\n        return contractSummaryUrl;\n      }),\n      map((contractSummaryUrl) => {\n        if (!contractSummaryUrl) {\n          this.hardwareCheckoutFacade.addSummaryGeneralNotification(contractGenerationErrorNotification);\n        }\n        return contractSummaryUrl;\n      })\n    );\n  }\n\n  private generateContractSummaryURL(documentId: string): string {\n    return this.configService\n      .getConfig(ConfigConstants.OCAPI_URl)\n      .concat(HardwareCheckoutConstants.CONTRACT_SUMMARY_ENDPOINT)\n      .concat(documentId);\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport {\n  CheckoutDeliveryError,\n  NoHomeDeliveryOrderItem,\n  SubmitSalesOrderFailed,\n} from '../../constants/errors.constants';\nimport { map, mergeMap, take } from 'rxjs/operators';\nimport { SummaryFacade } from '@sales/summary/data-access';\nimport { MediaQueryService, UrlService } from '@telenet/ng-lib-page';\nimport { HardwareCheckoutError } from '../../classes/hardware-checkout-error.class';\nimport { AddressUtil } from '../../utils/address.util';\nimport { SalesOrderUtil } from '../../utils/sales-order.util';\nimport { OrderItemActionEnum } from '../../enums/order-item-action.enum';\nimport { SalesOrder } from '@sales/hardware-checkout/data-access';\nimport { EventFacade } from '@sales/events/data-access';\nimport { PaymentRequestUtil } from '../../utils/payment-request.util';\n\nexport class SummaryStepFinishedStrategy implements EventStrategy {\n  constructor(\n    private readonly hardwareCheckoutFacade: HardwareCheckoutFacade,\n    private readonly summaryFacade: SummaryFacade,\n    private readonly urlService: UrlService,\n    private readonly mediaQueryService: MediaQueryService,\n    private readonly eventFacade: EventFacade\n  ) {}\n\n  showLoader(): boolean {\n    return true;\n  }\n\n  execute(): Observable<boolean> {\n    return this.hardwareCheckoutFacade.salesOrderFromState$.pipe(\n      take(1),\n      mergeMap((salesOrder: SalesOrder | undefined) => {\n        if (salesOrder) {\n          return SalesOrderUtil.checkoutDeliveryRequired(salesOrder)\n            ? this.hardwareCheckoutFacade.checkoutDelivery(salesOrder.id)\n            : of(salesOrder);\n        }\n        throw new HardwareCheckoutError(CheckoutDeliveryError);\n      }),\n      mergeMap((salesOrder) => {\n        if (salesOrder) {\n          // do not re-submit sales order if customer already tried to do payment\n          const awaitsPayment = SalesOrderUtil.orderAwaitsPayment(salesOrder);\n          const submittedSalesOrder$: Observable<SalesOrder> = awaitsPayment\n            ? of(salesOrder)\n            : this.hardwareCheckoutFacade.submitSalesOrder(salesOrder.id);\n\n          return forkJoin({\n            awaitsPayment: of(awaitsPayment),\n            salesOrder: submittedSalesOrder$,\n          });\n        }\n        throw new HardwareCheckoutError(SubmitSalesOrderFailed);\n      }),\n      mergeMap(({ awaitsPayment, salesOrder }) => {\n        if (!awaitsPayment) {\n          this.eventFacade.triggerAnalyticsClickEvent({ name: 'order submitted' });\n        }\n        const homeDeliveryOrderItem = SalesOrderUtil.getDeliveryOrderItem(salesOrder, OrderItemActionEnum.ADD);\n        if (homeDeliveryOrderItem) {\n          return forkJoin([\n            of(salesOrder),\n            this.hardwareCheckoutFacade.getAddressById(homeDeliveryOrderItem.chars['Postal Code']),\n            this.hardwareCheckoutFacade.getAddressById(homeDeliveryOrderItem.chars['Street']),\n          ]);\n        }\n        throw new HardwareCheckoutError(NoHomeDeliveryOrderItem);\n      }),\n      mergeMap(([salesOrder, postalCodeUnit, streetUnit]) => {\n        const deliveryAddress = AddressUtil.convertNcPostalAddressToDeliveryAddress(postalCodeUnit);\n        deliveryAddress.street = streetUnit.name;\n        return forkJoin([of(salesOrder), of(deliveryAddress)]);\n      }),\n      mergeMap(([salesOrder, deliveryAddress]) => {\n        const homeDeliveryOrderItem = SalesOrderUtil.getDeliveryOrderItem(salesOrder, OrderItemActionEnum.ADD);\n        const urlWithoutParams = this.urlService.getCurrentUrl().split('?')[0];\n\n        return this.hardwareCheckoutFacade.getPaymentRequestObject(\n          PaymentRequestUtil.getPaymentRequestObject(\n            salesOrder,\n            homeDeliveryOrderItem,\n            urlWithoutParams,\n            deliveryAddress,\n            this.summaryFacade.getLanguage(),\n            this.mediaQueryService.getDeviceName()\n          )\n        );\n      }),\n      mergeMap((response) => {\n        const payment = response.payment;\n        this.summaryFacade.setIngenicoForm({\n          ACCEPTURL: payment.acceptURL,\n          ALIAS: '',\n          ALIASOPERATION: '',\n          ALIASUSAGE: '',\n          AMOUNT: payment.amount,\n          BRAND: '',\n          CANCELURL: payment.cancelURL,\n          CN: payment.contactName,\n          CURRENCY: payment.currency,\n          DECLINEURL: payment.declineURL,\n          DEVICE: payment.device,\n          EMAIL: payment.email,\n          EXCEPTIONURL: payment.exceptionURL,\n          LANGUAGE: payment.language,\n          ORDERID: payment.transactionId,\n          OWNERADDRESS: payment.ownerAddress,\n          OWNERCTY: payment.ownerCountry,\n          OWNERTELNO: payment.ownerContactNumber,\n          OWNERTOWN: payment.ownerTown,\n          OWNERZIP: payment.ownerZip,\n          PARAMPLUS: payment.paramPlus,\n          PARAMVAR: payment.paramVar,\n          PM: '',\n          PMLISTTYPE: '',\n          PSPID: payment.paymentServiceProviderId,\n          SECRET: '',\n          SHASIGN: response.signature,\n          TP: payment.template,\n        });\n        return of(true);\n      }),\n      map(() => {\n        this.summaryFacade.setIngenicoFormReady(true);\n        return true;\n      })\n    );\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { map, mergeMap, take, tap } from 'rxjs/operators';\nimport { HardwareCheckoutFacade } from '../../facades/hardware-checkout.facade';\nimport { CouldNotStoreSalesOrderOnSummary, UpdateHomeDeliveryCharsError } from '../../constants/errors.constants';\nimport { CustomerAccountDetails, SalesOrder, SalesOrderStateEnum } from '@sales/hardware-checkout/data-access';\nimport { HardwareCheckoutError } from '../../classes/hardware-checkout-error.class';\nimport { StrategyUtil } from '../../utils/strategy.util';\nimport { SalesOrderUtil } from '../../utils/sales-order.util';\nimport { paymentErrorNotification } from '@sales/summary/data-access';\n\nexport class SummaryStepLoadedStrategy implements EventStrategy {\n  constructor(private readonly hardwareCheckoutFacade: HardwareCheckoutFacade) {}\n\n  showLoader(): boolean {\n    return false;\n  }\n\n  execute(): Observable<boolean> {\n    return this.hardwareCheckoutFacade.salesOrderFromState$.pipe(\n      take(1),\n      mergeMap((salesOrder) => {\n        return salesOrder && SalesOrderUtil.orderAwaitsPayment(salesOrder)\n          ? this.resetSummaryState(salesOrder)\n          : this.doNormalFlow(salesOrder);\n      })\n    );\n  }\n\n  private doNormalFlow(salesOrder: SalesOrder | undefined): Observable<boolean> {\n    return forkJoin({\n      salesOrder: of(salesOrder),\n      customerAccountDetails: this.hardwareCheckoutFacade.customerAccountDetails$.pipe(take(1)),\n    }).pipe(\n      mergeMap(\n        (value: { salesOrder: SalesOrder | undefined; customerAccountDetails: CustomerAccountDetails | undefined }) => {\n          if (value.salesOrder && value.customerAccountDetails) {\n            return this.hardwareCheckoutFacade.updateOrderItemCharsHomeDelivery(\n              value.salesOrder.id,\n              value.customerAccountDetails\n            );\n          }\n          throw new HardwareCheckoutError(UpdateHomeDeliveryCharsError);\n        }\n      ),\n      tap((salesOrder) => {\n        if (salesOrder) {\n          this.hardwareCheckoutFacade.setSalesOrderState(SalesOrderStateEnum.CHECKOUT_DELIVERY_FINISHED);\n          this.hardwareCheckoutFacade.saveSalesOrder(salesOrder);\n        } else {\n          throw new HardwareCheckoutError(CouldNotStoreSalesOrderOnSummary);\n        }\n      }),\n      StrategyUtil.resetContractSummaryInfo(),\n      map(() => true)\n    );\n  }\n\n  private resetSummaryState(salesOrder: SalesOrder) {\n    return of(salesOrder).pipe(\n      StrategyUtil.setSummaryDetails(this.hardwareCheckoutFacade),\n      StrategyUtil.setSummaryDeliveryPersonalInfoFromRetrievedSalesOrder(this.hardwareCheckoutFacade),\n      StrategyUtil.setSummaryDeliveryAddressFromRetrievedSalesOrder(this.hardwareCheckoutFacade),\n      StrategyUtil.handleNotifications(this.hardwareCheckoutFacade),\n      StrategyUtil.loadContractSummaryInfo(this.hardwareCheckoutFacade),\n      tap(() => this.hardwareCheckoutFacade.setSalesOrderState(SalesOrderStateEnum.CHECKOUT_DELIVERY_FINISHED)),\n      mergeMap(() => {\n        return this.hardwareCheckoutFacade.ingenicoResultUtil$.pipe(\n          map((ingenicoResultUtil) => {\n            if (ingenicoResultUtil?.isFailed()) {\n              this.hardwareCheckoutFacade.addSummaryGeneralNotification(paymentErrorNotification);\n            }\n            return true;\n          })\n        );\n      })\n    );\n  }\n}\n","import { EventStrategy } from '../../interfaces/event-strategy.interface';\nimport { Observable, of } from 'rxjs';\nimport { EventFacade } from '@sales/events/data-access';\n\nexport class ThankYouStepLoadedStrategy implements EventStrategy {\n  constructor(private readonly eventFacade: EventFacade) {}\n\n  execute(): Observable<boolean> {\n    this.eventFacade.triggerAnalyticsTransactionEvent();\n    this.eventFacade.triggerAnalyticsSalesFlowEndEvent();\n    return of(true);\n  }\n\n  showLoader(): boolean {\n    return false;\n  }\n}\n","import { EventStrategy } from '../interfaces/event-strategy.interface';\nimport { Observable, of } from 'rxjs';\nexport class WaitingForStateUpdateStrategy implements EventStrategy {\n  showLoader(): boolean {\n    return true;\n  }\n  execute(): Observable<boolean> {\n    return of(false);\n  }\n}\n","import { DeliveryAddress } from '@sales/delivery/data-access';\nimport { AddressFieldValue } from '@sales/address-form-field/data-access';\nimport { AddressUnit } from '@sales/shared/address/data-access';\nimport { UpdateDeliveryAddressInfo } from '../interfaces/update-installation-address-request.interface';\n\nexport class AddressUtil {\n  static convertNcAddressToDeliveryAddress(address: AddressUnit): DeliveryAddress {\n    return {\n      addressUnit: address,\n      municipality: this.getAddressValue(address, 'Municipality'),\n      postalCode: address.postalCode ? address.postalCode : '',\n      street: this.getAddressValue(address, 'Street'),\n      houseNumber: address.name,\n      subHouseNumber: address.subHouseNumber ? address.subHouseNumber : undefined,\n      box: address.boxNumber ? address.boxNumber : undefined,\n      country: this.getAddressValue(address, 'Country'),\n    };\n  }\n\n  static convertNcPostalAddressToDeliveryAddress(address: AddressUnit): DeliveryAddress {\n    return {\n      addressUnit: address,\n      municipality: this.getAddressValue(address, 'Municipality'),\n      postalCode: address.name ? address.name : '',\n      street: '',\n      houseNumber: '',\n      subHouseNumber: undefined,\n      box: undefined,\n      country: this.getAddressValue(address, 'Country'),\n    };\n  }\n\n  static getUpdateDeliveryLocationBody(addressFieldValue: AddressFieldValue): UpdateDeliveryAddressInfo | undefined {\n    if (addressFieldValue.street?.addressUnit) {\n      if (!addressFieldValue || !addressFieldValue.geographical_address) {\n        return undefined;\n      }\n\n      const { geographical_address } = addressFieldValue;\n\n      const { boxNumber = '', floor } = geographical_address.box || {};\n      const floorString = floor ? ` (${floor})` : '';\n      const boxString = `${boxNumber}${floorString}`;\n\n      return {\n        Country: this.getAddressValueId(addressFieldValue.street?.addressUnit, 'Country'),\n        'House Number': this.getFieldValueOrDefault(addressFieldValue.geographical_address?.housenumber),\n        'Sub-house Number': this.getFieldValueOrDefault(addressFieldValue.geographical_address?.subhousenumber),\n        'Box Number': boxString,\n        'Municipality/Sub-municipality': this.getAddressValueId(addressFieldValue.street?.addressUnit, 'Municipality'),\n        'Postal Code': this.getFieldValueOrDefault(addressFieldValue.municipality?.postalCode),\n        Street: addressFieldValue.street?.addressUnit.id,\n      };\n    }\n    return undefined;\n  }\n\n  static convertFieldValueToDeliveryAddress(addressFieldValue: AddressFieldValue): DeliveryAddress | undefined {\n    if (\n      !addressFieldValue ||\n      !addressFieldValue.geographical_address ||\n      !addressFieldValue.municipality ||\n      !addressFieldValue.street\n    ) {\n      return undefined;\n    }\n\n    const { geographical_address, street, municipality } = addressFieldValue;\n    if (!street?.addressUnit) {\n      return undefined;\n    }\n\n    const { boxNumber = '', floor } = geographical_address.box || {};\n    const floorString = floor ? ` (${floor})` : '';\n    const boxString = `${boxNumber}${floorString}`;\n\n    return {\n      addressUnit: street?.addressUnit,\n      country: this.getAddressValue(street.addressUnit, 'Country'), // Assuming getAddressValue handles undefined inputs\n      postalCode: municipality.postalCode,\n      municipality: municipality.location,\n      street: street.value || '',\n      houseNumber: geographical_address.housenumber || '',\n      subHouseNumber: geographical_address.subhousenumber,\n      box: boxString,\n    };\n  }\n\n  static getAddressValue(addressUnit: AddressUnit | undefined, value: string): string {\n    if (addressUnit) {\n      const foundValue = addressUnit.addressUnitChain?.find((addressUnit) => addressUnit.type === value);\n      if (foundValue) {\n        return foundValue.name;\n      }\n    }\n    return '';\n  }\n\n  static getAddressValueId(addressUnit: AddressUnit, value: string): string {\n    const foundValue = addressUnit.addressUnitChain?.find((addressUnit) => addressUnit.type === value);\n\n    if (foundValue) {\n      return foundValue.id;\n    }\n    return '';\n  }\n\n  private static getFieldValueOrDefault<T>(fieldValue: T | undefined | null): T | string {\n    return fieldValue ?? '';\n  }\n}\n","import { DataLayerAttributes } from '@telenet/ng-lib-datalayer';\nimport { Cart } from 'udl';\n\nexport class AnalyticsUtil {\n  static enrichWithCommonAttributes(\n    analyticsAttributes: DataLayerAttributes | undefined,\n    attributes: DataLayerAttributes | undefined,\n    cart: Cart | undefined\n  ): DataLayerAttributes {\n    const dataLayerAttributes = { ...(analyticsAttributes || {}), ...(attributes || {}) };\n    if (cart !== undefined) {\n      dataLayerAttributes.cart = cart;\n    }\n    return dataLayerAttributes;\n  }\n}\n","import { CustomerAccountDetails } from '@sales/hardware-checkout/data-access';\n\nexport class CustomerAccountDetailsUtil {\n  static getCustomerLocationId(\n    customerAccountDetails: CustomerAccountDetails | undefined,\n    isSoho = false\n  ): string | undefined {\n    let locationId = undefined;\n    let matchingContactMethod = undefined;\n    if (customerAccountDetails) {\n      const customerLocations = customerAccountDetails.customerLocations?.filter(\n        (location) => !location.isPseudoLocation\n      );\n      const customerAddress = this.getCustomerAddress(customerAccountDetails, isSoho);\n      if (customerAddress && customerLocations && customerLocations.length > 0) {\n        matchingContactMethod = customerLocations.find(\n          (customerLocation) => customerLocation.address.id === customerAddress.id\n        );\n      }\n      if (matchingContactMethod) {\n        locationId = matchingContactMethod.id;\n      } else if (customerLocations && customerLocations.length > 0) {\n        locationId = customerLocations[0].id;\n      }\n    }\n    return locationId;\n  }\n\n  private static getCustomerAddress(\n    customerAccountDetails: CustomerAccountDetails,\n    isSoho: boolean\n  ):\n    | {\n        id: string;\n        name: string;\n      }\n    | undefined {\n    if (isSoho) {\n      return customerAccountDetails.legalAddress;\n    }\n    return customerAccountDetails.customerAddress;\n  }\n}\n","import { ContactDetailsCustomerCategoryEnum } from '@sales/hardware-checkout/data-access';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { GetCustomerDataError } from '../constants/errors.constants';\n\nexport class CustomerCategoryUtil {\n  public static getCustomerCategory(name: string): string {\n    const residential = [\n      ContactDetailsCustomerCategoryEnum.RESIDENTIAL,\n      ContactDetailsCustomerCategoryEnum.EVENT_DEMO,\n      ContactDetailsCustomerCategoryEnum.PRODUCTION_TEST,\n    ];\n    const business = [\n      ContactDetailsCustomerCategoryEnum.PRODUCTION_TEST_BUSINESS,\n      ContactDetailsCustomerCategoryEnum.PRD_TEST_BUSINESS,\n      ContactDetailsCustomerCategoryEnum.SOHO,\n    ];\n\n    const foundResidential = residential.find((value) => name === value);\n    if (foundResidential) {\n      return ContactDetailsCustomerCategoryEnum.RESIDENTIAL;\n    }\n\n    const foundBusiness = business.find((value) => name === value);\n    if (foundBusiness) {\n      return ContactDetailsCustomerCategoryEnum.SOHO;\n    }\n    throw new HardwareCheckoutError(GetCustomerDataError);\n  }\n}\n","import { SdataSalesOfferItem } from '@sales/hardware-checkout/data-access';\nimport { deliveryItemTypes, GenericItemType } from '@sales/delivery/feat-delivery';\nimport { DeliveryAddress, DeliveryItem, PersonalInfo } from '@sales/delivery/data-access';\nimport {\n  UpdateDeliveryAddressInfo,\n  UpdateDeliveryPersonalInfo,\n} from '../interfaces/update-installation-address-request.interface';\nimport { AddressUtil } from './address.util';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { CouldNotParseAddress } from '../constants/errors.constants';\n\nexport class DeliveryUtil {\n  static createDeliveryItems(deliveryItems: SdataSalesOfferItem[] | undefined): DeliveryItem[] | undefined {\n    if (deliveryItems) {\n      return this.convertDeliveryItems(deliveryItems);\n    }\n    return undefined;\n  }\n\n  static toDeliveryAddressChars(address: DeliveryAddress): UpdateDeliveryAddressInfo {\n    if (address.addressUnit.type === 'Street') {\n      return {\n        'Municipality/Sub-municipality': AddressUtil.getAddressValueId(address.addressUnit, 'Municipality'),\n        Street: address.addressUnit.id,\n        'House Number': address.houseNumber,\n        'Sub-house Number': address.subHouseNumber || null,\n        'Box Number': address.box || null,\n        Country: AddressUtil.getAddressValueId(address.addressUnit, 'Country'),\n      };\n    } else if (address.addressUnit.type === 'Geographical Address') {\n      return {\n        'Municipality/Sub-municipality': AddressUtil.getAddressValueId(address.addressUnit, 'Municipality'),\n        'Postal Code': address.addressUnit.id,\n        Street: AddressUtil.getAddressValueId(address.addressUnit, 'Street'),\n        'House Number': address.houseNumber,\n        'Sub-house Number': address.subHouseNumber || null,\n        'Box Number': address.box || null,\n        Country: AddressUtil.getAddressValueId(address.addressUnit, 'Country'),\n      };\n    } else throw new HardwareCheckoutError(CouldNotParseAddress);\n  }\n\n  static toDeliveryPersonalInfoChars(personalInfo: PersonalInfo | undefined): UpdateDeliveryPersonalInfo | undefined {\n    if (personalInfo) {\n      return {\n        'First Name': personalInfo.firstname,\n        'Last Name': personalInfo.lastname,\n        'Mobile Number': personalInfo.mobile,\n        'E-Mail': personalInfo.email,\n      };\n    }\n    return undefined;\n  }\n\n  private static convertDeliveryItems(deliveryItems: SdataSalesOfferItem[]): DeliveryItem[] | undefined {\n    if (deliveryItems) {\n      const convertedDeliveryItems: DeliveryItem[] = [];\n      deliveryItems.forEach((deliveryItem) => {\n        // Find the matching viewModel delivery type\n        let matchingDeliveryItemType = deliveryItemTypes.find((deliveryItemType) => {\n          return deliveryItemType.types.find((type) => {\n            return type === deliveryItem.type;\n          });\n        });\n\n        if (!matchingDeliveryItemType) {\n          matchingDeliveryItemType = GenericItemType;\n        }\n\n        const existingConvertedDeliveryItem = convertedDeliveryItems.find((convertedDeliveryItem) => {\n          return convertedDeliveryItem.productType === matchingDeliveryItemType?.typeKey;\n        });\n\n        if (existingConvertedDeliveryItem) {\n          existingConvertedDeliveryItem.quantity++;\n        } else {\n          convertedDeliveryItems.push({\n            productType: matchingDeliveryItemType.typeKey,\n            deliveryInfo: {\n              name: matchingDeliveryItemType.labelText,\n              iconType: matchingDeliveryItemType.iconType,\n            },\n            quantity: 1,\n          });\n        }\n      });\n      return convertedDeliveryItems;\n    }\n    return undefined;\n  }\n}\n","import { UsedSlot } from '@sales/etf/data-access';\nimport { OrderItemWithMatchingDiscount } from '../interfaces/order-item-with-matching-discount.interface';\nimport { OrderItem, SalesOrder, SdataSalesOffer, SdataSalesOfferItem } from '@sales/hardware-checkout/data-access';\nimport { SdataSalesOfferUtil } from './sdata-sales-offer.util';\nimport { SalesOrderUtil } from './sales-order.util';\nimport { OrderItemActionEnum } from '../enums/order-item-action.enum'; // Adjust the import path according to your project structure\n\nexport class DiscountUtil {\n  /**\n   * Extracts items to discount and the remaining items.\n   * @param orderItemsWithDiscounts - The array of order items with discounts.\n   * @param usedDiscountSlots - The array of used discount slots.\n   * @param maxSlots - The maximum number of discount slots available.\n   * @returns An object containing itemsToDiscount and remainingItems arrays.\n   */\n  static getItemsToDiscountAndRemaining(\n    orderItemsWithDiscounts: OrderItemWithMatchingDiscount[],\n    usedDiscountSlots: UsedSlot[] | undefined,\n    maxSlots: number = 5\n  ): { itemsToDiscount: OrderItemWithMatchingDiscount[]; remainingItems: OrderItemWithMatchingDiscount[] } {\n    const unusedSlotsNumber = maxSlots - (usedDiscountSlots ? usedDiscountSlots.length : 0);\n\n    let itemsToDiscount: OrderItemWithMatchingDiscount[] = [];\n    let remainingItems: OrderItemWithMatchingDiscount[] = [];\n\n    if (unusedSlotsNumber > 0) {\n      // Sort the items by price in descending order\n      orderItemsWithDiscounts.sort((a, b) => {\n        const priceA =\n          a.orderItem.orderItems && a.orderItem.orderItems[0]\n            ? parseFloat(a.orderItem.orderItems[0].prices.oneTimeTotal.value)\n            : 0;\n        const priceB =\n          b.orderItem.orderItems && b.orderItem.orderItems[0]\n            ? parseFloat(b.orderItem.orderItems[0].prices.oneTimeTotal.value)\n            : 0;\n\n        return priceB - priceA;\n      });\n\n      // Get the items to discount\n      itemsToDiscount = orderItemsWithDiscounts.slice(0, unusedSlotsNumber);\n\n      // Get the other items that are not in itemsToDiscount\n      const itemsToDiscountIds = new Set(itemsToDiscount.map((item) => item.orderItem.id));\n      remainingItems = orderItemsWithDiscounts.filter((item) => !itemsToDiscountIds.has(item.orderItem.id));\n    } else {\n      remainingItems = orderItemsWithDiscounts;\n    }\n\n    return { itemsToDiscount, remainingItems };\n  }\n\n  static getDiscountedOrderItemsFromSalesOffer(\n    salesOrder: SalesOrder,\n    sdataSalesOffer: SdataSalesOffer,\n    action?: OrderItemActionEnum\n  ) {\n    const salesOfferItemsWithDiscount: SdataSalesOfferItem[] =\n      SdataSalesOfferUtil.getSdataSalesOfferItemsWithDiscount(sdataSalesOffer);\n    const hardwareOrderItem: OrderItem = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n\n    if (!hardwareOrderItem.orderItems) {\n      throw new Error('Something is amiss with the order items.');\n    }\n\n    const orderItems = action\n      ? hardwareOrderItem.orderItems.filter((orderItem) => orderItem.action === action)\n      : hardwareOrderItem.orderItems;\n\n    return SalesOrderUtil.orderItemsWithMatchingDiscounts(orderItems, salesOfferItemsWithDiscount);\n  }\n}\n","import { HttpHeaders } from '@angular/common/http';\n\nexport class HeaderUtil {\n  static createHttpHeaders(currentUrl: string): HttpHeaders {\n    let httpHeaders = new HttpHeaders();\n    httpHeaders = httpHeaders.set('x-alt-referer', currentUrl);\n    httpHeaders = httpHeaders.set('X-Requested-With', 'XMLHttpRequest');\n    return httpHeaders;\n  }\n}\n","import {\n  RawImagesInterface,\n  RawLocalizedContentInterface,\n  RawOmapiQueryProductInterfaceData,\n} from '@telenet/ng-lib-omapi-query';\nimport { preAndBackOrderLabelTagKeys } from '../constants/omapi.constants';\nimport { OrderItem } from '@sales/hardware-checkout/data-access';\nimport { OmapiAttributeKeysEnum } from '../enums/omapi.enum';\nimport { SalesOrderUtil } from './sales-order.util';\n\nexport class OmapiUtil {\n  static isPreOrBackOrder(omapiQueryProducts: RawOmapiQueryProductInterfaceData[]): boolean {\n    const variantTagOptions = omapiQueryProducts.flatMap((omapiProduct) => {\n      return omapiProduct.variants.flatMap((variant) => {\n        return variant.tag.telenet.options;\n      });\n    });\n\n    return variantTagOptions.some((option) => {\n      return preAndBackOrderLabelTagKeys.includes(option.attributeKey);\n    });\n  }\n\n  static getPreOrderNotification(\n    omapiQueryProducts: RawOmapiQueryProductInterfaceData[],\n    language: string\n  ): string | undefined {\n    const isPreOrder = omapiQueryProducts\n      .flatMap((omapiProduct) => {\n        return omapiProduct.variants.flatMap((variant) => {\n          return variant.tag.telenet.options.find((option) => {\n            return option.attributeKey === 'pre_order_label';\n          });\n        });\n      })\n      .filter((variant) => variant)\n      .shift()?.preOrderDescription;\n\n    if (isPreOrder?.localizedContent) {\n      const message = OmapiUtil.getLocalisedContent(isPreOrder, language);\n      if (message) {\n        return message;\n      }\n    }\n\n    return undefined;\n  }\n\n  static getBackOrderNotification(\n    omapiQueryProducts: RawOmapiQueryProductInterfaceData[],\n    language: string\n  ): string | undefined {\n    const isBackOrder = omapiQueryProducts\n      .flatMap((omapiProduct) => {\n        return omapiProduct.variants.flatMap((variant) => {\n          return variant.tag.telenet.options.find((option) => {\n            return option.attributeKey === 'back_order_label';\n          });\n        });\n      })\n      .filter((variant) => variant)\n      .shift()?.backOrderDescription;\n\n    if (isBackOrder?.localizedContent) {\n      const message = OmapiUtil.getLocalisedContent(isBackOrder, language);\n      if (message) {\n        return message;\n      }\n    }\n\n    return undefined;\n  }\n\n  static getLocalisedContent(\n    content: { localizedContent: RawLocalizedContentInterface[] },\n    language: string\n  ): string | undefined {\n    const message = content.localizedContent.find((content) => {\n      return content.locale.toLocaleLowerCase() === language.toLocaleLowerCase();\n    });\n    return message?.value?.[0];\n  }\n\n  static getProductMainImage(\n    orderItem: OrderItem,\n    omapiProducts: RawOmapiQueryProductInterfaceData[]\n  ): RawImagesInterface | undefined {\n    const itemCode = orderItem.chars['Item Code'];\n    return omapiProducts\n      .flatMap((product) => product.variants)\n      .find((product) => product.productId === itemCode)\n      ?.images.find((image) => image.attributeKey === OmapiAttributeKeysEnum.MAIN_IMAGE);\n  }\n\n  static getProductVariant(orderItem: OrderItem, omapiProducts: RawOmapiQueryProductInterfaceData[]) {\n    return omapiProducts\n      .flatMap((omapiQueryProduct) => omapiQueryProduct.variants)\n      .find((variant) => variant.productId === SalesOrderUtil.getOrderItemItemCode(orderItem));\n  }\n}\n","import { OrderItem, OrderItemDeliveryChars } from '@sales/hardware-checkout/data-access';\n\nexport class OrderItemUtil {\n  private static readonly charMapping = {\n    'Delivery Address': 'address',\n    'Delivery Type': 'deliveryType',\n    'Municipality/Sub-municipality': 'municipality',\n    'Postal Code': 'postalCode',\n    Street: 'street',\n    'House Number': 'houseNumber',\n    'Sub-house Number': 'subHouseNumber',\n    'Box Number': 'box',\n    'First Name': 'firstName',\n    'Last Name': 'lastName',\n    'Mobile Number': 'mobileNumber',\n    'E-Mail': 'email',\n  };\n\n  public static getDeliveryChars(orderItem: OrderItem): OrderItemDeliveryChars {\n    const result: OrderItemDeliveryChars = {};\n    const data = orderItem.chars;\n\n    for (const [key, value] of Object.entries(OrderItemUtil.charMapping)) {\n      if (data[key]) {\n        result[value] = data[key];\n      }\n    }\n\n    return result;\n  }\n}\n","import { DeliveryAddress } from '@sales/delivery/data-access';\nimport {\n  OrderItem,\n  PaymentRequestDataInterface,\n  PaymentRequestPersonalInfo,\n  SalesOrder,\n} from '@sales/hardware-checkout/data-access';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { MandatoryFieldsAreMissing } from '../constants/errors.constants';\n\nexport class PaymentRequestUtil {\n  static getPaymentRequestObject(\n    salesOrder: SalesOrder,\n    homeDeliveryOrderItem: OrderItem,\n    urlWithoutParams: string,\n    deliveryAddress: DeliveryAddress,\n    language: string,\n    device: string\n  ): PaymentRequestDataInterface {\n    let mobileNumber = '';\n    if (homeDeliveryOrderItem?.chars['Mobile Number']) {\n      mobileNumber = homeDeliveryOrderItem?.chars['Mobile Number'];\n    } else {\n      throw new HardwareCheckoutError(MandatoryFieldsAreMissing);\n    }\n    return {\n      amount: Number(salesOrder.price.upfrontPaymentTotalForSecuredHomeDeliveryEquipment.value) + '',\n      salesOrderId: salesOrder.id,\n      personalInfo: PaymentRequestUtil.getPersonalInfoRequest(homeDeliveryOrderItem),\n      address: {\n        street: deliveryAddress?.street + '',\n        municipality: deliveryAddress?.municipality + '',\n        postalCode: deliveryAddress?.postalCode + '',\n      },\n      mobileNumber: mobileNumber,\n      shopUrl: urlWithoutParams + '?orderid=' + salesOrder.id,\n      language: language,\n      deviceType: device,\n    };\n  }\n\n  private static getPersonalInfoRequest(homeDeliveryOrderItem: OrderItem): PaymentRequestPersonalInfo {\n    let firstName = '';\n    let lastName = '';\n    let email = '';\n\n    if (\n      homeDeliveryOrderItem?.chars['First Name'] &&\n      homeDeliveryOrderItem?.chars['Last Name'] &&\n      homeDeliveryOrderItem?.chars['E-Mail']\n    ) {\n      firstName = homeDeliveryOrderItem.chars['First Name'];\n      lastName = homeDeliveryOrderItem.chars['Last Name'];\n      email = homeDeliveryOrderItem.chars['E-Mail'];\n    } else {\n      throw new HardwareCheckoutError(MandatoryFieldsAreMissing);\n    }\n\n    return {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n    };\n  }\n}\n","import { CustomerAccountDetails, CustomerAccountUtil, PersonalIdentity } from '@sales/hardware-checkout/data-access';\nimport { PersonalInfo } from '@sales/delivery/data-access';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { CustomerAccountCouldNotBeHandled, PersonalIdentityCouldNotBeHandled } from '../constants/errors.constants';\n\nexport class PersonalInfoUtil {\n  static getPersonalInfoFromIdentityAndCustomerAccount(\n    personalIdentity: PersonalIdentity | null,\n    customerAccountDetails: CustomerAccountDetails | null\n  ): PersonalInfo {\n    if (!customerAccountDetails) {\n      throw new HardwareCheckoutError(CustomerAccountCouldNotBeHandled);\n    }\n    if (!personalIdentity) {\n      throw new HardwareCheckoutError(PersonalIdentityCouldNotBeHandled);\n    }\n\n    const contractHolderContactDetails = CustomerAccountUtil.getContractHolder(customerAccountDetails);\n\n    if (!contractHolderContactDetails) {\n      throw new HardwareCheckoutError(CustomerAccountCouldNotBeHandled);\n    }\n    const { firstName, lastName } = this.getFirstAndLastName(personalIdentity);\n    const { mobile, email } = this.getMobileAndEmail(personalIdentity);\n\n    return {\n      firstname: firstName ?? '',\n      lastname: lastName ?? '',\n      mobile: mobile ?? '',\n      email: email ?? '',\n    };\n  }\n\n  private static getMobileAndEmail(personalIdentity: PersonalIdentity) {\n    const mobile = personalIdentity['Mobile Number'];\n    const email = personalIdentity['E-Mail'];\n\n    return { mobile, email };\n  }\n\n  private static getFirstAndLastName(personalIdentity: PersonalIdentity) {\n    const firstName = personalIdentity['First Name'];\n    const lastName = personalIdentity['Last Name'];\n\n    return { firstName, lastName };\n  }\n}\n","import { BusinessDomainsEnum } from '../enums/business-domains.enum';\nimport { GenericError, NcErrors, NoDeliveryOrderItemFound, NoHardwareItemsFound } from '../constants/errors.constants';\nimport { OrderItemActionEnum } from '../enums/order-item-action.enum';\nimport {\n  DiscountItem,\n  NcError,\n  OrderItem,\n  OrderItemDeliveryChars,\n  Rule,\n  SalesOrder,\n  SdataSalesOfferItem,\n  ValidationElementEnum,\n} from '@sales/hardware-checkout/data-access';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport {\n  DepreciationItem,\n  EtfPrice,\n  Price,\n  summaryDiscount,\n  SummaryOrderItem,\n  SummaryOrderItemPrice,\n  SummaryPrices,\n} from '@sales/summary/data-access';\nimport { OmapiUtil } from './omapi.util';\nimport { RawOmapiQueryProductInterfaceData } from '@telenet/ng-lib-omapi-query';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport { Observable, pipe, UnaryFunction } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderItemWithMatchingDiscount } from '../interfaces/order-item-with-matching-discount.interface';\nimport { OrderItemUtil } from './order-item.util';\n\nconst duration = 12;\n\nexport class SalesOrderUtil {\n  static getDiscountsThatAreUsedByOrderItems(salesOrder: SalesOrder): DiscountItem[] {\n    const discounts: DiscountItem[] = [];\n    const hardwareOrderItem = this.getHardwareOrderItem(salesOrder);\n    const discountItems = salesOrder.discountItems;\n\n    if (discountItems) {\n      discountItems.forEach((discountItem) => {\n        hardwareOrderItem.orderItems?.find((orderItem) => {\n          return orderItem.orderItems?.find((childOrderItem) => {\n            if (discountItem.targetOrderItems.map((orderItem) => orderItem.id).includes(childOrderItem.id)) {\n              discounts.push(discountItem);\n            }\n          });\n        });\n      });\n    }\n    return discounts;\n  }\n\n  static getHardwareOrderItem(salesOrder: SalesOrder, action?: OrderItemActionEnum) {\n    let orderItems = salesOrder.orderItems;\n    if (action) {\n      orderItems = orderItems.filter((orderItem) => orderItem.action === action);\n    }\n    const hardwareOrderItem = orderItems.find((orderItem) => {\n      return orderItem.offer.businessDomains.includes(BusinessDomainsEnum.HARDWARE_TLO);\n    });\n\n    if (!hardwareOrderItem) {\n      throw new HardwareCheckoutError(NoHardwareItemsFound);\n    }\n    return hardwareOrderItem;\n  }\n\n  static getHardwareItemList(salesOrder: SalesOrder) {\n    const hardwareOrderItem = this.getHardwareOrderItem(salesOrder);\n    return hardwareOrderItem.orderItems?.filter((orderItem) => orderItem.action === OrderItemActionEnum.ADD) || [];\n  }\n\n  static feasibilityCheckRequired(salesOrder: SalesOrder): boolean {\n    return !!salesOrder.validationElements.find(\n      (element) => element.typeOfProblem === ValidationElementEnum.FEASIBILITY_CHECK_REQUIRED\n    );\n  }\n\n  static getDeliveryOrderItem(salesOrder: SalesOrder, action?: OrderItemActionEnum) {\n    return this.getDeliveryOrderItemFor(salesOrder, BusinessDomainsEnum.DELIVERY_METHOD, action);\n  }\n\n  static getDeliveryOrderItemFor(\n    salesOrder: SalesOrder,\n    deliveryMethod: BusinessDomainsEnum,\n    action?: OrderItemActionEnum\n  ) {\n    let orderItems = salesOrder.orderItems;\n    if (action) {\n      orderItems = orderItems.filter((orderItem) => orderItem.action === action);\n    }\n\n    const deliveryOrderItem = orderItems.find((orderItem) => {\n      return orderItem.offer.businessDomains.includes(deliveryMethod);\n    });\n\n    if (!deliveryOrderItem) {\n      throw new HardwareCheckoutError(NoDeliveryOrderItemFound);\n    }\n\n    return deliveryOrderItem;\n  }\n\n  static getDiscountedOrderItems(salesOrder: SalesOrder): OrderItem[] | undefined {\n    const discountedOrderItems: OrderItem[] = [];\n    const hardwareOrderItemIds = this.getHardwareOrderItem(salesOrder)?.orderItems?.flatMap((orderItem) => {\n      if (orderItem.orderItems && orderItem.orderItems[0]) {\n        return orderItem.orderItems[0].id;\n      }\n      return undefined;\n    });\n\n    salesOrder.discountItems.forEach((discountItem) => {\n      discountedOrderItems.push(...discountItem.targetOrderItems);\n    });\n\n    return discountedOrderItems.filter((orderItem) => {\n      return hardwareOrderItemIds?.includes(orderItem.id);\n    });\n  }\n\n  static getDepreciationItems(salesOrder: SalesOrder, isSoho: boolean): DepreciationItem[] {\n    const discountedItems = this.getDiscountedOrderItems(salesOrder);\n    if (discountedItems) {\n      return discountedItems.map((orderItem) => {\n        let depreciationItem: DepreciationItem;\n        if (isSoho) {\n          depreciationItem = {\n            name: orderItem.name,\n            duration: duration,\n            price: Number(orderItem.prices.oneTimeDiscountWithoutTaxes.value),\n          };\n        } else {\n          depreciationItem = {\n            name: orderItem.name,\n            duration: duration,\n            price: Number(orderItem.prices.oneTimeDiscount.value),\n          };\n        }\n        return depreciationItem;\n      });\n    }\n    return [];\n  }\n\n  static getSummaryPrices(salesOrder: SalesOrder, isSoho: boolean): SummaryPrices {\n    const deliveryOrderItem = salesOrder.orderItems.find((orderItem) => {\n      return orderItem.offer.businessDomains.some(\n        (businessDomain) => businessDomain === BusinessDomainsEnum.HOME_DELIVERY\n      );\n    });\n\n    const zeroPrice = {\n      value: '0.00',\n      currency: {\n        name: 'Euro',\n        code: 'EU',\n      },\n    };\n\n    const findEtfItems = (salesOrder: SalesOrder, useTaxes: boolean): EtfPrice[] => {\n      return salesOrder.orderItems\n        .filter(\n          (orderItem) =>\n            orderItem.offer.businessDomains.includes(BusinessDomainsEnum.ETF) &&\n            orderItem.action === OrderItemActionEnum.ADD\n        )\n        .map((orderItem) => ({\n          labelKey: 'ng.sales-checkout.shopping-cart.lbl.cancellation-fee',\n          price: useTaxes ? orderItem.prices.oneTimeTotal : orderItem.prices.oneTimeTotalWithoutTaxes,\n          isMonthly: false,\n          productName: orderItem.chars['Device Name'],\n        }));\n    };\n\n    const calculateEtfTotal = (etfItems: EtfPrice[]): Price => {\n      return etfItems\n        .map((item) => item.price)\n        .reduce(\n          (total, price) => ({\n            value: parseFloat(total.value) + parseFloat(price.value) + '',\n            currency: price.currency,\n          }),\n          zeroPrice\n        );\n    };\n\n    const etfItemsInclVat = findEtfItems(salesOrder, true);\n    const summaryPrices: SummaryPrices = {\n      totals: {\n        deliveryCost: deliveryOrderItem?.prices.oneTimeDiscountedWithoutTaxes || zeroPrice,\n        upfrontCost: salesOrder.price.upfrontPaymentTotalForSecuredHomeDeliveryEquipment,\n        etfPrices: etfItemsInclVat,\n        etfTotal: calculateEtfTotal(etfItemsInclVat),\n      },\n      vatInclusive: !isSoho,\n    };\n    if (isSoho) {\n      const etfItemsSoho = findEtfItems(salesOrder, false);\n      const etfTotalSoho = calculateEtfTotal(etfItemsSoho);\n      summaryPrices.subTotals = {\n        deliveryCost: deliveryOrderItem?.prices.oneTimeDiscounted || zeroPrice,\n        upfrontCost: salesOrder.price.upfrontPaymentTotalForHomeDeliveryWithoutTaxes,\n        etfPrices: etfItemsSoho,\n        etfTotal: etfTotalSoho,\n      };\n    }\n    return summaryPrices;\n  }\n\n  static getOrderItemDiscountRuleByTarget(orderItem: OrderItem, rules: Rule[]): Rule | undefined {\n    return rules.find((rule) => {\n      return orderItem.orderItems?.find((childOrderItem) => {\n        return rule.targetOrderItemIds.includes(childOrderItem.id);\n      });\n    });\n  }\n\n  static getOrderItemDiscountRule(\n    orderItemWithMatchingDiscount: OrderItemWithMatchingDiscount,\n    rules: Rule[]\n  ): Rule | undefined {\n    const { orderItem, customerChosenDiscount } = orderItemWithMatchingDiscount;\n    return rules.find((rule) => {\n      const isTargeted = orderItem.orderItems?.some((childOrderItem) =>\n        rule.targetOrderItemIds.includes(childOrderItem.id)\n      );\n\n      const isDiscountMatch =\n        rule.discount.id === customerChosenDiscount.id || rule.slotName === customerChosenDiscount.type;\n      return isTargeted && isDiscountMatch;\n    });\n  }\n\n  static getOrderItemItemCodes(orderItem: OrderItem): string[] | undefined {\n    let orderItemCodes = undefined;\n    if (orderItem) {\n      orderItemCodes = orderItem.orderItems\n        ?.filter((orderItem) => orderItem.action === OrderItemActionEnum.ADD)\n        ?.map((orderItem) => {\n          return SalesOrderUtil.getOrderItemItemCode(orderItem);\n        })\n        .filter((value: string | undefined): value is string => {\n          return typeof value === 'string';\n        });\n    }\n    return orderItemCodes;\n  }\n\n  static getOrderItemItemCode(orderItem: OrderItem): string {\n    return orderItem.chars['Item Code'];\n  }\n\n  static getDiscountRuleByTargetOrderId(rules: Rule[], targetOrderItemId: string): Rule | undefined {\n    return rules.find((rule) => {\n      return rule.targetOrderItemIds.includes(targetOrderItemId);\n    });\n  }\n\n  static isBigItemDeliveryOrder(salesOrder: SalesOrder, products?: RawOmapiQueryProductInterfaceData[]): boolean {\n    return SalesOrderUtil.getHardwareItemList(salesOrder).some(\n      (orderItem) => OmapiUtil.getProductVariant(orderItem, products || [])?.extraAtHomeDelivery || false\n    );\n  }\n\n  static hasMultipleItems(salesOrder: SalesOrder): boolean {\n    const orderItemsToBeAdded = this.getHardwareItemList(salesOrder);\n    return orderItemsToBeAdded.length > 1;\n  }\n\n  static handleNcErrors<T extends object>(): UnaryFunction<Observable<T | NcError>, Observable<T>> {\n    return pipe(\n      map((result: T | NcError) => {\n        if (this.isNcError(result)) {\n          const errorObject = NcErrors.find((error) => error.key === result.errorCode);\n          if (errorObject) {\n            throw new HardwareCheckoutError(errorObject.error);\n          }\n          throw new HardwareCheckoutError(GenericError);\n        }\n        return result as T;\n      })\n    );\n  }\n\n  static isNcError(result: unknown): result is NcError {\n    if (typeof result === 'object' && result !== null) {\n      const error = result as Partial<NcError>;\n\n      return (\n        typeof error.errorCode === 'string' &&\n        typeof error.errorType === 'string' &&\n        typeof error.errorMessage === 'string'\n      );\n    }\n    return false;\n  }\n\n  static createSummaryOrderItems(\n    orderItems: OrderItem[],\n    discountItems: DiscountItem[],\n    omapiQueryProducts: RawOmapiQueryProductInterfaceData[],\n    omapiProducts: OmapiProduct[],\n    isSoho: boolean,\n    locale: string\n  ) {\n    const summaryOrderItems: SummaryOrderItem[] = [];\n    orderItems\n      .filter((orderItem) => orderItem.action === OrderItemActionEnum.ADD)\n      .forEach((orderItem: OrderItem) => {\n        let summaryOrderItem: SummaryOrderItem;\n        if (orderItem.orderItems) {\n          const childOrderItem = orderItem.orderItems[0];\n\n          const discountLabel = this.getOmapiDiscountLabelByTargetOrderId(\n            discountItems,\n            omapiProducts,\n            orderItem,\n            locale\n          );\n\n          const orderItemName = this.getLocalizedOmapiQueryProductName(\n            orderItem,\n            childOrderItem,\n            omapiQueryProducts,\n            locale\n          );\n\n          summaryOrderItem = {\n            id: childOrderItem.id,\n            name: orderItemName,\n            prices: this.getSummaryOrderPrices(childOrderItem, isSoho),\n          };\n\n          if (discountLabel) {\n            summaryOrderItem.discount = this.getSummaryOrderItemDiscount(discountLabel, childOrderItem, isSoho);\n          }\n\n          const orderItemMainImage = OmapiUtil.getProductMainImage(orderItem, omapiQueryProducts);\n\n          if (orderItemMainImage && orderItem && orderItem.orderItems) {\n            summaryOrderItem.mainImageUrl = orderItemMainImage.value;\n          }\n\n          summaryOrderItems.push(summaryOrderItem);\n        }\n      });\n    return summaryOrderItems;\n  }\n\n  static getDiscountByTargetOrderId(discountItems: DiscountItem[], orderItem: OrderItem): string | undefined {\n    let foundDiscount: string | undefined = undefined;\n    if (orderItem && orderItem.orderItems) {\n      const orderIdemTargetId = orderItem.orderItems[0].id;\n\n      foundDiscount = discountItems\n        .flatMap((discountItem) => {\n          return {\n            discountId: discountItem.discountId,\n            targetOrderItemIds: discountItem.targetOrderItems.flatMap((targetOrderItem) => targetOrderItem.id),\n          };\n        })\n        .find((flattenedDiscount) => {\n          return flattenedDiscount.targetOrderItemIds.includes(orderIdemTargetId);\n        })?.discountId;\n    }\n\n    return foundDiscount;\n  }\n\n  static orderAwaitsPayment(salesOrder: SalesOrder | undefined): boolean {\n    return salesOrder?.status === 'Waiting for payment';\n  }\n\n  static orderItemsWithMatchingDiscounts(\n    orderItems: OrderItem[],\n    salesOffers: SdataSalesOfferItem[]\n  ): OrderItemWithMatchingDiscount[] {\n    const offerMap = new Map(salesOffers.map((offer) => [offer.itemCode, offer.customerChosenDiscount]));\n\n    return orderItems\n      .map((item) => {\n        const customerChosenDiscount = offerMap.get(item.chars['Item Code']);\n\n        if (customerChosenDiscount) {\n          return {\n            orderItem: item,\n            customerChosenDiscount: customerChosenDiscount,\n          };\n        }\n        return null;\n      })\n      .filter((item) => item !== null) as OrderItemWithMatchingDiscount[]; // Filter out null values\n  }\n\n  private static getSummaryOrderItemDiscount(\n    associatedDiscount: string,\n    childOrderItem: OrderItem,\n    isSoho: boolean\n  ): summaryDiscount {\n    if (isSoho) {\n      return {\n        label: associatedDiscount,\n        price: childOrderItem.prices.oneTimeDiscountWithoutTaxes,\n      };\n    }\n    return {\n      label: associatedDiscount,\n      price: childOrderItem.prices.oneTimeDiscount,\n    };\n  }\n\n  private static getSummaryOrderPrices(childOrderItem: OrderItem, isSoho: boolean): SummaryOrderItemPrice {\n    if (isSoho) {\n      return {\n        total: childOrderItem.prices.oneTimeTotalWithoutTaxes,\n        discount: childOrderItem.prices.oneTimeDiscountWithoutTaxes,\n        discounted: childOrderItem.prices.oneTimeDiscountedWithoutTaxes,\n      };\n    }\n    return {\n      total: childOrderItem.prices.oneTimeTotal,\n      discount: childOrderItem.prices.oneTimeDiscount,\n      discounted: childOrderItem.prices.oneTimeDiscounted,\n    };\n  }\n\n  private static getOmapiDiscountLabelByTargetOrderId(\n    discountItems: DiscountItem[],\n    omapiProducts: OmapiProduct[],\n    orderItem: OrderItem,\n    locale: string\n  ): string | undefined {\n    const discountId = this.getDiscountByTargetOrderId(discountItems, orderItem);\n    const discountOmapiProduct = omapiProducts.find((omapiProduct) => omapiProduct.productId === discountId);\n    return discountOmapiProduct?.localizedContent?.find((content) => content.locale.toLocaleLowerCase() === locale)\n      ?.name;\n  }\n\n  private static getLocalizedOmapiQueryProductName(\n    parentOrderItem: OrderItem,\n    childOrderItem: OrderItem,\n    omapiQueryProducts: RawOmapiQueryProductInterfaceData[],\n    locale: string\n  ): string {\n    const omapiQueryProductVariant = OmapiUtil.getProductVariant(parentOrderItem, omapiQueryProducts);\n    const localizedContent = omapiQueryProductVariant?.shortDescription?.localizedContent.find(\n      (shortDescriptionLocalized) => shortDescriptionLocalized.locale.toLocaleLowerCase() === locale\n    );\n    const productBrand = omapiQueryProductVariant?.manBrand.localizedContent.find(\n      (languageOption) => languageOption.locale.toLocaleLowerCase() === locale\n    )?.value?.[0];\n    return `${productBrand ? productBrand + ' ' : ''}${localizedContent?.data || childOrderItem.name}`;\n  }\n\n  static getDeliveryChars(salesOrder: SalesOrder): OrderItemDeliveryChars {\n    const orderItem = this.getDeliveryOrderItem(salesOrder);\n    return OrderItemUtil.getDeliveryChars(orderItem);\n  }\n\n  static checkoutDeliveryRequired(salesOrder: SalesOrder): boolean {\n    return salesOrder.validationElements.some(\n      (element) => element.typeOfProblem === ValidationElementEnum.CHECKOUT_DELIVERY_REQUIRED\n    );\n  }\n}\n","import { SdataSalesOffer, SdataSalesOfferItem } from '@sales/hardware-checkout/data-access';\n\nexport class SdataSalesOfferUtil {\n  static getSdataSalesOfferItemsWithDiscount(sdataSalesOffer: SdataSalesOffer): SdataSalesOfferItem[] {\n    return sdataSalesOffer.offers.filter((offer) => offer.customerChosenDiscount && offer.customerChosenDiscount.type);\n  }\n}\n","import { forkJoin, Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { catchError, concatMap, map, mergeMap, take, tap } from 'rxjs/operators';\nimport {\n  BillingAccount,\n  CustomerTypeEnum,\n  DeliveryMethods,\n  DiscountItem,\n  OrderItemDeliveryChars,\n  SalesOrder,\n  SalesOrderStateEnum,\n  SdataSalesOfferItem,\n  SessionStorageConstants,\n} from '@sales/hardware-checkout/data-access';\nimport { HardwareCheckoutFacade } from '../facades/hardware-checkout.facade';\nimport { SalesOrderUtil } from './sales-order.util';\nimport { RawOmapiQueryProductInterface } from '@telenet/ng-lib-omapi-query';\nimport {\n  CouldNotUpdateInstallationLocation,\n  DiscountRuleNotFound,\n  EligibilityError,\n  NoBillingAccount,\n  NoHardwareItemsFound,\n  OrderItemCreationFailed,\n  SalesOrderNotSet,\n} from '../constants/errors.constants';\nimport { AddressUtil } from './address.util';\nimport { OrderItemActionEnum } from '../enums/order-item-action.enum';\nimport { HardwareCheckoutError } from '../classes/hardware-checkout-error.class';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport { OrderItemWithMatchingDiscount } from '../interfaces/order-item-with-matching-discount.interface';\nimport { UpdateDeliveryCharsRequest } from '../interfaces/update-installation-address-request.interface';\nimport { DeliveryUtil } from './delivery.util';\n\nexport class StrategyUtil {\n  static checkFeasibility(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder: SalesOrder) => {\n        if (SalesOrderUtil.feasibilityCheckRequired(salesOrder)) {\n          return hardwareCheckoutFacade.checkFeasibility(salesOrder.id);\n        }\n        return of(salesOrder);\n      })\n    );\n  }\n\n  static checkEligibility(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder: SalesOrder) => {\n        return hardwareCheckoutFacade.checkEligibility(salesOrder.id).pipe(\n          map((result) => {\n            if (result.length > 0) {\n              throw new HardwareCheckoutError(EligibilityError);\n            }\n            return salesOrder;\n          })\n        );\n      })\n    );\n  }\n\n  static checkContractSummary(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder: SalesOrder) => {\n        return hardwareCheckoutFacade.checkContractSummary(salesOrder.id).pipe(\n          tap((result) => {\n            hardwareCheckoutFacade.setContractSummaryRequired(result.isRequired);\n          }),\n          map(() => {\n            return salesOrder;\n          })\n        );\n      })\n    );\n  }\n\n  static handleNotifications(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder) => {\n        return hardwareCheckoutFacade.omapiQueryProducts$.pipe(\n          take(1),\n          tap((products) => {\n            hardwareCheckoutFacade.setDeliveryNotifications(salesOrder, products);\n            hardwareCheckoutFacade.setSummaryNotifications(salesOrder, products);\n          }),\n          map(() => salesOrder)\n        );\n      })\n    );\n  }\n\n  static handleDelivery(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder: SalesOrder) => {\n        return hardwareCheckoutFacade.getDeliveryOptions(salesOrder.id).pipe(\n          map((deliveryMethods) => {\n            return { salesOrder: salesOrder, deliveryMethods: deliveryMethods };\n          })\n        );\n      }),\n      mergeMap((res: { salesOrder: SalesOrder; deliveryMethods: DeliveryMethods }) => {\n        return hardwareCheckoutFacade.calculateDelivery(res.salesOrder.id, res.deliveryMethods);\n      })\n    );\n  }\n\n  static setSummaryDeliveryPersonalInfoFromRetrievedSalesOrder(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return (source: Observable<SalesOrder>) =>\n      source.pipe(\n        mergeMap((salesOrder: SalesOrder) => {\n          const orderItemDeliveryChars: OrderItemDeliveryChars = SalesOrderUtil.getDeliveryChars(salesOrder);\n          if (orderItemDeliveryChars.firstName && orderItemDeliveryChars.lastName) {\n            hardwareCheckoutFacade.setSummaryDeliveryPersonalInfo({\n              firstname: orderItemDeliveryChars.firstName ? orderItemDeliveryChars.firstName : '',\n              lastname: orderItemDeliveryChars.lastName,\n              mobile: orderItemDeliveryChars.mobileNumber ? orderItemDeliveryChars.mobileNumber : '',\n              email: orderItemDeliveryChars.email ? orderItemDeliveryChars.email : '',\n            });\n          }\n\n          return of(salesOrder);\n        })\n      );\n  }\n\n  static resetContractSummaryInfo(): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return (source: Observable<SalesOrder>) =>\n      source.pipe(\n        mergeMap((salesOrder: SalesOrder) => {\n          window.sessionStorage.removeItem(SessionStorageConstants.CHECKOUT_CONTRACT_SUMMARY_URL);\n          return of(salesOrder);\n        })\n      );\n  }\n\n  static loadContractSummaryInfo(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return (source: Observable<SalesOrder>) =>\n      source.pipe(\n        mergeMap((salesOrder: SalesOrder) => {\n          const contractSummaryRequired: boolean =\n            (window.sessionStorage.getItem(SessionStorageConstants.CHECKOUT_CONTRACT_SUMMARY_REQUIRED) ?? 'false') ===\n            'true';\n          hardwareCheckoutFacade.setContractSummaryRequired(contractSummaryRequired);\n          const contractSummaryUrl: string | null = window.sessionStorage.getItem(\n            SessionStorageConstants.CHECKOUT_CONTRACT_SUMMARY_URL\n          );\n          if (contractSummaryUrl) {\n            hardwareCheckoutFacade.setContractSummaryUrl(contractSummaryUrl);\n          }\n          hardwareCheckoutFacade.setContractSummaryGenerationNotPossible();\n          return of(salesOrder);\n        })\n      );\n  }\n\n  static setSummaryDeliveryAddressFromRetrievedSalesOrder(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return (source: Observable<SalesOrder>) =>\n      source.pipe(\n        mergeMap((salesOrder: SalesOrder) => {\n          const deliveryAddress: OrderItemDeliveryChars = SalesOrderUtil.getDeliveryChars(salesOrder);\n\n          if (!deliveryAddress.postalCode || !deliveryAddress.municipality || !deliveryAddress.street) {\n            throw new Error('Incomplete delivery address');\n          }\n\n          const postalCode$ = hardwareCheckoutFacade.getAddressById(deliveryAddress.postalCode);\n          const street$ = hardwareCheckoutFacade.getAddressById(deliveryAddress.street);\n\n          return forkJoin({ postalCode$, street$ }).pipe(\n            map(({ postalCode$, street$ }) => {\n              street$.postalCode = postalCode$.name;\n              const updatedAddress = {\n                addressUnit: street$,\n                country: AddressUtil.getAddressValue(street$, 'Country'),\n                box: deliveryAddress.box ? deliveryAddress.box : '',\n                subHouseNumber: deliveryAddress.subHouseNumber ? deliveryAddress.subHouseNumber : '',\n                houseNumber: deliveryAddress.houseNumber ? deliveryAddress.houseNumber : '',\n                municipality: AddressUtil.getAddressValue(street$, 'Municipality'),\n                postalCode: postalCode$.name ? postalCode$.name : '',\n                street: street$.name,\n              };\n              hardwareCheckoutFacade.setSummaryDeliveryAddress(updatedAddress);\n              return salesOrder;\n            })\n          );\n        })\n      );\n  }\n\n  static createHardwareItems(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder: SalesOrder) => {\n        return forkJoin({\n          salesOrder: of(salesOrder),\n          customerType: hardwareCheckoutFacade.customerType$.pipe(take(1)),\n        });\n      }),\n      mergeMap(({ salesOrder, customerType }) => {\n        try {\n          SalesOrderUtil.getHardwareOrderItem(salesOrder);\n          return forkJoin({\n            salesOrder: of(salesOrder),\n            salesOffer: hardwareCheckoutFacade.salesOffer$.pipe(take(1)),\n          });\n        } catch (e) {\n          return forkJoin({\n            salesOrder: hardwareCheckoutFacade.createHardwareTLO(salesOrder.id, customerType),\n            salesOffer: hardwareCheckoutFacade.salesOffer$.pipe(take(1)),\n          }).pipe(\n            catchError((error) => {\n              if (error instanceof HardwareCheckoutError) {\n                throw error;\n              } else {\n                throw new HardwareCheckoutError(OrderItemCreationFailed);\n              }\n            })\n          );\n        }\n      }),\n      mergeMap(({ salesOrder, salesOffer }) => {\n        const hardwareOrderItem = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n        if (!hardwareOrderItem) {\n          throw new HardwareCheckoutError(OrderItemCreationFailed);\n        }\n\n        if (!salesOffer) {\n          throw new Error('Sales offer not found');\n        }\n        const orderItems: Observable<SalesOrder>[] = salesOffer.offers.map((orderItem: SdataSalesOfferItem) => {\n          return hardwareCheckoutFacade.addOrderItem(salesOrder.id, hardwareOrderItem.id, orderItem.itemCode);\n        });\n        return forkJoin(orderItems);\n      }),\n      map((salesOrders: SalesOrder[]) => {\n        const lastSalesOrder = salesOrders.find((salesOrder) => {\n          const hardwareOrderItem = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n          return (\n            hardwareOrderItem?.orderItems?.filter((orderItem) => orderItem.action === OrderItemActionEnum.ADD)\n              ?.length === salesOrders.length\n          );\n        });\n\n        if (!lastSalesOrder) {\n          throw new HardwareCheckoutError(OrderItemCreationFailed);\n        }\n        return lastSalesOrder;\n      })\n    );\n  }\n\n  static updateDeliveryChars(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return mergeMap((salesOrder) => {\n      return forkJoin({\n        personalInfo: hardwareCheckoutFacade.deliveryPersonalInfo$.pipe(take(1)),\n        deliveryAddress: hardwareCheckoutFacade.deliveryAddress$.pipe(take(1)),\n      }).pipe(\n        mergeMap(({ personalInfo, deliveryAddress }) => {\n          if (personalInfo && deliveryAddress) {\n            const updatePersonalDeliveryChars = DeliveryUtil.toDeliveryPersonalInfoChars(personalInfo);\n            const updatedDeliveryAddressChars = DeliveryUtil.toDeliveryAddressChars(deliveryAddress);\n\n            const updateDeliveryCharsRequest: UpdateDeliveryCharsRequest = {\n              ...updatePersonalDeliveryChars,\n              ...updatedDeliveryAddressChars,\n            };\n            if (salesOrder) {\n              const deliveryOrderItemId = SalesOrderUtil.getDeliveryOrderItem(salesOrder, OrderItemActionEnum.ADD);\n              return hardwareCheckoutFacade\n                .updateDeliveryChars(salesOrder.id, deliveryOrderItemId.id, updateDeliveryCharsRequest)\n                .pipe(map(() => salesOrder));\n            }\n            throw new HardwareCheckoutError(SalesOrderNotSet);\n          }\n          throw new HardwareCheckoutError(CouldNotUpdateInstallationLocation);\n        })\n      );\n    });\n  }\n\n  static setSummaryDetails(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return mergeMap((salesOrder) => {\n      return forkJoin({\n        personalInfo: hardwareCheckoutFacade.deliveryPersonalInfo$.pipe(take(1)),\n        contactAddress: hardwareCheckoutFacade.deliveryContactAddress$.pipe(take(1)),\n        omapiProducts: hardwareCheckoutFacade.omapiProducts$.pipe(take(1)),\n        omapiQueryProducts: hardwareCheckoutFacade.omapiQueryProducts$.pipe(take(1)),\n        customerType: hardwareCheckoutFacade.customerType$.pipe(take(1)),\n      }).pipe(\n        tap(({ personalInfo, contactAddress, omapiProducts, omapiQueryProducts, customerType }) => {\n          if (personalInfo && contactAddress) {\n            hardwareCheckoutFacade.setSummaryDeliveryInfo(personalInfo, contactAddress);\n          }\n          const hardwareOrderItems = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n          if (hardwareOrderItems && hardwareOrderItems.orderItems) {\n            hardwareCheckoutFacade.setSummaryViewModel(\n              salesOrder,\n              hardwareOrderItems.orderItems,\n              omapiProducts || [],\n              omapiQueryProducts ?? [],\n              customerType === CustomerTypeEnum.SOHO\n            );\n          }\n        }),\n        map(() => salesOrder)\n      );\n    });\n  }\n\n  static handleBillingAccount(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<boolean>, Observable<boolean>> {\n    return mergeMap(() => {\n      return hardwareCheckoutFacade.getBillingAccounts().pipe(\n        tap((billingAccounts: BillingAccount[]) => {\n          if (billingAccounts.length === 0) {\n            throw new HardwareCheckoutError(NoBillingAccount);\n          }\n          hardwareCheckoutFacade.setBillingAccounts(billingAccounts);\n        }),\n        mergeMap((billingAccounts: BillingAccount[]) => {\n          const defaultBillingAccount = billingAccounts?.find((billingAccount) => {\n            return billingAccount.defaultBillingAccount.name === 'Yes';\n          });\n          if (defaultBillingAccount) {\n            return hardwareCheckoutFacade.defaultBillingAccount$.pipe(\n              take(1),\n              mergeMap((defaultBillingAccount) => {\n                if (defaultBillingAccount) {\n                  return hardwareCheckoutFacade.getAddressById(defaultBillingAccount.billingAddress.id);\n                } else {\n                  throw new HardwareCheckoutError(NoBillingAccount);\n                }\n              }),\n              tap((billingAddress) => {\n                hardwareCheckoutFacade.setSummaryInvoiceInfo(\n                  AddressUtil.convertNcAddressToDeliveryAddress(billingAddress)\n                );\n              })\n            );\n          }\n\n          throw new HardwareCheckoutError(NoBillingAccount);\n        }),\n        map(() => true)\n      );\n    });\n  }\n\n  static processSalesOrderToDeliveryCalculated(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<boolean>> {\n    return pipe(\n      StrategyUtil.checkFeasibility(hardwareCheckoutFacade),\n      StrategyUtil.handleDelivery(hardwareCheckoutFacade),\n      StrategyUtil.checkEligibility(hardwareCheckoutFacade),\n      StrategyUtil.checkContractSummary(hardwareCheckoutFacade),\n      StrategyUtil.setOmapiDetails(hardwareCheckoutFacade),\n      StrategyUtil.handleNotifications(hardwareCheckoutFacade),\n      StrategyUtil.setSummaryDetails(hardwareCheckoutFacade),\n      tap((salesOrder: SalesOrder) => {\n        const hardwareOrderItems = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n        if (hardwareOrderItems && hardwareOrderItems.orderItems) {\n          hardwareCheckoutFacade.saveSalesOrder(salesOrder);\n          hardwareCheckoutFacade.setSalesOrderState(SalesOrderStateEnum.DELIVERY_CALCULATED);\n        } else {\n          throw new HardwareCheckoutError(NoHardwareItemsFound);\n        }\n      }),\n      map(() => true)\n    );\n  }\n\n  static setOmapiDetails(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder) => {\n        const hardwareSalesOrder = SalesOrderUtil.getHardwareOrderItem(salesOrder);\n        const productIds = SalesOrderUtil.getOrderItemItemCodes(hardwareSalesOrder);\n        if (productIds) {\n          return hardwareCheckoutFacade.getOmapiQueryProducts(productIds).pipe(\n            take(1),\n            tap((rawOmapiQueryProduct: RawOmapiQueryProductInterface) => {\n              hardwareCheckoutFacade.setOmapiQueryProducts(rawOmapiQueryProduct);\n            }),\n            map(() => {\n              return salesOrder;\n            })\n          );\n        }\n        return of(salesOrder);\n      }),\n      mergeMap((salesOrder) => {\n        const discountItems: DiscountItem[] = SalesOrderUtil.getDiscountsThatAreUsedByOrderItems(salesOrder);\n        if (discountItems && discountItems.length > 0) {\n          const omapiDiscountItemRequests: Observable<OmapiProduct>[] = discountItems.map(\n            (discountItem: DiscountItem) => {\n              return hardwareCheckoutFacade.getOmapiProduct(discountItem.discountId);\n            }\n          );\n          return forkJoin(omapiDiscountItemRequests).pipe(\n            tap((omapiProducts: OmapiProduct[]) => {\n              hardwareCheckoutFacade.setOmapiProducts(omapiProducts);\n            }),\n            map(() => {\n              return salesOrder;\n            })\n          );\n        }\n        return of(salesOrder);\n      })\n    );\n  }\n\n  static setSalesOrderAsAbandonable(\n    hardwareCheckoutFacade: HardwareCheckoutFacade\n  ): UnaryFunction<Observable<SalesOrder>, Observable<SalesOrder>> {\n    return pipe(\n      mergeMap((salesOrder: SalesOrder) => {\n        return forkJoin({\n          referrerUrl: hardwareCheckoutFacade.referrerUrl$.pipe(take(1)),\n          customerAccountDetails: hardwareCheckoutFacade.customerAccountDetails$.pipe(take(1)),\n        }).pipe(\n          mergeMap(({ referrerUrl, customerAccountDetails }) => {\n            if (customerAccountDetails && referrerUrl) {\n              return hardwareCheckoutFacade.setSalesorderAsAbandonable(\n                salesOrder.id,\n                customerAccountDetails.id,\n                referrerUrl\n              );\n            }\n            return of(salesOrder);\n          }),\n          map(() => salesOrder)\n        );\n      })\n    );\n  }\n\n  static applyDiscountsRecursively(\n    hardwareCheckoutFacade: HardwareCheckoutFacade,\n    orderItemsWithMatchingDiscounts: OrderItemWithMatchingDiscount[],\n    salesOrder: SalesOrder\n  ): Observable<SalesOrder> {\n    if (orderItemsWithMatchingDiscounts.length === 0) {\n      return of(salesOrder);\n    }\n    const currentItem = orderItemsWithMatchingDiscounts.shift();\n    if (!currentItem) {\n      return of(salesOrder);\n    }\n    const matchingRule = SalesOrderUtil.getOrderItemDiscountRule(currentItem, salesOrder.rules);\n    if (!matchingRule) {\n      throw new HardwareCheckoutError(DiscountRuleNotFound);\n    }\n    return hardwareCheckoutFacade\n      .addDiscount(salesOrder.id, matchingRule.id)\n      .pipe(\n        concatMap((updatedSalesOrder) =>\n          this.applyDiscountsRecursively(hardwareCheckoutFacade, orderItemsWithMatchingDiscounts, updatedSalesOrder)\n        )\n      );\n  }\n}\n","import { Subject, Subscription, from, EMPTY } from 'rxjs';\nimport { ɵNG_PIPE_DEF, ɵgetLContext, ɵglobal } from '@angular/core';\nimport { mergeMap, takeUntil } from 'rxjs/operators';\n\nconst NG_PIPE_DEF = ɵNG_PIPE_DEF;\nfunction isPipe(target) {\n    return !!target[NG_PIPE_DEF];\n}\n\n/**\n * Applied to instances and stores `Subject` instance when\n * no custom destroy method is provided.\n */\nconst DESTROY = Symbol('__destroy');\n/**\n * Applied to definitions and informs that class is decorated\n */\nconst DECORATOR_APPLIED = Symbol('__decoratorApplied');\n/**\n * If we use the `untilDestroyed` operator multiple times inside the single\n * instance providing different `destroyMethodName`, then all streams will\n * subscribe to the single subject. If any method is invoked, the subject will\n * emit and all streams will be unsubscribed. We wan't to prevent this behavior,\n * thus we store subjects under different symbols.\n */\nfunction getSymbol(destroyMethodName) {\n    if (typeof destroyMethodName === 'string') {\n        return Symbol(`__destroy__${destroyMethodName}`);\n    }\n    else {\n        return DESTROY;\n    }\n}\nfunction markAsDecorated(type) {\n    // Store this property on the prototype if it's an injectable class, component or directive.\n    // We will be able to handle class extension this way.\n    type.prototype[DECORATOR_APPLIED] = true;\n}\nfunction createSubjectOnTheInstance(instance, symbol) {\n    if (!instance[symbol]) {\n        instance[symbol] = new Subject();\n    }\n}\nfunction completeSubjectOnTheInstance(instance, symbol) {\n    if (instance[symbol]) {\n        instance[symbol].next();\n        instance[symbol].complete();\n        // We also have to re-assign this property thus in the future\n        // we will be able to create new subject on the same instance.\n        instance[symbol] = null;\n    }\n}\n\nfunction unsubscribe(property) {\n    if (property instanceof Subscription) {\n        property.unsubscribe();\n    }\n}\nfunction unsubscribeIfPropertyIsArrayLike(property) {\n    Array.isArray(property) && property.forEach(unsubscribe);\n}\nfunction decorateNgOnDestroy(ngOnDestroy, options) {\n    return function () {\n        // Invoke the original `ngOnDestroy` if it exists\n        ngOnDestroy && ngOnDestroy.call(this);\n        // It's important to use `this` instead of caching instance\n        // that may lead to memory leaks\n        completeSubjectOnTheInstance(this, getSymbol());\n        // Check if subscriptions are pushed to some array\n        if (options.arrayName) {\n            unsubscribeIfPropertyIsArrayLike(this[options.arrayName]);\n        }\n        // Loop through the properties and find subscriptions\n        if (options.checkProperties) {\n            for (const property in this) {\n                if (options.blackList?.includes(property)) {\n                    continue;\n                }\n                unsubscribe(this[property]);\n            }\n        }\n    };\n}\nfunction decorateProviderDirectiveOrComponent(type, options) {\n    type.prototype.ngOnDestroy = decorateNgOnDestroy(type.prototype.ngOnDestroy, options);\n}\nfunction decoratePipe(type, options) {\n    const def = type.ɵpipe;\n    def.onDestroy = decorateNgOnDestroy(def.onDestroy, options);\n}\nfunction UntilDestroy(options = {}) {\n    return (type) => {\n        if (isPipe(type)) {\n            decoratePipe(type, options);\n        }\n        else {\n            decorateProviderDirectiveOrComponent(type, options);\n        }\n        markAsDecorated(type);\n    };\n}\n\n// `LView` is an array where each index matches the specific data structure.\n// The 7th element in an `LView` is an array of cleanup listeners. They are\n// invoked when the view is removed (similar to `ComponentRef.onDestroy`).\nconst CLEANUP = 7;\nconst CheckerHasBeenSet = Symbol('CheckerHasBeenSet');\nfunction setupSubjectUnsubscribedChecker(instance, destroy$) {\n    // This function is used within the `untilDestroyed` operator and setups a function that\n    // listens for the view removal and checks if the `destroy$` subject has any observers (usually `takeUntil`).\n    // Note: this code will not be shipped into production since it's guarded with `ngDevMode`,\n    // this means it'll exist only in development mode.\n    if (instance[CheckerHasBeenSet] || isAngularInTestMode()) {\n        return;\n    }\n    runOutsideAngular(() => from(Promise.resolve())\n        .pipe(mergeMap(() => {\n        let lContext;\n        try {\n            // The `ɵgetLContext` might not work for a pipe, because it's not a component nor a directive,\n            // which means there's no `RNode` for an instance.\n            lContext = ɵgetLContext(instance);\n        }\n        catch {\n            lContext = null;\n        }\n        const lView = lContext?.lView;\n        if (lView == null) {\n            return EMPTY;\n        }\n        const lCleanup = lView[CLEANUP] || (lView[CLEANUP] = []);\n        const cleanupHasBeenExecuted$ = new Subject();\n        // Note: this function is named for debugging purposes.\n        lCleanup.push(function untilDestroyedLCleanup() {\n            // We leave the Angular zone, so RxJS will also call subsequent `next` functions\n            // outside of the Angular zone, which is done to avoid scheduling a microtask (through\n            // `asapScheduler`) within the Angular zone.\n            runOutsideAngular(() => {\n                cleanupHasBeenExecuted$.next();\n                cleanupHasBeenExecuted$.complete();\n            });\n        });\n        return cleanupHasBeenExecuted$;\n    }), \n    // We can't use `observeOn(asapScheduler)` because this might break the app's change detection.\n    // RxJS schedulers coalesce tasks and then flush the queue, which means our task might be scheduled\n    // within the root zone, and then all of the tasks (that were set up by developers in the Angular zone)\n    // will also be flushed in the root zone.\n    mergeMap(() => Promise.resolve()))\n        .subscribe(() => {\n        // Note: The `observed` property is available only in RxJS@7.2.0, which will throw\n        // an error in lower versions. We have integration test with RxJS@6 to ensure we don't\n        // import operators from `rxjs`; that's why it's wrapped into braces. The `observers`\n        // property is also being deprecated.\n        const observed = destroy$['observed'] ?? destroy$['observers'].length > 0;\n        if (observed) {\n            console.warn(createMessage(instance));\n        }\n    }));\n    instance[CheckerHasBeenSet] = true;\n}\nfunction isAngularInTestMode() {\n    // Gets whether the code is currently running in a test environment.\n    // We don't use `declare const` because it might cause conflicts with the real typings.\n    return (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha) ||\n        // Jest is not defined in ESM mode since it must be access only by importing from `@jest/globals`.\n        // There's no way to check if we're in Jest ESM mode or not, but we can check if the `process` is defined.\n        // Note: it's required to check for `[object process]` because someone might be running unit tests with\n        // Webpack and shimming `process`.\n        (typeof process !== 'undefined' &&\n            Object.prototype.toString.call(process) === '[object process]'));\n}\nfunction runOutsideAngular(fn) {\n    // We cannot inject the `NgZone` class when running the checker. The `__ngContext__` is read\n    // for the first time within a microtask which triggers change detection; we want to avoid that.\n    // The `Zone` is always available globally when the `zone.js` is imported. Otherwise, it may be\n    // nooped through bootstrap options. The `NgZone.runOutsideAngular` calls `Zone.root.run`, so we're\n    // safe calling that function directly.\n    const Zone = ɵglobal.Zone;\n    const isNgZoneEnabled = !!Zone && typeof Zone.root?.run === 'function';\n    return isNgZoneEnabled ? Zone.root.run(fn) : fn();\n}\nfunction createMessage(instance) {\n    return `\n  The ${instance.constructor.name} still has subscriptions that haven't been unsubscribed.\n  This may happen if the class extends another class decorated with @UntilDestroy().\n  The child class implements its own ngOnDestroy() method but doesn't call super.ngOnDestroy().\n  Let's look at the following example:\n  @UntilDestroy()\n  @Directive()\n  export abstract class BaseDirective {}\n  @Component({ template: '' })\n  export class ConcreteComponent extends BaseDirective implements OnDestroy {\n    constructor() {\n      super();\n      someObservable$.pipe(untilDestroyed(this)).subscribe();\n    }\n    ngOnDestroy(): void {\n      // Some logic here...\n    }\n  }\n  The BaseDirective.ngOnDestroy() will not be called since Angular will call ngOnDestroy()\n  on the ConcreteComponent, but not on the BaseDirective.\n  One of the solutions is to declare an empty ngOnDestroy method on the BaseDirective:\n  @UntilDestroy()\n  @Directive()\n  export abstract class BaseDirective {\n    ngOnDestroy(): void {}\n  }\n  @Component({ template: '' })\n  export class ConcreteComponent extends BaseDirective implements OnDestroy {\n    constructor() {\n      super();\n      someObservable$.pipe(untilDestroyed(this)).subscribe();\n    }\n    ngOnDestroy(): void {\n      // Some logic here...\n      super.ngOnDestroy();\n    }\n  }\n  `;\n}\n\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || ngDevMode;\nfunction overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol) {\n    const originalDestroy = instance[destroyMethodName];\n    if (NG_DEV_MODE && typeof originalDestroy !== 'function') {\n        throw new Error(`${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`);\n    }\n    createSubjectOnTheInstance(instance, symbol);\n    instance[destroyMethodName] = function () {\n        // eslint-disable-next-line prefer-rest-params\n        originalDestroy.apply(this, arguments);\n        completeSubjectOnTheInstance(this, symbol);\n        // We have to re-assign this property back to the original value.\n        // If the `untilDestroyed` operator is called for the same instance\n        // multiple times, then we will be able to get the original\n        // method again and not the patched one.\n        instance[destroyMethodName] = originalDestroy;\n    };\n}\nfunction untilDestroyed(instance, destroyMethodName) {\n    return (source) => {\n        const symbol = getSymbol(destroyMethodName);\n        // If `destroyMethodName` is passed then the developer applies\n        // this operator to something non-related to Angular DI system\n        if (typeof destroyMethodName === 'string') {\n            overrideNonDirectiveInstanceMethod(instance, destroyMethodName, symbol);\n        }\n        else {\n            NG_DEV_MODE && ensureClassIsDecorated(instance);\n            createSubjectOnTheInstance(instance, symbol);\n        }\n        const destroy$ = instance[symbol];\n        NG_DEV_MODE && setupSubjectUnsubscribedChecker(instance, destroy$);\n        return source.pipe(takeUntil(destroy$));\n    };\n}\nfunction ensureClassIsDecorated(instance) {\n    const prototype = Object.getPrototypeOf(instance);\n    const missingDecorator = !(DECORATOR_APPLIED in prototype);\n    if (missingDecorator) {\n        throw new Error('untilDestroyed operator cannot be used inside directives or ' +\n            'components or providers that are not decorated with UntilDestroy decorator');\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UntilDestroy, untilDestroyed };\n"],"names":["HardwareCheckoutError","Error","constructor","errorObject","key","CategoryBuilder","EventCategoryEnum","HardwareCheckoutAnalytics","PAGE_ID","PAGE_NAME","FLOW","SOURCE","INTENT","PrimaryCategories","SALES","withPrimaryCategory","PRIMARY_CATEGORY_SALES","build","Errors","CONSOLE_MESSAGE","ErrorRedirectUrlEnum","errorTitlePrefix","errorMessagePrefix","errorButtonPrefix","UserNotLoggedInError","GenericError","titleKey","descriptionKey","buttonTextKey","type","CONTACT_US_REDIRECT_URL","GetCustomerDataError","EventStrategyError","NoHardwareItemsFound","OrderItemCreationFailed","SalesOfferNotFound","DiscountRuleNotFound","DiscountCouldNotBeRemoved","DiscountCouldNotBeAdded","SalesOrderNotSet","EligibilityError","ContractSummaryUrlError","NoBillingAccount","NoDeliveryOrderItemFound","SubmitSalesOrderFailed","UpdateHomeDeliveryCharsError","CheckoutDeliveryError","CouldNotReadContractSummaryRequired","CouldNotStoreSalesOrderOnSummary","CreatePaymentTransactionFailed","updateAwaitingPaymentFailed","HardwareCreationFailed","UserNotLoggedIn","OcapiNotConfigured","CustomerHasNoLocationAssociated","NoHomeDeliveryOrderItem","CorruptSdata","AemInputNotSet","CouldNotUpdateInstallationLocation","AbandonableMailCouldNOtBeSet","OmapiQueryNotConfigured","PersonalIdentityCouldNotBeHandled","CustomerAccountCouldNotBeHandled","PreviousProcessingBaseErrorObject","MandatoryFieldsAreMissing","CouldNotParseAddress","UpdateDeliveryCharsError","FeasibilityError","ProductNotActive","PreviousSalesOrderStillInProcessing","OperationProhibitedDueToIncompatibleStateOfOrderItem","NcErrors","error","HardwareCheckoutConstants","_","MESSAGE_GROUP","_2","SDATA","_3","SALES_ORDER_URL_ID","_4","STATUS_URL","_5","CONTRACT_SUMMARY_ENDPOINT","_6","ORDER_CORRECTION_IMAGE","_7","ORDER_CORRECTION_MOBILE_IMAGE","preAndBackOrderLabelTagKeys","OrderCorrectionTitlePrefix","OrderCorrectionMessagePrefix","OrderCorrectionButtonPrefix","CustomerIncorrectStatus","CustomerHasBadCreditClassification","NextButtonLabelEnum","DeliveryComponent","SummaryStepComponent","EtfComponent","ThankYouStepComponent","HardwareCheckoutSteps","component","nextButtonLabel","ORDER","BusinessDomainsEnum","OmapiAttributeKeysEnum","OrderItemActionEnum","select","Store","mergeMap","filter","addDeliveryNotification","bigItemDeliveryNotification","contactAddress","deliveryAddress","multipleItemDelivery","personalInfo","resetNotifications","setAvailableAddresses","setDeliveryAddress","setDeliveryItems","setDeliveryPersonalInfo","addSummaryDeliveryNotification","addSummaryGeneralNotification","setIngenicoFormUrl","setSummaryContractSummaryRequired","setSummaryDeliveryAddress","setSummaryDeliveryInfo","setSummaryDeliveryPersonalInfo","setSummaryDepreciationItems","setSummaryInvoiceInfo","setSummaryOrderItems","setSummaryPersonalInfo","setSummaryPrices","setTermsAndConditionsUrl","ReverseProxyService","aemInput","contractSummaryGenerationNotPossible","contractSummaryRequired","contractSummaryUrl","customerAccountDetails","customerType","defaultBillingAccount","ingenicoResult","omapiProducts","omapiQueryProducts","personalIdentity","referrerUrl","salesOffer","salesOrderFromState","salesOrderState","saveSalesOrder","SessionStorageConstants","setAemInput","setAnalyticsAttributes","setBackButtonVisibility","setBillingAccounts","setCart","setContractSummaryGenerationNotPossible","setContractSummaryRequired","setContractSummaryUrl","setCustomerAccountDetails","setCustomerType","setNavigationState","setOmapiProducts","setOmapiQueryProducts","setPersonalIdentity","setReferrerUrl","setSalesOrderState","setStartStepLoadTime","setUrlRequestParameters","setViewState","viewState","setOrderItemsWithDiscount","setUsedSlots","usedSlots","SalesOrderUtil","DeliveryUtil","OmapiQueryProductService","selectEvent","setOrderNumber","setRedirectUrl","PaymentService","OmapiUtil","LanguageService","OmapiProductService","ConfigConstants","ConfigService","Cart","HardwareCheckoutFacade","store","reverseProxyService","paymentService","omapiQueryProductService","omapiProductService","languageService","configService","stepEvent","pipe","val","undefined","salesOffer$","referrerUrl$","defaultBillingAccount$","salesOrderFromState$","omapiProducts$","omapiQueryProducts$","viewState$","salesOrderState$","deliveryPersonalInfo$","deliveryAddress$","deliveryContactAddress$","contractSummaryRequired$","contractSummaryUrl$","contractSummaryGenerationNotPossible$","customerType$","customerAccountDetails$","personalIdentity$","aemInput$","usedDiscountSlots$","ingenicoResultUtil$","omapiQueryBaseUrl","getConfig","OMAPI_QUERY_URL","getPid","handleNcErrors","getCustomerAccountDetails","createSalesOrder","locationId","retrieveSalesOrder","salesOrderId","getSalesOrder","createHardwareTLO","addOrderItem","TLOOrderItemId","OrderItemCode","deleteOrderItem","orderItemId","salesOrder","dispatch","setThankYouRedirectUrl","url","redirectUrl","termsAndConditionsUrl","updateDeliveryChars","deliveryInfoChange","addDiscount","ruleElementId","getDeliveryOptions","calculateDelivery","deliveryMethods","checkoutDelivery","getAddressById","addressUnitId","getCustomerDiscounts","getBillingAccounts","checkFeasibility","checkEligibility","checkContractSummary","generateContractSummary","urlRequestParameters","rawOmapiQueryProduct","products","isRequired","submitSalesOrder","setSalesorderAsAbandonable","customerId","basketUrl","setPersonalInfo","deliveryPersonalInfo","summaryPersonalInfo","setAddress","availableAddresses","billingAccounts","setDeliveryViewModel","deliveryItems","createDeliveryItems","offers","setDeliveryNotifications","bigItemDeliveryNeeded","isBigItemDeliveryOrder","hasMultipleItems","notification","setSummaryNotifications","isBigItemDelivery","preOrderNotification","getPreOrderNotification","getLanguage","weight","message","backOrderNotification","getBackOrderNotification","setSummaryViewModel","orderItems","isSoho","summaryOrderItems","createSummaryOrderItems","discountItems","toLocaleLowerCase","summaryPrices","getSummaryPrices","prices","depreciationItems","getDepreciationItems","deliveryInfo","firstname","lastname","email","mobile","address","street","box","country","houseNumber","postalCode","municipality","subHouseNumber","deliveryInfoAddress","billingAddress","backButtonVisibility","navigationState","setEtfOrderItems","rules","orderItemsWithDiscount","map","orderItem","discountRule","getOrderItemDiscountRuleByTarget","name","id","rule","showEtfOptions","hasMadeASelection","setEtfUsedSlots","discountSlots","getOmapiQueryProducts","productIds","endpoint","join","getRawQueryProductByEndpoint","getOmapiProduct","productId","getProductById","updateOrderItemCharsHomeDelivery","updateSalesOrderDeliveryEmail","getPaymentRequestObject","request","getPaymentObject","setAemInputs","aemInputs","ingenicoFormUrl","summaryNotification","setAnalyticsAttributesFromSessionStorage","analyticsAttributes","JSON","parse","window","sessionStorage","getItem","CHECKOUT_ANALYTICS_ATTRIBUTES","setAnalyticsCartFromSessionStorage","cart","CHECKOUT_ANALYTICS_CART","orderNumber","i0","ɵɵinject","i1","i2","i3","i4","i5","i6","i7","factory","ɵfac","providedIn","NoActionStrategy","deliveryEventStepKey","DeliveryEventTypeEnum","DeliveryStepFinishedStrategy","DeliveryStepLoadedStrategy","DeliveryAddressChangedStrategy","SummaryStepLoadedStrategy","SummaryStepFinishedStrategy","SalesOrderStateEnum","WaitingForStateUpdateStrategy","etfEventStepKey","EtfStepLoadedStrategy","EtfStepFinishedStrategy","EtfFacade","EtfStepReloadedStrategy","EtfStepFinishedNoChangesStrategy","summaryEventStepKey","SummaryEventTypeEnum","SummaryShowContractSummaryStrategy","MediaQueryService","UrlService","NavigationStrategy","SummaryFacade","ErrorStrategy","EventFacade","EventTypeEnum","thankYouEventStepKey","ThankYouStepLoadedStrategy","EventStrategyFactory","hardwareCheckoutFacade","etfFacade","summaryFacade","eventFacade","urlService","mediaQueryService","getStrategy","event","strategies","ERROR","body","STEP_LOADED","getStepLoadedStrategy","STEP_FINISHED","getStepFinishedStrategy","SHOW_NAVIGATION","HIDE_NAVIGATION","CHANGE_ADDRESS","DELIVERY_CALCULATED","SHOW_CONTRACT_SUMMARY","CHECKOUT_DELIVERY_FINISHED","findStrategy","foundStrategy","find","strategy","eventType","stepEventBody","stepKey","INITIALISING","existingDiscountsToRemove","length","targetOrderItemIdsToDiscount","UntilDestroy","untilDestroyed","StepsNgrxModule","SalesStepperComponent","LoaderModule","LoaderService","CommonModule","EventsNgrxModule","combineLatest","HardwareCheckoutHelperService","HardwareCheckoutNgrxModule","ViewStateEnum","ErrorComponent","DeliveryNgrxModule","SummaryNgrxModule","EtfNgrxModule","HardwareCheckoutDataLayerService","ThankYouNgrxModule","ɵɵelement","ɵɵproperty","viewState_r1","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","HardwareCheckoutComponent_ng_container_1_ng_container_2_Template_tg_sales_stepper_nextButtonClicked_1_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","nextButtonClickedEvent","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","showNavigation","showBackButton","ctx_r3","componentSteps","ɵɵtemplate","HardwareCheckoutComponent_ng_container_1_tg_sales_error_1_Template","HardwareCheckoutComponent_ng_container_1_ng_container_2_Template","ctx_r0","viewStateEnum","isLoaded","HardwareCheckoutComponent","loaderService","hardwareCheckoutHelperService","dataLayerService","enableLoader","messageGroup","ngOnInit","thankyouRedirectUrl","start","setPageProperties","subscribe","next","handleAnalyticsEvent","err","console","filterOutAnalyticsEvents","logDebug","executeEventStrategy","stop","goToNextStepIfNeeded","handleError","initialiseFlow","triggerAnalyticsClickEvent","setError","customerServiceRedirectUrlInput","contactUsRedirectUrlInput","ANALYTICS","ɵɵdirectiveInject","selectors","inputs","enableMask","pageType","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","HardwareCheckoutComponent_Template","rf","ctx","HardwareCheckoutComponent_ng_container_1_Template","ɵɵpipeBind1","NgIf","AsyncPipe","LoaderComponent","encapsulation","__decorate","CartBuilder","Page","PageInfo","DataLayerService","DataLayerTransactionBuilder","AnalyticsTypeEnum","AnalyticsUtil","forkJoin","resetStepLoadTime","stepAnalytics","take","tap","pageInfo","setPageID","setPageName","pageJSON","page","setPage","analyticsEvent","getStepKey","addStepViewEvent","stepId","toUpperCase","addStepLoadTimeEvent","addEvent","TRANSACTION","transactionEvent","defaultEvent","stepLoadTimeEvent","attributes","selectAnalyticsData","enrichWithCommonAttributes","catch","logAnalyticsError","then","warn","eventBody","eventInfo","createEventInfo","setEventStatus","transactionBuilder","withDataLayerAttributes","withTransactionID","getCartID","withItems","getItems","withPrice","getPrice","setTransaction","enrichedAttributes","Object","assign","recalculateStepKey","copyCart","withCartId","withDirectCallLabel","getDirectCallLabel","setAttributes","setItems","stepName","startLoadTime","itemName","Date","getTime","toFixed","toString","AssetService","JsonUrlService","ContactDetailsCustomerCategoryEnum","customerAccountTypeBlockedConst","CustomerAccountUtil","CustomerCreditClassificationTypeEnum","CustomerTypeEnum","EMPTY","of","throwError","catchError","LogFactory","AddressUtil","createIngenicoResultUtil","StepFacade","StrategyUtil","LoginService","SdataSalesOfferUtil","PersonalInfoUtil","CustomerCategoryUtil","jsonUrlService","stepFacade","eventStrategyFactory","loginService","log","createLogger","getUrlRequestParameters","getSalesOrderRequestFromSdata","flow","source","intent","handleDeliveryData","handleCustomerAccountData","handlePersonalIdentityData","contractHolderContactDetails","getContractHolder","contractHolderEmail","getContactEmail","getPersonalInfoFromIdentityAndCustomerAccount","epithet","title","firstNameOfficial","lastName","handleCustomerType","handleCustomerStatus","handleCustomerBadPayer","contactDetails","customerCategory","getCustomerCategory","RESIDENTIAL","customerAddress","SOHO","legalAddress","setCustomerAddress","convertNcAddressToDeliveryAddress","eventStrategy","showLoader","execute","goToNextStep","getReferrerUrl","salesOrderIdFromUrl","getSalesOrderIdFromUrl","initialiseFlowFromBasket","initialiseFlowComingBackFromIngenico","setOrderCorrection","errorViewModel","concat","image","getImagePath","mobileImage","customerServiceRedirectUrl","contactUsRedirectUrl","reportError","hardwareCheckoutError","CUSTOMER_SERVICE_REDIRECT_URL","getRequestParamValue","encodedString","decompress","response","confirmUserIsLoggedIn","urlRequestParams","triggerAnalyticsSalesFlowStartEvent","handleComponentSteps","handleBillingAccount","ingenicoResultUtil","setDefaultUrlRequestParameters","isSuccessful","initialisePaymentSuccessFlow","initialisePaymentFailedFlow","filteredSteps","step","setStepConfig","steps","deliveryData","setOmapiDetails","getLoginDetails","loginDetails","isLoggedIn","login","state","nonce","sdataSalesOffer","numberOfOrderedProducts","getSdataSalesOfferItemsWithDiscount","customerDiscounts","Number","stepKeys","valueOf","isBlocked","includes","status","creditClassificationCode","NO_SALES","document","referrer","HttpClient","HeaderUtil","http","basePath","ocapiUrl","OCAPI_URl","baseUrl","getUrl","doPost","post","headers","createHttpHeaders","getCurrentUrl","withCredentials","PersonalIdentityUtils","fields","path","doGet","personalIdentityResponse","getPersonalIdentity","deliveryEmail","chars","doPut","epc","itemCode","doDelete","chosenStandaloneDeliveryItems","getChosenStandaloneDeliveryItems","standaloneDeliveryItems","standaloneDeliveryItem","deliveryOrderItem","deliveryMethod","get","put","delete","personalInfoChanges","handleDeliveryInfoChange","triggerMobileChangedEvent","DeliveryAddress","convertFieldValueToDeliveryAddress","newPersonalInfo","switchMap","CustomerAccountDetailsUtil","customerAccount","value","getCustomerLocationId","triggerAnalyticsScAddEvent","SALES_ORDER_CREATED","createHardwareItems","addDiscounts","setSalesOrderAsAbandonable","processSalesOrderToDeliveryCalculated","initialSalesOrder","processOrderItemsSequentially","salesOfferItemsWithDiscount","hardwareOrderItem","getHardwareOrderItem","matchingDiscounts","orderItemsWithMatchingDiscounts","applyDiscountsRecursively","errorEventBody","handleDelivery","handleNotifications","setSummaryDetails","hardwareOrderItems","res","from","reduce","terminateOrderItems","addedDiscountIds","nextBasicDiscountItemId","orderItemToDiscount","pop","getDiscountRuleByTargetOrderId","push","existingHardwareOrderItem","deleteDiscounts","takeLatestSalesOrder","latestSalesOrder","discount","usedAndPendingDiscountSlots$","usedDiscountSlots","selectedOrderItemToDelete","customerProductId","DiscountUtil","applyDiscounts","remainingItems","ETF_NEEDED","orderItemsWithDiscounts","getDiscountedOrderItemsFromSalesOffer","ADD","itemsToDiscount","getItemsToDiscountAndRemaining","resetEtfState","shouldShowLoader","iif","contractGenerationErrorNotification","openNewTab","contractSummaryResponse","generateContractSummaryURL","uuid","documentId","PaymentRequestUtil","checkoutDeliveryRequired","awaitsPayment","orderAwaitsPayment","submittedSalesOrder$","homeDeliveryOrderItem","getDeliveryOrderItem","postalCodeUnit","streetUnit","convertNcPostalAddressToDeliveryAddress","urlWithoutParams","split","getDeviceName","payment","setIngenicoForm","ACCEPTURL","acceptURL","ALIAS","ALIASOPERATION","ALIASUSAGE","AMOUNT","amount","BRAND","CANCELURL","cancelURL","CN","contactName","CURRENCY","currency","DECLINEURL","declineURL","DEVICE","device","EMAIL","EXCEPTIONURL","exceptionURL","LANGUAGE","language","ORDERID","transactionId","OWNERADDRESS","ownerAddress","OWNERCTY","ownerCountry","OWNERTELNO","ownerContactNumber","OWNERTOWN","ownerTown","OWNERZIP","ownerZip","PARAMPLUS","paramPlus","PARAMVAR","paramVar","PM","PMLISTTYPE","PSPID","paymentServiceProviderId","SECRET","SHASIGN","signature","TP","setIngenicoFormReady","paymentErrorNotification","resetSummaryState","doNormalFlow","resetContractSummaryInfo","setSummaryDeliveryPersonalInfoFromRetrievedSalesOrder","setSummaryDeliveryAddressFromRetrievedSalesOrder","loadContractSummaryInfo","isFailed","triggerAnalyticsTransactionEvent","triggerAnalyticsSalesFlowEndEvent","addressUnit","getAddressValue","boxNumber","getUpdateDeliveryLocationBody","addressFieldValue","geographical_address","floor","floorString","boxString","Country","getAddressValueId","getFieldValueOrDefault","housenumber","subhousenumber","Street","location","foundValue","addressUnitChain","fieldValue","dataLayerAttributes","matchingContactMethod","customerLocations","isPseudoLocation","getCustomerAddress","customerLocation","residential","EVENT_DEMO","PRODUCTION_TEST","business","PRODUCTION_TEST_BUSINESS","PRD_TEST_BUSINESS","foundResidential","foundBusiness","deliveryItemTypes","GenericItemType","convertDeliveryItems","toDeliveryAddressChars","toDeliveryPersonalInfoChars","convertedDeliveryItems","forEach","deliveryItem","matchingDeliveryItemType","deliveryItemType","types","existingConvertedDeliveryItem","convertedDeliveryItem","productType","typeKey","quantity","labelText","iconType","maxSlots","unusedSlotsNumber","sort","a","b","priceA","parseFloat","oneTimeTotal","priceB","slice","itemsToDiscountIds","Set","item","has","action","HttpHeaders","currentUrl","httpHeaders","set","isPreOrBackOrder","variantTagOptions","flatMap","omapiProduct","variants","variant","tag","telenet","options","some","option","attributeKey","isPreOrder","shift","preOrderDescription","localizedContent","getLocalisedContent","isBackOrder","backOrderDescription","content","locale","getProductMainImage","product","images","MAIN_IMAGE","getProductVariant","omapiQueryProduct","getOrderItemItemCode","OrderItemUtil","charMapping","getDeliveryChars","result","data","entries","mobileNumber","price","upfrontPaymentTotalForSecuredHomeDeliveryEquipment","getPersonalInfoRequest","shopUrl","deviceType","firstName","getFirstAndLastName","getMobileAndEmail","ValidationElementEnum","duration","getDiscountsThatAreUsedByOrderItems","discounts","discountItem","childOrderItem","targetOrderItems","offer","businessDomains","HARDWARE_TLO","getHardwareItemList","feasibilityCheckRequired","validationElements","element","typeOfProblem","FEASIBILITY_CHECK_REQUIRED","getDeliveryOrderItemFor","DELIVERY_METHOD","getDiscountedOrderItems","discountedOrderItems","hardwareOrderItemIds","discountedItems","depreciationItem","oneTimeDiscountWithoutTaxes","oneTimeDiscount","businessDomain","HOME_DELIVERY","zeroPrice","code","findEtfItems","useTaxes","ETF","labelKey","oneTimeTotalWithoutTaxes","isMonthly","productName","calculateEtfTotal","etfItems","total","etfItemsInclVat","totals","deliveryCost","oneTimeDiscountedWithoutTaxes","upfrontCost","etfPrices","etfTotal","vatInclusive","etfItemsSoho","etfTotalSoho","subTotals","oneTimeDiscounted","upfrontPaymentTotalForHomeDeliveryWithoutTaxes","targetOrderItemIds","getOrderItemDiscountRule","orderItemWithMatchingDiscount","customerChosenDiscount","isTargeted","isDiscountMatch","slotName","getOrderItemItemCodes","orderItemCodes","targetOrderItemId","extraAtHomeDelivery","orderItemsToBeAdded","isNcError","errorCode","errorType","errorMessage","summaryOrderItem","discountLabel","getOmapiDiscountLabelByTargetOrderId","orderItemName","getLocalizedOmapiQueryProductName","getSummaryOrderPrices","getSummaryOrderItemDiscount","orderItemMainImage","mainImageUrl","getDiscountByTargetOrderId","foundDiscount","orderIdemTargetId","discountId","targetOrderItem","flattenedDiscount","salesOffers","offerMap","Map","associatedDiscount","label","discounted","discountOmapiProduct","parentOrderItem","omapiQueryProductVariant","shortDescription","shortDescriptionLocalized","productBrand","manBrand","languageOption","CHECKOUT_DELIVERY_REQUIRED","concatMap","orderItemDeliveryChars","removeItem","CHECKOUT_CONTRACT_SUMMARY_URL","CHECKOUT_CONTRACT_SUMMARY_REQUIRED","postalCode$","street$","updatedAddress","e","salesOrders","lastSalesOrder","updatePersonalDeliveryChars","updatedDeliveryAddressChars","updateDeliveryCharsRequest","deliveryOrderItemId","billingAccount","hardwareSalesOrder","omapiDiscountItemRequests","currentItem","matchingRule","updatedSalesOrder","Subject","Subscription","ɵNG_PIPE_DEF","ɵgetLContext","ɵglobal","takeUntil","NG_PIPE_DEF","isPipe","target","DESTROY","Symbol","DECORATOR_APPLIED","getSymbol","destroyMethodName","markAsDecorated","prototype","createSubjectOnTheInstance","instance","symbol","completeSubjectOnTheInstance","complete","unsubscribe","property","unsubscribeIfPropertyIsArrayLike","Array","isArray","decorateNgOnDestroy","ngOnDestroy","call","arrayName","checkProperties","blackList","decorateProviderDirectiveOrComponent","decoratePipe","def","ɵpipe","onDestroy","CLEANUP","CheckerHasBeenSet","setupSubjectUnsubscribedChecker","destroy$","isAngularInTestMode","runOutsideAngular","Promise","resolve","lContext","lView","lCleanup","cleanupHasBeenExecuted$","untilDestroyedLCleanup","observed","createMessage","__karma__","jasmine","jest","Mocha","process","fn","Zone","isNgZoneEnabled","root","run","NG_DEV_MODE","ngDevMode","overrideNonDirectiveInstanceMethod","originalDestroy","apply","arguments","ensureClassIsDecorated","getPrototypeOf","missingDecorator"],"sourceRoot":"webpack:///","x_google_ignoreList":[48]}