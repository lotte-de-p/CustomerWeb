{"version":3,"file":"libs_sales_product-finder_feat-tv-experience_src_index_ts-_b8471.js","mappings":"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","sources":["./libs/sales/product-finder/feat-tv-experience/src/lib/tv-experience/tv-experience.component.ts","./libs/sales/product-finder/feat-tv-experience/src/lib/tv-experience/tv-experience.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ImageSrcInterceptorDirective } from '@sales/shared/util';\nimport { Observable, of } from 'rxjs';\nimport { Checkbox, CheckboxComponent, MultiSelectCheckboxComponent } from '@sales/shared/ui';\nimport { AsyncPipe, NgForOf, NgIf } from '@angular/common';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TvExperience, TvExperienceFacade } from '@sales/product-finder/data-access';\n\n@UntilDestroy()\n@Component({\n  selector: 'tg-sales-tv-experience',\n  standalone: true,\n  templateUrl: './tv-experience.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CheckboxComponent,\n    NgIf,\n    AsyncPipe,\n    ImageSrcInterceptorDirective,\n    TranslateModule,\n    NgForOf,\n    FormsModule,\n    CheckboxComponent,\n    MultiSelectCheckboxComponent,\n  ],\n})\nexport class TvExperienceComponent {\n  readonly checkboxes$: Observable<Checkbox[]> = of([\n    {\n      key: 'TV_BOX',\n      label: 'ng.product-finder.step-tv-experience.tv-box',\n      iconClass: 'icon-remote',\n    },\n    {\n      key: 'TV_APP',\n      label: 'ng.product-finder.step-tv-experience.tv-app',\n      iconClass: 'icon-cast',\n    },\n  ]);\n  readonly tvExperience$: Observable<TvExperience> = this.tvExperienceFacade.tvExperience$;\n  readonly showAtLeastOneValueSelectedError$ =\n    this.tvExperienceFacade.hasErrorRequireAtLeastOneTvExperienceToBeSelectedError$;\n\n  constructor(private readonly tvExperienceFacade: TvExperienceFacade) {}\n\n  updateTvExperience(selection: string[]): void {\n    this.tvExperienceFacade.updateTvExperience({ selection });\n  }\n}\n","<div class=\"stepper-page__body\">\n  <div class=\"stepper-page__body-inner\">\n    <div class=\"stepper-page__title\">\n      <div class=\"text-flow text-flow--h3\">{{ 'ng.product-finder.step-tv-experience.header' | translate }}</div>\n\n      <div class=\"font--caption mt--xxxs stepper-page__title-label\">\n        {{ 'ng.product-finder.step-tv-experience.sub-header' | translate }}\n      </div>\n    </div>\n\n    <div class=\"stepper-page__content--split container\">\n      <div\n        class=\"stepper-page__content-first stepper-page__content-first--full-width-img flex-hide-until-md sticky ml--xm--md ml--n--lg\">\n        <img\n          appSalesImageSrcInterceptor\n          [moduleId]=\"'product-finder'\"\n          src=\"/assets/sales/product-finder/tv-experience/tv-experience.png\"\n          alt=\"tv experience image\" />\n      </div>\n\n      <div id=\"product-finder-v2-container\" class=\"stepper-page__content-second mx--s--md mx--n--lg\">\n        <div *ngIf=\"showAtLeastOneValueSelectedError$ | async\" class=\"mb--m mx--l mx--n--md\">\n          <div class=\"notification notification--errorfield\">\n            <span class=\"icon icon-error-shape errorfield\"></span>\n            <div>\n              <p>{{ 'ng.product-finder.step-tv-experience.multiple.tv-experience.error' | translate }}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"Container Container--partitioned py--m--md mx--n\">\n          <div class=\"Container--partitioned--partition Container--partitioned--partition--last-item\">\n            <div class=\"select-tile--group display--grid grid-template-column--1--sm gap--xm mx--m--md\">\n              <ng-container *ngIf=\"{ checkboxes: checkboxes$ | async, tvExperience: tvExperience$ | async } as o\">\n                <ng-container *ngIf=\"o.checkboxes && o.tvExperience\">\n                  <tg-sales-multi-select-checkbox\n                    [checkboxes]=\"o.checkboxes\"\n                    [ngModel]=\"o.tvExperience.selection\"\n                    (ngModelChange)=\"updateTvExperience($event)\">\n                  </tg-sales-multi-select-checkbox>\n                </ng-container>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"names":["FormsModule","ImageSrcInterceptorDirective","of","Checkbox","MultiSelectCheckboxComponent","AsyncPipe","NgIf","UntilDestroy","TranslateModule","TvExperienceFacade","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵelementContainerStart","ɵɵlistener","TvExperienceComponent_ng_container_18_ng_container_1_Template_tg_sales_multi_select_checkbox_ngModelChange_1_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","updateTvExperience","ɵɵelementContainerEnd","ɵɵproperty","o_r2","checkboxes","tvExperience","selection","ɵɵtemplate","TvExperienceComponent_ng_container_18_ng_container_1_Template","TvExperienceComponent","constructor","tvExperienceFacade","checkboxes$","key","label","iconClass","tvExperience$","showAtLeastOneValueSelectedError$","hasErrorRequireAtLeastOneTvExperienceToBeSelectedError$","_","ɵɵdirectiveInject","i1","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TvExperienceComponent_Template","rf","ctx","TvExperienceComponent_div_13_Template","TvExperienceComponent_ng_container_18_Template","ɵɵtextInterpolate1","ɵɵpureFunction2","_c0","i2","TranslatePipe","i3","NgControlStatus","NgModel","encapsulation","changeDetection","__decorate"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}