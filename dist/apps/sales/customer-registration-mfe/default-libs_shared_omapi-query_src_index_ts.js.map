{"version":3,"file":"default-libs_shared_omapi-query_src_index_ts.js","mappings":"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","sources":["./libs/shared/omapi-query/src/index.ts","./libs/shared/omapi-query/src/lib/enums/address.enum.ts","./libs/shared/omapi-query/src/lib/enums/http-types.enum.ts","./libs/shared/omapi-query/src/lib/enums/index.ts","./libs/shared/omapi-query/src/lib/enums/product-type.enum.ts","./libs/shared/omapi-query/src/lib/helpers/omapi-query.helper.ts","./libs/shared/omapi-query/src/lib/interfaces/index.ts","./libs/shared/omapi-query/src/lib/interfaces/omapi-query-product.interface.ts","./libs/shared/omapi-query/src/lib/interfaces/raw-omapi-query-product.interface.ts","./libs/shared/omapi-query/src/lib/interfaces/raw-omapi-query-product.testfactory.ts","./libs/shared/omapi-query/src/lib/mappers/index.ts","./libs/shared/omapi-query/src/lib/mappers/omapi-query-product.mapper.ts","./libs/shared/omapi-query/src/lib/models/index.ts","./libs/shared/omapi-query/src/lib/models/omapi-query-call.model.ts","./libs/shared/omapi-query/src/lib/models/query-product-info-transformer.model.ts","./libs/shared/omapi-query/src/lib/services/cache/cache.service.ts","./libs/shared/omapi-query/src/lib/services/index.ts","./libs/shared/omapi-query/src/lib/services/omapi-query-product.service.ts","./libs/shared/omapi-query/src/lib/services/omapi-query.service.ts","./node_modules/lodash-es/head.js","./node_modules/lodash-es/isNil.js"],"sourcesContent":["export * from './lib/enums';\nexport * from './lib/interfaces';\nexport * from './lib/mappers';\nexport * from './lib/models';\nexport * from './lib/services';\n","export enum AddressEnum {\n  ADDRESS_NOT_FOUND = 'OMAPI-ERROR-ADDRESS-NOT-FOUND',\n}\n","export enum HttpTypesEnum {\n  POST = 'POST',\n}\n","export * from './http-types.enum';\n","export enum ProductTypeEnum {\n  SMARTPHONE = 'SMARTPHONE',\n  SMARTPHONES = 'SMARTPHONES',\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OmapiQueryHelper {\n  getHttpHeaders(): HttpHeaders {\n    return new HttpHeaders(this.createHttpHeaders());\n  }\n\n  createHttpHeaders() {\n    return {\n      'Content-Type': 'application/json',\n    };\n  }\n\n  getHttpOptions() {\n    return {\n      headers: this.getHttpHeaders(),\n    };\n  }\n}\n","export * from './omapi-query-product.interface';\nexport * from './raw-omapi-query-product.interface';\nexport * from './raw-omapi-query-product.testfactory';\n","export interface OmapiQueryProductInterface {\n  products: QueryProductsInterface[];\n  totalProducts?: number;\n}\n\nexport interface QueryProductsInterface {\n  labelKey: string;\n  productFamily: string;\n  variants: VariantsInterface[];\n  manBrand: ColorInterface;\n  shortDescription?: string;\n  longDescription?: string;\n  isPreOrder: boolean;\n  isBackOrder: boolean;\n}\n\nexport interface ProductTypeInterface {\n  code: string;\n  sortOrder?: string;\n  localizedContent: LocalizedContentInterface[];\n}\n\nexport interface LocalizedContentInterface {\n  key?: string;\n  locale: string;\n  value: string[];\n  data?: string;\n}\n\nexport interface VariantsInterface {\n  productId: string;\n  images: ImagesInterface[];\n  contractMonths: unknown;\n  prices: PricesInterface;\n  color: ColorInterface;\n  manBrand: ColorInterface;\n  shortDescription: ShortDescriptionInterface;\n  tag: unknown;\n  brand: BrandInterface;\n  extraAtHomeDelivery?: boolean;\n}\n\nexport interface ShortDescriptionInterface {\n  localizedContent: LocalizedContentInterface[];\n}\n\nexport interface ImagesInterface {\n  attributeKey: string;\n  value: string;\n  localizedContent: LocalizedContentInterface[];\n}\n\nexport interface PricesInterface {\n  priceType: string;\n}\n\nexport interface ColorInterface {\n  hexCode?: string;\n  sortOrder: string;\n  localizedContent: LocalizedContentInterface[];\n  attributeGroup: ProductTypeInterface;\n}\n\nexport interface BrandInterface {\n  localizedContent: LocalizedContentInterface[];\n}\n","export interface RawOmapiQueryProductInterface {\n  products: RawOmapiQueryProductInterfaceData[];\n  totalProducts?: number;\n}\n\nexport interface RawOmapiQueryProductInterfaceData {\n  labelKey: string;\n  productFamily: string;\n  variants: RawVariantsInterface[];\n  manBrand: RawColorInterface;\n  shortDescription?: RawShortDescription;\n  longDescription?: unknown;\n  isPreOrder: boolean;\n  isBackOrder: boolean;\n}\n\nexport interface RawProductTypeInterface {\n  code: string;\n  sortOrder?: string;\n  localizedContent: RawLocalizedContentInterface[];\n}\n\nexport interface RawLocalizedContentInterface {\n  key?: string;\n  locale: string;\n  value?: string[];\n  data?: string;\n}\n\nexport interface VariantTagOptionInterface {\n  attributeKey: string;\n  startDate?: string;\n  endDate?: string;\n  backOrderWindow?: string;\n  backOrderDescription?: {\n    localizedContent: RawLocalizedContentInterface[];\n  };\n  preOrderDescription?: {\n    localizedContent: RawLocalizedContentInterface[];\n  };\n}\n\nexport interface VariantTagInterface {\n  telenet: { options: VariantTagOptionInterface[] };\n  telenetSOHO: { options: VariantTagOptionInterface[] };\n  base: { options: VariantTagOptionInterface[] };\n  baseSOHO: { options: VariantTagOptionInterface[] };\n}\n\nexport interface RawVariantsInterface {\n  productId: string;\n  images: RawImagesInterface[];\n  contractMonths: unknown;\n  prices: RawPricesInterface;\n  color: RawColorInterface;\n  manBrand: RawBrandInterface;\n  shortDescription: RawShortDescription;\n  tag: VariantTagInterface;\n  extraAtHomeDelivery?: boolean;\n  characteristics: unknown;\n}\n\nexport interface RawShortDescription {\n  localizedContent: RawLocalizedContentInterface[];\n}\n\nexport interface RawImagesInterface {\n  attributeKey: string;\n  value: string;\n  localizedContent: RawLocalizedContentInterface[];\n}\n\nexport interface RawPricesInterface {\n  priceType: string;\n}\n\nexport interface RawColorInterface {\n  hexCode?: string;\n  sortOrder: string;\n  localizedContent: RawLocalizedContentInterface[];\n  attributeGroup: RawProductTypeInterface;\n}\n\nexport interface RawBrandInterface {\n  sortOrder?: string;\n  localizedContent: RawLocalizedContentInterface[];\n  attributeGroup?: RawProductTypeInterface;\n}\n","import {\n  RawColorInterface,\n  RawImagesInterface,\n  RawLocalizedContentInterface,\n  RawOmapiQueryProductInterface,\n  RawOmapiQueryProductInterfaceData,\n  RawProductTypeInterface,\n  RawVariantsInterface,\n  VariantTagInterface,\n  VariantTagOptionInterface,\n} from '../interfaces/raw-omapi-query-product.interface';\nimport { makeFactory } from 'factory.ts';\n\nexport const rawLocalizedContentInterfaceFactory = makeFactory<RawLocalizedContentInterface>({\n  key: '1',\n  value: [],\n  data: 'test',\n  locale: 'nl',\n});\n\nexport const rawProductTypeInterfaceFactory = makeFactory<RawProductTypeInterface>({\n  code: '',\n  localizedContent: [rawLocalizedContentInterfaceFactory.build()],\n});\n\nexport const rawColorInterfaceFactory = makeFactory<RawColorInterface>({\n  sortOrder: '',\n  localizedContent: [],\n  attributeGroup: rawProductTypeInterfaceFactory.build(),\n});\n\nexport const variantTagOptionInterfaceFactory = makeFactory<VariantTagOptionInterface>({\n  attributeKey: '',\n  backOrderDescription: {\n    localizedContent: [rawLocalizedContentInterfaceFactory.build()],\n  },\n  preOrderDescription: {\n    localizedContent: [rawLocalizedContentInterfaceFactory.build()],\n  },\n});\n\nexport const variantTagInterfaceFactory = makeFactory<VariantTagInterface>({\n  telenet: { options: [variantTagOptionInterfaceFactory.build()] },\n  telenetSOHO: { options: [variantTagOptionInterfaceFactory.build()] },\n  base: { options: [variantTagOptionInterfaceFactory.build()] },\n  baseSOHO: { options: [variantTagOptionInterfaceFactory.build()] },\n});\n\nexport const RawImagesInterfaceFactory = makeFactory<RawImagesInterface>({\n  attributeKey: '',\n  value: '',\n  localizedContent: [],\n});\n\nexport const rawVariantsInterfaceFactory = makeFactory<RawVariantsInterface>({\n  productId: '',\n  images: [],\n  contractMonths: undefined,\n  prices: {\n    priceType: '',\n  },\n  color: rawColorInterfaceFactory.build(),\n  manBrand: rawColorInterfaceFactory.build(),\n  shortDescription: {\n    localizedContent: [rawLocalizedContentInterfaceFactory.build()],\n  },\n  tag: variantTagInterfaceFactory.build(),\n  characteristics: undefined,\n});\n\nexport const rawBigItemVariantInterfaceFactory = rawVariantsInterfaceFactory.extend({\n  extraAtHomeDelivery: true,\n});\n\nexport const rawOmapiQueryProductInterfaceDataFactory = makeFactory<RawOmapiQueryProductInterfaceData>({\n  labelKey: '',\n  productFamily: '',\n  variants: [],\n  manBrand: rawColorInterfaceFactory.build(),\n  isPreOrder: false,\n  isBackOrder: false,\n});\n\nexport const rawOmapiQueryProductTestfactory = makeFactory<RawOmapiQueryProductInterface>({\n  products: rawOmapiQueryProductInterfaceDataFactory.buildList(2),\n});\n\nexport const rawOmapiQueryProductInterfaceDataWithPreOrderFactory = rawOmapiQueryProductInterfaceDataFactory.extend({\n  labelKey: '',\n  productFamily: '',\n  variants: [\n    rawVariantsInterfaceFactory.build({\n      tag: {\n        telenet: {\n          options: [\n            variantTagOptionInterfaceFactory.build({\n              attributeKey: 'pre_order_label',\n            }),\n          ],\n        },\n      },\n    }),\n  ],\n  manBrand: rawColorInterfaceFactory.build(),\n  isPreOrder: false,\n  isBackOrder: false,\n});\n\nexport const rawOmapiQueryProductInterfaceDataWithBackOrderFactory = rawOmapiQueryProductInterfaceDataFactory.extend({\n  labelKey: '',\n  productFamily: '',\n  variants: [\n    rawVariantsInterfaceFactory.build({\n      tag: {\n        telenet: {\n          options: [\n            variantTagOptionInterfaceFactory.build({\n              attributeKey: 'back_order_label',\n            }),\n          ],\n        },\n      },\n    }),\n  ],\n  manBrand: rawColorInterfaceFactory.build(),\n  isPreOrder: false,\n  isBackOrder: false,\n});\n\nexport const rawOmapiQueryProductFactoryWithPreOrder = rawOmapiQueryProductTestfactory.extend({\n  products: [\n    rawOmapiQueryProductInterfaceDataFactory.build(),\n    rawOmapiQueryProductInterfaceDataWithPreOrderFactory.build(),\n  ],\n});\n","export * from './omapi-query-product.mapper';\n","import { Injectable } from '@angular/core';\nimport { isEmpty, isNil } from 'lodash-es';\nimport {\n  BrandInterface,\n  ImagesInterface,\n  LocalizedContentInterface,\n  OmapiQueryProductInterface,\n  PricesInterface,\n  QueryProductsInterface,\n  ShortDescriptionInterface,\n  VariantsInterface,\n} from '../interfaces/omapi-query-product.interface';\nimport {\n  RawBrandInterface,\n  RawImagesInterface,\n  RawLocalizedContentInterface,\n  RawOmapiQueryProductInterface,\n  RawOmapiQueryProductInterfaceData,\n  RawPricesInterface,\n  RawShortDescription,\n  RawVariantsInterface,\n} from '../interfaces/raw-omapi-query-product.interface';\nimport { MapperInterface } from '@telenet/ng-lib-shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OmapiQueryProductMapper\n  implements MapperInterface<RawOmapiQueryProductInterface, OmapiQueryProductInterface>\n{\n  toModel(rawOmapiQueryProduct: RawOmapiQueryProductInterface): OmapiQueryProductInterface {\n    return this.createOmapiQueryProduct(rawOmapiQueryProduct);\n  }\n\n  private createOmapiQueryProduct(rawOmapiQueryProduct: RawOmapiQueryProductInterface): OmapiQueryProductInterface {\n    const omapiQueryProduct = {} as OmapiQueryProductInterface;\n    omapiQueryProduct.products = this.createQueryProducts(rawOmapiQueryProduct.products);\n\n    return omapiQueryProduct;\n  }\n\n  createQueryProducts(rawQueryProducts: RawOmapiQueryProductInterfaceData[]): QueryProductsInterface[] {\n    return (\n      rawQueryProducts &&\n      rawQueryProducts.map((rawQueryProduct) => {\n        return this.createQueryProductData(rawQueryProduct);\n      })\n    );\n  }\n\n  createQueryProductData(rawQueryProduct: RawOmapiQueryProductInterfaceData): QueryProductsInterface {\n    const queryProduct = {} as QueryProductsInterface;\n    queryProduct.labelKey = rawQueryProduct.labelKey;\n    queryProduct.productFamily = rawQueryProduct.productFamily;\n    queryProduct.variants = this.createVariants(rawQueryProduct.variants);\n    return queryProduct;\n  }\n\n  private createLocalizedContents(rawLocalizedContents: RawLocalizedContentInterface[]): LocalizedContentInterface[] {\n    return (\n      rawLocalizedContents &&\n      rawLocalizedContents.map((rawLocalizedContent) => {\n        return OmapiQueryProductMapper.createLocalizedContent(rawLocalizedContent);\n      })\n    );\n  }\n\n  private static createLocalizedContent(rawLocalizedContent: RawLocalizedContentInterface): LocalizedContentInterface {\n    const localizedContent = {} as LocalizedContentInterface;\n    localizedContent.locale = rawLocalizedContent.locale;\n    localizedContent.key = rawLocalizedContent.key;\n    localizedContent.data = rawLocalizedContent.data;\n    localizedContent.value = OmapiQueryProductMapper.createLocalizedContentValue(\n      rawLocalizedContent.value ? rawLocalizedContent.value : []\n    );\n    return localizedContent;\n  }\n\n  private static createLocalizedContentValue(rawLocalizedContentValue: string[]): string[] {\n    return (\n      rawLocalizedContentValue &&\n      rawLocalizedContentValue.map((value) => {\n        return value;\n      })\n    );\n  }\n\n  private createVariants(rawVariants: RawVariantsInterface[]): VariantsInterface[] {\n    return (\n      rawVariants &&\n      rawVariants.map((rawVariant) => {\n        return this.createVariant(rawVariant);\n      })\n    );\n  }\n\n  private createVariant(rawVariant: RawVariantsInterface): VariantsInterface {\n    const variant = {} as VariantsInterface;\n    variant.productId = rawVariant.productId;\n    if (!isNil(rawVariant.extraAtHomeDelivery)) {\n      variant.extraAtHomeDelivery = rawVariant.extraAtHomeDelivery;\n    }\n    variant.prices = OmapiQueryProductMapper.createPrices(rawVariant.prices);\n    variant.images = this.createImages(rawVariant.images);\n    const shortDescription = this.createShortDescription(rawVariant.shortDescription);\n    if (shortDescription) {\n      variant.shortDescription = shortDescription;\n    }\n    variant.brand = this.createBrand(rawVariant.manBrand);\n    return variant;\n  }\n\n  private static createPrices(rawPrices: RawPricesInterface): PricesInterface {\n    const prices = {} as PricesInterface;\n    prices.priceType = rawPrices.priceType;\n    return prices;\n  }\n\n  private createImages(rawImages: RawImagesInterface[]): ImagesInterface[] {\n    return (\n      rawImages &&\n      rawImages.map((rawImage) => {\n        return this.createImage(rawImage);\n      })\n    );\n  }\n\n  private createImage(rawImage: RawImagesInterface): ImagesInterface {\n    const image = {} as ImagesInterface;\n    image.attributeKey = rawImage.attributeKey;\n    image.value = rawImage.value;\n    image.localizedContent = this.createLocalizedContents(rawImage.localizedContent);\n    return image;\n  }\n\n  private createShortDescription(rawShortDescription: RawShortDescription): ShortDescriptionInterface {\n    if (!isEmpty(rawShortDescription) && !isEmpty(rawShortDescription.localizedContent)) {\n      const shortDescription = {} as ShortDescriptionInterface;\n      shortDescription.localizedContent = this.createLocalizedContents(rawShortDescription.localizedContent);\n      return shortDescription;\n    }\n\n    return {} as ShortDescriptionInterface;\n  }\n  private createBrand(rawBrand: RawBrandInterface): BrandInterface {\n    if (!isEmpty(rawBrand) && !isEmpty(rawBrand.localizedContent)) {\n      const brand = {} as BrandInterface;\n      brand.localizedContent = this.createLocalizedContents(rawBrand.localizedContent);\n      return brand;\n    }\n    return {} as BrandInterface;\n  }\n}\n","export * from './query-product-info-transformer.model';\nexport * from './omapi-query-call.model';\n","import { MapperInterface } from '@telenet/ng-lib-shared';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpTypesEnum } from '../enums/http-types.enum';\n\nexport class OmapiQueryCallConfig<K, G> {\n  messageGroupName: string;\n  endpoint: string;\n  mapper: MapperInterface<K, G>;\n  data: unknown;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  errorHandler?: (errorHandler: HttpErrorResponse, config: OmapiQueryCallConfig<K, G>) => Observable<any>;\n  httpType: HttpTypesEnum = HttpTypesEnum.POST;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  customHeaders?: object;\n\n  constructor(\n    messageGroupName: string,\n    endpoint: string,\n    mapper: MapperInterface<K, G>,\n    data?: unknown,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    customHeaders?: Object\n  ) {\n    this.messageGroupName = messageGroupName;\n    this.endpoint = endpoint;\n    this.mapper = mapper;\n    this.data = data;\n    this.customHeaders = customHeaders;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ProductTypeEnum } from '../enums/product-type.enum';\nimport { LanguageService } from '@telenet/ng-lib-page';\nimport { isEmpty, first, isNil } from 'lodash-es';\nimport { OmapiProduct } from '@telenet/ng-lib-omapi';\nimport {\n  BrandInterface,\n  LocalizedContentInterface,\n  OmapiQueryProductInterface,\n  QueryProductsInterface,\n  ShortDescriptionInterface,\n  VariantsInterface,\n} from '../interfaces/omapi-query-product.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QueryProductInfoTransformer {\n  constructor(private readonly languageService: LanguageService) {}\n\n  toModel(queryProductInfo: OmapiQueryProductInterface): OmapiProduct {\n    return this.transformToOmapiProduct(queryProductInfo);\n  }\n\n  transformToOmapiProduct(queryProductInfo: OmapiQueryProductInterface): OmapiProduct {\n    const omapiProduct = new OmapiProduct();\n    if (!isEmpty(queryProductInfo.products)) {\n      const queryProductDetails = first(queryProductInfo.products);\n      if (queryProductDetails) {\n        omapiProduct.labelKey = queryProductDetails.labelKey;\n        omapiProduct.productType =\n          queryProductDetails.productFamily.toUpperCase() === ProductTypeEnum.SMARTPHONES\n            ? ProductTypeEnum.SMARTPHONE\n            : queryProductDetails.productFamily.toUpperCase();\n        if (!isEmpty(queryProductDetails.variants)) {\n          this.appendVariantToOmapiProduct(queryProductDetails, omapiProduct);\n        }\n      }\n    }\n    return omapiProduct;\n  }\n\n  private appendVariantToOmapiProduct(queryProductDetails: QueryProductsInterface, omapiProduct: OmapiProduct) {\n    const variant = first(queryProductDetails.variants);\n    if (variant) {\n      if (!isNil(variant.extraAtHomeDelivery)) {\n        omapiProduct.extraAtHomeDelivery = variant.extraAtHomeDelivery;\n      }\n      omapiProduct.productId = variant.productId;\n      omapiProduct.externalProductCode = variant.productId;\n      omapiProduct.priceType = variant.prices.priceType;\n      omapiProduct.imageUrl = QueryProductInfoTransformer.getImageUrl(variant);\n      const contentForLocale = this.getContentForLocale(variant.shortDescription);\n      if (contentForLocale) {\n        omapiProduct.name = contentForLocale.data;\n      }\n      const brandValue = this.getBrandValueForLocale(variant.brand);\n      if (brandValue) {\n        omapiProduct.brand = first(brandValue.value);\n      }\n    }\n  }\n\n  private static getImageUrl(variant: VariantsInterface): string {\n    if (!isEmpty(variant) && !isEmpty(variant.images)) {\n      const imageDetails = first(variant.images);\n      return imageDetails ? imageDetails.value : '';\n    }\n    return '';\n  }\n\n  private getContentForLocale(shortDescription: ShortDescriptionInterface): LocalizedContentInterface {\n    if (!isEmpty(shortDescription) && !isEmpty(shortDescription.localizedContent)) {\n      const localizedContentInterface = shortDescription.localizedContent.find((localizeContent) => {\n        return localizeContent.locale === this.languageService.getLanguage();\n      });\n      return localizedContentInterface ? localizedContentInterface : ({} as LocalizedContentInterface);\n    }\n\n    return {} as LocalizedContentInterface;\n  }\n\n  private getBrandValueForLocale(brand: BrandInterface): LocalizedContentInterface {\n    if (!isEmpty(brand) && !isEmpty(brand.localizedContent)) {\n      const localizedContentInterface = brand.localizedContent.find((localizedContent) => {\n        return localizedContent.locale === this.languageService.getLanguage();\n      });\n\n      return localizedContentInterface ? localizedContentInterface : ({} as LocalizedContentInterface);\n    }\n\n    return {} as LocalizedContentInterface;\n  }\n}\n","import { shareReplay } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n  private cache: Record<string, Observable<unknown>> = {};\n\n  get(key: string): Observable<unknown> {\n    return this.cache[key];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  add(key: string, response$: Observable<unknown | Object>): void {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.cache[key] = response$.pipe(shareReplay({ bufferSize: 1 }));\n  }\n\n  remove(key: string): void {\n    delete this.cache[key];\n  }\n}\n","export * from './omapi-query-product.service';\nexport * from './omapi-query.service';\nexport * from './cache/cache.service';\n","import { map as lodashMap } from 'lodash-es';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UrlService } from '@telenet/ng-lib-page';\nimport { forkJoin, Observable } from 'rxjs';\nimport { CacheService } from './cache/cache.service';\nimport { RawOmapiQueryProductInterface } from '../interfaces/raw-omapi-query-product.interface';\nimport { catchError, map, take } from 'rxjs/operators';\nimport { ErrorMessage, MessageService } from '@telenet/ng-lib-message';\nimport { LogFactory } from '@telenet/ng-lib-shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OmapiQueryProductService {\n  private readonly log = LogFactory.createLogger(OmapiQueryProductService);\n  constructor(\n    private readonly http: HttpClient,\n    private readonly cacheService: CacheService,\n    private readonly urlService: UrlService,\n    private readonly messageService: MessageService\n  ) {}\n\n  getRawQueryProductByEndpoint(messageGroup: string, endpoint: string): Observable<RawOmapiQueryProductInterface> {\n    if (!this.cacheService.get(endpoint)) {\n      this.cacheService.add(endpoint, this.http.get(endpoint, this.getHttpConfig()));\n    }\n    return this.cacheService.get(endpoint).pipe(\n      take(1),\n      catchError((error: HttpErrorResponse) => this.handleError(error, messageGroup)),\n      map((response: unknown) => response as RawOmapiQueryProductInterface)\n    );\n  }\n\n  rawQueryProductsFromEndpoints$(\n    messageGroup: string,\n    endpoints: string[]\n  ): Observable<RawOmapiQueryProductInterface[]> {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return forkJoin(lodashMap(endpoints, (endpoint) => this.getRawQueryProductByEndpoint(messageGroup, endpoint)));\n  }\n\n  private getHttpConfig() {\n    return {\n      headers: {\n        'x-alt-referer': this.urlService.getCurrentUrl(),\n        'X-Requested-With': 'XMLHttpRequest',\n      },\n      timeout: 10000,\n      cache: true,\n    };\n  }\n\n  private handleError(error: HttpErrorResponse, messageGroup: string): Observable<void> {\n    if (error.status !== 410) {\n      this.messageService.addMessage(new ErrorMessage(messageGroup, 'omapi-query-' + error.status));\n    }\n    this.log.logError('An error occurred while trying to fetch ' + messageGroup, error);\n    throw Error('An error occurred while trying to fetch ' + messageGroup);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { ConfigConstants, ConfigService } from '@telenet/ng-lib-config';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ErrorMessage, MessageService } from '@telenet/ng-lib-message';\nimport { catchError, map, mergeMap, take } from 'rxjs/operators';\nimport { OmapiQueryHelper } from '../helpers/omapi-query.helper';\nimport { OmapiQueryCallConfig } from '../models/omapi-query-call.model';\nimport { OmapiEnrichService } from '@telenet/ng-lib-omapi';\nimport { AddressEnum } from '../enums/address.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OmapiQueryService {\n  constructor(\n    private readonly http: HttpClient,\n    private readonly configService: ConfigService,\n    private readonly messageService: MessageService,\n    private readonly omapiQueryHelper: OmapiQueryHelper,\n    private readonly omapiEnrichService: OmapiEnrichService\n  ) {}\n\n  public doPost<T, G>(omapiQueryCallConfig: OmapiQueryCallConfig<T, G>): Observable<G> {\n    return this.doRequest(omapiQueryCallConfig).pipe(\n      mergeMap((omapiQueryResponse: T) => {\n        return this.omapiEnrichService.enrichResponseWithOmapiData<T>(\n          omapiQueryCallConfig.messageGroupName,\n          omapiQueryResponse\n        );\n      }),\n      map((omapiQueryResponseEnrichedWithOmapiData: T) => {\n        return omapiQueryCallConfig.mapper.toModel(omapiQueryResponseEnrichedWithOmapiData);\n      })\n    );\n  }\n\n  public doGet<T, G>(omapiQueryCallConfig: OmapiQueryCallConfig<T, G>): Observable<G> {\n    return this.http\n      .get(this.configService.getConfig(ConfigConstants.OMAPI_QUERY_URL) + omapiQueryCallConfig.endpoint)\n      .pipe(\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        mergeMap((omapiQueryResponse: Object) => {\n          return this.omapiEnrichService.enrichResponseWithOmapiData<T>(\n            omapiQueryCallConfig.messageGroupName,\n            omapiQueryResponse as T\n          );\n        }),\n        map((omapiResponseEnrichedWithOmapiData: T) =>\n          omapiQueryCallConfig.mapper.toModel(omapiResponseEnrichedWithOmapiData)\n        ),\n        catchError((error: unknown) => {\n          return this.handleError(error as HttpErrorResponse, omapiQueryCallConfig);\n        })\n      );\n  }\n\n  private doRequest<T, G>(omapiQueryCall: OmapiQueryCallConfig<T, G>): Observable<T> {\n    const options = this.omapiQueryHelper.getHttpOptions();\n    return this.http\n      .post<T>(\n        this.configService.getConfig(ConfigConstants.OMAPI_QUERY_URL) + omapiQueryCall.endpoint,\n        omapiQueryCall.data,\n        options\n      )\n      .pipe(\n        take(1),\n        catchError((error: unknown) => {\n          return this.handleError(error as HttpErrorResponse, omapiQueryCall);\n        })\n      );\n  }\n\n  private handleError<T, G>(error: HttpErrorResponse, omapiQueryCall: OmapiQueryCallConfig<T, G>) {\n    if (omapiQueryCall.errorHandler !== undefined) {\n      return omapiQueryCall.errorHandler(error, omapiQueryCall);\n    }\n\n    let errorCode = 'omapi-query.'.concat(error.status.toString());\n    let detailedErrorCode;\n    switch (error.status) {\n      case 400:\n        errorCode = AddressEnum.ADDRESS_NOT_FOUND\n          ? `${omapiQueryCall.messageGroupName}.${AddressEnum.ADDRESS_NOT_FOUND}`\n          : errorCode;\n        this.messageService.addMessage(new ErrorMessage(omapiQueryCall.messageGroupName, errorCode));\n        break;\n      case 500:\n        this.messageService.addMessage(new ErrorMessage(omapiQueryCall.messageGroupName, errorCode));\n        break;\n      default:\n        detailedErrorCode = this.getDetailedErrorCode(error, errorCode);\n        if (detailedErrorCode) {\n          errorCode = detailedErrorCode;\n        }\n        this.messageService.addMessage(new ErrorMessage(omapiQueryCall.messageGroupName, errorCode));\n        break;\n    }\n    return throwError(\n      () => 'An error occured while trying to fetch ' + omapiQueryCall.messageGroupName + ' | ' + errorCode\n    );\n  }\n\n  private getDetailedErrorCode(error: HttpErrorResponse, errorCode: string): string | undefined {\n    if (error.error && error.error.code) {\n      return errorCode.concat('-').concat(error.error.code);\n    }\n    return undefined;\n  }\n}\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nexport default isNil;\n"],"names":["AddressEnum","HttpTypesEnum","ProductTypeEnum","HttpHeaders","OmapiQueryHelper","getHttpHeaders","createHttpHeaders","getHttpOptions","headers","_","_2","factory","ɵfac","providedIn","makeFactory","rawLocalizedContentInterfaceFactory","key","value","data","locale","rawProductTypeInterfaceFactory","code","localizedContent","build","rawColorInterfaceFactory","sortOrder","attributeGroup","variantTagOptionInterfaceFactory","attributeKey","backOrderDescription","preOrderDescription","variantTagInterfaceFactory","telenet","options","telenetSOHO","base","baseSOHO","RawImagesInterfaceFactory","rawVariantsInterfaceFactory","productId","images","contractMonths","undefined","prices","priceType","color","manBrand","shortDescription","tag","characteristics","rawBigItemVariantInterfaceFactory","extend","extraAtHomeDelivery","rawOmapiQueryProductInterfaceDataFactory","labelKey","productFamily","variants","isPreOrder","isBackOrder","rawOmapiQueryProductTestfactory","products","buildList","rawOmapiQueryProductInterfaceDataWithPreOrderFactory","rawOmapiQueryProductInterfaceDataWithBackOrderFactory","rawOmapiQueryProductFactoryWithPreOrder","isEmpty","isNil","OmapiQueryProductMapper","toModel","rawOmapiQueryProduct","createOmapiQueryProduct","omapiQueryProduct","createQueryProducts","rawQueryProducts","map","rawQueryProduct","createQueryProductData","queryProduct","createVariants","createLocalizedContents","rawLocalizedContents","rawLocalizedContent","createLocalizedContent","createLocalizedContentValue","rawLocalizedContentValue","rawVariants","rawVariant","createVariant","variant","createPrices","createImages","createShortDescription","brand","createBrand","rawPrices","rawImages","rawImage","createImage","image","rawShortDescription","rawBrand","OmapiQueryCallConfig","constructor","messageGroupName","endpoint","mapper","customHeaders","httpType","POST","LanguageService","first","OmapiProduct","QueryProductInfoTransformer","languageService","queryProductInfo","transformToOmapiProduct","omapiProduct","queryProductDetails","productType","toUpperCase","SMARTPHONES","SMARTPHONE","appendVariantToOmapiProduct","externalProductCode","imageUrl","getImageUrl","contentForLocale","getContentForLocale","name","brandValue","getBrandValueForLocale","imageDetails","localizedContentInterface","find","localizeContent","getLanguage","i0","ɵɵinject","i1","shareReplay","CacheService","cache","get","add","response$","pipe","bufferSize","remove","lodashMap","HttpClient","UrlService","forkJoin","catchError","take","ErrorMessage","MessageService","LogFactory","OmapiQueryProductService","http","cacheService","urlService","messageService","log","createLogger","getRawQueryProductByEndpoint","messageGroup","getHttpConfig","error","handleError","response","rawQueryProductsFromEndpoints$","endpoints","getCurrentUrl","timeout","status","addMessage","logError","Error","i2","i3","i4","throwError","ConfigConstants","ConfigService","mergeMap","OmapiEnrichService","OmapiQueryService","configService","omapiQueryHelper","omapiEnrichService","doPost","omapiQueryCallConfig","doRequest","omapiQueryResponse","enrichResponseWithOmapiData","omapiQueryResponseEnrichedWithOmapiData","doGet","getConfig","OMAPI_QUERY_URL","omapiResponseEnrichedWithOmapiData","omapiQueryCall","post","errorHandler","errorCode","concat","toString","detailedErrorCode","ADDRESS_NOT_FOUND","getDetailedErrorCode","i5","head","array","length"],"sourceRoot":"webpack:///","x_google_ignoreList":[19,20]}