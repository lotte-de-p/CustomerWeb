{"version":3,"file":"default-node_modules_angular_cdk_fesm2022_overlay_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/collections.mjs","./node_modules/@angular/cdk/fesm2022/overlay.mjs","./node_modules/@angular/cdk/fesm2022/portal.mjs","./node_modules/@angular/cdk/fesm2022/scrolling.mjs"],"sourcesContent":["import { ConnectableObservable, isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable } from '@angular/core';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/** Indicates how a view was changed by a {@link _ViewRepeater}. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n    /** The content of an existing view was replaced with another item. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n    /** A new view was created with `createEmbeddedView`. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n    /** The position of a view changed, but the content remains the same. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n    /** A view was detached from the view container. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = _ViewRepeaterOperation.INSERTED;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        this.compareWith = compareWith;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param values The values to select\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param values The values to deselect\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Sets the selected values\n     * @param values The new selected values\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    setSelection(...values) {\n        this._verifyValueAssignment(values);\n        const oldValues = this.selected;\n        const newSelectedSet = new Set(values);\n        values.forEach(value => this._markSelected(value));\n        oldValues\n            .filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet)))\n            .forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param value The value to toggle\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    toggle(value) {\n        return this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @param flushEvent Whether to flush the changes in an event.\n     *   If false, the changes to the selection will be flushed along with the next event.\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    clear(flushEvent = true) {\n        this._unmarkAll();\n        const changed = this._hasQueuedChanges();\n        if (flushEvent) {\n            this._emitChangeEvent();\n        }\n        return changed;\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(this._getConcreteValue(value));\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        value = this._getConcreteValue(value);\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            if (!this.isSelected(value)) {\n                this._selection.add(value);\n            }\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        value = this._getConcreteValue(value);\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n    /** Whether there are queued up change to be emitted. */\n    _hasQueuedChanges() {\n        return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n    }\n    /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n    _getConcreteValue(inputValue, selection) {\n        if (!this.compareWith) {\n            return inputValue;\n        }\n        else {\n            selection = selection ?? this._selection;\n            for (let selectedValue of selection) {\n                if (this.compareWith(inputValue, selectedValue)) {\n                    return selectedValue;\n                }\n            }\n            return inputValue;\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: UniqueSelectionDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: UniqueSelectionDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: UniqueSelectionDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation, getMultipleValuesInSingleSelectionError, isDataSource };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, ElementRef, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, inject, Directive, EventEmitter, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport { filter, take, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n            return (!scrollable ||\n                !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement));\n        }));\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._ngZone = _ngZone;\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    const keydownEvents = overlays[i]._keydownEvents;\n                    /** @breaking-change 14.0.0 _ngZone will be required. */\n                    if (this._ngZone) {\n                        this._ngZone.run(() => keydownEvents.next(event));\n                    }\n                    else {\n                        keydownEvents.next(event);\n                    }\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n            }\n            else {\n                this._document.body.addEventListener('keydown', this._keydownListener);\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }] });\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                const outsidePointerEvents = overlayRef._outsidePointerEvents;\n                /** @breaking-change 14.0.0 _ngZone will be required. */\n                if (this._ngZone) {\n                    this._ngZone.run(() => outsidePointerEvents.next(event));\n                }\n                else {\n                    outsidePointerEvents.next(event);\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n            }\n            else {\n                this._addEventListeners(body);\n            }\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    _addEventListeners(body) {\n        body.addEventListener('pointerdown', this._pointerDownListener, true);\n        body.addEventListener('click', this._clickListener, true);\n        body.addEventListener('auxclick', this._clickListener, true);\n        body.addEventListener('contextmenu', this._clickListener, true);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }] });\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        this._backdropTransitionendHandler = (event) => {\n            this._disposeBackdrop(event.target);\n        };\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._animationsDisabled) {\n            this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        if (this._animationsDisabled) {\n            this._disposeBackdrop(backdropToDetach);\n            return;\n        }\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n            this._disposeBackdrop(backdropToDetach);\n        }, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.removeEventListener('click', this._backdropClickHandler);\n            backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n        if (this._backdropTimeout) {\n            clearTimeout(this._backdropTimeout);\n            this._backdropTimeout = undefined;\n        }\n    }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the DOMRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._alignItems = '';\n        this._xPosition = '';\n        this._xOffset = '';\n        this._width = '';\n        this._height = '';\n        this._isDisposed = false;\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: OverlayContainer }] });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations');\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Overlay, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }, {\n                    type: Optional\n                }] }] });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n    },\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkOverlayOrigin, isStandalone: true, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n    get disposeOnNavigation() {\n        return this._disposeOnNavigation;\n    }\n    set disposeOnNavigation(value) {\n        this._disposeOnNavigation = value;\n    }\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        this._disposeOnNavigation = false;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Whether or not the overlay should attach a backdrop. */\n        this.hasBackdrop = false;\n        /** Whether or not the overlay should be locked when scrolling. */\n        this.lockPosition = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this.flexibleDimensions = false;\n        /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n        this.growAfterOpen = false;\n        /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n        this.push = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n            disposeOnNavigation: this.disposeOnNavigation,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkConnectedOverlay, isStandalone: true, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute], push: [\"cdkConnectedOverlayPush\", \"push\", booleanAttribute], disposeOnNavigation: [\"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                }] }, { type: i5.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayHasBackdrop', transform: booleanAttribute }]\n            }], lockPosition: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayLockPosition', transform: booleanAttribute }]\n            }], flexibleDimensions: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayFlexibleDimensions', transform: booleanAttribute }]\n            }], growAfterOpen: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayGrowAfterOpen', transform: booleanAttribute }]\n            }], push: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayPush', transform: booleanAttribute }]\n            }], disposeOnNavigation: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayDisposeOnNavigation', transform: booleanAttribute }]\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nclass OverlayModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayModule, imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Injector, Directive, EventEmitter, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver, projectableNodes) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.projectableNodes = projectableNodes;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef, \n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef, \n    /** Contextual data to be passed in to the embedded view. */\n    context, \n    /** The injector to use for the embedded view. */\n    injector) {\n        super();\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n        this.injector = injector;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _componentFactoryResolver Used to resolve the component factory.\n     *   Only required when attaching component portals.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     * @param _document Reference to the document. Used when attaching a DOM portal. Will eventually\n     *   become a required parameter.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = (portal.componentFactoryResolver || this._componentFactoryResolver);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !resolver) {\n            throw Error('Cannot attach component portal to outlet without a ComponentFactoryResolver.');\n        }\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector, portal.projectableNodes || undefined);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector || Injector.NULL);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (this._appRef.viewCount > 0) {\n                    this._appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkPortal, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkPortal, isStandalone: true, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }] });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: TemplatePortalDirective, isStandalone: true, selector: \"[cdk-portal], [portal]\", providers: [\n            {\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective,\n            },\n        ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedRef = this._attachedPortal = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector, portal.projectableNodes || undefined);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkPortalOutlet, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkPortalOutlet, isStandalone: true, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                    inputs: ['portal: cdkPortalOutlet'],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: PortalHostDirective, isStandalone: true, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n            {\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective,\n            },\n        ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: ['portal: cdkPortalHost'],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }] });\nclass PortalModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalModule, imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkFixedSizeVirtualScroll, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    standalone: true,\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollDispatcher, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll')\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkScrollable, isStandalone: true, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ViewportRuler, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ViewportRuler, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkVirtualScrollable, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        this.scrollable = scrollable;\n        this._platform = inject(Platform);\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        /**\n         * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n         * will be removed.\n         */\n        this.appendOnly = false;\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER), \n            // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n            // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n            // to unsubscribe here just in case.\n            takeUntil(this._destroyed))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: VIRTUAL_SCROLL_STRATEGY, optional: true }, { token: i2.Directionality, optional: true }, { token: ScrollDispatcher }, { token: ViewportRuler }, { token: VIRTUAL_SCROLLABLE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkVirtualScrollViewport, isStandalone: true, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute] }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n            },\n        ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLL_STRATEGY]\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: ScrollDispatcher }, { type: ViewportRuler }, { type: CdkVirtualScrollable, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLLABLE]\n                }] }], propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges.pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualForOf, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: _VIEW_REPEATER_STRATEGY }, { token: CdkVirtualScrollViewport, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkVirtualForOf, isStandalone: true, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: i2$1._RecycleViewRepeaterStrategy, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.NgZone }], propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkVirtualScrollableElement, isStandalone: true, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor(scrollDispatcher, ngZone, dir) {\n        super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [{ token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: CdkVirtualScrollableWindow, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\nclass CdkScrollableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollableModule, imports: [CdkScrollable], exports: [CdkScrollable] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollableModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    imports: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport,\n            CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollViewport,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollingModule, imports: [BidiModule,\n            CdkScrollableModule, BidiModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkVirtualScrollViewport,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n"],"names":["ConnectableObservable","isObservable","of","Subject","i0","InjectionToken","Injectable","DataSource","isDataSource","value","connect","ArrayDataSource","constructor","_data","disconnect","_ViewRepeaterOperation","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","applyChanges","changes","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","context","index","INSERTED","remove","REMOVED","get","move","MOVED","detach","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","REPLACED","_detachAndCacheView","_moveView","destroy","cachedView","_insertViewFromCache","$implicit","undefined","viewArgs","detachedView","_maybeCacheView","length","push","indexOf","pop","insert","SelectionModel","selected","_selected","Array","from","_selection","values","_multiple","initiallySelectedValues","_emitChanges","compareWith","Set","_deselectedToEmit","_selectedToEmit","changed","forEach","_markSelected","select","_verifyValueAssignment","_hasQueuedChanges","_emitChangeEvent","deselect","_unmarkSelected","setSelection","oldValues","newSelectedSet","filter","has","_getConcreteValue","toggle","isSelected","clear","flushEvent","_unmarkAll","isEmpty","size","hasValue","sort","predicate","isMultipleSelection","next","source","added","removed","add","delete","ngDevMode","getMultipleValuesInSingleSelectionError","inputValue","selection","selectedValue","Error","UniqueSelectionDispatcher","_listeners","notify","id","name","listener","listen","registered","ngOnDestroy","_","ɵfac","UniqueSelectionDispatcher_Factory","t","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ɵsetClassMetadata","type","args","i1","ScrollingModule","CdkScrollable","ScrollDispatcher","ViewportRuler","i6","DOCUMENT","Inject","Optional","ElementRef","ApplicationRef","ANIMATION_MODULE_TYPE","inject","Directive","EventEmitter","booleanAttribute","Input","Output","NgModule","coerceCssPixelValue","coerceArray","i1$1","supportsScrollBehavior","_getEventTarget","_isTestEnvironment","take","takeUntil","takeWhile","i5","BidiModule","DomPortalOutlet","TemplatePortal","PortalModule","Subscription","merge","ESCAPE","hasModifierKey","scrollBehaviorSupported","BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","attach","enable","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","disable","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","_overlayRef","hasAttached","run","overlayRef","stream","scrolled","pipe","scrollable","overlayElement","getElementRef","nativeElement","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ScrollStrategyOptions_Factory","ɵɵinject","NgZone","decorators","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","splice","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_keydownListener","event","overlays","i","_keydownEvents","observers","keydownEvents","_isAttached","runOutsideAngular","addEventListener","removeEventListener","OverlayKeyboardDispatcher_Factory","OverlayOutsideClickDispatcher","_platform","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","target","slice","_outsidePointerEvents","outsidePointerEvents","_addEventListeners","IOS","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","Platform","OverlayContainer","_containerElement","getContainerElement","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","container","createElement","setAttribute","appendChild","OverlayContainer_Factory","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_backdropTransitionendHandler","_disposeBackdrop","_scrollStrategy","_positionStrategy","positionStrategy","backdropElement","hostElement","portal","parentElement","_previousHostParent","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","onDestroy","Promise","resolve","then","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","complete","backdropClick","attachments","detachments","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","dir","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","nextSibling","parentNode","backdropToDetach","_backdropTimeout","setTimeout","cssClasses","isAdd","c","subscription","children","backdrop","clearTimeout","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","positions","_preferredPositions","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","_containerRect","originRect","viewportRect","containerRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","cssClass","Element","destination","hasOwnProperty","input","units","split","parseFloat","clientRect","floor","STANDARD_DROPDOWN_BELOW_POSITIONS","STANDARD_DROPDOWN_ADJACENT_POSITIONS","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","end","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","parent","OverlayPositionBuilder","global","flexibleConnectedTo","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","_animationsModuleType","create","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","Overlay_Factory","ComponentFactoryResolver","Injector","Directionality","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","CdkOverlayOrigin_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","exportAs","standalone","CdkConnectedOverlay","_position","_updatePositionStrategy","_disposeOnNavigation","_overlay","scrollStrategyFactory","_dir","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","lockPosition","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","ngOnChanges","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","emit","keyCode","preventDefault","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","CdkConnectedOverlay_Factory","TemplateRef","ViewContainerRef","inputs","ɵɵInputFlags","None","HasDecoratorInputTransform","outputs","features","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","alias","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","OverlayModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","providers","imports","exports","FullscreenOverlayContainer","platform","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","_attachedHost","setAttachedHost","ComponentPortal","component","injector","componentFactoryResolver","projectableNodes","DomPortal","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","_invokeDisposeFn","setDisposeFn","_disposeFn","BasePortalHost","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","NULL","attachView","hostView","viewCount","detachView","_getComponentRootNode","viewContainer","viewRef","rootNodes","rootNode","detectChanges","DomPortalHost","CdkPortal","CdkPortal_Factory","ɵɵInheritDefinitionFeature","TemplatePortalDirective","ɵTemplatePortalDirective_BaseFactory","TemplatePortalDirective_Factory","ɵɵgetInheritedFactory","ɵɵProvidersFeature","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","attachedRef","_attachedRef","ngOnInit","ref","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","PortalHostDirective","ɵPortalHostDirective_BaseFactory","PortalHostDirective_Factory","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","coerceNumberProperty","coerceElement","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","SkipSelf","Observable","fromEvent","animationFrameScheduler","asapScheduler","distinctUntilChanged","auditTime","startWith","pairwise","switchMap","shareReplay","getRtlScrollAxisType","RtlScrollAxisType","i2","i2$1","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","_scrolled","_globalSubscription","_scrolledCount","Map","register","set","elementScrolled","deregister","scrollableReference","auditTimeInMs","observer","_addGlobalListener","_removeGlobalListener","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","_getWindow","defaultView","scrollableElement","ScrollDispatcher_Factory","scrollDispatcher","ngZone","_destroyed","_elementScrolled","scrollTo","options","el","NORMAL","INVERTED","NEGATED","_applyScrollToOptions","scrollTop","scrollLeft","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","_change","_changeListener","_viewportSize","_updateViewportSize","output","getViewportRect","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","VIRTUAL_SCROLLABLE","CdkVirtualScrollable","measureViewportSize","orientation","viewportEl","CdkVirtualScrollable_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_orientation","_calculateSpacerSize","_changeDetectorRef","viewportRuler","_detachedSubject","_renderedRangeSubject","appendOnly","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","_doChangeDetection","measureBoundingClientRectWithScrollOffset","range","getOffsetToRenderedContentStart","to","isHorizontal","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","_from","measureViewportOffset","fromRect","scrollerClientRect","viewportClientRect","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","viewQuery","CdkVirtualScrollViewport_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","CdkVirtualScrollViewport_HostBindings","ɵɵclassProp","virtualScrollable","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","CdkVirtualScrollViewport_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵstyleProp","encapsulation","changeDetection","OnPush","static","getOffset","node","rect","CdkVirtualForOf","cdkVirtualForOf","_cdkVirtualForOf","_dataSourceChanges","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","_needsUpdate","item","cdkVirtualForTemplate","_template","cdkVirtualForTemplateCacheSize","_viewRepeater","_differs","viewChange","prev","cur","_changeDataSource","_differ","_onRenderedDataChange","renderedStartIndex","rangeLen","firstNode","lastNode","ngDoCheck","diff","_renderedItems","_updateContext","_applyChanges","find","oldDs","newDs","count","_updateComputedContextProperties","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","CdkVirtualForOf_Factory","IterableDiffers","useClass","CdkVirtualScrollableElement","CdkVirtualScrollableElement_Factory","CdkVirtualScrollableWindow","CdkVirtualScrollableWindow_Factory","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}