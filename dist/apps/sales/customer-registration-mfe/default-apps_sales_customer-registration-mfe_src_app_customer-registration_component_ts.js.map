{"version":3,"file":"default-apps_sales_customer-registration-mfe_src_app_customer-registration_component_ts.js","mappings":"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","sources":["./apps/sales/customer-registration-mfe/src/app/constants/customer-registration.constants.ts","./apps/sales/customer-registration-mfe/src/app/constants/step.constants.ts","./apps/sales/customer-registration-mfe/src/app/customer-registration.component.ts","./apps/sales/customer-registration-mfe/src/app/customer-registration.component.html","./node_modules/ngx-cookie-service/fesm2022/ngx-cookie-service.mjs"],"sourcesContent":["export class CustomerRegistrationConstants {\n  static MESSAGE_GROUP = 'customer-registration';\n  static IDP_TYPE_ITS_ME = 'itsme';\n  static IDP_TYPE_EID = 'eid';\n  static IDP_PARAM = 'idp';\n}\n","import { BusinessIdentityDetailsComponent } from '@sales/customer-registration/feat-business-identity-details';\nimport { ComponentStep } from '@sales/shared/data-access';\nimport { PersonalDetailsComponent } from '@sales/customer-registration/feat-personal-details';\nimport { IdentityDetailsComponent } from '@sales/customer-registration/feat-identity-details';\nimport { AddressIdentityComponent } from '@sales/customer-registration/feat-address-identity';\n\nexport const SalesStepsForResidential: ComponentStep[] = [\n  {\n    key: 'personal',\n    component: PersonalDetailsComponent,\n  },\n  {\n    key: 'identity',\n    component: IdentityDetailsComponent,\n  },\n  {\n    key: 'address',\n    component: AddressIdentityComponent,\n  },\n];\n\nexport const SalesStepsForBusiness: ComponentStep[] = [\n  {\n    key: 'personal',\n    component: PersonalDetailsComponent,\n  },\n  {\n    key: 'business-identity',\n    component: BusinessIdentityDetailsComponent,\n  },\n];\n","import { AsyncPipe, NgIf } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport {\n  AuthorConfiguration,\n  AuthorConfigurationFacade,\n  CustomerRegistrationNgrxModule,\n} from '@sales/customer-registration/data-access';\nimport { StepFacade, StepsNgrxModule } from '@sales/shared/data-access';\nimport { SalesStepperComponent } from '@sales/shared/feature-sales-stepper';\nimport { MessagesModule } from '@telenet/ng-lib-message';\nimport { LoaderModule } from '@telenet/ng-lib-page';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CustomerRegistrationConstants } from './constants/customer-registration.constants';\nimport { SalesStepsForBusiness, SalesStepsForResidential } from './constants/step.constants';\n\n@UntilDestroy()\n@Component({\n  selector: 'tg-sales-customer-registration',\n  templateUrl: './customer-registration.component.html',\n  imports: [\n    LoaderModule,\n    MessagesModule,\n    StepsNgrxModule,\n    CustomerRegistrationNgrxModule,\n    NgIf,\n    SalesStepperComponent,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\nexport class CustomerRegistrationComponent implements OnInit {\n  @Input() isHidePageTitle: string;\n  @Input() privacyPolicyUrl: string;\n  @Input() marketingUrl: string;\n  @Input() pointOfSalesUrl: string;\n  @Input() requestHelpUrl: string;\n  @Input() componentInstanceID: string;\n  @Input() showSalesContactNumber: boolean;\n  @Input() enablePID: boolean;\n  @Input() allowAnyNavsForFixedProducts: boolean;\n  @Input() enableMask: boolean;\n  @Input() enableLoader: boolean;\n  @Input() pageType: string;\n\n  componentSteps = SalesStepsForResidential;\n  showNavigationBar = this.stepFacade.showNavigation$;\n\n  constructor(\n    private readonly authorConfigurationFacade: AuthorConfigurationFacade,\n    private readonly cookieService: CookieService,\n    private readonly stepFacade: StepFacade\n  ) {}\n\n  public readonly messageGroup = CustomerRegistrationConstants.MESSAGE_GROUP;\n\n  private _loaded = false;\n\n  protected isLoaded(): boolean {\n    return this._loaded;\n  }\n\n  ngOnInit(): void {\n    this.authorConfigurationFacade.setBrandFromUrl();\n    this.authorConfigurationFacade.setCustomerCategory();\n    const authorConfiguration = {\n      privacyPolicyUrl: this.privacyPolicyUrl,\n      showSalesContactNumber: this.showSalesContactNumber,\n      isPIDEnabled: this.enablePID,\n      marketingUrl: this.marketingUrl,\n    } as AuthorConfiguration;\n\n    this.authorConfigurationFacade.setAuthorConfiguration(authorConfiguration);\n    const idpParam = this.cookieService.get(CustomerRegistrationConstants.IDP_PARAM);\n    if (\n      CustomerRegistrationConstants.IDP_TYPE_ITS_ME === idpParam ||\n      CustomerRegistrationConstants.IDP_TYPE_EID === idpParam\n    ) {\n      console.log('itsme/eid flow');\n    }\n    this.componentSteps = this.authorConfigurationFacade.isResidential()\n      ? SalesStepsForResidential\n      : SalesStepsForBusiness;\n    const stepKeys = this.componentSteps.map((step) => step.key);\n    this.stepFacade.setStepConfig({ steps: stepKeys });\n    this._loaded = true;\n  }\n}\n","<div class=\"py--m col-lg-8 col-md-9 col-12 m--auto\">\n  <app-message-flow [messageGroupName]=\"messageGroup\"></app-message-flow>\n</div>\n<app-loader\n  [pageType]=\"pageType\"\n  [enableLoader]=\"enableLoader\"\n  [enableMask]=\"enableMask\"\n  [startByDefault]=\"false\"></app-loader>\n<ng-container *ngIf=\"isLoaded()\">\n  <div>\n    <tg-sales-stepper\n      [showNavigation]=\"(showNavigationBar | async) ?? undefined\"\n      [steps]=\"componentSteps\"></tg-sales-stepper>\n  </div>\n</ng-container>\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\n// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\nclass CookieService {\n    constructor(document, \n    // Get the `PLATFORM_ID` so we can check if we're in a browser.\n    platformId) {\n        this.document = document;\n        this.platformId = platformId;\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * Get cookie Regular Expression\n     *\n     * @param name Cookie name\n     * @returns property RegExp\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    static getCookieRegExp(name) {\n        const escapedName = name.replace(/([\\[\\]{}()|=;+?,.*^$])/gi, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    }\n    /**\n     * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n     *\n     * @param encodedURIComponent A value representing an encoded URI component.\n     *\n     * @returns The unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    static safeDecodeURIComponent(encodedURIComponent) {\n        try {\n            return decodeURIComponent(encodedURIComponent);\n        }\n        catch {\n            // probably it is not uri encoded. return as is\n            return encodedURIComponent;\n        }\n    }\n    /**\n     * Return `true` if {@link Document} is accessible, otherwise return `false`\n     *\n     * @param name Cookie name\n     * @returns boolean - whether cookie with specified name exists\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    check(name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        const regExp = CookieService.getCookieRegExp(name);\n        return regExp.test(this.document.cookie);\n    }\n    /**\n     * Get cookies by name\n     *\n     * @param name Cookie name\n     * @returns property value\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    get(name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            const regExp = CookieService.getCookieRegExp(name);\n            const result = regExp.exec(this.document.cookie);\n            return result[1] ? CookieService.safeDecodeURIComponent(result[1]) : '';\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * Get all cookies in JSON format\n     *\n     * @returns all the cookies in json\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    getAll() {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        const cookies = {};\n        const document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            document.cookie.split(';').forEach((currentCookie) => {\n                const [cookieName, cookieValue] = currentCookie.split('=');\n                cookies[CookieService.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = CookieService.safeDecodeURIComponent(cookieValue);\n            });\n        }\n        return cookies;\n    }\n    set(name, value, expiresOrOptions, path, domain, secure, sameSite) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        if (typeof expiresOrOptions === 'number' || expiresOrOptions instanceof Date || path || domain || secure || sameSite) {\n            const optionsBody = {\n                expires: expiresOrOptions,\n                path,\n                domain,\n                secure,\n                sameSite: sameSite ? sameSite : 'Lax',\n            };\n            this.set(name, value, optionsBody);\n            return;\n        }\n        let cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        const options = expiresOrOptions ? expiresOrOptions : {};\n        if (options.expires) {\n            if (typeof options.expires === 'number') {\n                const dateExpires = new Date(new Date().getTime() + options.expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + options.expires.toUTCString() + ';';\n            }\n        }\n        if (options.path) {\n            cookieString += 'path=' + options.path + ';';\n        }\n        if (options.domain) {\n            cookieString += 'domain=' + options.domain + ';';\n        }\n        if (options.secure === false && options.sameSite === 'None') {\n            options.secure = true;\n            console.warn(`[ngx-cookie-service] Cookie ${name} was forced with secure flag because sameSite=None.` +\n                `More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`);\n        }\n        if (options.secure) {\n            cookieString += 'secure;';\n        }\n        if (!options.sameSite) {\n            options.sameSite = 'Lax';\n        }\n        cookieString += 'sameSite=' + options.sameSite + ';';\n        this.document.cookie = cookieString;\n    }\n    /**\n     * Delete cookie by name\n     *\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     * @param secure Cookie secure flag\n     * @param sameSite Cookie sameSite flag - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    delete(name, path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const expiresDate = new Date('Thu, 01 Jan 1970 00:00:01 GMT');\n        this.set(name, '', { expires: expiresDate, path, domain, secure, sameSite });\n    }\n    /**\n     * Delete all cookies\n     *\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     * @param secure Is the Cookie secure\n     * @param sameSite Is the cookie same site\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    deleteAll(path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const cookies = this.getAll();\n        for (const cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain, secure, sameSite);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: CookieService, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: CookieService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: CookieService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\n/*\n * Public API Surface of ngx-cookie-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CookieService };\n"],"names":["CustomerRegistrationConstants","_","MESSAGE_GROUP","_2","IDP_TYPE_ITS_ME","_3","IDP_TYPE_EID","_4","IDP_PARAM","BusinessIdentityDetailsComponent","PersonalDetailsComponent","IdentityDetailsComponent","AddressIdentityComponent","SalesStepsForResidential","key","component","SalesStepsForBusiness","AsyncPipe","NgIf","UntilDestroy","AuthorConfigurationFacade","CustomerRegistrationNgrxModule","StepFacade","StepsNgrxModule","SalesStepperComponent","MessagesModule","LoaderModule","CookieService","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","tmp_0_0","ɵɵpipeBind1","ctx_r0","showNavigationBar","undefined","componentSteps","CustomerRegistrationComponent","constructor","authorConfigurationFacade","cookieService","stepFacade","showNavigation$","messageGroup","_loaded","isLoaded","ngOnInit","setBrandFromUrl","setCustomerCategory","authorConfiguration","privacyPolicyUrl","showSalesContactNumber","isPIDEnabled","enablePID","marketingUrl","setAuthorConfiguration","idpParam","get","console","log","isResidential","stepKeys","map","step","setStepConfig","steps","ɵɵdirectiveInject","i1","i2","i3","selectors","inputs","isHidePageTitle","pointOfSalesUrl","requestHelpUrl","componentInstanceID","allowAnyNavsForFixedProducts","enableMask","enableLoader","pageType","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CustomerRegistrationComponent_Template","rf","ctx","ɵɵtemplate","CustomerRegistrationComponent_ng_container_3_Template","i4","LoaderComponent","i5","MessageFlowComponent","encapsulation","__decorate","PLATFORM_ID","Injectable","Inject","isPlatformBrowser","DOCUMENT","document","platformId","documentIsAccessible","getCookieRegExp","name","escapedName","replace","RegExp","safeDecodeURIComponent","encodedURIComponent","decodeURIComponent","check","encodeURIComponent","regExp","test","cookie","result","exec","getAll","cookies","split","forEach","currentCookie","cookieName","cookieValue","set","value","expiresOrOptions","path","domain","secure","sameSite","Date","optionsBody","expires","cookieString","options","dateExpires","getTime","toUTCString","warn","delete","expiresDate","deleteAll","hasOwnProperty","ɵfac","CookieService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","Document","decorators"],"sourceRoot":"webpack:///","x_google_ignoreList":[4]}