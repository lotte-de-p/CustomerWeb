{"version":3,"file":"default-node_modules_angular_cdk_fesm2022_bidi_mjs-node_modules_angular_cdk_fesm2022_observers_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/bidi.mjs","./node_modules/@angular/cdk/fesm2022/observers.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Directionality, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }] });\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                    standalone: true,\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BidiModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, booleanAttribute, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ContentObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: MutationObserverFactory }] });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.1.0-next.5\", type: CdkObserveContent, isStandalone: true, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\", booleanAttribute], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkObserveContentDisabled', transform: booleanAttribute }]\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ObserversModule, imports: [CdkObserveContent], exports: [CdkObserveContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkObserveContent],\n                    exports: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n"],"names":["i0","InjectionToken","inject","EventEmitter","Injectable","Optional","Inject","Directive","Output","Input","NgModule","DOCUMENT","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","value","toLowerCase","navigator","language","test","Directionality","constructor","_document","change","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","complete","_","ɵfac","Directionality_Factory","t","ɵɵinject","_2","ɵprov","ɵɵdefineInjectable","token","ngDevMode","ɵsetClassMetadata","type","args","undefined","decorators","Dir","_dir","_isInitialized","previousValue","_rawDir","emit","ngAfterContentInit","Dir_Factory","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","inputs","outputs","exportAs","standalone","features","ɵɵProvidersFeature","provide","useExisting","selector","providers","host","BidiModule","BidiModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","coerceElement","coerceNumberProperty","booleanAttribute","Observable","Subject","debounceTime","MutationObserverFactory","create","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","Map","forEach","element","_cleanupObserver","observe","elementOrRef","observer","stream","_observeElement","subscription","subscribe","unsubscribe","_unobserveElement","has","mutations","next","characterData","childList","subtree","set","count","get","disconnect","delete","ContentObserver_Factory","CdkObserveContent","disabled","_disabled","_unsubscribe","_subscribe","debounce","_debounce","_contentObserver","_elementRef","_ngZone","event","_currentSubscription","runOutsideAngular","pipe","CdkObserveContent_Factory","ɵɵdirectiveInject","ElementRef","NgZone","ɵɵInputFlags","HasDecoratorInputTransform","ɵɵInputTransformsFeature","alias","transform","ObserversModule","ObserversModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}