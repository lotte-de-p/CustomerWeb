{"version":3,"file":"common.js","mappings":"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","sources":["./libs/shared/config/src/index.ts","./libs/shared/config/src/lib/config/app-config.interface.ts","./libs/shared/config/src/lib/config/app.config.ts","./libs/shared/config/src/lib/config/config.component.ts","./libs/shared/config/src/lib/config/config.component.html","./libs/shared/config/src/lib/config/config.constants.ts","./libs/shared/config/src/lib/config/config.module.ts","./libs/shared/config/src/lib/config/config.service.ts","./libs/shared/config/src/lib/config/index.ts","./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"],"sourcesContent":["export * from './lib/config';\n","export interface AppConfigInterface {\n  MESSAGE_GROUP: string;\n}\n","import { InjectionToken } from '@angular/core';\nimport { AppConfigInterface } from './app-config.interface';\n\nexport const APP_CONFIG = new InjectionToken<AppConfigInterface>('app.config');\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { ConfigService } from './config.service';\n\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfigComponent implements OnInit {\n  public static webcomponentSelector = 'tg-config';\n\n  @Input() ocapiUrl?: string;\n\n  @Input() openidAuthUrl?: string;\n  @Input() ocapiClientId?: string;\n  @Input() openidClientId?: string;\n  @Input() authProvider?: string;\n\n  @Input() openidUrl?: string;\n  @Input() oauthCallbackUrl?: string;\n  @Input() phpEshopUrl?: string;\n  @Input() omapiQueryUrl?: string;\n  @Input() omapiUrl?: string;\n  @Input() gatewayUrl?: string;\n  @Input() gsaUrl?: string;\n  @Input() sofyUrl?: string;\n  @Input() isAuthorMode?: string;\n  @Input() baseAcSystemsUrl?: string;\n  @Input() kbcPostMessageReceiverOriginUrl?: string;\n  @Input() recaptchaApiUrl?: string;\n  @Input() recaptchaSiteKey?: string;\n  @Input() recaptchaV3SiteKey?: string;\n\n  @Input() searchIndexParameter?: string;\n  @Input() searchApiUrl?: string;\n  @Input() productFinderUrl?: string;\n\n  constructor(private readonly configService: ConfigService) {}\n\n  ngOnInit(): void {\n    this.configService.addConfig({\n      'ocapi-url': this.ocapiUrl,\n\n      'openid-auth-url': this.openidAuthUrl,\n      'ocapi-client-id': this.ocapiClientId,\n      'openid-client-id': this.openidClientId,\n      'auth-provider': this.authProvider,\n\n      'openid-url': this.openidUrl,\n      'oauth-callback-url': this.oauthCallbackUrl,\n      'php-eshop-url': this.phpEshopUrl,\n      'omapi-url': this.omapiUrl,\n      'omapi-query-url': this.omapiQueryUrl,\n      'gateway-url': this.gatewayUrl,\n      'gsa-url': this.gsaUrl,\n      'sofy-url': this.sofyUrl,\n      'is-author-mode': this.isAuthorMode,\n      'base-ac-systems-url': this.baseAcSystemsUrl,\n      'kbc-post-message-receiver-origin-url': this.kbcPostMessageReceiverOriginUrl,\n      'recaptcha-api-url': this.recaptchaApiUrl,\n      'recaptcha-site-key': this.recaptchaSiteKey,\n      'recaptcha-v3-site-key': this.recaptchaV3SiteKey,\n      'search-index-parameter': this.searchIndexParameter,\n      'search-api-url': this.searchApiUrl,\n      'product-finder-url': this.productFinderUrl,\n    });\n  }\n}\n","<div></div>\n","export class ConfigConstants {\n  public static MESSAGE_GROUP = 'message-group';\n  public static OCAPI_URl = 'ocapi-url';\n  public static OMAPI_URL = 'omapi-url';\n  public static OMAPI_QUERY_URL = 'omapi-query-url';\n  public static OPENID_URL = 'openid-url';\n  public static OAUTH_CALLBACK_URL = 'oauth-callback-url';\n  public static PHP_ESHOP_URL = 'php-eshop-url';\n  public static OCAPI_QUERY_URL = 'ocapi-query-url';\n  public static OCAPI_SOCKET_URL = 'ocapi-socket-url';\n  public static GATEWAY_URL = 'gateway-url';\n  public static GSA_URL = 'gsa-url';\n  public static SOFY_URL = 'sofy-url';\n  public static IS_AUTHOR_MODE = 'is-author-mode';\n  public static BASE_AC_SYSTEMS_URL = 'base-ac-systems-url';\n  public static POST_MESSAGE_RECEIVER_ORIGIN_URL = 'kbc-post-message-receiver-origin-url';\n  public static RECAPTCHA_API_URL = 'recaptcha-api-url';\n  public static RECAPTCHA_SITE_KEY = 'recaptcha-site-key';\n  public static RECAPTCHA_V3_SITE_KEY = 'recaptcha-v3-site-key';\n  public static SEARCH_INDEX_PARAMETER = 'search-index-parameter';\n  public static SEARCH_API_URL = 'search-api-url';\n  public static PRODUCT_FINDER_URL = 'product-finder-url';\n\n  public static OPENID_AUTH_URL = 'openid-auth-url';\n  public static OPENID_CLIENT_ID = 'openid-client-id';\n  public static OCAPI_CLIENT_ID = 'ocapi-client-id';\n  public static AUTH_PROVIDER = 'auth-provider';\n}\n","import { NgModule } from '@angular/core';\nimport { ConfigComponent } from './config.component';\n\n@NgModule({\n  imports: [],\n  declarations: [ConfigComponent],\n  exports: [ConfigComponent],\n})\nexport class ConfigModule {}\n","// @ts-nocheck\nimport { Inject, Injectable } from '@angular/core';\nimport { Log, LogFactory } from '@telenet/ng-lib-shared';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigService {\n  private static readonly LOG: Log = LogFactory.createLogger(ConfigService);\n  private readonly defaultConfig: Config = { remoteHosts: {} };\n\n  constructor(@Inject('Window') readonly window: Window) {\n    this.window['Config'] = window['Config'] ?? this.defaultConfig;\n    ConfigService.LOG.logDebug('ConfigService Instantiating ' + new Date().toDateString(), this.window['Config']);\n  }\n\n  getAllConfig(): Config {\n    return this.window['Config'];\n  }\n\n  getConfig(key: string): string {\n    const configuration: Record<string, string> = this.window['Config'] || {};\n    ConfigService.LOG.logDebug(`ConfigService GetConfig: ${key} [${configuration[key]}]`);\n    return configuration[key] ?? '';\n  }\n\n  addRemoteHostConfig(moduleId: string, remoteModuleConfigOptions: Partial<RemoteHostConfig> | unknown): void {\n    if (this.window['Config']?.['remoteHosts']) {\n      this.window['Config']['remoteHosts'][moduleId] = remoteModuleConfigOptions;\n    }\n  }\n\n  addConfig(config: Config): void {\n    this.window['Config'] = { ...this.window['Config'], ...config };\n  }\n\n  getRemoteHostConfig(moduleId: string): Partial<RemoteHostConfig> {\n    if (this.window['Config']?.['remoteHosts']) {\n      return this.window['Config']['remoteHosts'][moduleId];\n    }\n    return undefined;\n  }\n}\n\nexport type Config = Record<string, string | Record<string, string> | boolean | undefined>;\n\nexport interface RemoteHostConfig {\n  remoteHost: string;\n  exposedModule: string;\n  moduleId: string;\n  module: string;\n  remoteEntryPath: string;\n  exposedEsModule: string;\n}\n","export * from './app.config';\nexport * from './app-config.interface';\nexport * from './config.constants';\nexport * from './config.module';\nexport * from './config.service';\nexport * from './config.component';\n","/**\n * @license Angular v17.1.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { assertInInjectionContext, inject, DestroyRef, Injector, effect, untracked, assertNotInReactiveContext, signal, ɵRuntimeError, computed } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Operator which completes the Observable when the calling context (component, directive, service,\n * etc) is destroyed.\n *\n * @param destroyRef optionally, the `DestroyRef` representing the current context. This can be\n *     passed explicitly to use `takeUntilDestroyed` outside of an [injection\n * context](guide/dependency-injection-context). Otherwise, the current `DestroyRef` is injected.\n *\n * @developerPreview\n */\nfunction takeUntilDestroyed(destroyRef) {\n    if (!destroyRef) {\n        assertInInjectionContext(takeUntilDestroyed);\n        destroyRef = inject(DestroyRef);\n    }\n    const destroyed$ = new Observable(observer => {\n        const unregisterFn = destroyRef.onDestroy(observer.next.bind(observer));\n        return unregisterFn;\n    });\n    return (source) => {\n        return source.pipe(takeUntil(destroyed$));\n    };\n}\n\n/**\n * Exposes the value of an Angular `Signal` as an RxJS `Observable`.\n *\n * The signal's value will be propagated into the `Observable`'s subscribers using an `effect`.\n *\n * `toObservable` must be called in an injection context unless an injector is provided via options.\n *\n * @developerPreview\n */\nfunction toObservable(source, options) {\n    !options?.injector && assertInInjectionContext(toObservable);\n    const injector = options?.injector ?? inject(Injector);\n    const subject = new ReplaySubject(1);\n    const watcher = effect(() => {\n        let value;\n        try {\n            value = source();\n        }\n        catch (err) {\n            untracked(() => subject.error(err));\n            return;\n        }\n        untracked(() => subject.next(value));\n    }, { injector, manualCleanup: true });\n    injector.get(DestroyRef).onDestroy(() => {\n        watcher.destroy();\n        subject.complete();\n    });\n    return subject.asObservable();\n}\n\n/**\n * Get the current value of an `Observable` as a reactive `Signal`.\n *\n * `toSignal` returns a `Signal` which provides synchronous reactive access to values produced\n * by the given `Observable`, by subscribing to that `Observable`. The returned `Signal` will always\n * have the most recent value emitted by the subscription, and will throw an error if the\n * `Observable` errors.\n *\n * With `requireSync` set to `true`, `toSignal` will assert that the `Observable` produces a value\n * immediately upon subscription. No `initialValue` is needed in this case, and the returned signal\n * does not include an `undefined` type.\n *\n * By default, the subscription will be automatically cleaned up when the current [injection\n * context](/guide/dependency-injection-context) is destroyed. For example, when `toObservable` is\n * called during the construction of a component, the subscription will be cleaned up when the\n * component is destroyed. If an injection context is not available, an explicit `Injector` can be\n * passed instead.\n *\n * If the subscription should persist until the `Observable` itself completes, the `manualCleanup`\n * option can be specified instead, which disables the automatic subscription teardown. No injection\n * context is needed in this configuration as well.\n *\n * @developerPreview\n */\nfunction toSignal(source, options) {\n    ngDevMode &&\n        assertNotInReactiveContext(toSignal, 'Invoking `toSignal` causes new subscriptions every time. ' +\n            'Consider moving `toSignal` outside of the reactive context and read the signal value where needed.');\n    const requiresCleanup = !options?.manualCleanup;\n    requiresCleanup && !options?.injector && assertInInjectionContext(toSignal);\n    const cleanupRef = requiresCleanup ? options?.injector?.get(DestroyRef) ?? inject(DestroyRef) : null;\n    // Note: T is the Observable value type, and U is the initial value type. They don't have to be\n    // the same - the returned signal gives values of type `T`.\n    let state;\n    if (options?.requireSync) {\n        // Initially the signal is in a `NoValue` state.\n        state = signal({ kind: 0 /* StateKind.NoValue */ });\n    }\n    else {\n        // If an initial value was passed, use it. Otherwise, use `undefined` as the initial value.\n        state = signal({ kind: 1 /* StateKind.Value */, value: options?.initialValue });\n    }\n    // Note: This code cannot run inside a reactive context (see assertion above). If we'd support\n    // this, we would subscribe to the observable outside of the current reactive context, avoiding\n    // that side-effect signal reads/writes are attribute to the current consumer. The current\n    // consumer only needs to be notified when the `state` signal changes through the observable\n    // subscription. Additional context (related to async pipe):\n    // https://github.com/angular/angular/pull/50522.\n    const sub = source.subscribe({\n        next: value => state.set({ kind: 1 /* StateKind.Value */, value }),\n        error: error => {\n            if (options?.rejectErrors) {\n                // Kick the error back to RxJS. It will be caught and rethrown in a macrotask, which causes\n                // the error to end up as an uncaught exception.\n                throw error;\n            }\n            state.set({ kind: 2 /* StateKind.Error */, error });\n        },\n        // Completion of the Observable is meaningless to the signal. Signals don't have a concept of\n        // \"complete\".\n    });\n    if (ngDevMode && options?.requireSync && state().kind === 0 /* StateKind.NoValue */) {\n        throw new ɵRuntimeError(601 /* ɵRuntimeErrorCode.REQUIRE_SYNC_WITHOUT_SYNC_EMIT */, '`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.');\n    }\n    // Unsubscribe when the current context is destroyed, if requested.\n    cleanupRef?.onDestroy(sub.unsubscribe.bind(sub));\n    // The actual returned signal is a `computed` of the `State` signal, which maps the various states\n    // to either values or errors.\n    return computed(() => {\n        const current = state();\n        switch (current.kind) {\n            case 1 /* StateKind.Value */:\n                return current.value;\n            case 2 /* StateKind.Error */:\n                throw current.error;\n            case 0 /* StateKind.NoValue */:\n                // This shouldn't really happen because the error is thrown on creation.\n                // TODO(alxhub): use a RuntimeError when we finalize the error semantics\n                throw new ɵRuntimeError(601 /* ɵRuntimeErrorCode.REQUIRE_SYNC_WITHOUT_SYNC_EMIT */, '`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.');\n        }\n    });\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { takeUntilDestroyed, toObservable, toSignal };\n"],"names":["InjectionToken","APP_CONFIG","ConfigService","ConfigComponent","_","webcomponentSelector","constructor","configService","ngOnInit","addConfig","ocapiUrl","openidAuthUrl","ocapiClientId","openidClientId","authProvider","openidUrl","oauthCallbackUrl","phpEshopUrl","omapiUrl","omapiQueryUrl","gatewayUrl","gsaUrl","sofyUrl","isAuthorMode","baseAcSystemsUrl","kbcPostMessageReceiverOriginUrl","recaptchaApiUrl","recaptchaSiteKey","recaptchaV3SiteKey","searchIndexParameter","searchApiUrl","productFinderUrl","_2","i0","ɵɵdirectiveInject","i1","_3","selectors","inputs","decls","vars","template","ConfigComponent_Template","rf","ctx","ɵɵelement","ConfigConstants","MESSAGE_GROUP","OCAPI_URl","OMAPI_URL","_4","OMAPI_QUERY_URL","_5","OPENID_URL","_6","OAUTH_CALLBACK_URL","_7","PHP_ESHOP_URL","_8","OCAPI_QUERY_URL","_9","OCAPI_SOCKET_URL","_10","GATEWAY_URL","_11","GSA_URL","_12","SOFY_URL","_13","IS_AUTHOR_MODE","_14","BASE_AC_SYSTEMS_URL","_15","POST_MESSAGE_RECEIVER_ORIGIN_URL","_16","RECAPTCHA_API_URL","_17","RECAPTCHA_SITE_KEY","_18","RECAPTCHA_V3_SITE_KEY","_19","SEARCH_INDEX_PARAMETER","_20","SEARCH_API_URL","_21","PRODUCT_FINDER_URL","_22","OPENID_AUTH_URL","_23","OPENID_CLIENT_ID","_24","OCAPI_CLIENT_ID","_25","AUTH_PROVIDER","ConfigModule","declarations","exports","LogFactory","LOG","createLogger","window","defaultConfig","remoteHosts","logDebug","Date","toDateString","getAllConfig","getConfig","key","configuration","addRemoteHostConfig","moduleId","remoteModuleConfigOptions","config","getRemoteHostConfig","undefined","ɵɵinject","factory","ɵfac","providedIn","assertInInjectionContext","inject","DestroyRef","Injector","effect","untracked","assertNotInReactiveContext","signal","ɵRuntimeError","computed","Observable","ReplaySubject","takeUntil","takeUntilDestroyed","destroyRef","destroyed$","observer","unregisterFn","onDestroy","next","bind","source","pipe","toObservable","options","injector","subject","watcher","value","err","error","manualCleanup","get","destroy","complete","asObservable","toSignal","ngDevMode","requiresCleanup","cleanupRef","state","requireSync","kind","initialValue","sub","subscribe","set","rejectErrors","unsubscribe","current"],"sourceRoot":"webpack:///","x_google_ignoreList":[9]}