{"version":3,"file":"default-libs_sales_customer-registration_feat-address-identity_src_index_ts.js","mappings":"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","sources":["./libs/sales/customer-registration/feat-address-identity/src/index.ts","./libs/sales/customer-registration/feat-address-identity/src/lib/feat-address-identity/address-identity.component.ts","./libs/sales/customer-registration/feat-address-identity/src/lib/feat-address-identity/address-identity.component.html"],"sourcesContent":["export * from './lib/feat-address-identity/address-identity.component';\n","import { CommonModule } from '@angular/common';\nimport { Component, ViewChild } from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport {\n  Address,\n  AddressIdentityFacade,\n  AddressRequestInterface,\n  Municipality,\n} from '@sales/customer-registration/data-access';\nimport { StepComponent, StepFacade } from '@sales/shared/data-access';\nimport { Observable, debounceTime, distinctUntilChanged, of, take } from 'rxjs';\nimport { CustomerRegistrationTitleComponent } from 'sales/customer-registration/ui';\nimport { AddressFormComponent } from '../../../../ui/src/lib/address-form/address-form.component';\nimport { AddressToggleComponent } from '../../../../ui/src/lib/sales-address-toggle/address-toggle.component';\n\n@UntilDestroy()\n@Component({\n  selector: 'lib-sales-customer-registration-feat-address-identity',\n  standalone: true,\n  imports: [CommonModule, CustomerRegistrationTitleComponent, AddressToggleComponent, AddressFormComponent],\n  templateUrl: './address-identity.component.html',\n})\nexport class AddressIdentityComponent implements StepComponent {\n  currentStep = this.stepFacade.currentStepKey$;\n  locationSuggestion$: Observable<Municipality[]>;\n  streetSuggestion$: Observable<string[]> = of([]);\n  showInstallationAddress = false;\n  showBillingAddress = false;\n  searchCustomerResultExists$ = this.addressIdentityFacade.searchCustomerResultExists$;\n  address$ = this.addressIdentityFacade.addresses$;\n  subHouseNoSuggestions$ = this.addressIdentityFacade.subHouseNumbers$;\n  boxNoSuggestions$ = this.addressIdentityFacade.boxNumbers$;\n  @ViewChild('legalAddress') addressFormComponent: AddressFormComponent | undefined;\n  @ViewChild('installationAddress') installationAddressFormComponent: AddressFormComponent | undefined;\n  itsMeResponse$ = this.addressIdentityFacade.itsMeResponse$;\n  isInstallableProductExists$ = this.addressIdentityFacade.isInstallableProductExists$;\n\n  constructor(\n    private readonly stepFacade: StepFacade,\n    private readonly addressIdentityFacade: AddressIdentityFacade\n  ) {\n    this.locationSuggestion$ = this.addressIdentityFacade.getMunicipalities().pipe(take(1));\n  }\n\n  onNextStep(): Observable<boolean> {\n    const isValidLegalAddress = this.addressFormComponent?.validateForm();\n    const isValidInstallationAddress = this.showInstallationAddress\n      ? this.installationAddressFormComponent?.validateForm()\n      : true;\n    if (isValidLegalAddress && isValidInstallationAddress) {\n      this.addressIdentityFacade.performResidentialNavsCheck();\n      this.addressIdentityFacade.searchCustomer();\n      this.searchCustomerResultExists$.pipe(untilDestroyed(this)).subscribe((searchCustomerResultExists) => {\n        searchCustomerResultExists ? this.stepFacade.hideNavigationBar() : this.stepFacade.displayNavigationBar();\n      });\n      this.addressIdentityFacade.finalizeFlow();\n    }\n    return of(false);\n  }\n\n  toggleAddressVisibility(event: { checked: boolean; type: string }) {\n    if (event.type === 'installationAddress') {\n      this.showInstallationAddress = !event.checked;\n    }\n    if (event.type === 'billingAddress') {\n      this.showBillingAddress = event.checked;\n    }\n  }\n\n  updateStreets(postalCode: string) {\n    this.streetSuggestion$ = this.addressIdentityFacade.getStreets(postalCode);\n  }\n\n  saveAddressToState(address: AddressRequestInterface) {\n    this.addressIdentityFacade.loadAddress(address);\n    this.addressIdentityFacade.searchCustomer();\n    this.address$\n      .pipe(debounceTime(300), distinctUntilChanged(), untilDestroyed(this))\n      .subscribe((addresses: Address[]) => {\n        this.addressIdentityFacade.saveMatchedAddress(addresses, address);\n      });\n    this.searchCustomerResultExists$.pipe(untilDestroyed(this)).subscribe((searchCustomerResultExists) => {\n      searchCustomerResultExists ? this.stepFacade.hideNavigationBar() : this.stepFacade.displayNavigationBar();\n    });\n  }\n  updateSubHouse() {\n    this.address$.pipe(untilDestroyed(this)).subscribe((addresses) => {\n      if (addresses.length > 0) {\n        this.addressIdentityFacade.getSubHouseNumbers(addresses);\n      }\n    });\n  }\n  updateBox() {\n    this.address$.pipe(untilDestroyed(this)).subscribe((addresses) => {\n      if (addresses.length > 0) {\n        this.addressIdentityFacade.getBoxNumbers(addresses);\n      }\n    });\n  }\n}\n","<tg-sales-customer-registration-title [currentStep]=\"currentStep | async\"> </tg-sales-customer-registration-title>\n<!--\n<tg-sales-error-message *ngIf=\"showError$ | async\" [errorMessage]=\"'Error'\"></tg-sales-error-message>\n-->\n<div class=\"mb--xxxg pb--l py--n col-lg-8 col-md-9 col-12 m--auto\">\n  <div class=\"background-white col-12 m--auto p--xxxl--md p--xl\">\n    <div class=\"address-identity-section\">\n      <tg-sales-customer-registration-address-form\n        #legalAddress\n        [locationSuggestions]=\"locationSuggestion$ | async\"\n        [streetSuggestions]=\"streetSuggestion$ | async\"\n        [itsMeDetails]=\"itsMeResponse$ | async\"\n        (updateStreetsEmitter)=\"updateStreets($event)\"\n        (saveAddressEmitter)=\"saveAddressToState($event)\"\n        (updateSubHouseEmitter)=\"updateSubHouse()\"\n        [subHouseNoSuggestions]=\"subHouseNoSuggestions$ | async\"\n        [boxNoSuggestions]=\"boxNoSuggestions$ | async\"\n        (updateBoxEmitter)=\"updateBox()\"\n        [addressType]=\"'legalAddress'\">\n      </tg-sales-customer-registration-address-form>\n      @if ((isInstallableProductExists$ | async) === true) {\n        <tg-sales-customer-registration-address-toggle\n          (isChecked)=\"toggleAddressVisibility($event)\"\n          [showBillingAddressToggle]=\"false\"\n          [addressType]=\"'installationAddress'\"\n          [showInstallationAddressToggle]=\"true\"\n          [attr.data-cy]=\"'address-toggle-component'\"></tg-sales-customer-registration-address-toggle>\n        @defer (on viewport) {\n          @if (showInstallationAddress) {\n            <div class=\"mt--xl--md mt--l\">\n              <tg-sales-customer-registration-address-form\n                #installationAddress\n                [locationSuggestions]=\"locationSuggestion$ | async\"\n                [streetSuggestions]=\"streetSuggestion$ | async\"\n                (updateStreetsEmitter)=\"updateStreets($event)\"\n                (saveAddressEmitter)=\"saveAddressToState($event)\"\n                (updateSubHouseEmitter)=\"updateSubHouse()\"\n                [subHouseNoSuggestions]=\"subHouseNoSuggestions$ | async\"\n                [boxNoSuggestions]=\"boxNoSuggestions$ | async\"\n                (updateBoxEmitter)=\"updateBox()\"\n                [addressType]=\"'installationAddress'\">\n              </tg-sales-customer-registration-address-form>\n            </div>\n          }\n        } @placeholder {\n          <br />\n        }\n      }\n    </div>\n  </div>\n</div>\n"],"names":["CommonModule","UntilDestroy","untilDestroyed","AddressIdentityFacade","StepFacade","debounceTime","distinctUntilChanged","of","take","CustomerRegistrationTitleComponent","AddressFormComponent","AddressToggleComponent","i0","ɵɵelementStart","ɵɵlistener","AddressIdentityComponent_Conditional_12_Defer_1_Conditional_0_Template_tg_sales_customer_registration_address_form_updateStreetsEmitter_1_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","updateStreets","AddressIdentityComponent_Conditional_12_Defer_1_Conditional_0_Template_tg_sales_customer_registration_address_form_saveAddressEmitter_1_listener","ctx_r8","saveAddressToState","AddressIdentityComponent_Conditional_12_Defer_1_Conditional_0_Template_tg_sales_customer_registration_address_form_updateSubHouseEmitter_1_listener","ctx_r9","updateSubHouse","AddressIdentityComponent_Conditional_12_Defer_1_Conditional_0_Template_tg_sales_customer_registration_address_form_updateBoxEmitter_1_listener","ctx_r10","updateBox","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ctx_r4","locationSuggestion$","streetSuggestion$","subHouseNoSuggestions$","boxNoSuggestions$","ɵɵtemplate","AddressIdentityComponent_Conditional_12_Defer_1_Conditional_0_Template","ɵɵconditional","ctx_r2","showInstallationAddress","ɵɵelement","AddressIdentityComponent_Conditional_12_Template_tg_sales_customer_registration_address_toggle_isChecked_0_listener","_r12","ctx_r11","toggleAddressVisibility","AddressIdentityComponent_Conditional_12_Defer_1_Template","AddressIdentityComponent_Conditional_12_DeferPlaceholder_2_Template","ɵɵdefer","AddressIdentityComponent_Conditional_12_Defer_3_DepsFn","ɵɵdeferOnViewport","ɵɵattribute","AddressIdentityComponent","constructor","stepFacade","addressIdentityFacade","currentStep","currentStepKey$","showBillingAddress","searchCustomerResultExists$","address$","addresses$","subHouseNumbers$","boxNumbers$","itsMeResponse$","isInstallableProductExists$","getMunicipalities","pipe","onNextStep","isValidLegalAddress","addressFormComponent","validateForm","isValidInstallationAddress","installationAddressFormComponent","performResidentialNavsCheck","searchCustomer","subscribe","searchCustomerResultExists","hideNavigationBar","displayNavigationBar","finalizeFlow","event","type","checked","postalCode","getStreets","address","loadAddress","addresses","saveMatchedAddress","length","getSubHouseNumbers","getBoxNumbers","_","ɵɵdirectiveInject","i1","i2","_2","selectors","viewQuery","AddressIdentityComponent_Query","rf","ctx","AddressIdentityComponent_Template_tg_sales_customer_registration_address_form_updateStreetsEmitter_5_listener","AddressIdentityComponent_Template_tg_sales_customer_registration_address_form_saveAddressEmitter_5_listener","AddressIdentityComponent_Template_tg_sales_customer_registration_address_form_updateSubHouseEmitter_5_listener","AddressIdentityComponent_Template_tg_sales_customer_registration_address_form_updateBoxEmitter_5_listener","AddressIdentityComponent_Conditional_12_Template","i3","AsyncPipe","encapsulation","__decorate"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}