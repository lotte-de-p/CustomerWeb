{"version":3,"file":"default-libs_sales_customer-registration_feature-business-identity-details_src_index_ts.js","mappings":"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","sources":["./libs/sales/customer-registration/feature-business-identity-details/src/index.ts","./libs/sales/customer-registration/feature-business-identity-details/src/lib/feat-business-identity-details/business-identity-details.component.ts","./libs/sales/customer-registration/feature-business-identity-details/src/lib/feat-business-identity-details/business-identity-details.component.html"],"sourcesContent":["export * from './lib/feat-business-identity-details/business-identity-details.component';\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport {\n  Address,\n  AddressRequestInterface,\n  AuthorConfigurationFacade,\n  BusinessIdentityDetails,\n  BusinessIdentityDetailsFacade,\n  LegalEntityInterface,\n  Municipality,\n} from '@sales/customer-registration/data-access';\nimport { StepComponent, StepFacade } from '@sales/shared/data-access';\nimport { CompanyNameValidator, TgFormsModule, VatNumberValidator } from '@telenet/ng-lib-form';\nimport { NgxMaskDirective } from 'ngx-mask';\nimport { Observable, debounceTime, distinctUntilChanged, filter, map, of, take } from 'rxjs';\nimport {\n  AddressFormComponent,\n  AddressToggleComponent,\n  CustomerRegistrationTitleComponent,\n  ErrorMessageComponent,\n  ErrorMessageWithLoginButtonComponent,\n} from 'sales/customer-registration/ui';\nimport { CommonModule } from '@angular/common';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@UntilDestroy()\n@Component({\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TgFormsModule,\n    CustomerRegistrationTitleComponent,\n    ErrorMessageComponent,\n    NgxMaskDirective,\n    ErrorMessageWithLoginButtonComponent,\n    MatAutocompleteModule,\n    AddressFormComponent,\n    AddressToggleComponent,\n  ],\n  selector: 'tg-customer-registration-business-identity-details',\n  templateUrl: './business-identity-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BusinessIdentityDetailsComponent implements OnInit, StepComponent {\n  readonly messageGroupName = 'customer-registration';\n  businessIdentityDetailsForm: FormGroup;\n  currentStep: Observable<string> = this.stepFacade.currentStepKey$;\n  error$ = this.businessIdentityDetailsFacade.error$;\n  searchCustomerResultExists$ = this.businessIdentityDetailsFacade.searchCustomerResultExists$;\n  brand = this.authorConfigurationFacade.getBrand();\n  legalEntities: LegalEntityInterface[] = [];\n  legalFilteredEntities: LegalEntityInterface[] = [];\n  isLegalEntityValid: number = 1;\n  locationSuggestion$: Observable<Municipality[]>;\n  streetSuggestion$: Observable<string[]> = of([]);\n  showInstallationAddress = false;\n  showBillingAddress = false;\n  address$ = this.businessIdentityDetailsFacade.addresses$;\n  subHouseNoSuggestions$ = this.businessIdentityDetailsFacade.subHouseNumbers$;\n  boxNoSuggestions$ = this.businessIdentityDetailsFacade.boxNumbers$;\n  checkAddressFormValidity$ = of(false);\n  isInstallableProductExists$ = this.businessIdentityDetailsFacade.isInstallableProductExists$;\n  @ViewChild('legalAddress') addressFormComponent: AddressFormComponent | undefined;\n  @ViewChild('installationAddress') installationAddressFormComponent: AddressFormComponent | undefined;\n  @ViewChild('billingAddress') billingAddressFormComponent: AddressFormComponent | undefined;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly stepFacade: StepFacade,\n    private readonly businessIdentityDetailsFacade: BusinessIdentityDetailsFacade,\n    private readonly authorConfigurationFacade: AuthorConfigurationFacade,\n    private readonly _element: ElementRef,\n    private readonly cdref: ChangeDetectorRef\n  ) {\n    this.businessIdentityDetailsForm = this.formBuilder.group({\n      companyNameField: ['', [Validators.required, CompanyNameValidator.validCompanyName]],\n      belgianEnterpriseNumberField: ['', [Validators.required, VatNumberValidator.isValidVatNumber]],\n      legalEntityField: ['', [Validators.required]],\n    });\n    this.locationSuggestion$ = this.businessIdentityDetailsFacade.getMunicipalities().pipe(take(1));\n  }\n  onNextStep(): Observable<boolean> {\n    const isValidIdentity = this.validateForm();\n    const isValidLegalAddress = this.addressFormComponent?.validateForm();\n    const isValidBillingAddress = this.showBillingAddress ? this.billingAddressFormComponent?.validateForm() : true;\n    const isValidInstallationAddress = this.showInstallationAddress\n      ? this.installationAddressFormComponent?.validateForm()\n      : true;\n    if (isValidIdentity && isValidLegalAddress && isValidBillingAddress && isValidInstallationAddress) {\n      this.updateBusinessIdentityDetails();\n      this.businessIdentityDetailsFacade.searchCustomer();\n      this.processSearchCustomerResult();\n    }\n    return of(false);\n  }\n  ngOnInit(): void {\n    this.getLegalEntityDetails();\n    this.populateFormFieldsFromInput();\n  }\n\n  private populateFormFieldsFromInput() {\n    this.businessIdentityDetailsFacade.businessIdentityDetails$\n      .pipe(\n        untilDestroyed(this),\n        filter((businessIdentityDetails) => !!businessIdentityDetails),\n        map((businessIdentityDetails) => {\n          return {\n            belgianEnterpriseNumberField: businessIdentityDetails.belgianEnterpriseNumber,\n            companyNameField: businessIdentityDetails.companyName,\n            legalEntityField: (this.legalEntities || []).find(\n              (entity: LegalEntityInterface) => entity.id === businessIdentityDetails.legalForm\n            )?.name as string,\n          };\n        })\n      )\n      .subscribe((patchToForm) => {\n        this.businessIdentityDetailsForm.patchValue(patchToForm);\n      });\n  }\n\n  searchCustomerWithBelgianEnterpriseNumber() {\n    if (this.businessIdentityDetailsForm.controls['belgianEnterpriseNumberField'].valid) {\n      this.updateBusinessIdentityDetails();\n      this.businessIdentityDetailsFacade.searchCustomer();\n      this.processSearchCustomerResult();\n    }\n  }\n\n  private processSearchCustomerResult() {\n    this.searchCustomerResultExists$.pipe(untilDestroyed(this)).subscribe((searchCustomerResultExists) => {\n      searchCustomerResultExists ? this.stepFacade.hideNavigationBar() : this.stepFacade.displayNavigationBar();\n    });\n  }\n\n  private updateBusinessIdentityDetails() {\n    const payLoad: BusinessIdentityDetails = {\n      belgianEnterpriseNumber: this.businessIdentityDetailsForm.controls['belgianEnterpriseNumberField'].value,\n      companyName: this.businessIdentityDetailsForm.controls['companyNameField'].value,\n      legalForm: this.legalEntities?.find(\n        (entity: LegalEntityInterface) =>\n          entity.name === this.businessIdentityDetailsForm.controls['legalEntityField']?.value\n      )?.id as string,\n      installationAddressToggle: this.showInstallationAddress,\n      billingAddressToggle: this.showBillingAddress,\n    };\n    this.businessIdentityDetailsFacade.saveBusinessIdentityDetails(payLoad);\n  }\n\n  doLogin() {\n    this.businessIdentityDetailsFacade.login();\n  }\n\n  getLegalEntityDetails() {\n    this.businessIdentityDetailsFacade.getLegalEntityDetails();\n    this.businessIdentityDetailsFacade.legalEntityDetails$.pipe().subscribe((legalEntityDetails) => {\n      this.legalEntities = this.legalFilteredEntities = legalEntityDetails[0]?.values;\n    });\n  }\n\n  filterResults(event: any) {\n    this.legalFilteredEntities = this.legalEntities.filter((val: LegalEntityInterface) =>\n      val.name.toLowerCase().includes(event.target.value.toLowerCase())\n    );\n  }\n\n  validateEnitity(event: any, eventBlur: boolean) {\n    const val = eventBlur ? event.target.value : event;\n    this.isLegalEntityValid = this.legalEntities.filter((entity: LegalEntityInterface) => entity.name === val).length;\n\n    if (this.isLegalEntityValid) {\n      this.updateBusinessIdentityDetails();\n    }\n  }\n\n  saveAddressToState(address: AddressRequestInterface) {\n    this.businessIdentityDetailsFacade.loadAddress(address);\n    this.address$\n      .pipe(debounceTime(300), distinctUntilChanged(), untilDestroyed(this))\n      .subscribe((addresses: Address[]) => {\n        this.businessIdentityDetailsFacade.saveMatchedAddress(addresses, address);\n      });\n    this.businessIdentityDetailsFacade.resetSearchCustomer();\n    this.processSearchCustomerResult();\n  }\n\n  updateStreets(postalCode: string) {\n    this.streetSuggestion$ = this.businessIdentityDetailsFacade.getStreets(postalCode);\n  }\n\n  toggleAddressVisibility(event: { checked: boolean; type: string }) {\n    if (event.type === 'installationAddress') {\n      this.showInstallationAddress = !event.checked;\n    }\n    if (event.type === 'billingAddress') {\n      this.showBillingAddress = !event.checked;\n    }\n  }\n  updateSubHouse() {\n    this.address$.pipe(untilDestroyed(this)).subscribe((addresses) => {\n      if (addresses.length > 0) {\n        this.businessIdentityDetailsFacade.getSubHouseNumbers(addresses);\n      }\n    });\n  }\n  updateBox() {\n    this.address$.pipe(untilDestroyed(this)).subscribe((addresses) => {\n      if (addresses.length > 0) {\n        this.businessIdentityDetailsFacade.getBoxNumbers(addresses);\n      }\n    });\n  }\n\n  validateForm(): boolean {\n    const formGroup = this.businessIdentityDetailsForm;\n    const valid = formGroup.valid;\n    if (!formGroup.valid) {\n      formGroup.markAllAsTouched();\n      formGroup.markAsDirty();\n      this.cdref.markForCheck();\n      this.setFocusOnFirstErrorField();\n    }\n    return valid;\n  }\n\n  private setFocusOnFirstErrorField(): void {\n    const invalidControl = this._element.nativeElement.querySelectorAll('.ng-invalid');\n    invalidControl[0]?.focus();\n  }\n}\n","<tg-sales-customer-registration-title [currentStep]=\"currentStep | async\"></tg-sales-customer-registration-title>\n<div class=\"mb--xxxg pb--l py--n col-lg-8 col-md-9 col-12 m--auto\">\n  @if (error$ | async; as error) {\n    <div class=\"my--m\">\n      <tg-sales-error-message\n        [errorMessage]=\"'ng.customer-registration.' + error.code + '-errorfield'\"></tg-sales-error-message>\n    </div>\n  }\n  <div class=\"mb--g mb--xxxg--sm\">\n    <div class=\"background-white col-12 m--auto px--xxxl--md px--xl py--m--md py--xxs\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <form [formGroup]=\"businessIdentityDetailsForm\">\n            @if ((searchCustomerResultExists$ | async) === true) {\n              <tg-sales-error-message-with-login-button\n                (loginEmitter)=\"doLogin()\"\n                [brand]=\"brand\"\n                [attr.data-cy]=\"'hard-match-error'\"\n                [attr.data-testid]=\"'hard-match-error'\"></tg-sales-error-message-with-login-button>\n            }\n            <div class=\"address-identity-section\">\n              <div class=\"my--xl\">\n                <label\n                  class=\"text--m cursor--default\"\n                  for=\"companyNameField\"\n                  [attr.data-cy]=\"'company-name-field'\"\n                  [attr.data-testid]=\"'company-name-field'\">\n                  {{ 'customer-registration.form-company-name-label' | translate }}\n                </label>\n                <div class=\"form__input-container mb--xl\">\n                  <input\n                    type=\"text\"\n                    id=\"companyNameField\"\n                    name=\"companyNameField\"\n                    class=\"form__input\"\n                    formControlName=\"companyNameField\" />\n\n                  @if (\n                    businessIdentityDetailsForm.controls['companyNameField'].touched &&\n                    businessIdentityDetailsForm.controls['companyNameField'].errors?.['required']\n                  ) {\n                    <div class=\"formErrorInput\">\n                      <div class=\"text--s mt--xxxs color-notification--error--light text-align--left\">\n                        {{ 'customer-registration.form-company-name-guidance-error-required' | translate }}\n                      </div>\n                    </div>\n                  } @else if (\n                    businessIdentityDetailsForm.controls['companyNameField'].touched &&\n                    businessIdentityDetailsForm.controls['companyNameField'].errors?.['invalidCompanyName']\n                  ) {\n                    <div class=\"formErrorInput\">\n                      <div\n                        class=\"text--s mt--xxxs color-notification--error--light text-align--left\"\n                        [attr.data-cy]=\"'company-name-constraint'\"\n                        [attr.data-testid]=\"'company-name-constraint'\">\n                        {{ 'customer-registration.company-name-guidance-error-company-name-constraint' | translate }}\n                      </div>\n                    </div>\n                  }\n                </div>\n              </div>\n              <div class=\"my--xl\">\n                <label\n                  class=\"text--m cursor--default\"\n                  for=\"belgianEnterpriseNumberField\"\n                  [attr.data-cy]=\"'belgian-enterprise-number-field'\"\n                  [attr.data-testid]=\"'belgian-enterprise-number-field'\">\n                  {{ 'customer-registration.vat-number-label' | translate }}\n                </label>\n                <div class=\"form__input-container mb--xl\">\n                  <input\n                    type=\"text\"\n                    id=\"belgianEnterpriseNumberField\"\n                    name=\"belgianEnterpriseNumberField\"\n                    class=\"form__input\"\n                    mask=\"0000.000.000\"\n                    [dropSpecialCharacters]=\"false\"\n                    [showMaskTyped]=\"true\"\n                    placeholder=\"0000.000.000\"\n                    formControlName=\"belgianEnterpriseNumberField\"\n                    (blur)=\"searchCustomerWithBelgianEnterpriseNumber()\" />\n\n                  @if (\n                    businessIdentityDetailsForm.controls['belgianEnterpriseNumberField'].touched &&\n                    businessIdentityDetailsForm.controls['belgianEnterpriseNumberField'].errors?.['required']\n                  ) {\n                    <div class=\"formErrorInput\">\n                      <div class=\"text--s mt--xxxs color-notification--error--light text-align--left\">\n                        {{ 'customer-registration.vat-number-guidance-error-required' | translate }}\n                      </div>\n                    </div>\n                  } @else if (\n                    businessIdentityDetailsForm.controls['belgianEnterpriseNumberField'].touched &&\n                    businessIdentityDetailsForm.controls['belgianEnterpriseNumberField'].errors?.['invalidVatNumber']\n                  ) {\n                    <div class=\"formErrorInput\">\n                      <div\n                        class=\"text--s mt--xxxs color-notification--error--light text-align--left\"\n                        [attr.data-cy]=\"'belgian-enterprise-number-constraint'\"\n                        [attr.data-testid]=\"'belgian-enterprise-number-constraint'\">\n                        {{ 'customer-registration.vat-number-guidance-error-enterprise-number-constraint' | translate }}\n                      </div>\n                    </div>\n                  }\n                </div>\n              </div>\n              <div class=\"my--xl\">\n                <div class=\"form-group position--relative\">\n                  <label class=\"text--m cursor--default\" for=\"legalEntityField\">\n                    {{ 'customer-registration.legal-entity-label' | translate }}</label\n                  >\n                  <input\n                    type=\"text\"\n                    class=\"form__input ellipsis cursor--pointer form__input--valid\"\n                    [ngClass]=\"{ 'form__input--error': !isLegalEntityValid }\"\n                    formControlName=\"legalEntityField\"\n                    name=\"legalEntityField\"\n                    [attr.data-cy]=\"'legal-entity-field'\"\n                    [attr.data-testid]=\"'legal-entity-field'\"\n                    id=\"legalEntityField\"\n                    matInput\n                    [matAutocomplete]=\"auto\"\n                    (keyup)=\"filterResults($event)\"\n                    (blur)=\"validateEnitity($event, true)\"\n                    placeholder=\"{{ 'customer-registration.lbl.legal-entity-placeholder' | translate }}\" />\n                  <mat-autocomplete #auto=\"matAutocomplete\">\n                    @for (entity of legalFilteredEntities; track entity) {\n                      <mat-option [value]=\"entity.name\" (click)=\"validateEnitity(entity.name, false)\">{{\n                        entity.name\n                      }}</mat-option>\n                    }\n                  </mat-autocomplete>\n                  @if (\n                    businessIdentityDetailsForm.controls['legalEntityField'].touched &&\n                    businessIdentityDetailsForm.controls['legalEntityField'].errors?.['required']\n                  ) {\n                    <div class=\"formErrorInput\">\n                      <div class=\"text--s mt--xxxs color-notification--error--light text-align--left\">\n                        {{ 'customer-registration.form-legal-entity-guidance-error-required' | translate }}\n                      </div>\n                    </div>\n                  }\n                  @if (\n                    !isLegalEntityValid &&\n                    !businessIdentityDetailsForm.controls['legalEntityField'].errors?.['required']\n                  ) {\n                    <div class=\"formErrorInput\">\n                      <div class=\"text--s mt--xxxs color-notification--error--light text-align--left\">\n                        {{ 'customer-registration.legal-entity-guidance-error-invalid' | translate }}\n                      </div>\n                    </div>\n                  }\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      <tg-sales-customer-registration-address-form\n        #legalAddress\n        [locationSuggestions]=\"locationSuggestion$ | async\"\n        [streetSuggestions]=\"streetSuggestion$ | async\"\n        (updateStreetsEmitter)=\"updateStreets($event)\"\n        (updateSubHouseEmitter)=\"updateSubHouse()\"\n        [subHouseNoSuggestions]=\"subHouseNoSuggestions$ | async\"\n        [boxNoSuggestions]=\"boxNoSuggestions$ | async\"\n        (updateBoxEmitter)=\"updateBox()\"\n        (saveAddressEmitter)=\"saveAddressToState($event)\"\n        [addressType]=\"'legalAddress'\">\n      </tg-sales-customer-registration-address-form>\n      @if ((isInstallableProductExists$ | async) === true) {\n        <tg-sales-customer-registration-address-toggle\n          (isChecked)=\"toggleAddressVisibility($event)\"\n          [showBillingAddressToggle]=\"false\"\n          [addressType]=\"'installationAddress'\"\n          [showInstallationAddressToggle]=\"true\"\n          [attr.data-cy]=\"'installation-address-toggle'\"\n          [attr.data-testid]=\"'installation-address-toggle'\"></tg-sales-customer-registration-address-toggle>\n        @if (showInstallationAddress) {\n          <tg-sales-customer-registration-address-form\n            #installationAddress\n            [locationSuggestions]=\"locationSuggestion$ | async\"\n            [streetSuggestions]=\"streetSuggestion$ | async\"\n            (updateStreetsEmitter)=\"updateStreets($event)\"\n            (updateSubHouseEmitter)=\"updateSubHouse()\"\n            [subHouseNoSuggestions]=\"subHouseNoSuggestions$ | async\"\n            [boxNoSuggestions]=\"boxNoSuggestions$ | async\"\n            (updateBoxEmitter)=\"updateBox()\"\n            (saveAddressEmitter)=\"saveAddressToState($event)\"\n            [addressType]=\"'installationAddress'\">\n          </tg-sales-customer-registration-address-form>\n        }\n      }\n      <tg-sales-customer-registration-address-toggle\n        (isChecked)=\"toggleAddressVisibility($event)\"\n        [showBillingAddressToggle]=\"true\"\n        [addressType]=\"'billingAddress'\"\n        [showInstallationAddressToggle]=\"false\"\n        [attr.data-cy]=\"'billing-address-toggle'\"\n        [attr.data-testid]=\"'billing-address-toggle'\"></tg-sales-customer-registration-address-toggle>\n      @defer (on viewport) {\n        @if (showBillingAddress) {\n          <div class=\"mt--xl--md mt--l\">\n            <tg-sales-customer-registration-address-form\n              #billingAddress\n              [locationSuggestions]=\"locationSuggestion$ | async\"\n              [streetSuggestions]=\"streetSuggestion$ | async\"\n              (updateStreetsEmitter)=\"updateStreets($event)\"\n              (updateSubHouseEmitter)=\"updateSubHouse()\"\n              [subHouseNoSuggestions]=\"subHouseNoSuggestions$ | async\"\n              [boxNoSuggestions]=\"boxNoSuggestions$ | async\"\n              (updateBoxEmitter)=\"updateBox()\"\n              (saveAddressEmitter)=\"saveAddressToState($event)\"\n              [addressType]=\"'billingAddress'\">\n            </tg-sales-customer-registration-address-form>\n          </div>\n        }\n      } @placeholder {\n        <br />\n      }\n    </div>\n  </div>\n</div>\n"],"names":["ChangeDetectorRef","ElementRef","FormBuilder","FormsModule","ReactiveFormsModule","Validators","TranslateModule","AuthorConfigurationFacade","BusinessIdentityDetailsFacade","StepFacade","CompanyNameValidator","TgFormsModule","VatNumberValidator","NgxMaskDirective","debounceTime","distinctUntilChanged","filter","map","of","take","AddressFormComponent","AddressToggleComponent","CustomerRegistrationTitleComponent","ErrorMessageComponent","ErrorMessageWithLoginButtonComponent","CommonModule","UntilDestroy","untilDestroyed","MatAutocompleteModule","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx","code","ɵɵlistener","BusinessIdentityDetailsComponent_Conditional_10_Template_tg_sales_error_message_with_login_button_loginEmitter_0_listener","ɵɵrestoreView","_r16","ctx_r15","ɵɵnextContext","ɵɵresetView","doLogin","ctx_r1","brand","ɵɵattribute","ɵɵtext","ɵɵtextInterpolate1","ɵɵpipeBind1","BusinessIdentityDetailsComponent_For_39_Template_mat_option_click_0_listener","restoredCtx","_r23","entity_r17","$implicit","ctx_r22","validateEnitity","name","ɵɵtextInterpolate","BusinessIdentityDetailsComponent_Conditional_48_Conditional_1_Template_tg_sales_customer_registration_address_form_updateStreetsEmitter_0_listener","$event","_r27","ctx_r26","updateStreets","BusinessIdentityDetailsComponent_Conditional_48_Conditional_1_Template_tg_sales_customer_registration_address_form_updateSubHouseEmitter_0_listener","ctx_r28","updateSubHouse","BusinessIdentityDetailsComponent_Conditional_48_Conditional_1_Template_tg_sales_customer_registration_address_form_updateBoxEmitter_0_listener","ctx_r29","updateBox","BusinessIdentityDetailsComponent_Conditional_48_Conditional_1_Template_tg_sales_customer_registration_address_form_saveAddressEmitter_0_listener","ctx_r30","saveAddressToState","ctx_r24","locationSuggestion$","streetSuggestion$","subHouseNoSuggestions$","boxNoSuggestions$","BusinessIdentityDetailsComponent_Conditional_48_Template_tg_sales_customer_registration_address_toggle_isChecked_0_listener","_r32","ctx_r31","toggleAddressVisibility","ɵɵtemplate","BusinessIdentityDetailsComponent_Conditional_48_Conditional_1_Template","ɵɵconditional","ctx_r11","showInstallationAddress","BusinessIdentityDetailsComponent_Defer_51_Conditional_0_Template_tg_sales_customer_registration_address_form_updateStreetsEmitter_1_listener","_r36","ctx_r35","BusinessIdentityDetailsComponent_Defer_51_Conditional_0_Template_tg_sales_customer_registration_address_form_updateSubHouseEmitter_1_listener","ctx_r37","BusinessIdentityDetailsComponent_Defer_51_Conditional_0_Template_tg_sales_customer_registration_address_form_updateBoxEmitter_1_listener","ctx_r38","BusinessIdentityDetailsComponent_Defer_51_Conditional_0_Template_tg_sales_customer_registration_address_form_saveAddressEmitter_1_listener","ctx_r39","ctx_r33","BusinessIdentityDetailsComponent_Defer_51_Conditional_0_Template","ctx_r12","showBillingAddress","BusinessIdentityDetailsComponent","constructor","formBuilder","stepFacade","businessIdentityDetailsFacade","authorConfigurationFacade","_element","cdref","messageGroupName","currentStep","currentStepKey$","error$","searchCustomerResultExists$","getBrand","legalEntities","legalFilteredEntities","isLegalEntityValid","address$","addresses$","subHouseNumbers$","boxNumbers$","checkAddressFormValidity$","isInstallableProductExists$","businessIdentityDetailsForm","group","companyNameField","required","validCompanyName","belgianEnterpriseNumberField","isValidVatNumber","legalEntityField","getMunicipalities","pipe","onNextStep","isValidIdentity","validateForm","isValidLegalAddress","addressFormComponent","isValidBillingAddress","billingAddressFormComponent","isValidInstallationAddress","installationAddressFormComponent","updateBusinessIdentityDetails","searchCustomer","processSearchCustomerResult","ngOnInit","getLegalEntityDetails","populateFormFieldsFromInput","businessIdentityDetails$","businessIdentityDetails","belgianEnterpriseNumber","companyName","find","entity","id","legalForm","subscribe","patchToForm","patchValue","searchCustomerWithBelgianEnterpriseNumber","controls","valid","searchCustomerResultExists","hideNavigationBar","displayNavigationBar","payLoad","value","installationAddressToggle","billingAddressToggle","saveBusinessIdentityDetails","login","legalEntityDetails$","legalEntityDetails","values","filterResults","event","val","toLowerCase","includes","target","eventBlur","length","address","loadAddress","addresses","saveMatchedAddress","resetSearchCustomer","postalCode","getStreets","type","checked","getSubHouseNumbers","getBoxNumbers","formGroup","markAllAsTouched","markAsDirty","markForCheck","setFocusOnFirstErrorField","invalidControl","nativeElement","querySelectorAll","focus","_","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","viewQuery","BusinessIdentityDetailsComponent_Query","rf","BusinessIdentityDetailsComponent_Conditional_3_Template","BusinessIdentityDetailsComponent_Conditional_10_Template","BusinessIdentityDetailsComponent_Conditional_19_Template","BusinessIdentityDetailsComponent_Conditional_20_Template","BusinessIdentityDetailsComponent_Template_input_blur_26_listener","BusinessIdentityDetailsComponent_Conditional_27_Template","BusinessIdentityDetailsComponent_Conditional_28_Template","BusinessIdentityDetailsComponent_Template_input_keyup_34_listener","BusinessIdentityDetailsComponent_Template_input_blur_34_listener","ɵɵrepeaterCreate","BusinessIdentityDetailsComponent_For_39_Template","ɵɵrepeaterTrackByIdentity","BusinessIdentityDetailsComponent_Conditional_40_Template","BusinessIdentityDetailsComponent_Conditional_41_Template","BusinessIdentityDetailsComponent_Template_tg_sales_customer_registration_address_form_updateStreetsEmitter_42_listener","BusinessIdentityDetailsComponent_Template_tg_sales_customer_registration_address_form_updateSubHouseEmitter_42_listener","BusinessIdentityDetailsComponent_Template_tg_sales_customer_registration_address_form_updateBoxEmitter_42_listener","BusinessIdentityDetailsComponent_Template_tg_sales_customer_registration_address_form_saveAddressEmitter_42_listener","BusinessIdentityDetailsComponent_Conditional_48_Template","BusinessIdentityDetailsComponent_Template_tg_sales_customer_registration_address_toggle_isChecked_50_listener","BusinessIdentityDetailsComponent_Defer_51_Template","BusinessIdentityDetailsComponent_DeferPlaceholder_52_Template","ɵɵdefer","BusinessIdentityDetailsComponent_Defer_53_DepsFn","ɵɵdeferOnViewport","BusinessIdentityDetailsComponent_contFlowTmp","touched","errors","ɵɵpropertyInterpolate","ɵɵpureFunction1","_c3","_r6","ɵɵrepeater","i4","NgClass","AsyncPipe","i5","TranslatePipe","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i6","FormDirective","i7","MatAutocomplete","i8","MatOption","MatAutocompleteTrigger","encapsulation","changeDetection","__decorate"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}