{"version":3,"file":"default-node_modules_angular_material_fesm2022_select_mjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqG;AAC7C;AACpB;AAC4O;AACnO;AACgK;AAC7I;AACb;AACoD;AACQ;AAClE;AACgB;AACrB;AACoE;AACpE;AACkB;AAC6D;AAClF;AACO;AACC;AAC6D;AACJ;;AAEtG;AACA;AACA;AACA;AACA;AACA;AACA;AANA,MAAAiF,GAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,iCAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA2/B2G9E,4DAAE,aAImzB,CAAC;IAJtzBA,oDAAE,EAIk0B,CAAC;IAJr0BA,0DAAE,CAIy0B,CAAC;EAAA;EAAA,IAAA8E,EAAA;IAAA,MAAAK,MAAA,GAJ50BnF,2DAAE;IAAFA,uDAAE,CAIk0B,CAAC;IAJr0BA,+DAAE,CAAAmF,MAAA,CAAAI,WAIk0B,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAAV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAJr0B9E,0DAAE,EAI4+B,CAAC;EAAA;AAAA;AAAA,SAAA0F,+CAAAZ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAJ/+B9E,4DAAE,cAImjC,CAAC;IAJtjCA,oDAAE,EAImkC,CAAC;IAJtkCA,0DAAE,CAI0kC,CAAC;EAAA;EAAA,IAAA8E,EAAA;IAAA,MAAAa,MAAA,GAJ7kC3F,2DAAE;IAAFA,uDAAE,CAImkC,CAAC;IAJtkCA,+DAAE,CAAA2F,MAAA,CAAAC,YAImkC,CAAC;EAAA;AAAA;AAAA,SAAAC,iCAAAf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAJtkC9E,4DAAE,cAI04B,CAAC;IAJ74BA,wDAAE,IAAAwF,8CAAA,MAIu/B,CAAC,IAAAE,8CAAA,MAAD,CAAC;IAJ1/B1F,0DAAE,CAIomC,CAAC;EAAA;EAAA,IAAA8E,EAAA;IAAA,MAAAiB,MAAA,GAJvmC/F,2DAAE;IAAFA,uDAAE,CAIu/B,CAAC;IAJ1/BA,2DAAE,IAAA+F,MAAA,CAAAE,aAAA,QAIu/B,CAAC;EAAA;AAAA;AAAA,SAAAC,kCAAApB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqB,GAAA,GAJ1/BnG,8DAAE;IAAFA,4DAAE;IAAFA,6DAAE,CAI2mF,CAAC;IAJ9mFA,4DAAE,iBAI2mF,CAAC;IAJ9mFA,wDAAE,kCAAAwG,+EAAAC,MAAA;MAAFzG,2DAAE,CAAAmG,GAAA;MAAA,MAAAQ,MAAA,GAAF3G,2DAAE;MAAA,OAAFA,yDAAE,CAIihF2G,MAAA,CAAAE,yBAAA,CAAAC,IAAA,CAAAL,MAAA,CAAAM,OAA6C,EAAC;IAAA,CAAC,CAAC,qBAAAC,yDAAAP,MAAA;MAJnkFzG,2DAAE,CAAAmG,GAAA;MAAA,MAAAc,OAAA,GAAFjH,2DAAE;MAAA,OAAFA,yDAAE,CAImlFiH,OAAA,CAAAC,cAAA,CAAAT,MAAqB,EAAC;IAAA,CAAzC,CAAC;IAJnkFzG,0DAAE,KAI0oF,CAAC;IAJ7oFA,0DAAE,CAIopF,CAAC;EAAA;EAAA,IAAA8E,EAAA;IAAA,MAAAqC,MAAA,GAJvpFnH,2DAAE;IAAFA,oEAAE,kEAAAmH,MAAA,CAAAE,cAAA,MAIwvE,CAAC;IAJ3vErH,wDAAE,YAAAmH,MAAA,CAAAI,UAI48E,CAAC,6BAAD,CAAC;IAJ/8EvH,yDAAE,OAAAmH,MAAA,CAAAM,EAAA,WAIyxE,CAAC,yBAAAN,MAAA,CAAAO,QAAD,CAAC,eAAAP,MAAA,CAAAQ,SAAA,QAAD,CAAC,oBAAAR,MAAA,CAAAS,uBAAA,EAAD,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAx/Bv4E,MAAMC,mBAAmB,GAAG;EACxB;AACJ;AACA;AACA;AACA;EACIC,kBAAkB,EAAE5D,4DAAO,CAAC,oBAAoB,EAAE,CAC9CC,+DAAU,CAAC,WAAW,EAAEC,0DAAK,CAAC,iBAAiB,EAAE,CAACC,iEAAY,CAAC,CAAC,CAAC,EAAE;IAAE0D,QAAQ,EAAE;EAAK,CAAC,CAAC,CAAC,CAC1F,CAAC;EACF;EACAC,cAAc,EAAE9D,4DAAO,CAAC,gBAAgB,EAAE,CACtCI,0DAAK,CAAC,MAAM,EAAEC,0DAAK,CAAC;IAChB0D,OAAO,EAAE,CAAC;IACVC,SAAS,EAAE;EACf,CAAC,CAAC,CAAC,EACH/D,+DAAU,CAAC,iBAAiB,EAAEK,4DAAO,CAAC,kCAAkC,EAAED,0DAAK,CAAC;IAC5E0D,OAAO,EAAE,CAAC;IACVC,SAAS,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,EACJ/D,+DAAU,CAAC,WAAW,EAAEK,4DAAO,CAAC,cAAc,EAAED,0DAAK,CAAC;IAAE0D,OAAO,EAAE;EAAE,CAAC,CAAC,CAAC,CAAC,CAC1E;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,gCAAgCA,CAAA,EAAG;EACxC,OAAOC,KAAK,CAAC,+DAA+D,CAAC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,8BAA8BA,CAAA,EAAG;EACtC,OAAOD,KAAK,CAAC,oDAAoD,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,iCAAiCA,CAAA,EAAG;EACzC,OAAOF,KAAK,CAAC,mCAAmC,CAAC;AACrD;AAEA,IAAIG,YAAY,GAAG,CAAC;AACpB;AACA,MAAMC,0BAA0B,GAAG,IAAIzI,yDAAc,CAAC,4BAA4B,EAAE;EAChF0I,UAAU,EAAE,MAAM;EAClBC,OAAO,EAAEA,CAAA,KAAM;IACX,MAAMC,OAAO,GAAG3I,qDAAM,CAACR,yDAAO,CAAC;IAC/B,OAAO,MAAMmJ,OAAO,CAACC,gBAAgB,CAACC,UAAU,CAAC,CAAC;EACtD;AACJ,CAAC,CAAC;AACF;AACA,SAASC,2CAA2CA,CAACH,OAAO,EAAE;EAC1D,OAAO,MAAMA,OAAO,CAACC,gBAAgB,CAACC,UAAU,CAAC,CAAC;AACtD;AACA;AACA,MAAME,iBAAiB,GAAG,IAAIhJ,yDAAc,CAAC,mBAAmB,CAAC;AACjE;AACA,MAAMiJ,mCAAmC,GAAG;EACxCC,OAAO,EAAET,0BAA0B;EACnCU,IAAI,EAAE,CAAC1J,yDAAO,CAAC;EACf2J,UAAU,EAAEL;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,MAAMM,kBAAkB,GAAG,IAAIrJ,yDAAc,CAAC,kBAAkB,CAAC;AACjE;AACA,MAAMsJ,eAAe,CAAC;EAClBC,WAAWA,CAAA,CACX;EACAC,MAAM,EACN;EACAC,KAAK,EAAE;IACH,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;AACJ;AACA,MAAMC,SAAS,CAAC;EACZ;EACAC,qBAAqBA,CAACC,KAAK,EAAE;IACzB,MAAMC,MAAM,GAAG,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACH,KAAK,CAAC;IAC5C,IAAIC,MAAM,EAAE;MACR,MAAMG,KAAK,GAAG,IAAI,CAACA,KAAK,CAACC,aAAa;MACtC,MAAMC,UAAU,GAAG9I,qFAA6B,CAACwI,KAAK,EAAE,IAAI,CAACE,OAAO,EAAE,IAAI,CAACK,YAAY,CAAC;MACxF,MAAMC,OAAO,GAAGP,MAAM,CAACQ,eAAe,CAAC,CAAC;MACxC,IAAIT,KAAK,KAAK,CAAC,IAAIM,UAAU,KAAK,CAAC,EAAE;QACjC;QACA;QACA;QACAF,KAAK,CAACM,SAAS,GAAG,CAAC;MACvB,CAAC,MACI;QACDN,KAAK,CAACM,SAAS,GAAGjJ,gFAAwB,CAAC+I,OAAO,CAACG,SAAS,EAAEH,OAAO,CAACI,YAAY,EAAER,KAAK,CAACM,SAAS,EAAEN,KAAK,CAACQ,YAAY,CAAC;MAC5H;IACJ;EACJ;EACA;EACAC,mBAAmBA,CAAA,EAAG;IAClB,IAAI,CAACd,qBAAqB,CAAC,IAAI,CAACe,WAAW,CAACC,eAAe,IAAI,CAAC,CAAC;EACrE;EACA;EACAC,eAAeA,CAACnB,KAAK,EAAE;IACnB,OAAO,IAAIH,eAAe,CAAC,IAAI,EAAEG,KAAK,CAAC;EAC3C;EACA;EACA,IAAIoB,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,UAAU;EAC3C;EACA;EACA,IAAIC,4BAA4BA,CAAA,EAAG;IAC/B,OAAO,IAAI,CAACC,6BAA6B;EAC7C;EACA,IAAID,4BAA4BA,CAACvB,KAAK,EAAE;IACpC,IAAI,CAACwB,6BAA6B,GAAGxB,KAAK;IAC1C,IAAI,CAACyB,qBAAqB,CAAC,CAAC;EAChC;EACA;EACA,IAAI5F,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAAC6F,YAAY;EAC5B;EACA,IAAI7F,WAAWA,CAACmE,KAAK,EAAE;IACnB,IAAI,CAAC0B,YAAY,GAAG1B,KAAK;IACzB,IAAI,CAAC2B,YAAY,CAACvE,IAAI,CAAC,CAAC;EAC5B;EACA;EACA,IAAIwE,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACC,SAAS,IAAI,IAAI,CAACC,SAAS,EAAEC,OAAO,EAAEC,YAAY,CAACjI,sDAAU,CAAC6H,QAAQ,CAAC,IAAI,KAAK;EAChG;EACA,IAAIA,QAAQA,CAAC5B,KAAK,EAAE;IAChB,IAAI,CAAC6B,SAAS,GAAG7B,KAAK;IACtB,IAAI,CAAC2B,YAAY,CAACvE,IAAI,CAAC,CAAC;EAC5B;EACA;EACA,IAAIY,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACiE,SAAS;EACzB;EACA,IAAIjE,QAAQA,CAACgC,KAAK,EAAE;IAChB,IAAI,IAAI,CAACkC,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MACzE,MAAMxD,gCAAgC,CAAC,CAAC;IAC5C;IACA,IAAI,CAACsD,SAAS,GAAGjC,KAAK;EAC1B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIoC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACC,YAAY;EAC5B;EACA,IAAID,WAAWA,CAACE,EAAE,EAAE;IAChB,IAAI,OAAOA,EAAE,KAAK,UAAU,KAAK,OAAOH,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MAC7E,MAAMrD,iCAAiC,CAAC,CAAC;IAC7C;IACA,IAAI,CAACuD,YAAY,GAAGC,EAAE;IACtB,IAAI,IAAI,CAACJ,eAAe,EAAE;MACtB;MACA,IAAI,CAACK,oBAAoB,CAAC,CAAC;IAC/B;EACJ;EACA;EACA,IAAIvC,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACwC,MAAM;EACtB;EACA,IAAIxC,KAAKA,CAACyC,QAAQ,EAAE;IAChB,MAAMC,WAAW,GAAG,IAAI,CAACC,YAAY,CAACF,QAAQ,CAAC;IAC/C,IAAIC,WAAW,EAAE;MACb,IAAI,CAACE,SAAS,CAACH,QAAQ,CAAC;IAC5B;EACJ;EACA;EACA,IAAII,iBAAiBA,CAAA,EAAG;IACpB,OAAO,IAAI,CAACC,kBAAkB,CAACC,OAAO;EAC1C;EACA,IAAIF,iBAAiBA,CAAC7C,KAAK,EAAE;IACzB,IAAI,CAAC8C,kBAAkB,CAACC,OAAO,GAAG/C,KAAK;EAC3C;EACA;EACA,IAAIjC,EAAEA,CAAA,EAAG;IACL,OAAO,IAAI,CAACiF,GAAG;EACnB;EACA,IAAIjF,EAAEA,CAACiC,KAAK,EAAE;IACV,IAAI,CAACgD,GAAG,GAAGhD,KAAK,IAAI,IAAI,CAACiD,IAAI;IAC7B,IAAI,CAACtB,YAAY,CAACvE,IAAI,CAAC,CAAC;EAC5B;EACA;EACA,IAAI8F,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACJ,kBAAkB,CAACI,UAAU;EAC7C;EACA,IAAIA,UAAUA,CAAClD,KAAK,EAAE;IAClB,IAAI,CAAC8C,kBAAkB,CAACI,UAAU,GAAGlD,KAAK;EAC9C;EACAF,WAAWA,CAACqD,cAAc,EAAEC,kBAAkB,EAAEC,OAAO,EAAEC,wBAAwB,EAAEC,WAAW,EAAEC,IAAI,EAAEC,UAAU,EAAEC,eAAe,EAAEC,gBAAgB,EAAE7B,SAAS,EAAE8B,QAAQ,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,eAAe,EAAE;IAC9N,IAAI,CAACZ,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACG,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAAC7B,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACgC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,CACd;MACIC,OAAO,EAAE,OAAO;MAChBC,OAAO,EAAE,QAAQ;MACjBC,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE;IACd,CAAC,EACD;MACIH,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,QAAQ;MACjBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;IACd,CAAC,EACD;MACIH,OAAO,EAAE,OAAO;MAChBC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE,QAAQ;MAClBvG,UAAU,EAAE;IAChB,CAAC,EACD;MACIoG,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,QAAQ;MAClBvG,UAAU,EAAE;IAChB,CAAC,CACJ;IACD;IACA,IAAI,CAACyD,UAAU,GAAG,KAAK;IACvB;IACA,IAAI,CAACe,YAAY,GAAG,CAACgC,EAAE,EAAEC,EAAE,KAAKD,EAAE,KAAKC,EAAE;IACzC;IACA,IAAI,CAACrB,IAAI,GAAI,cAAalE,YAAY,EAAG,EAAC;IAC1C;IACA,IAAI,CAACwF,sBAAsB,GAAG,IAAI;IAClC;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIxK,yCAAO,CAAC,CAAC;IAC7B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAAC2H,YAAY,GAAG,IAAI3H,yCAAO,CAAC,CAAC;IACjC;IACA,IAAI,CAAC4I,SAAS,GAAG,MAAM,CAAE,CAAC;IAC1B;IACA,IAAI,CAAC6B,UAAU,GAAG,MAAM,CAAE,CAAC;IAC3B;IACA,IAAI,CAACC,QAAQ,GAAI,oBAAmB3F,YAAY,EAAG,EAAC;IACpD;IACA,IAAI,CAAC5B,yBAAyB,GAAG,IAAInD,yCAAO,CAAC,CAAC;IAC9C,IAAI,CAAC2K,kBAAkB,GAAG,IAAI,CAACZ,eAAe,EAAEa,iBAAiB,IAAI,EAAE;IACvE,IAAI,CAACvD,QAAQ,GAAG,KAAK;IACrB;IACA,IAAI,CAACwD,WAAW,GAAG,YAAY;IAC/B;IACA,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;IACA,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B;IACA,IAAI,CAACnB,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACpC,6BAA6B,GAAG,IAAI,CAACuC,eAAe,EAAExC,4BAA4B,IAAI,KAAK;IAChG,IAAI,CAACU,SAAS,GAAG,KAAK;IACtB;IACA,IAAI,CAAC+C,sBAAsB,GAAG,IAAI,CAACjB,eAAe,EAAEiB,sBAAsB,IAAI,KAAK;IACnF;IACA,IAAI,CAAC/G,SAAS,GAAG,EAAE;IACnB;AACR;AACA;AACA;IACQ,IAAI,CAACgH,UAAU,GAAG,IAAI,CAAClB,eAAe,IAAI,OAAO,IAAI,CAACA,eAAe,CAACkB,UAAU,KAAK,WAAW,GAC1F,IAAI,CAAClB,eAAe,CAACkB,UAAU,GAC/B,MAAM;IACZ;IACA,IAAI,CAACC,sBAAsB,GAAGjL,2CAAK,CAAC,MAAM;MACtC,MAAMoG,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAIA,OAAO,EAAE;QACT,OAAOA,OAAO,CAAC8E,OAAO,CAACC,IAAI,CAACjL,yDAAS,CAACkG,OAAO,CAAC,EAAEjG,yDAAS,CAAC,MAAMF,2CAAK,CAAC,GAAGmG,OAAO,CAAC9F,GAAG,CAAC6F,MAAM,IAAIA,MAAM,CAACiF,iBAAiB,CAAC,CAAC,CAAC,CAAC;MAC/H;MACA,OAAO,IAAI,CAAChC,OAAO,CAACiC,QAAQ,CAACF,IAAI,CAAC/K,oDAAI,CAAC,CAAC,CAAC,EAAED,yDAAS,CAAC,MAAM,IAAI,CAAC8K,sBAAsB,CAAC,CAAC;IAC5F,CAAC,CAAC;IACF;IACA,IAAI,CAACK,YAAY,GAAG,IAAI9O,uDAAY,CAAC,CAAC;IACtC;IACA,IAAI,CAAC+O,aAAa,GAAG,IAAI,CAACD,YAAY,CAACH,IAAI,CAAC9K,sDAAM,CAACmL,CAAC,IAAIA,CAAC,CAAC,EAAElL,mDAAG,CAAC,MAAM,CAAE,CAAC,CAAC,CAAC;IAC3E;IACA,IAAI,CAACmL,aAAa,GAAG,IAAI,CAACH,YAAY,CAACH,IAAI,CAAC9K,sDAAM,CAACmL,CAAC,IAAI,CAACA,CAAC,CAAC,EAAElL,mDAAG,CAAC,MAAM,CAAE,CAAC,CAAC,CAAC;IAC5E;IACA,IAAI,CAACoL,eAAe,GAAG,IAAIlP,uDAAY,CAAC,CAAC;IACzC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACmP,WAAW,GAAG,IAAInP,uDAAY,CAAC,CAAC;IACrC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACoP,aAAa,GAAG,IAAI;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACC,cAAc,GAAI1F,MAAM,IAAK;MAC9B,IAAI,IAAI,CAAC2F,SAAS,EAAE;QAChB;QACA,OAAO,KAAK;MAChB;MACA;MACA;MACA;MACA,OAAO3F,MAAM,CAAC0E,QAAQ;IAC1B,CAAC;IACD,IAAI,IAAI,CAAChD,SAAS,EAAE;MAChB;MACA;MACA,IAAI,CAACA,SAAS,CAACkE,aAAa,GAAG,IAAI;IACvC;IACA;IACA;IACA,IAAIjC,eAAe,EAAEkC,yBAAyB,IAAI,IAAI,EAAE;MACpD,IAAI,CAACA,yBAAyB,GAAGlC,eAAe,CAACkC,yBAAyB;IAC9E;IACA,IAAI,CAACnD,kBAAkB,GAAG,IAAIjL,sEAAkB,CAACyL,wBAAwB,EAAExB,SAAS,EAAE4B,eAAe,EAAED,UAAU,EAAE,IAAI,CAAC9B,YAAY,CAAC;IACrI,IAAI,CAACuE,sBAAsB,GAAGrC,qBAAqB;IACnD,IAAI,CAACsC,eAAe,GAAG,IAAI,CAACD,sBAAsB,CAAC,CAAC;IACpD,IAAI,CAACtC,QAAQ,GAAGwC,QAAQ,CAACxC,QAAQ,CAAC,IAAI,CAAC;IACvC;IACA,IAAI,CAAC7F,EAAE,GAAG,IAAI,CAACA,EAAE;EACrB;EACAsI,QAAQA,CAAA,EAAG;IACP,IAAI,CAACnE,eAAe,GAAG,IAAI7I,oEAAc,CAAC,IAAI,CAAC2E,QAAQ,CAAC;IACxD,IAAI,CAAC2D,YAAY,CAACvE,IAAI,CAAC,CAAC;IACxB;IACA;IACA;IACA,IAAI,CAACD,yBAAyB,CACzBiI,IAAI,CAAC5K,oEAAoB,CAAC,CAAC,EAAEC,yDAAS,CAAC,IAAI,CAAC+J,QAAQ,CAAC,CAAC,CACtD8B,SAAS,CAAC,MAAM,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACR,SAAS,CAAC,CAAC;IAC9D,IAAI,CAAC5C,cAAc,CACdqD,MAAM,CAAC,CAAC,CACRpB,IAAI,CAAC3K,yDAAS,CAAC,IAAI,CAAC+J,QAAQ,CAAC,CAAC,CAC9B8B,SAAS,CAAC,MAAM;MACjB,IAAI,IAAI,CAACP,SAAS,EAAE;QAChB,IAAI,CAACU,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACC,uBAAuB,CAAC;QACxE,IAAI,CAACvD,kBAAkB,CAACwD,aAAa,CAAC,CAAC;MAC3C;IACJ,CAAC,CAAC;EACN;EACAC,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAAC5E,eAAe,CAAC6E,OAAO,CAAC3B,IAAI,CAAC3K,yDAAS,CAAC,IAAI,CAAC+J,QAAQ,CAAC,CAAC,CAAC8B,SAAS,CAACU,KAAK,IAAI;MAC3EA,KAAK,CAACC,KAAK,CAACC,OAAO,CAAC9G,MAAM,IAAIA,MAAM,CAAC+G,MAAM,CAAC,CAAC,CAAC;MAC9CH,KAAK,CAACI,OAAO,CAACF,OAAO,CAAC9G,MAAM,IAAIA,MAAM,CAACiH,QAAQ,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC;IACF,IAAI,CAAChH,OAAO,CAAC8E,OAAO,CAACC,IAAI,CAACjL,yDAAS,CAAC,IAAI,CAAC,EAAEM,yDAAS,CAAC,IAAI,CAAC+J,QAAQ,CAAC,CAAC,CAAC8B,SAAS,CAAC,MAAM;MACjF,IAAI,CAACgB,aAAa,CAAC,CAAC;MACpB,IAAI,CAAC/E,oBAAoB,CAAC,CAAC;IAC/B,CAAC,CAAC;EACN;EACAgF,SAASA,CAAA,EAAG;IACR,MAAMC,iBAAiB,GAAG,IAAI,CAACC,yBAAyB,CAAC,CAAC;IAC1D,MAAM3F,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC;IACA;IACA;IACA,IAAI0F,iBAAiB,KAAK,IAAI,CAACjD,sBAAsB,EAAE;MACnD,MAAM5D,OAAO,GAAG,IAAI,CAAC4C,WAAW,CAAC/C,aAAa;MAC9C,IAAI,CAAC+D,sBAAsB,GAAGiD,iBAAiB;MAC/C,IAAIA,iBAAiB,EAAE;QACnB7G,OAAO,CAAC+G,YAAY,CAAC,iBAAiB,EAAEF,iBAAiB,CAAC;MAC9D,CAAC,MACI;QACD7G,OAAO,CAACgH,eAAe,CAAC,iBAAiB,CAAC;MAC9C;IACJ;IACA,IAAI7F,SAAS,EAAE;MACX;MACA,IAAI,IAAI,CAAC8F,gBAAgB,KAAK9F,SAAS,CAACC,OAAO,EAAE;QAC7C,IAAI,IAAI,CAAC6F,gBAAgB,KAAKC,SAAS,IACnC/F,SAAS,CAACgD,QAAQ,KAAK,IAAI,IAC3BhD,SAAS,CAACgD,QAAQ,KAAK,IAAI,CAACA,QAAQ,EAAE;UACtC,IAAI,CAACA,QAAQ,GAAGhD,SAAS,CAACgD,QAAQ;QACtC;QACA,IAAI,CAAC8C,gBAAgB,GAAG9F,SAAS,CAACC,OAAO;MAC7C;MACA,IAAI,CAAC+F,gBAAgB,CAAC,CAAC;IAC3B;EACJ;EACAC,WAAWA,CAAC5C,OAAO,EAAE;IACjB;IACA;IACA,IAAIA,OAAO,CAAC,UAAU,CAAC,IAAIA,OAAO,CAAC,qBAAqB,CAAC,EAAE;MACvD,IAAI,CAACxD,YAAY,CAACvE,IAAI,CAAC,CAAC;IAC5B;IACA,IAAI+H,OAAO,CAAC,2BAA2B,CAAC,IAAI,IAAI,CAAClE,WAAW,EAAE;MAC1D,IAAI,CAACA,WAAW,CAAC+G,aAAa,CAAC,IAAI,CAAC/B,yBAAyB,CAAC;IAClE;EACJ;EACAgC,WAAWA,CAAA,EAAG;IACV,IAAI,CAAChH,WAAW,EAAEiH,OAAO,CAAC,CAAC;IAC3B,IAAI,CAAC1D,QAAQ,CAACpH,IAAI,CAAC,CAAC;IACpB,IAAI,CAACoH,QAAQ,CAAC2D,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACxG,YAAY,CAACwG,QAAQ,CAAC,CAAC;IAC5B,IAAI,CAACC,eAAe,CAAC,CAAC;EAC1B;EACA;EACAC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACtC,SAAS,GAAG,IAAI,CAACuC,KAAK,CAAC,CAAC,GAAG,IAAI,CAACC,IAAI,CAAC,CAAC;EAC/C;EACA;EACAA,IAAIA,CAAA,EAAG;IACH,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;MAClB;IACJ;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC7E,gBAAgB,EAAE;MACvB,IAAI,CAACgD,uBAAuB,GAAG,IAAI,CAAChD,gBAAgB,CAAC8E,yBAAyB,CAAC,CAAC;IACpF;IACA,IAAI,CAAChC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACC,uBAAuB,CAAC;IACxE,IAAI,CAAC+B,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAACpH,UAAU,GAAG,IAAI;IACtB,IAAI,CAACL,WAAW,CAAC0H,yBAAyB,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACxF,kBAAkB,CAACyF,YAAY,CAAC,CAAC;IACtC;IACA,IAAI,CAAClH,YAAY,CAACvE,IAAI,CAAC,CAAC;EAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIsL,yBAAyBA,CAAA,EAAG;IACxB;IACA;IACA;IACA;IACA;IACA;IACA,MAAMI,KAAK,GAAG,IAAI,CAACvF,WAAW,CAAC/C,aAAa,CAACuI,OAAO,CAAC,mDAAmD,CAAC;IACzG,IAAI,CAACD,KAAK,EAAE;MACR;MACA;IACJ;IACA,MAAME,OAAO,GAAI,GAAE,IAAI,CAACjL,EAAG,QAAO;IAClC,IAAI,IAAI,CAAC8H,aAAa,EAAE;MACpB5M,0EAAsB,CAAC,IAAI,CAAC4M,aAAa,EAAE,WAAW,EAAEmD,OAAO,CAAC;IACpE;IACA9P,uEAAmB,CAAC4P,KAAK,EAAE,WAAW,EAAEE,OAAO,CAAC;IAChD,IAAI,CAACnD,aAAa,GAAGiD,KAAK;EAC9B;EACA;EACAV,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC,IAAI,CAACvC,aAAa,EAAE;MACrB;MACA;IACJ;IACA,MAAMmD,OAAO,GAAI,GAAE,IAAI,CAACjL,EAAG,QAAO;IAClC9E,0EAAsB,CAAC,IAAI,CAAC4M,aAAa,EAAE,WAAW,EAAEmD,OAAO,CAAC;IAChE,IAAI,CAACnD,aAAa,GAAG,IAAI;EAC7B;EACA;EACAyC,KAAKA,CAAA,EAAG;IACJ,IAAI,IAAI,CAAChH,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,GAAG,KAAK;MACvB,IAAI,CAACL,WAAW,CAAC0H,yBAAyB,CAAC,IAAI,CAACM,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;MACzE,IAAI,CAAC7F,kBAAkB,CAACyF,YAAY,CAAC,CAAC;MACtC,IAAI,CAACpE,UAAU,CAAC,CAAC;MACjB;MACA,IAAI,CAAC9C,YAAY,CAACvE,IAAI,CAAC,CAAC;IAC5B;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACI8L,UAAUA,CAAClJ,KAAK,EAAE;IACd,IAAI,CAAC2C,YAAY,CAAC3C,KAAK,CAAC;EAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACImJ,gBAAgBA,CAAC7G,EAAE,EAAE;IACjB,IAAI,CAACM,SAAS,GAAGN,EAAE;EACvB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI8G,iBAAiBA,CAAC9G,EAAE,EAAE;IAClB,IAAI,CAACmC,UAAU,GAAGnC,EAAE;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;EACI+G,gBAAgBA,CAACC,UAAU,EAAE;IACzB,IAAI,CAACxE,QAAQ,GAAGwE,UAAU;IAC1B,IAAI,CAAClG,kBAAkB,CAACyF,YAAY,CAAC,CAAC;IACtC,IAAI,CAAClH,YAAY,CAACvE,IAAI,CAAC,CAAC;EAC5B;EACA;EACA,IAAI2I,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACzE,UAAU;EAC1B;EACA;EACA,IAAIiI,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACvL,QAAQ,GAAG,IAAI,CAACkE,eAAe,EAAEqH,QAAQ,IAAI,EAAE,GAAG,IAAI,CAACrH,eAAe,EAAEqH,QAAQ,CAAC,CAAC,CAAC;EACnG;EACA;EACA,IAAIrN,YAAYA,CAAA,EAAG;IACf,IAAI,IAAI,CAACsN,KAAK,EAAE;MACZ,OAAO,EAAE;IACb;IACA,IAAI,IAAI,CAACvH,SAAS,EAAE;MAChB,MAAMwH,eAAe,GAAG,IAAI,CAACvH,eAAe,CAACqH,QAAQ,CAAChP,GAAG,CAAC6F,MAAM,IAAIA,MAAM,CAACsJ,SAAS,CAAC;MACrF,IAAI,IAAI,CAACT,MAAM,CAAC,CAAC,EAAE;QACfQ,eAAe,CAACE,OAAO,CAAC,CAAC;MAC7B;MACA;MACA,OAAOF,eAAe,CAACG,IAAI,CAAC,IAAI,CAAC;IACrC;IACA,OAAO,IAAI,CAAC1H,eAAe,CAACqH,QAAQ,CAAC,CAAC,CAAC,CAACG,SAAS;EACrD;EACA;EACA5B,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAAChF,kBAAkB,CAACgF,gBAAgB,CAAC,CAAC;EAC9C;EACA;EACAmB,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAACzF,IAAI,GAAG,IAAI,CAACA,IAAI,CAACxD,KAAK,KAAK,KAAK,GAAG,KAAK;EACxD;EACA;EACAxC,cAAcA,CAACwJ,KAAK,EAAE;IAClB,IAAI,CAAC,IAAI,CAAClC,QAAQ,EAAE;MAChB,IAAI,CAACiB,SAAS,GAAG,IAAI,CAAC8D,kBAAkB,CAAC7C,KAAK,CAAC,GAAG,IAAI,CAAC8C,oBAAoB,CAAC9C,KAAK,CAAC;IACtF;EACJ;EACA;EACA8C,oBAAoBA,CAAC9C,KAAK,EAAE;IACxB,MAAM+C,OAAO,GAAG/C,KAAK,CAAC+C,OAAO;IAC7B,MAAMC,UAAU,GAAGD,OAAO,KAAKzQ,8DAAU,IACrCyQ,OAAO,KAAKxQ,4DAAQ,IACpBwQ,OAAO,KAAKvQ,8DAAU,IACtBuQ,OAAO,KAAKtQ,+DAAW;IAC3B,MAAMwQ,SAAS,GAAGF,OAAO,KAAKrQ,yDAAK,IAAIqQ,OAAO,KAAKpQ,yDAAK;IACxD,MAAMuQ,OAAO,GAAG,IAAI,CAACjJ,WAAW;IAChC;IACA,IAAK,CAACiJ,OAAO,CAACC,QAAQ,CAAC,CAAC,IAAIF,SAAS,IAAI,CAACrQ,sEAAc,CAACoN,KAAK,CAAC,IAC1D,CAAC,IAAI,CAAChJ,QAAQ,IAAIgJ,KAAK,CAACoD,MAAM,KAAKJ,UAAW,EAAE;MACjDhD,KAAK,CAACqD,cAAc,CAAC,CAAC,CAAC,CAAC;MACxB,IAAI,CAAC9B,IAAI,CAAC,CAAC;IACf,CAAC,MACI,IAAI,CAAC,IAAI,CAACvK,QAAQ,EAAE;MACrB,MAAMsM,wBAAwB,GAAG,IAAI,CAACf,QAAQ;MAC9CW,OAAO,CAACK,SAAS,CAACvD,KAAK,CAAC;MACxB,MAAMwD,cAAc,GAAG,IAAI,CAACjB,QAAQ;MACpC;MACA,IAAIiB,cAAc,IAAIF,wBAAwB,KAAKE,cAAc,EAAE;QAC/D;QACA;QACA,IAAI,CAAC1G,cAAc,CAAC2G,QAAQ,CAACD,cAAc,CAACd,SAAS,EAAE,KAAK,CAAC;MACjE;IACJ;EACJ;EACA;EACAG,kBAAkBA,CAAC7C,KAAK,EAAE;IACtB,MAAMkD,OAAO,GAAG,IAAI,CAACjJ,WAAW;IAChC,MAAM8I,OAAO,GAAG/C,KAAK,CAAC+C,OAAO;IAC7B,MAAMC,UAAU,GAAGD,OAAO,KAAKzQ,8DAAU,IAAIyQ,OAAO,KAAKxQ,4DAAQ;IACjE,MAAM4Q,QAAQ,GAAGD,OAAO,CAACC,QAAQ,CAAC,CAAC;IACnC,IAAIH,UAAU,IAAIhD,KAAK,CAACoD,MAAM,EAAE;MAC5B;MACApD,KAAK,CAACqD,cAAc,CAAC,CAAC;MACtB,IAAI,CAAC/B,KAAK,CAAC,CAAC;MACZ;MACA;IACJ,CAAC,MACI,IAAI,CAAC6B,QAAQ,KACbJ,OAAO,KAAKrQ,yDAAK,IAAIqQ,OAAO,KAAKpQ,yDAAK,CAAC,IACxCuQ,OAAO,CAACQ,UAAU,IAClB,CAAC9Q,sEAAc,CAACoN,KAAK,CAAC,EAAE;MACxBA,KAAK,CAACqD,cAAc,CAAC,CAAC;MACtBH,OAAO,CAACQ,UAAU,CAACC,qBAAqB,CAAC,CAAC;IAC9C,CAAC,MACI,IAAI,CAACR,QAAQ,IAAI,IAAI,CAAClI,SAAS,IAAI8H,OAAO,KAAKlQ,qDAAC,IAAImN,KAAK,CAAC4D,OAAO,EAAE;MACpE5D,KAAK,CAACqD,cAAc,CAAC,CAAC;MACtB,MAAMQ,oBAAoB,GAAG,IAAI,CAACxK,OAAO,CAACyK,IAAI,CAACC,GAAG,IAAI,CAACA,GAAG,CAACjG,QAAQ,IAAI,CAACiG,GAAG,CAACxB,QAAQ,CAAC;MACrF,IAAI,CAAClJ,OAAO,CAAC6G,OAAO,CAAC9G,MAAM,IAAI;QAC3B,IAAI,CAACA,MAAM,CAAC0E,QAAQ,EAAE;UAClB+F,oBAAoB,GAAGzK,MAAM,CAAC+G,MAAM,CAAC,CAAC,GAAG/G,MAAM,CAACiH,QAAQ,CAAC,CAAC;QAC9D;MACJ,CAAC,CAAC;IACN,CAAC,MACI;MACD,MAAM2D,sBAAsB,GAAGd,OAAO,CAAChJ,eAAe;MACtDgJ,OAAO,CAACK,SAAS,CAACvD,KAAK,CAAC;MACxB,IAAI,IAAI,CAAC/E,SAAS,IACd+H,UAAU,IACVhD,KAAK,CAACiE,QAAQ,IACdf,OAAO,CAACQ,UAAU,IAClBR,OAAO,CAAChJ,eAAe,KAAK8J,sBAAsB,EAAE;QACpDd,OAAO,CAACQ,UAAU,CAACC,qBAAqB,CAAC,CAAC;MAC9C;IACJ;EACJ;EACAO,QAAQA,CAAA,EAAG;IACP,IAAI,CAAC,IAAI,CAACpG,QAAQ,EAAE;MAChB,IAAI,CAACzD,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACM,YAAY,CAACvE,IAAI,CAAC,CAAC;IAC5B;EACJ;EACA;AACJ;AACA;AACA;EACI+N,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC9J,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACJ,WAAW,EAAEmK,eAAe,CAAC,CAAC;IACnC,IAAI,CAAC,IAAI,CAACtG,QAAQ,IAAI,CAAC,IAAI,CAACiB,SAAS,EAAE;MACnC,IAAI,CAACtB,UAAU,CAAC,CAAC;MACjB,IAAI,CAACrB,kBAAkB,CAACyF,YAAY,CAAC,CAAC;MACtC,IAAI,CAAClH,YAAY,CAACvE,IAAI,CAAC,CAAC;IAC5B;EACJ;EACA;AACJ;AACA;EACIiO,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,WAAW,CAACC,cAAc,CAACnG,IAAI,CAAC/K,oDAAI,CAAC,CAAC,CAAC,CAAC,CAACiM,SAAS,CAAC,MAAM;MAC1D,IAAI,CAAClD,kBAAkB,CAACwD,aAAa,CAAC,CAAC;MACvC,IAAI,CAAC5F,mBAAmB,CAAC,CAAC;IAC9B,CAAC,CAAC;EACN;EACA;EACArD,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACgG,gBAAgB,GAAI,OAAM,IAAI,CAACA,gBAAgB,CAAC6H,KAAM,EAAC,GAAG,EAAE;EAC5E;EACA;EACA,IAAIhC,KAAKA,CAAA,EAAG;IACR,OAAO,CAAC,IAAI,CAACtH,eAAe,IAAI,IAAI,CAACA,eAAe,CAACuJ,OAAO,CAAC,CAAC;EAClE;EACAlJ,oBAAoBA,CAAA,EAAG;IACnB;IACA;IACAmJ,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACzB,IAAI,IAAI,CAAC9J,SAAS,EAAE;QAChB,IAAI,CAACU,MAAM,GAAG,IAAI,CAACV,SAAS,CAAC9B,KAAK;MACtC;MACA,IAAI,CAAC6L,oBAAoB,CAAC,IAAI,CAACrJ,MAAM,CAAC;MACtC,IAAI,CAACb,YAAY,CAACvE,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;EACIyO,oBAAoBA,CAAC7L,KAAK,EAAE;IACxB,IAAI,CAACK,OAAO,CAAC6G,OAAO,CAAC9G,MAAM,IAAIA,MAAM,CAAC0L,iBAAiB,CAAC,CAAC,CAAC;IAC1D,IAAI,CAAC5J,eAAe,CAAC6J,KAAK,CAAC,CAAC;IAC5B,IAAI,IAAI,CAAC/N,QAAQ,IAAIgC,KAAK,EAAE;MACxB,IAAI,CAACgM,KAAK,CAACC,OAAO,CAACjM,KAAK,CAAC,KAAK,OAAOmC,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;QAC1E,MAAMtD,8BAA8B,CAAC,CAAC;MAC1C;MACAmB,KAAK,CAACkH,OAAO,CAAEgF,YAAY,IAAK,IAAI,CAACC,oBAAoB,CAACD,YAAY,CAAC,CAAC;MACxE,IAAI,CAACE,WAAW,CAAC,CAAC;IACtB,CAAC,MACI;MACD,MAAMC,mBAAmB,GAAG,IAAI,CAACF,oBAAoB,CAACnM,KAAK,CAAC;MAC5D;MACA;MACA,IAAIqM,mBAAmB,EAAE;QACrB,IAAI,CAACpL,WAAW,CAACqL,gBAAgB,CAACD,mBAAmB,CAAC;MAC1D,CAAC,MACI,IAAI,CAAC,IAAI,CAACtG,SAAS,EAAE;QACtB;QACA;QACA,IAAI,CAAC9E,WAAW,CAACqL,gBAAgB,CAAC,CAAC,CAAC,CAAC;MACzC;IACJ;IACA,IAAI,CAAClJ,kBAAkB,CAACyF,YAAY,CAAC,CAAC;EAC1C;EACA;AACJ;AACA;AACA;EACIsD,oBAAoBA,CAACnM,KAAK,EAAE;IACxB,MAAMqM,mBAAmB,GAAG,IAAI,CAAChM,OAAO,CAACkM,IAAI,CAAEnM,MAAM,IAAK;MACtD;MACA;MACA,IAAI,IAAI,CAAC8B,eAAe,CAACsK,UAAU,CAACpM,MAAM,CAAC,EAAE;QACzC,OAAO,KAAK;MAChB;MACA,IAAI;QACA;QACA,OAAOA,MAAM,CAACJ,KAAK,IAAI,IAAI,IAAI,IAAI,CAACqC,YAAY,CAACjC,MAAM,CAACJ,KAAK,EAAEA,KAAK,CAAC;MACzE,CAAC,CACD,OAAOyM,KAAK,EAAE;QACV,IAAI,OAAOtK,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;UAC/C;UACAuK,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;QACvB;QACA,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC;IACF,IAAIJ,mBAAmB,EAAE;MACrB,IAAI,CAACnK,eAAe,CAACiF,MAAM,CAACkF,mBAAmB,CAAC;IACpD;IACA,OAAOA,mBAAmB;EAC9B;EACA;EACA1J,YAAYA,CAACF,QAAQ,EAAE;IACnB;IACA,IAAIA,QAAQ,KAAK,IAAI,CAACD,MAAM,IAAK,IAAI,CAACP,SAAS,IAAI+J,KAAK,CAACC,OAAO,CAACxJ,QAAQ,CAAE,EAAE;MACzE,IAAI,IAAI,CAACpC,OAAO,EAAE;QACd,IAAI,CAACwL,oBAAoB,CAACpJ,QAAQ,CAAC;MACvC;MACA,IAAI,CAACD,MAAM,GAAGC,QAAQ;MACtB,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACA;EACAiE,gBAAgBA,CAACkG,eAAe,EAAE;IAC9B,IAAI,IAAI,CAAC3H,UAAU,KAAK,MAAM,EAAE;MAC5B,MAAM4H,YAAY,GAAGD,eAAe,YAAY3W,kEAAgB,GAC1D2W,eAAe,CAACE,UAAU,GAC1BF,eAAe,IAAI,IAAI,CAACrJ,WAAW;MACzC,OAAOsJ,YAAY,CAACrM,aAAa,CAACuM,qBAAqB,CAAC,CAAC,CAACC,KAAK;IACnE;IACA,OAAO,IAAI,CAAC/H,UAAU,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,CAACA,UAAU;EAC1D;EACA;EACAxD,qBAAqBA,CAAA,EAAG;IACpB,IAAI,IAAI,CAACpB,OAAO,EAAE;MACd,KAAK,MAAMD,MAAM,IAAI,IAAI,CAACC,OAAO,EAAE;QAC/BD,MAAM,CAACgD,kBAAkB,CAACyF,YAAY,CAAC,CAAC;MAC5C;IACJ;EACJ;EACA;EACA/B,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC7F,WAAW,GAAG,IAAI9H,0EAA0B,CAAC,IAAI,CAACkH,OAAO,CAAC,CAC1D2H,aAAa,CAAC,IAAI,CAAC/B,yBAAyB,CAAC,CAC7CgH,uBAAuB,CAAC,CAAC,CACzBtE,yBAAyB,CAAC,IAAI,CAACM,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CACxDiE,cAAc,CAAC,CAAC,CAChBC,cAAc,CAAC,CAAC,CAChBC,uBAAuB,CAAC,CAAC,UAAU,CAAC,CAAC,CACrCC,aAAa,CAAC,IAAI,CAACvH,cAAc,CAAC;IACvC,IAAI,CAAC7E,WAAW,CAACqM,MAAM,CAAChH,SAAS,CAAC,MAAM;MACpC,IAAI,IAAI,CAACP,SAAS,EAAE;QAChB;QACA;QACA,IAAI,CAAC,IAAI,CAAC/H,QAAQ,IAAI,IAAI,CAACiD,WAAW,CAACyJ,UAAU,EAAE;UAC/C,IAAI,CAACzJ,WAAW,CAACyJ,UAAU,CAACC,qBAAqB,CAAC,CAAC;QACvD;QACA;QACA;QACA,IAAI,CAAC4C,KAAK,CAAC,CAAC;QACZ,IAAI,CAACjF,KAAK,CAAC,CAAC;MAChB;IACJ,CAAC,CAAC;IACF,IAAI,CAACrH,WAAW,CAACuF,MAAM,CAACF,SAAS,CAAC,MAAM;MACpC,IAAI,IAAI,CAAChF,UAAU,IAAI,IAAI,CAACf,KAAK,EAAE;QAC/B,IAAI,CAACL,qBAAqB,CAAC,IAAI,CAACe,WAAW,CAACC,eAAe,IAAI,CAAC,CAAC;MACrE,CAAC,MACI,IAAI,CAAC,IAAI,CAACI,UAAU,IAAI,CAAC,IAAI,CAACtD,QAAQ,IAAI,IAAI,CAACiD,WAAW,CAACyJ,UAAU,EAAE;QACxE,IAAI,CAACzJ,WAAW,CAACyJ,UAAU,CAACC,qBAAqB,CAAC,CAAC;MACvD;IACJ,CAAC,CAAC;EACN;EACA;EACArD,aAAaA,CAAA,EAAG;IACZ,MAAMkG,kBAAkB,GAAGtT,2CAAK,CAAC,IAAI,CAACmG,OAAO,CAAC8E,OAAO,EAAE,IAAI,CAACX,QAAQ,CAAC;IACrE,IAAI,CAACU,sBAAsB,CAACE,IAAI,CAAC3K,yDAAS,CAAC+S,kBAAkB,CAAC,CAAC,CAAClH,SAAS,CAACU,KAAK,IAAI;MAC/E,IAAI,CAACyG,SAAS,CAACzG,KAAK,CAACjH,MAAM,EAAEiH,KAAK,CAAC0G,WAAW,CAAC;MAC/C,IAAI1G,KAAK,CAAC0G,WAAW,IAAI,CAAC,IAAI,CAAC1P,QAAQ,IAAI,IAAI,CAACsD,UAAU,EAAE;QACxD,IAAI,CAACgH,KAAK,CAAC,CAAC;QACZ,IAAI,CAACiF,KAAK,CAAC,CAAC;MAChB;IACJ,CAAC,CAAC;IACF;IACA;IACArT,2CAAK,CAAC,GAAG,IAAI,CAACmG,OAAO,CAAC9F,GAAG,CAAC6F,MAAM,IAAIA,MAAM,CAACuN,aAAa,CAAC,CAAC,CACrDvI,IAAI,CAAC3K,yDAAS,CAAC+S,kBAAkB,CAAC,CAAC,CACnClH,SAAS,CAAC,MAAM;MACjB;MACA;MACA;MACA,IAAI,CAAClD,kBAAkB,CAACwD,aAAa,CAAC,CAAC;MACvC,IAAI,CAACjF,YAAY,CAACvE,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC;EACN;EACA;EACAqQ,SAASA,CAACrN,MAAM,EAAEsN,WAAW,EAAE;IAC3B,MAAME,WAAW,GAAG,IAAI,CAAC1L,eAAe,CAACsK,UAAU,CAACpM,MAAM,CAAC;IAC3D,IAAIA,MAAM,CAACJ,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAACiC,SAAS,EAAE;MACzC7B,MAAM,CAACiH,QAAQ,CAAC,CAAC;MACjB,IAAI,CAACnF,eAAe,CAAC6J,KAAK,CAAC,CAAC;MAC5B,IAAI,IAAI,CAAC/L,KAAK,IAAI,IAAI,EAAE;QACpB,IAAI,CAAC6N,iBAAiB,CAACzN,MAAM,CAACJ,KAAK,CAAC;MACxC;IACJ,CAAC,MACI;MACD,IAAI4N,WAAW,KAAKxN,MAAM,CAACmJ,QAAQ,EAAE;QACjCnJ,MAAM,CAACmJ,QAAQ,GACT,IAAI,CAACrH,eAAe,CAACiF,MAAM,CAAC/G,MAAM,CAAC,GACnC,IAAI,CAAC8B,eAAe,CAACmF,QAAQ,CAACjH,MAAM,CAAC;MAC/C;MACA,IAAIsN,WAAW,EAAE;QACb,IAAI,CAACzM,WAAW,CAAC6M,aAAa,CAAC1N,MAAM,CAAC;MAC1C;MACA,IAAI,IAAI,CAACpC,QAAQ,EAAE;QACf,IAAI,CAACoO,WAAW,CAAC,CAAC;QAClB,IAAIsB,WAAW,EAAE;UACb;UACA;UACA;UACA;UACA,IAAI,CAACH,KAAK,CAAC,CAAC;QAChB;MACJ;IACJ;IACA,IAAIK,WAAW,KAAK,IAAI,CAAC1L,eAAe,CAACsK,UAAU,CAACpM,MAAM,CAAC,EAAE;MACzD,IAAI,CAACyN,iBAAiB,CAAC,CAAC;IAC5B;IACA,IAAI,CAAClM,YAAY,CAACvE,IAAI,CAAC,CAAC;EAC5B;EACA;EACAgP,WAAWA,CAAA,EAAG;IACV,IAAI,IAAI,CAACpO,QAAQ,EAAE;MACf,MAAMqC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACC,OAAO,CAAC,CAAC;MACtC,IAAI,CAAC4B,eAAe,CAAC6L,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAChC,OAAO,IAAI,CAACC,cAAc,GACpB,IAAI,CAACA,cAAc,CAACF,CAAC,EAAEC,CAAC,EAAE5N,OAAO,CAAC,GAClCA,OAAO,CAAC8N,OAAO,CAACH,CAAC,CAAC,GAAG3N,OAAO,CAAC8N,OAAO,CAACF,CAAC,CAAC;MACjD,CAAC,CAAC;MACF,IAAI,CAACtM,YAAY,CAACvE,IAAI,CAAC,CAAC;IAC5B;EACJ;EACA;EACAyQ,iBAAiBA,CAACO,aAAa,EAAE;IAC7B,IAAIC,WAAW;IACf,IAAI,IAAI,CAACrQ,QAAQ,EAAE;MACfqQ,WAAW,GAAG,IAAI,CAAC9E,QAAQ,CAAChP,GAAG,CAAC6F,MAAM,IAAIA,MAAM,CAACJ,KAAK,CAAC;IAC3D,CAAC,MACI;MACDqO,WAAW,GAAG,IAAI,CAAC9E,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACvJ,KAAK,GAAGoO,aAAa;IACrE;IACA,IAAI,CAAC5L,MAAM,GAAG6L,WAAW;IACzB,IAAI,CAACzI,WAAW,CAAC0I,IAAI,CAACD,WAAW,CAAC;IAClC,IAAI,CAACzL,SAAS,CAACyL,WAAW,CAAC;IAC3B,IAAI,CAAC1I,eAAe,CAAC2I,IAAI,CAAC,IAAI,CAACnN,eAAe,CAACkN,WAAW,CAAC,CAAC;IAC5D,IAAI,CAACjL,kBAAkB,CAACyF,YAAY,CAAC,CAAC;EAC1C;EACA;AACJ;AACA;AACA;EACID,uBAAuBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAAC3H,WAAW,EAAE;MAClB,IAAI,IAAI,CAACuI,KAAK,EAAE;QACZ;QACA;QACA;QACA,IAAI+E,uBAAuB,GAAG,CAAC,CAAC;QAChC,KAAK,IAAIpO,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACE,OAAO,CAACmO,MAAM,EAAErO,KAAK,EAAE,EAAE;UACtD,MAAMC,MAAM,GAAG,IAAI,CAACC,OAAO,CAACoO,GAAG,CAACtO,KAAK,CAAC;UACtC,IAAI,CAACC,MAAM,CAAC0E,QAAQ,EAAE;YAClByJ,uBAAuB,GAAGpO,KAAK;YAC/B;UACJ;QACJ;QACA,IAAI,CAACc,WAAW,CAAC6M,aAAa,CAACS,uBAAuB,CAAC;MAC3D,CAAC,MACI;QACD,IAAI,CAACtN,WAAW,CAAC6M,aAAa,CAAC,IAAI,CAAC5L,eAAe,CAACqH,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpE;IACJ;EACJ;EACA;EACAf,QAAQA,CAAA,EAAG;IACP,OAAO,CAAC,IAAI,CAAClH,UAAU,IAAI,CAAC,IAAI,CAACwD,QAAQ,IAAI,IAAI,CAACzE,OAAO,EAAEmO,MAAM,GAAG,CAAC;EACzE;EACA;EACAjB,KAAKA,CAAClN,OAAO,EAAE;IACX,IAAI,CAACkD,WAAW,CAAC/C,aAAa,CAAC+M,KAAK,CAAClN,OAAO,CAAC;EACjD;EACA;EACAnC,uBAAuBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAACD,SAAS,EAAE;MAChB,OAAO,IAAI;IACf;IACA,MAAMyQ,OAAO,GAAG,IAAI,CAAC/K,gBAAgB,EAAEgL,UAAU,CAAC,CAAC;IACnD,MAAMC,eAAe,GAAGF,OAAO,GAAGA,OAAO,GAAG,GAAG,GAAG,EAAE;IACpD,OAAO,IAAI,CAACG,cAAc,GAAGD,eAAe,GAAG,IAAI,CAACC,cAAc,GAAGH,OAAO;EAChF;EACA;EACAI,wBAAwBA,CAAA,EAAG;IACvB,IAAI,IAAI,CAAC/I,SAAS,IAAI,IAAI,CAAC9E,WAAW,IAAI,IAAI,CAACA,WAAW,CAACyJ,UAAU,EAAE;MACnE,OAAO,IAAI,CAACzJ,WAAW,CAACyJ,UAAU,CAAC3M,EAAE;IACzC;IACA,OAAO,IAAI;EACf;EACA;EACA0J,yBAAyBA,CAAA,EAAG;IACxB,IAAI,IAAI,CAACxJ,SAAS,EAAE;MAChB,OAAO,IAAI;IACf;IACA,MAAMyQ,OAAO,GAAG,IAAI,CAAC/K,gBAAgB,EAAEgL,UAAU,CAAC,CAAC;IACnD,IAAI3O,KAAK,GAAG,CAAC0O,OAAO,GAAGA,OAAO,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,CAAChK,QAAQ;IAC1D,IAAI,IAAI,CAACmK,cAAc,EAAE;MACrB7O,KAAK,IAAI,GAAG,GAAG,IAAI,CAAC6O,cAAc;IACtC;IACA,OAAO7O,KAAK;EAChB;EACA;EACAuG,mBAAmBA,CAACwI,MAAM,EAAE;IACxB,IAAI,CAACxJ,YAAY,CAAC+I,IAAI,CAACS,MAAM,CAAC;EAClC;EACA;AACJ;AACA;AACA;EACIC,iBAAiBA,CAACC,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACT,MAAM,EAAE;MACZ,IAAI,CAACjL,WAAW,CAAC/C,aAAa,CAACkH,YAAY,CAAC,kBAAkB,EAAEuH,GAAG,CAACrF,IAAI,CAAC,GAAG,CAAC,CAAC;IAClF,CAAC,MACI;MACD,IAAI,CAACrG,WAAW,CAAC/C,aAAa,CAACmH,eAAe,CAAC,kBAAkB,CAAC;IACtE;EACJ;EACA;AACJ;AACA;AACA;EACIuH,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAAC3B,KAAK,CAAC,CAAC;IACZ,IAAI,CAAChF,IAAI,CAAC,CAAC;EACf;EACA;AACJ;AACA;AACA;EACI,IAAI4G,gBAAgBA,CAAA,EAAG;IACnB;IACA;IACA,OAAO,IAAI,CAACpJ,SAAS,IAAI,CAAC,IAAI,CAACyD,KAAK,IAAK,IAAI,CAACpI,OAAO,IAAI,CAAC,CAAC,IAAI,CAACvF,WAAY;EAChF;EAAC,QAAAuT,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAC,kBAAAC,CAAA;IAAA,YAAAA,CAAA,IAA+FtP,SAAS,EAAnB3J,+DAAE,CAAmCwC,kEAAgB,GAArDxC,+DAAE,CAAgEA,4DAAoB,GAAtFA,+DAAE,CAAiGA,iDAAS,GAA5GA,+DAAE,CAAuHoB,qEAAoB,GAA7IpB,+DAAE,CAAwJA,qDAAa,GAAvKA,+DAAE,CAAkL8C,8DAAiB,MAArM9C,+DAAE,CAAgOwD,kDAAS,MAA3OxD,+DAAE,CAAsQwD,8DAAqB,MAA7RxD,+DAAE,CAAwT+B,wEAAc,MAAxU/B,+DAAE,CAAmWwD,qDAAY,OAAjXxD,+DAAE,CAAwZ,UAAU,GAApaA,+DAAE,CAAgc0I,0BAA0B,GAA5d1I,+DAAE,CAAue0C,6DAAgB,GAAzf1C,+DAAE,CAAogBiJ,iBAAiB;EAAA,CAA4D;EAAA,QAAA6Q,EAAA,GACjrB,IAAI,CAACC,IAAI,kBADqF/Z,+DAAE;IAAAia,IAAA,EACJtQ,SAAS;IAAAuQ,SAAA;IAAAC,cAAA,WAAAC,yBAAAtV,EAAA,EAAAC,GAAA,EAAAsV,QAAA;MAAA,IAAAvV,EAAA;QADP9E,4DAAE,CAAAqa,QAAA,EAI/B/Q,kBAAkB;QAJWtJ,4DAAE,CAAAqa,QAAA,EAIgD5Y,6DAAS;QAJ3DzB,4DAAE,CAAAqa,QAAA,EAI2H3Y,gEAAY;MAAA;MAAA,IAAAoD,EAAA;QAAA,IAAAyV,EAAA;QAJzIva,4DAAE,CAAAua,EAAA,GAAFva,yDAAE,QAAA+E,GAAA,CAAAkB,aAAA,GAAAsU,EAAA,CAAAG,KAAA;QAAF1a,4DAAE,CAAAua,EAAA,GAAFva,yDAAE,QAAA+E,GAAA,CAAAgF,OAAA,GAAAwQ,EAAA;QAAFva,4DAAE,CAAAua,EAAA,GAAFva,yDAAE,QAAA+E,GAAA,CAAAqF,YAAA,GAAAmQ,EAAA;MAAA;IAAA;IAAAI,SAAA,WAAAC,gBAAA9V,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAF9E,yDAAE,CAAA2E,GAAA;QAAF3E,yDAAE,CAAA4E,GAAA;QAAF5E,yDAAE,CAI0YJ,qEAAmB;MAAA;MAAA,IAAAkF,EAAA;QAAA,IAAAyV,EAAA;QAJ/Zva,4DAAE,CAAAua,EAAA,GAAFva,yDAAE,QAAA+E,GAAA,CAAAX,OAAA,GAAAmW,EAAA,CAAAG,KAAA;QAAF1a,4DAAE,CAAAua,EAAA,GAAFva,yDAAE,QAAA+E,GAAA,CAAAkF,KAAA,GAAAsQ,EAAA,CAAAG,KAAA;QAAF1a,4DAAE,CAAAua,EAAA,GAAFva,yDAAE,QAAA+E,GAAA,CAAAiQ,WAAA,GAAAuF,EAAA,CAAAG,KAAA;MAAA;IAAA;IAAAI,SAAA,WACyuC,UAAU,uBAAuB,MAAM,mBAAmB,SAAS;IAAAC,QAAA;IAAAC,YAAA,WAAAC,uBAAAnW,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAD9yC9E,wDAAE,qBAAAkb,qCAAAzU,MAAA;UAAA,OACJ1B,GAAA,CAAAmC,cAAA,CAAAT,MAAqB,CAAC;QAAA,qBAAA0U,mCAAA;UAAA,OAAtBpW,GAAA,CAAA6P,QAAA,CAAS,CAAC;QAAA,oBAAAwG,kCAAA;UAAA,OAAVrW,GAAA,CAAA8P,OAAA,CAAQ,CAAC;QAAA;MAAA;MAAA,IAAA/P,EAAA;QADP9E,yDAAE,OAAA+E,GAAA,CAAA0C,EAAA,cAAA1C,GAAA,CAAAyJ,QAAA,QAAAzJ,GAAA,CAAAuI,QAAA,mBAAAvI,GAAA,CAAA0K,SAAA,GAAA1K,GAAA,CAAA0C,EAAA,qCAAA1C,GAAA,CAAA0K,SAAA,gBAAA1K,GAAA,CAAA4C,SAAA,2BAAA5C,GAAA,CAAAuG,QAAA,CAAA+P,QAAA,qBAAAtW,GAAA,CAAAyJ,QAAA,CAAA6M,QAAA,oBAAAtW,GAAA,CAAA6H,UAAA,2BAAA7H,GAAA,CAAAyT,wBAAA;QAAFxY,yDAAE,4BAAA+E,GAAA,CAAAyJ,QAAA,4BAAAzJ,GAAA,CAAA6H,UAAA,6BAAA7H,GAAA,CAAAuG,QAAA,0BAAAvG,GAAA,CAAAmO,KAAA,6BAAAnO,GAAA,CAAA2C,QAAA;MAAA;IAAA;IAAA6T,MAAA;MAAAC,mBAAA,GAAFxb,0DAAE,CAAA0b,IAAA;MAAAnU,UAAA;MAAAiH,QAAA,GAAFxO,0DAAE,CAAA2b,0BAAA,0BAC4Lvb,2DAAgB;MAAAqO,aAAA,GAD9MzO,0DAAE,CAAA2b,0BAAA,oCACiQvb,2DAAgB;MAAAkN,QAAA,GADnRtN,0DAAE,CAAA2b,0BAAA,0BACwTjS,KAAK,IAAMA,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGrJ,8DAAe,CAACqJ,KAAK,CAAE;MAAAuB,4BAAA,GADhXjL,0DAAE,CAAA2b,0BAAA,kEACgdvb,2DAAgB;MAAAmF,WAAA;MAAA+F,QAAA,GADletL,0DAAE,CAAA2b,0BAAA,0BACkiBvb,2DAAgB;MAAAsH,QAAA,GADpjB1H,0DAAE,CAAA2b,0BAAA,0BACwlBvb,2DAAgB;MAAAsO,sBAAA,GAD1mB1O,0DAAE,CAAA2b,0BAAA,sDACwrBvb,2DAAgB;MAAA0L,WAAA;MAAApC,KAAA;MAAA/B,SAAA,GAD1sB3H,0DAAE,CAAA0b,IAAA;MAAAnD,cAAA,GAAFvY,0DAAE,CAAA0b,IAAA;MAAAnP,iBAAA;MAAAoD,yBAAA,GAAF3P,0DAAE,CAAA2b,0BAAA,4DACo9Btb,0DAAe;MAAAuX,cAAA;MAAAnQ,EAAA;MAAAkH,UAAA;IAAA;IAAAiN,OAAA;MAAA3M,YAAA;MAAAC,aAAA;MAAAE,aAAA;MAAAC,eAAA;MAAAC,WAAA;IAAA;IAAAuM,QAAA;IAAAC,UAAA;IAAAC,QAAA,GADr+B/b,gEAAE,CACyiE,CAC1oE;MAAEmJ,OAAO,EAAEnH,6EAAmB;MAAEia,WAAW,EAAEtS;IAAU,CAAC,EACxD;MAAER,OAAO,EAAE3H,+EAA2B;MAAEya,WAAW,EAAEtS;IAAU,CAAC,CACnE,GAJkG3J,sEAAE,EAAFA,kEAAE,EAAFA,iEAAE;IAAAqc,kBAAA,EAAAvU,GAAA;IAAAwU,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mBAAA5X,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAF9E,6DAAE,CAAA6H,GAAA;QAAF7H,4DAAE,eAIopB,CAAC;QAJvpBA,wDAAE,mBAAA4c,wCAAA;UAAA,OAI2kB7X,GAAA,CAAAkN,IAAA,CAAK,CAAC;QAAA,CAAC,CAAC;QAJrlBjS,4DAAE,YAIqtB,CAAC;QAJxtBA,wDAAE,IAAA6E,gCAAA,iBAIg1B,CAAC,IAAAgB,gCAAA,MAAD,CAAC;QAJn1B7F,0DAAE,CAIqnC,CAAC;QAJxnCA,4DAAE,YAIuqC,CAAC,YAAD,CAAC;QAJ1qCA,4DAAE,CAIk6C,CAAC;QAJr6CA,4DAAE,YAIk6C,CAAC;QAJr6CA,uDAAE,aAIw8C,CAAC;QAJ38CA,0DAAE,CAIs9C,CAAC,CAAD,CAAC,CAAD,CAAC,CAAD,CAAC;QAJz9CA,wDAAE,KAAAkG,iCAAA,wBAIoqF,CAAC;QAJvqFlG,wDAAE,2BAAA8c,yDAAA;UAAA,OAIuhE/X,GAAA,CAAAiN,KAAA,CAAM,CAAC;QAAA,CAAC,CAAC,oBAAA+K,kDAAA;UAAA,OAAehY,GAAA,CAAAgQ,WAAA,CAAY,CAAC;QAAA,CAA7B,CAAC,oBAAAiI,kDAAA;UAAA,OAA6CjY,GAAA,CAAAiN,KAAA,CAAM,CAAC;QAAA,CAArD,CAAC;MAAA;MAAA,IAAAlN,EAAA;QAAA,MAAAmY,GAAA,GAJliEjd,yDAAE;QAAFA,uDAAE,EAIotB,CAAC;QAJvtBA,yDAAE,OAAA+E,GAAA,CAAAqJ,QAIotB,CAAC;QAJvtBpO,uDAAE,CAIg1B,CAAC;QAJn1BA,2DAAE,IAAA+E,GAAA,CAAAmO,KAAA,QAIg1B,CAAC;QAJn1BlT,uDAAE,EAIquD,CAAC;QAJxuDA,wDAAE,kCAAA+E,GAAA,CAAAsJ,kBAIquD,CAAC,sCAAAtJ,GAAA,CAAA8K,eAAD,CAAC,8BAAA9K,GAAA,CAAAsL,uBAAA,IAAA4M,GAAD,CAAC,4BAAAlY,GAAA,CAAA0K,SAAD,CAAC,iCAAA1K,GAAA,CAAA2I,UAAD,CAAC,6BAAA3I,GAAA,CAAAoL,aAAD,CAAC;MAAA;IAAA;IAAAgN,YAAA,GAA0qJxd,kEAAgB,EAAuIC,qEAAmB,EAA4+BE,oDAAO;IAAAsd,MAAA;IAAAC,aAAA;IAAAC,IAAA;MAAAC,SAAA,EAAsE,CAACxV,mBAAmB,CAACG,cAAc;IAAC;IAAAsV,eAAA;EAAA,EAAiG;AACr2P;AACA;EAAA,QAAA3R,SAAA,oBAAAA,SAAA,KAN2G7L,+DAAE,CAMX2J,SAAS,EAAc,CAAC;IAC9GsQ,IAAI,EAAE3Z,oDAAS;IACfod,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,YAAY;MAAE9B,QAAQ,EAAE,WAAW;MAAEwB,aAAa,EAAE9c,4DAAiB,CAACmb,IAAI;MAAE8B,eAAe,EAAEhd,kEAAuB,CAACod,MAAM;MAAEC,IAAI,EAAE;QAC1I,MAAM,EAAE,UAAU;QAClB,mBAAmB,EAAE,MAAM;QAC3B,eAAe,EAAE,SAAS;QAC1B,OAAO,EAAE,gBAAgB;QACzB,WAAW,EAAE,IAAI;QACjB,iBAAiB,EAAE,0BAA0B;QAC7C,sBAAsB,EAAE,kCAAkC;QAC1D,sBAAsB,EAAE,WAAW;QACnC,mBAAmB,EAAE,mBAAmB;QACxC,sBAAsB,EAAE,qBAAqB;QAC7C,sBAAsB,EAAE,qBAAqB;QAC7C,qBAAqB,EAAE,YAAY;QACnC,8BAA8B,EAAE,4BAA4B;QAC5D,iCAAiC,EAAE,UAAU;QAC7C,gCAAgC,EAAE,YAAY;QAC9C,iCAAiC,EAAE,UAAU;QAC7C,8BAA8B,EAAE,OAAO;QACvC,iCAAiC,EAAE,UAAU;QAC7C,WAAW,EAAE,wBAAwB;QACrC,SAAS,EAAE,YAAY;QACvB,QAAQ,EAAE;MACd,CAAC;MAAEC,UAAU,EAAE,CAAC/V,mBAAmB,CAACG,cAAc,CAAC;MAAE6V,SAAS,EAAE,CAC5D;QAAE5U,OAAO,EAAEnH,6EAAmB;QAAEia,WAAW,EAAEtS;MAAU,CAAC,EACxD;QAAER,OAAO,EAAE3H,+EAA2B;QAAEya,WAAW,EAAEtS;MAAU,CAAC,CACnE;MAAEmS,UAAU,EAAE,IAAI;MAAEkC,OAAO,EAAE,CAACre,kEAAgB,EAAEC,qEAAmB,EAAEE,oDAAO,CAAC;MAAE2c,QAAQ,EAAE,6qEAA6qE;MAAEW,MAAM,EAAE,CAAC,grHAAgrH;IAAE,CAAC;EACj9L,CAAC,CAAC,EAAkB,MAAM,CAAC;IAAEnD,IAAI,EAAEzX,kEAAgB2W;EAAC,CAAC,EAAE;IAAEc,IAAI,EAAEja,4DAAoBoZ;EAAC,CAAC,EAAE;IAAEa,IAAI,EAAEja,iDAASqZ;EAAC,CAAC,EAAE;IAAEY,IAAI,EAAE7Y,qEAAoBkY;EAAC,CAAC,EAAE;IAAEW,IAAI,EAAEja,qDAAauZ;EAAC,CAAC,EAAE;IAAEU,IAAI,EAAEnX,8DAAiB;IAAEmb,UAAU,EAAE,CAAC;MACjMhE,IAAI,EAAExZ,mDAAQA;IAClB,CAAC;EAAE,CAAC,EAAE;IAAEwZ,IAAI,EAAEzW,kDAAS;IAAEya,UAAU,EAAE,CAAC;MAClChE,IAAI,EAAExZ,mDAAQA;IAClB,CAAC;EAAE,CAAC,EAAE;IAAEwZ,IAAI,EAAEzW,8DAAqB;IAAEya,UAAU,EAAE,CAAC;MAC9ChE,IAAI,EAAExZ,mDAAQA;IAClB,CAAC;EAAE,CAAC,EAAE;IAAEwZ,IAAI,EAAEnY,sEAAe;IAAEmc,UAAU,EAAE,CAAC;MACxChE,IAAI,EAAExZ,mDAAQA;IAClB,CAAC,EAAE;MACCwZ,IAAI,EAAEvZ,iDAAM;MACZgd,IAAI,EAAE,CAAC3b,wEAAc;IACzB,CAAC;EAAE,CAAC,EAAE;IAAEkY,IAAI,EAAEzW,qDAAY;IAAEya,UAAU,EAAE,CAAC;MACrChE,IAAI,EAAEtZ,+CAAIA;IACd,CAAC,EAAE;MACCsZ,IAAI,EAAExZ,mDAAQA;IAClB,CAAC;EAAE,CAAC,EAAE;IAAEwZ,IAAI,EAAE1I,SAAS;IAAE0M,UAAU,EAAE,CAAC;MAClChE,IAAI,EAAErZ,oDAAS;MACf8c,IAAI,EAAE,CAAC,UAAU;IACrB,CAAC;EAAE,CAAC,EAAE;IAAEzD,IAAI,EAAE1I,SAAS;IAAE0M,UAAU,EAAE,CAAC;MAClChE,IAAI,EAAEvZ,iDAAM;MACZgd,IAAI,EAAE,CAAChV,0BAA0B;IACrC,CAAC;EAAE,CAAC,EAAE;IAAEuR,IAAI,EAAEvX,6DAAgBmX;EAAC,CAAC,EAAE;IAAEI,IAAI,EAAE1I,SAAS;IAAE0M,UAAU,EAAE,CAAC;MAC9DhE,IAAI,EAAExZ,mDAAQA;IAClB,CAAC,EAAE;MACCwZ,IAAI,EAAEvZ,iDAAM;MACZgd,IAAI,EAAE,CAACzU,iBAAiB;IAC5B,CAAC;EAAE,CAAC,CAAC,EAAkB;IAAEc,OAAO,EAAE,CAAC;MACnCkQ,IAAI,EAAEpZ,0DAAe;MACrB6c,IAAI,EAAE,CAACjc,6DAAS,EAAE;QAAEyc,WAAW,EAAE;MAAK,CAAC;IAC3C,CAAC,CAAC;IAAE9T,YAAY,EAAE,CAAC;MACf6P,IAAI,EAAEpZ,0DAAe;MACrB6c,IAAI,EAAE,CAAChc,gEAAY,EAAE;QAAEwc,WAAW,EAAE;MAAK,CAAC;IAC9C,CAAC,CAAC;IAAEjY,aAAa,EAAE,CAAC;MAChBgU,IAAI,EAAEnZ,uDAAY;MAClB4c,IAAI,EAAE,CAACpU,kBAAkB;IAC7B,CAAC,CAAC;IAAEkS,mBAAmB,EAAE,CAAC;MACtBvB,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC,kBAAkB;IAC7B,CAAC,CAAC;IAAEtZ,OAAO,EAAE,CAAC;MACV6V,IAAI,EAAEjZ,oDAAS;MACf0c,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC,CAAC;IAAEzT,KAAK,EAAE,CAAC;MACRgQ,IAAI,EAAEjZ,oDAAS;MACf0c,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAE1I,WAAW,EAAE,CAAC;MACdiF,IAAI,EAAEjZ,oDAAS;MACf0c,IAAI,EAAE,CAAC9d,qEAAmB;IAC9B,CAAC,CAAC;IAAE2H,UAAU,EAAE,CAAC;MACb0S,IAAI,EAAElZ,gDAAKA;IACf,CAAC,CAAC;IAAEyN,QAAQ,EAAE,CAAC;MACXyL,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC;QAAEtV,SAAS,EAAEhI,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEqO,aAAa,EAAE,CAAC;MAChBwL,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC;QAAEtV,SAAS,EAAEhI,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEkN,QAAQ,EAAE,CAAC;MACX2M,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC;QACCtV,SAAS,EAAGsB,KAAK,IAAMA,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGrJ,8DAAe,CAACqJ,KAAK;MACpE,CAAC;IACT,CAAC,CAAC;IAAEuB,4BAA4B,EAAE,CAAC;MAC/BgP,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC;QAAEtV,SAAS,EAAEhI,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEmF,WAAW,EAAE,CAAC;MACd0U,IAAI,EAAElZ,gDAAKA;IACf,CAAC,CAAC;IAAEuK,QAAQ,EAAE,CAAC;MACX2O,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC;QAAEtV,SAAS,EAAEhI,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEsH,QAAQ,EAAE,CAAC;MACXuS,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC;QAAEtV,SAAS,EAAEhI,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAEsO,sBAAsB,EAAE,CAAC;MACzBuL,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC;QAAEtV,SAAS,EAAEhI,2DAAgBA;MAAC,CAAC;IAC1C,CAAC,CAAC;IAAE0L,WAAW,EAAE,CAAC;MACdmO,IAAI,EAAElZ,gDAAKA;IACf,CAAC,CAAC;IAAE2I,KAAK,EAAE,CAAC;MACRuQ,IAAI,EAAElZ,gDAAKA;IACf,CAAC,CAAC;IAAE4G,SAAS,EAAE,CAAC;MACZsS,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEnF,cAAc,EAAE,CAAC;MACjB0B,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAEnR,iBAAiB,EAAE,CAAC;MACpB0N,IAAI,EAAElZ,gDAAKA;IACf,CAAC,CAAC;IAAE4O,yBAAyB,EAAE,CAAC;MAC5BsK,IAAI,EAAElZ,gDAAK;MACX2c,IAAI,EAAE,CAAC;QAAEtV,SAAS,EAAE/H,0DAAeA;MAAC,CAAC;IACzC,CAAC,CAAC;IAAEuX,cAAc,EAAE,CAAC;MACjBqC,IAAI,EAAElZ,gDAAKA;IACf,CAAC,CAAC;IAAE0G,EAAE,EAAE,CAAC;MACLwS,IAAI,EAAElZ,gDAAKA;IACf,CAAC,CAAC;IAAE4N,UAAU,EAAE,CAAC;MACbsL,IAAI,EAAElZ,gDAAKA;IACf,CAAC,CAAC;IAAEkO,YAAY,EAAE,CAAC;MACfgL,IAAI,EAAEhZ,iDAAMA;IAChB,CAAC,CAAC;IAAEiO,aAAa,EAAE,CAAC;MAChB+K,IAAI,EAAEhZ,iDAAM;MACZyc,IAAI,EAAE,CAAC,QAAQ;IACnB,CAAC,CAAC;IAAEtO,aAAa,EAAE,CAAC;MAChB6K,IAAI,EAAEhZ,iDAAM;MACZyc,IAAI,EAAE,CAAC,QAAQ;IACnB,CAAC,CAAC;IAAErO,eAAe,EAAE,CAAC;MAClB4K,IAAI,EAAEhZ,iDAAMA;IAChB,CAAC,CAAC;IAAEqO,WAAW,EAAE,CAAC;MACd2K,IAAI,EAAEhZ,iDAAMA;IAChB,CAAC;EAAE,CAAC;AAAA;AAChB;AACA;AACA;AACA,MAAMkd,gBAAgB,CAAC;EAAA,QAAArF,CAAA,GACV,IAAI,CAACC,IAAI,YAAAqF,yBAAAnF,CAAA;IAAA,YAAAA,CAAA,IAA+FkF,gBAAgB;EAAA,CAAmD;EAAA,QAAArE,EAAA,GAC3K,IAAI,CAACuE,IAAI,kBAnJqFre,+DAAE;IAAAia,IAAA,EAmJJkE,gBAAgB;IAAAjE,SAAA;IAAA4B,UAAA;IAAAC,QAAA,GAnJd/b,gEAAE,CAmJ6E,CAAC;MAAEmJ,OAAO,EAAEG,kBAAkB;MAAE2S,WAAW,EAAEkC;IAAiB,CAAC,CAAC;EAAA,EAAiB;AAC3Q;AACA;EAAA,QAAAtS,SAAA,oBAAAA,SAAA,KArJ2G7L,+DAAE,CAqJXme,gBAAgB,EAAc,CAAC;IACrHlE,IAAI,EAAE/Y,oDAAS;IACfwc,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,oBAAoB;MAC9BI,SAAS,EAAE,CAAC;QAAE5U,OAAO,EAAEG,kBAAkB;QAAE2S,WAAW,EAAEkC;MAAiB,CAAC,CAAC;MAC3ErC,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAMyC,eAAe,CAAC;EAAA,QAAAzF,CAAA,GACT,IAAI,CAACC,IAAI,YAAAyF,wBAAAvF,CAAA;IAAA,YAAAA,CAAA,IAA+FsF,eAAe;EAAA,CAAkD;EAAA,QAAAzE,EAAA,GACzK,IAAI,CAAC2E,IAAI,kBAhKqFze,8DAAE;IAAAia,IAAA,EAgKSsE;EAAe,EAUtG;EAAA,QAAAI,EAAA,GAClB,IAAI,CAACC,IAAI,kBA3KqF5e,8DAAE;IAAA+d,SAAA,EA2KqC,CAAC7U,mCAAmC,CAAC;IAAA8U,OAAA,GAAYje,yDAAY,EACnMF,+DAAa,EACb8B,mEAAe,EACfC,mEAAe,EAAEa,wEAAmB,EACpCR,4EAAkB,EAClBN,mEAAe,EACfC,mEAAe;EAAA,EAAI;AAC/B;AACA;EAAA,QAAAiK,SAAA,oBAAAA,SAAA,KAnL2G7L,+DAAE,CAmLXue,eAAe,EAAc,CAAC;IACpHtE,IAAI,EAAE9Y,mDAAQ;IACduc,IAAI,EAAE,CAAC;MACCM,OAAO,EAAE,CACLje,yDAAY,EACZF,+DAAa,EACb8B,mEAAe,EACfC,mEAAe,EACf+H,SAAS,EACTwU,gBAAgB,CACnB;MACDW,OAAO,EAAE,CACLrc,wEAAmB,EACnBR,4EAAkB,EAClB0H,SAAS,EACTwU,gBAAgB,EAChBxc,mEAAe,EACfC,mEAAe,CAClB;MACDmc,SAAS,EAAE,CAAC7U,mCAAmC;IACnD,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA","sources":["./node_modules/@angular/material/fesm2022/select.mjs"],"sourcesContent":["import { Overlay, CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { NgClass, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Self, Attribute, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, _ErrorStateTracker, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nexport { MatOptgroup, MatOption } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /** This animation transforms the select's overlay panel on and off the page. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)',\n        })),\n        transition('void => showing', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)',\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\nlet nextUniqueId = 0;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n    },\n});\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nclass MatSelect {\n    /** Scrolls a particular option into the view. */\n    _scrollOptionIntoView(index) {\n        const option = this.options.toArray()[index];\n        if (option) {\n            const panel = this.panel.nativeElement;\n            const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n            const element = option._getHostElement();\n            if (index === 0 && labelCount === 1) {\n                // If we've got one group label before the option and we're at the top option,\n                // scroll the list to the top. This is better UX than scrolling the list to the\n                // top of the option, because it allows the user to read the top group's label.\n                panel.scrollTop = 0;\n            }\n            else {\n                panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n            }\n        }\n    }\n    /** Called when the panel has been opened and the overlay has settled on its final position. */\n    _positioningSettled() {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    /** Creates a change event object that should be emitted by the select. */\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncParentProperties();\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = value;\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /** Whether the select is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, defaultErrorStateMatcher, _elementRef, _dir, parentForm, parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n                panelClass: 'mat-mdc-select-panel-above',\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom',\n                panelClass: 'mat-mdc-select-panel-above',\n            },\n        ];\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `aria-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        /** Whether the select is disabled. */\n        this.disabled = false;\n        /** Whether ripples in the select are disabled. */\n        this.disableRipple = false;\n        /** Tab index of the select. */\n        this.tabIndex = 0;\n        this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n        this._multiple = false;\n        /** Whether to center the active option over the trigger. */\n        this.disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /**\n         * Width of the panel. If set to `auto`, the panel will match the trigger width.\n         * If set to null or an empty string, the panel will grow to match the longest option's text.\n         */\n        this.panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined'\n            ? this._defaultOptions.panelWidth\n            : 'auto';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n         * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n         * panel. Track the modal we have changed so we can undo the changes on destroy.\n         */\n        this._trackedModal = null;\n        // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n        // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n        // recommendation.\n        //\n        // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n        // makes a few exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        //\n        // The user can focus disabled options using the keyboard, but the user cannot click disabled\n        // options.\n        this._skipPredicate = (option) => {\n            if (this.panelOpen) {\n                // Support keyboard focusing disabled options in an ARIA listbox.\n                return false;\n            }\n            // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n            // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n            // closed.\n            return option.disabled;\n        };\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if (_defaultOptions?.typeaheadDebounceInterval != null) {\n            this.typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by the input, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled'] || changes['userAriaDescribedBy']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n        this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (!this._canOpen()) {\n            return;\n        }\n        // It's important that we read this as late as possible, because doing so earlier will\n        // return a different element since it's based on queries in the form field which may\n        // not have run yet. Also this needs to be assigned before we measure the overlay width.\n        if (this._parentFormField) {\n            this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n        }\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        this._applyModalPanelOwnership();\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Required for the MDC form field to pick up when the overlay has been opened.\n        this.stateChanges.next();\n    }\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        if (!modal) {\n            // Most commonly, the autocomplete trigger is not inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        if (this._trackedModal) {\n            removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        }\n        addAriaReferencedId(modal, 'aria-owns', panelId);\n        this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n        if (!this._trackedModal) {\n            // Most commonly, the autocomplete trigger is not used inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n            // Required for the MDC form field to pick up when the overlay has been closed.\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Refreshes the error state of the select. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        this._keyManager?.cancelTypeahead();\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this.options.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n        if (this.panelWidth === 'auto') {\n            const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin\n                ? preferredOrigin.elementRef\n                : preferredOrigin || this._elementRef;\n            return refToMeasure.nativeElement.getBoundingClientRect().width;\n        }\n        return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n        if (this.options) {\n            for (const option of this.options) {\n                option._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this.typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withPageUpDown()\n            .withAllowedModifierKeys(['shiftKey'])\n            .skipPredicate(this._skipPredicate);\n        this._keyManager.tabOut.subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n            // be the result of an expression changing. We have to use `detectChanges` in order\n            // to avoid \"changed after checked\" errors (see #14793).\n            this._changeDetectorRef.detectChanges();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n                // because it activates the first option that passes the skip predicate, rather than the\n                // first *enabled* option.\n                let firstEnabledOptionIndex = -1;\n                for (let index = 0; index < this.options.length; index++) {\n                    const option = this.options.get(index);\n                    if (!option.disabled) {\n                        firstEnabledOptionIndex = index;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(firstEnabledOptionIndex);\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        return !this._panelOpen && !this.disabled && this.options?.length > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        // Since the panel doesn't overlap the trigger, we\n        // want the label to only float when there's a value.\n        return this.panelOpen || !this.empty || (this.focused && !!this.placeholder);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatSelect, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.1.0-next.5\", type: MatSelect, isStandalone: true, selector: \"mat-select\", inputs: { userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], panelClass: \"panelClass\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], multiple: [\"multiple\", \"multiple\", booleanAttribute], disableOptionCentering: [\"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute], compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: [\"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute], sortComparator: \"sortComparator\", id: \"id\", panelWidth: \"panelWidth\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"listbox\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-mdc-select-disabled\": \"disabled\", \"class.mat-mdc-select-invalid\": \"errorState\", \"class.mat-mdc-select-required\": \"required\", \"class.mat-mdc-select-empty\": \"empty\", \"class.mat-mdc-select-multiple\": \"multiple\" }, classAttribute: \"mat-mdc-select\" }, providers: [\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n        ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], exportAs: [\"matSelect\"], usesOnChanges: true, ngImport: i0, template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"], dependencies: [{ kind: \"directive\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"directive\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        'aria-haspopup': 'listbox',\n                        'class': 'mat-mdc-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-mdc-select-disabled]': 'disabled',\n                        '[class.mat-mdc-select-invalid]': 'errorState',\n                        '[class.mat-mdc-select-required]': 'required',\n                        '[class.mat-mdc-select-empty]': 'empty',\n                        '[class.mat-mdc-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], standalone: true, imports: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass], template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"] }]\n        }], ctorParameters: () => [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i4.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i6.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }, { type: i4.NgControl, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SELECT_SCROLL_STRATEGY]\n                }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SELECT_CONFIG]\n                }] }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableOptionCentering: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MatSelectTrigger, isStandalone: true, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                    standalone: true,\n                }]\n        }] });\n\nclass MatSelectModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatSelectModule, imports: [CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            MatSelect,\n            MatSelectTrigger], exports: [CdkScrollableModule,\n            MatFormFieldModule,\n            MatSelect,\n            MatSelectTrigger,\n            MatOptionModule,\n            MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule, CdkScrollableModule,\n            MatFormFieldModule,\n            MatOptionModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        OverlayModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, matSelectAnimations };\n"],"names":["Overlay","CdkOverlayOrigin","CdkConnectedOverlay","OverlayModule","NgClass","CommonModule","i0","InjectionToken","inject","EventEmitter","booleanAttribute","numberAttribute","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","Self","Attribute","ContentChildren","ContentChild","Input","ViewChild","Output","Directive","NgModule","i2","_countGroupLabelsBeforeOption","_getOptionScrollPosition","_ErrorStateTracker","MAT_OPTION_PARENT_COMPONENT","MatOption","MAT_OPTGROUP","MatOptionModule","MatCommonModule","MatOptgroup","i6","MAT_FORM_FIELD","MatFormFieldControl","MatFormFieldModule","MatError","MatFormField","MatHint","MatLabel","MatPrefix","MatSuffix","i1","CdkScrollableModule","i5","removeAriaReferencedId","addAriaReferencedId","ActiveDescendantKeyManager","i3","SelectionModel","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","hasModifierKey","A","i4","Validators","Subject","defer","merge","startWith","switchMap","take","filter","map","distinctUntilChanged","takeUntil","trigger","transition","query","animateChild","state","style","animate","_c0","_c1","MatSelect_Conditional_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r2","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","placeholder","MatSelect_Conditional_5_Conditional_1_Template","ɵɵprojection","MatSelect_Conditional_5_Conditional_2_Template","ctx_r6","triggerValue","MatSelect_Conditional_5_Template","ɵɵtemplate","ctx_r3","ɵɵconditional","customTrigger","MatSelect_ng_template_10_Template","_r9","ɵɵgetCurrentView","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵlistener","MatSelect_ng_template_10_Template_div_animation_transformPanel_done_0_listener","$event","ɵɵrestoreView","ctx_r8","ɵɵresetView","_panelDoneAnimatingStream","next","toState","MatSelect_ng_template_10_Template_div_keydown_0_listener","ctx_r10","_handleKeydown","ctx_r4","ɵɵclassMapInterpolate1","_getPanelTheme","ɵɵproperty","panelClass","ɵɵattribute","id","multiple","ariaLabel","_getPanelAriaLabelledby","_c2","_c3","matSelectAnimations","transformPanelWrap","optional","transformPanel","opacity","transform","getMatSelectDynamicMultipleError","Error","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","MAT_SELECT_SCROLL_STRATEGY","providedIn","factory","overlay","scrollStrategies","reposition","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","MAT_SELECT_TRIGGER","MatSelectChange","constructor","source","value","MatSelect","_scrollOptionIntoView","index","option","options","toArray","panel","nativeElement","labelCount","optionGroups","element","_getHostElement","scrollTop","offsetTop","offsetHeight","_positioningSettled","_keyManager","activeItemIndex","_getChangeEvent","focused","_focused","_panelOpen","hideSingleSelectionIndicator","_hideSingleSelectionIndicator","_syncParentProperties","_placeholder","stateChanges","required","_required","ngControl","control","hasValidator","_multiple","_selectionModel","ngDevMode","compareWith","_compareWith","fn","_initializeSelection","_value","newValue","hasAssigned","_assignValue","_onChange","errorStateMatcher","_errorStateTracker","matcher","_id","_uid","errorState","_viewportRuler","_changeDetectorRef","_ngZone","defaultErrorStateMatcher","_elementRef","_dir","parentForm","parentFormGroup","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","_positions","originX","originY","overlayX","overlayY","o1","o2","_triggerAriaLabelledBy","_destroy","_onTouched","_valueId","_overlayPanelClass","overlayPanelClass","controlType","disabled","disableRipple","disableOptionCentering","panelWidth","optionSelectionChanges","changes","pipe","onSelectionChange","onStable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","_trackedModal","_skipPredicate","panelOpen","valueAccessor","typeaheadDebounceInterval","_scrollStrategyFactory","_scrollStrategy","parseInt","ngOnInit","subscribe","_panelDoneAnimating","change","_overlayWidth","_getOverlayWidth","_preferredOverlayOrigin","detectChanges","ngAfterContentInit","_initKeyManager","changed","event","added","forEach","select","removed","deselect","_resetOptions","ngDoCheck","newAriaLabelledby","_getTriggerAriaLabelledby","setAttribute","removeAttribute","_previousControl","undefined","updateErrorState","ngOnChanges","withTypeAhead","ngOnDestroy","destroy","complete","_clearFromModal","toggle","close","open","_canOpen","getConnectedOverlayOrigin","_applyModalPanelOwnership","withHorizontalOrientation","_highlightCorrectOption","markForCheck","modal","closest","panelId","_isRtl","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","selected","empty","selectedOptions","viewValue","reverse","join","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","shiftKey","_onFocus","_onBlur","cancelTypeahead","_onAttached","_overlayDir","positionChange","color","isEmpty","Promise","resolve","then","_setSelectionByValue","setInactiveStyles","clear","Array","isArray","currentValue","_selectOptionByValue","_sortValues","correspondingOption","updateActiveItem","find","isSelected","error","console","warn","preferredOrigin","refToMeasure","elementRef","getBoundingClientRect","width","withVerticalOrientation","withHomeAndEnd","withPageUpDown","withAllowedModifierKeys","skipPredicate","tabOut","focus","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","_propagateChanges","setActiveItem","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","emit","firstEnabledOptionIndex","length","get","labelId","getLabelId","labelExpression","ariaLabelledby","_getAriaActiveDescendant","isOpen","setDescribedByIds","ids","onContainerClick","shouldLabelFloat","_","ɵfac","MatSelect_Factory","t","ɵɵdirectiveInject","ViewportRuler","ChangeDetectorRef","NgZone","ErrorStateMatcher","ElementRef","Directionality","NgForm","FormGroupDirective","NgControl","ɵɵinjectAttribute","LiveAnnouncer","_2","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","MatSelect_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatSelect_Query","ɵɵviewQuery","hostAttrs","hostVars","hostBindings","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","toString","ɵɵclassProp","inputs","userAriaDescribedBy","ɵɵInputFlags","None","HasDecoratorInputTransform","outputs","exportAs","standalone","features","ɵɵProvidersFeature","useExisting","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","MatSelect_Template","ɵɵprojectionDef","MatSelect_Template_div_click_0_listener","ɵɵelement","MatSelect_Template_ng_template_backdropClick_10_listener","MatSelect_Template_ng_template_attach_10_listener","MatSelect_Template_ng_template_detach_10_listener","_r0","ɵɵreference","dependencies","styles","encapsulation","data","animation","changeDetection","ɵsetClassMetadata","args","selector","OnPush","host","animations","providers","imports","decorators","descendants","MatSelectTrigger","MatSelectTrigger_Factory","ɵdir","ɵɵdefineDirective","MatSelectModule","MatSelectModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}