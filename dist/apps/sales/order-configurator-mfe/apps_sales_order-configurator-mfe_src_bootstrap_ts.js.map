{"version":3,"file":"apps_sales_order-configurator-mfe_src_bootstrap_ts.js","mappings":";;;;;;;;;;;;;;;AACgD;AACP;AAElC,MAAME,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CAACH,8DAAa,CAACC,kDAAS,CAAC;CACrC;;;;;;;;;;;;;;ACJM,MAAMA,SAAS,GAAY,EAAE;;;;;;;;;;;;;;ACF6B;AACpB;AACmC;AAEhFG,+EAAoB,CAACC,yFAA0B,EAAEH,sDAAS,CAAC,CAACI,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC","sources":["./apps/sales/order-configurator-mfe/src/app/app.config.ts","./apps/sales/order-configurator-mfe/src/app/app.routes.ts","./apps/sales/order-configurator-mfe/src/bootstrap.ts"],"sourcesContent":["import { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { appRoutes } from './app.routes';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [provideRouter(appRoutes)],\n};\n","import { Route } from '@angular/router';\n\nexport const appRoutes: Route[] = [];\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { OrderConfiguratorComponent } from './app/order-configurator.component';\n\nbootstrapApplication(OrderConfiguratorComponent, appConfig).catch((err) => console.error(err));\n"],"names":["provideRouter","appRoutes","appConfig","providers","bootstrapApplication","OrderConfiguratorComponent","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}