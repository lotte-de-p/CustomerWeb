{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-main-navigation_entry_js.js","mappings":"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","sources":["./libs/foundation/wink/dist/dist/core/src/assets/shared/scripts/media-query-detector.ts","./libs/foundation/wink/dist/dist/core/src/components/global-header/_sub-comps/main-navigation/styles/brands/main-navigation.base.scss","./libs/foundation/wink/dist/dist/core/src/components/global-header/_sub-comps/main-navigation/styles/brands/main-navigation.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/global-header/_sub-comps/main-navigation/main-navigation.tsx"],"sourcesContent":["export const BREAKPOINTS = {\n  SM: 576,\n  MD: 769,\n  LG: 1192,\n} as const;\ntype Breakpoint = keyof typeof BREAKPOINTS;\n\nexport const HEADER_BREAKPOINTS = {\n  MD: 1024,\n} as const;\ntype HeaderBreakpoint = keyof typeof HEADER_BREAKPOINTS;\n\nexport const BREAKPOINT_TYPES = {\n  DEFAULT: BREAKPOINTS,\n  HEADER: HEADER_BREAKPOINTS,\n} as const;\ntype BreakpointType = keyof typeof BREAKPOINT_TYPES;\n\nexport class MediaQueryDetector {\n  private static mediaQueryMatch(\n    size: Breakpoint | HeaderBreakpoint,\n    minOrMax: 'min' | 'max',\n    breakpointType: BreakpointType = 'DEFAULT'\n  ): boolean {\n    const breakpoints = BREAKPOINT_TYPES[breakpointType];\n    const pixels = minOrMax === 'min' ? breakpoints[size] : breakpoints[size] - 1;\n    return window.matchMedia(`(${minOrMax}-width: ${pixels}px)`).matches;\n  }\n\n  static get isFromSm(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('SM', 'min');\n  }\n\n  static get isFromMd(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'min');\n  }\n\n  static get isFromLg(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('LG', 'min');\n  }\n\n  static get isUntilSm(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('SM', 'max');\n  }\n\n  static get isUntilMd(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'max');\n  }\n\n  static get isUntilLg(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('LG', 'max');\n  }\n\n  static get isFromMdHeader(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'min', 'HEADER');\n  }\n\n  static get isUntilMdHeader(): boolean {\n    return MediaQueryDetector.mediaQueryMatch('MD', 'max', 'HEADER');\n  }\n}\n","@import '../vars/vars.base';\n@import '../main-navigation.default';\n","@import '../vars/vars.telenet';\n@import '../main-navigation.default';\n","import { Component, Event, EventEmitter, h, Listen, Prop, State } from '@stencil/core';\nimport { mainNavEventEmitterDetails, MenuItem } from './models/main-navigation.types';\nimport { MediaQueryDetector } from '../../../../assets/shared/scripts/media-query-detector';\n\n@Component({\n  tag: 'wink-main-navigation',\n  styleUrls: {\n    telenet: 'styles/brands/main-navigation.telenet.scss',\n    base: 'styles/brands/main-navigation.base.scss',\n  },\n  shadow: true,\n})\nexport class MainNavigation {\n  @Prop() menuItems = '';\n\n  @State() _menuItems: MenuItem[] = [];\n  @State() isOpen = false;\n  @State() activeIndex: number | undefined = undefined;\n  @State() ActiveLinkRef: HTMLAnchorElement | undefined = undefined;\n\n  @Event() mainNavigationItemClicked: EventEmitter<mainNavEventEmitterDetails> | undefined;\n\n  @Listen('flyoutBackLinkClicked', { target: 'document' })\n  handleFlyoutBackLinkClicked(e: CustomEvent) {\n    const { eventType } = e.detail;\n\n    this.isOpen = false;\n\n    if (eventType !== 'mouse') {\n      this.ActiveLinkRef?.focus();\n    }\n  }\n\n  componentWillLoad() {\n    if (!this.menuItems) {\n      return;\n    }\n    this._menuItems = JSON.parse(this.menuItems);\n  }\n\n  private mainNavigationItemEmitter(item: mainNavEventEmitterDetails) {\n    this.mainNavigationItemClicked?.emit(item);\n  }\n\n  private handleFlyOutOpening(item: mainNavEventEmitterDetails) {\n    this.isOpen = !!this._menuItems[item.index]?.hasSubNav;\n    this.mainNavigationItemEmitter(item);\n  }\n\n  private handleItemClick(item: mainNavEventEmitterDetails) {\n    this.activeIndex = item.index;\n    this.handleFlyOutOpening(item);\n  }\n\n  private handleItemMouseOver(item: mainNavEventEmitterDetails) {\n    if (item.eventType === 'mouse' && MediaQueryDetector.isUntilMdHeader) {\n      return;\n    }\n    if (this._menuItems[item.index].hasSubNav) {\n      this.handleFlyOutOpening(item);\n      return;\n    }\n    this.isOpen = false;\n    this.mainNavigationItemEmitter({ index: NaN, name: '' });\n  }\n\n  private handleKeyDownEvent(e: KeyboardEvent, index: number, name: string) {\n    if (e.code === 'Space') {\n      e.preventDefault();\n      this.handleItemClick({ index, name });\n    }\n  }\n\n  private getATagCssClasses(index: number) {\n    return {\n      active: this.activeIndex === index,\n    };\n  }\n\n  render() {\n    return (\n      <nav role=\"navigation\">\n        <ul role=\"menu\" aria-label=\"Main navigation menu\">\n          {this._menuItems.map((item: MenuItem, index: number) => (\n            <li role=\"none\">\n              <a\n                role=\"menuitem\"\n                aria-haspopup={(!!item.hasSubNav).toString()}\n                aria-expanded={this.isOpen.toString()}\n                aria-controls={item.hasSubNav ? `flyout-${index}` : undefined}\n                class={this.getATagCssClasses(index)}\n                href={item.url}\n                onClick={() => this.handleItemClick({ index, name: item.name })}\n                onMouseOver={() => this.handleItemMouseOver({ index, name: item.name, eventType: 'mouse' })}\n                onKeyDown={(e) => this.handleKeyDownEvent(e, index, item.name)}\n                ref={(el) => this.activeIndex === index && (this.ActiveLinkRef = el)}>\n                {item.name}\n                {item.hasSubNav && <wink-icon appearance=\"default\" icon=\"chevron-right\" size=\"sm\" />}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    );\n  }\n}\n"],"names":["BREAKPOINTS","SM","MD","LG","HEADER_BREAKPOINTS","BREAKPOINT_TYPES","DEFAULT","HEADER","MediaQueryDetector","mediaQueryMatch","size","minOrMax","breakpointType","breakpoints","pixels","window","matchMedia","matches","isFromSm","isFromMd","isFromLg","isUntilSm","isUntilMd","isUntilLg","isFromMdHeader","isUntilMdHeader","mainNavigationBaseCss","WinkMainNavigationBaseStyle0","mainNavigationTelenetCss","WinkMainNavigationTelenetStyle0","MainNavigation","undefined","mainNavigationItemClicked","handleFlyoutBackLinkClicked","e","eventType","detail","isOpen","ActiveLinkRef","focus","componentWillLoad","menuItems","_menuItems","JSON","parse","mainNavigationItemEmitter","item","emit","handleFlyOutOpening","index","hasSubNav","handleItemClick","activeIndex","handleItemMouseOver","NaN","name","handleKeyDownEvent","code","preventDefault","getATagCssClasses","active","render","h","key","role","map","toString","class","href","url","onClick","onMouseOver","onKeyDown","ref","el","appearance","icon"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}