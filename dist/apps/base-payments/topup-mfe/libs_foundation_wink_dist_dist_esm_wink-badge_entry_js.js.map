{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-badge_entry_js.js","mappings":";;;;;;;;;;;;MAAaA,KAAK,GAAG;EACnBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACR,KAAK,EAAE,KAAK;EACZ,KAAK,EAAE,KAAK;EACZC,EAAE,EAAE,IAAI;EACRC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;ACVD,MAAMC,WAAW,GAAG;EACzBV,EAAE,EAAED,uDAAK,CAACC,EAAE;EACZC,EAAE,EAAEF,uDAAK,CAACE,EAAE;EACZC,EAAE,EAAEH,uDAAK,CAACG;CACF;AAGH,MAAMS,YAAY,GAAG;EAC1BC,SAAS,EAAE,WAAW;EACtBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,UAAU,EAAE,YAAY;EACxBC,SAAS,EAAE,WAAW;EACtBC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,SAAS;EAClBC,SAAS,EAAE,WAAW;EACtBC,UAAU,EAAE;CACJ;ACpBV,MAAMC,YAAY,GAAG,6rBAA6rB;AACltB,MAAAC,mBAAA,GAAeD,YAAY;ACD3B,MAAME,eAAe,GAAG,+nEAA+nE;AACvpE,MAAAC,sBAAA,GAAeD,eAAe;MCUjBE,KAAK;;;gBACD,EAAE;gBACShB,WAAW,CAACT,EAAE;sBACPU,YAAY,CAACC,SAAS;;EAEvDe,MAAMA,CAAA;IACJ,OAAOC,qDAAA,CAACC,iDAAI;MAAAC,GAAA;IAAA,GAAE,IAAI,CAACC,IAAI,CAAQ","sources":["./libs/foundation/wink/dist/dist/core/src/models/sizes.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/badge/models/badge.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/badge/styles/brands/badge.base.scss","./libs/foundation/wink/dist/dist/core/src/components/badge/styles/brands/badge.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/badge/badge.tsx"],"sourcesContent":["export const SIZES = {\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  '3xs': '3xs',\n  '2xs': '2xs',\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'l',\n  none: 'none',\n  full: 'full',\n};\nexport type Size = (typeof SIZES)[keyof typeof SIZES];\n\nexport const WIDTHS = {};\nexport type Width = (typeof WIDTHS)[keyof typeof WIDTHS];\n","import { SIZES } from '../../../models/sizes.types';\n\nexport const BADGE_SIZES = {\n  sm: SIZES.sm,\n  md: SIZES.md,\n  lg: SIZES.lg,\n} as const;\nexport type BadgeSize = (typeof BADGE_SIZES)[keyof typeof BADGE_SIZES];\n\nexport const BADGE_COLORS = {\n  darkBrown: 'darkBrown',\n  white: 'white',\n  yellow: 'yellow',\n  lemon: 'lemon',\n  brightBlue: 'brightBlue',\n  jeansBlue: 'jeansBlue',\n  lila: 'lila',\n  olivine: 'olivine',\n  turquoise: 'turquoise',\n  watermelon: 'watermelon',\n} as const;\nexport type BadgeColor = (typeof BADGE_COLORS)[keyof typeof BADGE_COLORS];\n","@import '../vars/vars.base';\n@import '../badge.default';\n","@import '../vars/vars.telenet';\n@import '../badge.default';\n\n:host([background='dark-brown']) {\n  background-color: $badge--default-bg;\n  color: $badge--default-color;\n}\n:host([background='white']) {\n  background-color: var(--semantic-color-background-surface-highlight-8);\n  color: var(--semantic-color-text-default);\n}\n:host([background='yellow']) {\n  background-color: var(--semantic-color-background-canvas-brand);\n  color: var(--semantic-color-text-default);\n}\n:host([background='lemon']) {\n  background-color: var(--semantic-color-background-canvas-accent);\n  color: var(--semantic-color-text-default);\n}\n:host([background='bright-blue']) {\n  background-color: var(--semantic-color-background-surface-highlight-1);\n  color: var(--semantic-color-text-default);\n}\n:host([background='jeans-blue']) {\n  background-color: var(--semantic-color-background-surface-highlight-4);\n  color: var(--semantic-color-text-default);\n}\n:host([background='lila']) {\n  background-color: var(--semantic-color-background-surface-highlight-2);\n  color: var(--semantic-color-text-default);\n}\n:host([background='olivine']) {\n  background-color: var(--semantic-color-background-surface-highlight-6);\n  color: var(--semantic-color-text-default);\n}\n:host([background='turquoise']) {\n  background-color: var(--semantic-color-background-surface-highlight-4);\n  color: var(--semantic-color-text-default);\n}\n:host([background='watermelon']) {\n  background-color: var(--semantic-color-background-surface-highlight-3);\n  color: var(--semantic-color-text-default);\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { BADGE_COLORS, BADGE_SIZES, BadgeColor, BadgeSize } from './models/badge.types';\n\n@Component({\n  tag: 'wink-badge',\n  styleUrls: {\n    telenet: 'styles/brands/badge.telenet.scss',\n    base: 'styles/brands/badge.base.scss',\n  },\n  shadow: true,\n})\nexport class Badge {\n  @Prop() text = '';\n  @Prop() size: BadgeSize = BADGE_SIZES.md;\n  @Prop() background: BadgeColor = BADGE_COLORS.darkBrown;\n\n  render() {\n    return <Host>{this.text}</Host>;\n  }\n}\n"],"names":["SIZES","sm","md","lg","xl","xs","s","m","l","none","full","BADGE_SIZES","BADGE_COLORS","darkBrown","white","yellow","lemon","brightBlue","jeansBlue","lila","olivine","turquoise","watermelon","badgeBaseCss","WinkBadgeBaseStyle0","badgeTelenetCss","WinkBadgeTelenetStyle0","Badge","render","h","Host","key","text"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}