{"version":3,"file":"libs_foundation_wink_dist_dist_esm_wink-avatar_entry_js.js","mappings":";;;;;;;;;;;;MAAaA,KAAK,GAAG;EACnBC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACR,KAAK,EAAE,KAAK;EACZ,KAAK,EAAE,KAAK;EACZC,EAAE,EAAE,IAAI;EACRC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;ACVD,MAAMC,YAAY,GAAG;EAC1BV,EAAE,EAAED,uDAAK,CAACC,EAAE;EACZC,EAAE,EAAEF,uDAAK,CAACE,EAAE;EACZC,EAAE,EAAEH,uDAAK,CAACG,EAAE;EACZC,EAAE,EAAEJ,uDAAK,CAACI;CACF;ACPV,MAAMQ,aAAa,GAAG,2kBAA2kB;AACjmB,MAAAC,oBAAA,GAAeD,aAAa;ACD5B,MAAME,gBAAgB,GAAG,kkCAAkkC;AAC3lC,MAAAC,uBAAA,GAAeD,gBAAgB;MCUlBE,MAAM;;;;gBAEUL,YAAY,CAACT,EAAE;;EAE1Ce,MAAMA,CAAA;IACJ,OACEC,qDAAA,CAACC,iDAAI;MAAAC,GAAA;IAAA,GACF,IAAI,CAACC,GAAG,EAAEC,MAAM,GAAG,CAAC,GACnBJ,qDAAA;MAAKG,GAAG,EAAE,IAAI,CAACA,GAAG;MAAEE,GAAG,EAAC;IAAc,EAAG,GAEzCL,qDAAA;MAAWM,UAAU,EAAC,WAAW;MAACC,IAAI,EAAC,MAAM;MAACC,IAAI,EAAE,IAAI,CAACA;IAAI,EAC9D,CACI","sources":["./libs/foundation/wink/dist/dist/core/src/models/sizes.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/avatar/models/avatar.types.tsx","./libs/foundation/wink/dist/dist/core/src/components/avatar/styles/brands/avatar.base.scss","./libs/foundation/wink/dist/dist/core/src/components/avatar/styles/brands/avatar.telenet.scss","./libs/foundation/wink/dist/dist/core/src/components/avatar/avatar.tsx"],"sourcesContent":["export const SIZES = {\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl',\n  '3xs': '3xs',\n  '2xs': '2xs',\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'l',\n  none: 'none',\n  full: 'full',\n};\nexport type Size = (typeof SIZES)[keyof typeof SIZES];\n\nexport const WIDTHS = {};\nexport type Width = (typeof WIDTHS)[keyof typeof WIDTHS];\n","import { SIZES } from '../../../models/sizes.types';\n\nexport const AVATAR_SIZES = {\n  sm: SIZES.sm,\n  md: SIZES.md,\n  lg: SIZES.lg,\n  xl: SIZES.xl,\n} as const;\n\nexport type AvatarSize = (typeof AVATAR_SIZES)[keyof typeof AVATAR_SIZES];\n","@import '../vars/vars.base';\n@import '../avatar.default';\n","@import '../vars/vars.telenet';\n@import '../avatar.default';\n\n:host {\n  img {\n    @include telenet-backdrop-mask;\n  }\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { AVATAR_SIZES, AvatarSize } from './models/avatar.types';\n\n@Component({\n  tag: 'wink-avatar',\n  styleUrls: {\n    telenet: 'styles/brands/avatar.telenet.scss',\n    base: 'styles/brands/avatar.base.scss',\n  },\n  shadow: true,\n})\nexport class Avatar {\n  @Prop() src!: string;\n  @Prop() size: AvatarSize = AVATAR_SIZES.md;\n\n  render() {\n    return (\n      <Host>\n        {this.src?.length > 0 ? (\n          <img src={this.src} alt=\"avatar image\" />\n        ) : (\n          <wink-icon appearance=\"secondary\" icon=\"user\" size={this.size}></wink-icon>\n        )}\n      </Host>\n    );\n  }\n}\n"],"names":["SIZES","sm","md","lg","xl","xs","s","m","l","none","full","AVATAR_SIZES","avatarBaseCss","WinkAvatarBaseStyle0","avatarTelenetCss","WinkAvatarTelenetStyle0","Avatar","render","h","Host","key","src","length","alt","appearance","icon","size"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}