{"version":3,"file":"libs_base-customerzone_dashboard_feat-mybase-dashboard-internet_src_index_ts.js","mappings":"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","sources":["./libs/base-customerzone/dashboard/feat-mybase-dashboard-internet/src/index.ts","./libs/base-customerzone/dashboard/feat-mybase-dashboard-internet/src/lib/mybase-dashboard-internet-usage-limited/mybase-dashboard-internet-usage-limited.component.ts","./libs/base-customerzone/dashboard/feat-mybase-dashboard-internet/src/lib/mybase-dashboard-internet-usage-limited/mybase-dashboard-internet-usage-limited.component.html","./libs/base-customerzone/dashboard/feat-mybase-dashboard-internet/src/lib/mybase-dashboard-internet-usage-unlimited/mybase-dashboard-internet-usage-unlimited.component.ts","./libs/base-customerzone/dashboard/feat-mybase-dashboard-internet/src/lib/mybase-dashboard-internet-usage-unlimited/mybase-dashboard-internet-usage-unlimited.component.html","./libs/base-customerzone/dashboard/feat-mybase-dashboard-internet/src/lib/mybase-dashboard-internet.component.ts","./libs/base-customerzone/dashboard/feat-mybase-dashboard-internet/src/lib/mybase-dashboard-internet.component.html"],"sourcesContent":["export * from './lib/mybase-dashboard-internet-usage-limited/mybase-dashboard-internet-usage-limited.component';\nexport * from './lib/mybase-dashboard-internet-usage-unlimited/mybase-dashboard-internet-usage-unlimited.component';\nexport * from './lib/mybase-dashboard-internet.component';\n","import { CommonModule } from '@angular/common';\nimport { Component, Input, inject, EventEmitter, Output } from '@angular/core';\nimport {\n  InternetUsage,\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n  MyBaseDashboardDatalayerAttributeName,\n} from '@mybase-dashboard/data-access';\nimport { ProgressBarComponent, ProgressBarStatus } from '@mybase-dashboard/ui';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UrlService } from '@telenet/ng-lib-page';\n\n@Component({\n  selector: 'tg-mybase-dashboard-internet-usage-limited',\n  standalone: true,\n  imports: [CommonModule, TranslateModule, ProgressBarComponent],\n  templateUrl: './mybase-dashboard-internet-usage-limited.component.html',\n})\nexport class MyBaseDashboardInternetUsageLimitedComponent {\n  @Input() internetUsageUrl!: string;\n  @Input({ required: true })\n  set data(data: InternetUsage) {\n    if (!data.limited) return;\n\n    const total = data.limited.totalBytes;\n    const remaining = data.limited.remainingBytes;\n\n    this.total = total / 1024 ** 3;\n    this.used = (total - remaining) / 1024 ** 3;\n    this.usedPct = (this.used / this.total) * 100;\n    this.daysUntilRenewal = data.limited.daysUntilRenewal;\n\n    if (this.usedPct >= 80 && this.usedPct < 100) {\n      this.progressBarStatus = ProgressBarStatus.WARN;\n    } else if (this.usedPct >= 100) {\n      this.progressBarStatus = ProgressBarStatus.ERROR;\n    } else {\n      this.progressBarStatus = ProgressBarStatus.OK;\n    }\n  }\n\n  total = 0;\n  used = 0;\n  usedPct = 0;\n  daysUntilRenewal = 0;\n  progressBarStatus: ProgressBarStatus = ProgressBarStatus.OK;\n\n  ProgressBarStatus = ProgressBarStatus;\n\n  @Output() analyticsData = new EventEmitter<MyBaseDashboardDatalayer>();\n\n  private readonly urlService: UrlService = inject(UrlService);\n\n  goToInternetUsage(): void {\n    this.sendAnalyticsData();\n    this.urlService.redirectTo(this.internetUsageUrl);\n  }\n\n  sendAnalyticsData(): void {\n    const myBaseDashbaordAnalyticsData: MyBaseDashboardDatalayer = {\n      eventName: MyBaseDashboardDatalayerEventName.CARD_CLICKED,\n      eventType: MyBaseDashboardDatalayerEventType.CLICK_CARD,\n      attributeName: MyBaseDashboardDatalayerAttributeName.INTERNET_USAGE_LIMITED,\n      destinationUrl: this.internetUsageUrl,\n    };\n    this.analyticsData.emit(myBaseDashbaordAnalyticsData);\n  }\n}\n","<div\n  class=\"mybase-dashboard--card p--l--lg height--full p--m background-white display--flex flex-direction--column\"\n  [attr.data-cy]=\"'mybase-dashboard-internet-usage-limited'\">\n  <div\n    (click)=\"goToInternetUsage()\"\n    class=\"display--flex cursor--pointer justify-content--between border--b--r border-color--all--light-grey border-width--b--r border-style--b--solid pb--m mb--m\">\n    <div class=\"mybase-dashboard--card--title display--flex\">\n      <span class=\"text-flow text-flow--h5\">{{\n        'ng.mybase-dashboard-internet.internet-usage-limited.title' | translate\n      }}</span>\n    </div>\n    <i class=\"icon icon-md icon-chevron-right color-shade_48 icon-no-size-override\"></i>\n  </div>\n  <div class=\"mybase-dashboard--card--content display--flex flex-direction--column justify-content--between flex-grow\">\n    <div class=\"mb--xxl--md\">\n      <div class=\"display--flex justify-content--between align-items--center flex-grow\">\n        <div class=\"mb--xs\">\n          <span\n            class=\"text-flow text-flow--h1\"\n            [attr.data-cy]=\"'mybase-dashboard-internet-usage-limited-volume-used'\"\n            >{{ used | number: '1.0-1' }}</span\n          >&nbsp;<span class=\"text-flow text-flow--h6\">{{\n            'ng.mybase-dashboard-internet.internet-usage-limited.volume-used-part-one' | translate\n          }}</span>\n          {{ 'ng.mybase-dashboard-internet.internet-usage-limited.volume-used-part-two' | translate }}\n          <span [attr.data-cy]=\"'mybase-dashboard-internet-usage-limited-volume-total'\">{{\n            total | number: '1.0-0'\n          }}</span\n          >&nbsp;{{ 'ng.mybase-dashboard-internet.internet-usage-limited.volume-used-part-three' | translate }}\n        </div>\n        <i\n          *ngIf=\"progressBarStatus === ProgressBarStatus.WARN\"\n          class=\"icon icon-no-size-override icon-md icon-alert-shape-filled color-notification--warning--light\"></i>\n        <i\n          *ngIf=\"progressBarStatus === ProgressBarStatus.ERROR\"\n          class=\"icon icon-no-size-override icon-md icon-error-shape-filled color-notification--error--light\"></i>\n      </div>\n      <tg-progress-bar [progress]=\"usedPct\" [barColor]=\"progressBarStatus\"></tg-progress-bar>\n      <div\n        class=\"font--caption-small mb--s\"\n        [attr.data-cy]=\"'mybase-dashboard-internet-usage-limited-days-until-renewal'\"\n        [attr.data-cy-daysUntilRenewal]=\"daysUntilRenewal\">\n        {{\n          'ng.mybase-dashboard-internet.internet-usage-limited.label-days-until-renewal'\n            | translate: { daysUntilRenewal }\n        }}\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output, inject } from '@angular/core';\nimport {\n  InternetUsage,\n  UsageStatusEnum,\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n  MyBaseDashboardDatalayerAttributeName,\n} from '@mybase-dashboard/data-access';\nimport { ProgressBarComponent, ProgressBarStatus } from '@mybase-dashboard/ui';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UrlService } from '@telenet/ng-lib-page';\n\n@Component({\n  selector: 'tg-mybase-dashboard-internet-usage-unlimited',\n  standalone: true,\n  imports: [CommonModule, TranslateModule, ProgressBarComponent],\n  templateUrl: './mybase-dashboard-internet-usage-unlimited.component.html',\n})\nexport class MyBaseDashboardInternetUsageUnlimitedComponent {\n  @Input() internetUsageUrl!: string;\n  @Input({ required: true })\n  set data(data: InternetUsage) {\n    if (!data.unlimited) return;\n\n    this.used = data.unlimited.usedBytes / 1024 ** 3;\n    this.daysUntilRenewal = data.unlimited.daysUntilRenewal;\n\n    switch (data.unlimited.status) {\n      case UsageStatusEnum.OK:\n        this.usageStatus = this.UsageStatus.OK;\n        break;\n      case UsageStatusEnum.LIMIT_ALMOST_REACHED:\n        this.usageStatus = this.UsageStatus.WARN;\n        break;\n      case UsageStatusEnum.LIMIT_EXCEEDED:\n      case UsageStatusEnum.LIMIT_EXCEEDED_SLOW_SPEED:\n        this.usageStatus = this.UsageStatus.ERROR;\n        break;\n    }\n  }\n\n  used = 0;\n  daysUntilRenewal = 0;\n  usageStatus: ProgressBarStatus = ProgressBarStatus.OK;\n\n  UsageStatus = ProgressBarStatus;\n\n  @Output() analyticsData = new EventEmitter<MyBaseDashboardDatalayer>();\n\n  private readonly urlService: UrlService = inject(UrlService);\n\n  goToInternetUsage(): void {\n    this.sendAnalyticsData();\n    this.urlService.redirectTo(this.internetUsageUrl);\n  }\n\n  sendAnalyticsData(): void {\n    const myBaseDashbaordAnalyticsData: MyBaseDashboardDatalayer = {\n      eventName: MyBaseDashboardDatalayerEventName.CARD_CLICKED,\n      eventType: MyBaseDashboardDatalayerEventType.CLICK_CARD,\n      attributeName: MyBaseDashboardDatalayerAttributeName.INTERNET_USAGE_UNLIMITED,\n      destinationUrl: this.internetUsageUrl,\n    };\n    this.analyticsData.emit(myBaseDashbaordAnalyticsData);\n  }\n}\n","<div\n  class=\"mybase-dashboard--card p--l--lg p--m background-white height--full display--flex flex-direction--column\"\n  [attr.data-cy]=\"'mybase-dashboard-internet-usage-unlimited'\">\n  <div\n    (click)=\"goToInternetUsage()\"\n    class=\"display--flex cursor--pointer justify-content--between border--b--r border-color--all--light-grey border-width--b--r border-style--b--solid pb--m mb--m\">\n    <div class=\"mybase-dashboard--card--title display--flex\">\n      <span class=\"text-flow text-flow--h5\">{{\n        'ng.mybase-dashboard-internet.internet-usage-unlimited.title' | translate\n      }}</span>\n    </div>\n    <i class=\"icon icon-md icon-chevron-right color-shade_48 icon-no-size-override\"></i>\n  </div>\n  <div class=\"mybase-dashboard--card--content display--flex flex-direction--column justify-content--between flex-grow\">\n    <div class=\"mb--xxl--md\">\n      <div class=\"display--flex align-items--center flex-grow text-flow text-flow--h1\">\n        <span class=\"mr--xs\">\n          {{ 'ng.mybase-dashboard-internet.internet-usage-unlimited.label-unlimited' | translate }}\n        </span>\n        <i\n          *ngIf=\"usageStatus === UsageStatus.OK\"\n          [attr.data-cy]=\"'mybase-dashboard-internet-usage-unlimited-icon-ok'\"\n          class=\"icon icon-no-size-override icon-md icon-infinity color-cyan-green\"></i>\n        <i\n          *ngIf=\"usageStatus === UsageStatus.WARN\"\n          [attr.data-cy]=\"'mybase-dashboard-internet-usage-unlimited-icon-warn'\"\n          class=\"icon icon-no-size-override icon-md icon-alert-shape-filled color-notification--warning--light\"></i>\n        <i\n          *ngIf=\"usageStatus === UsageStatus.ERROR\"\n          [attr.data-cy]=\"'mybase-dashboard-internet-usage-unlimited-icon-error'\"\n          class=\"icon icon-no-size-override icon-md icon-error-shape-filled color-notification--error--light\"></i>\n      </div>\n      <div [attr.data-cy]=\"'mybase-dashboard-internet-usage-unlimited-volume-used'\">\n        {{ used | number: '1.0-2' }}\n        {{ 'ng.mybase-dashboard-internet.internet-usage-unlimited.label-gb-used' | translate }}\n      </div>\n      <div\n        class=\"font--caption-small mb--s\"\n        [attr.data-cy]=\"'mybase-dashboard-internet-usage-unlimited-days-until-renewal'\"\n        [attr.data-cy-daysUntilRenewal]=\"daysUntilRenewal\">\n        {{\n          'ng.mybase-dashboard-internet.internet-usage-unlimited.label-days-until-renewal'\n            | translate: { daysUntilRenewal }\n        }}\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, Input, inject } from '@angular/core';\nimport {\n  InternetLine,\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerFacade,\n  MyBaseDashboardFacade,\n  MyBaseDashoardNgrxModule,\n  NavigationCardType,\n  ServiceType,\n} from '@mybase-dashboard/data-access';\nimport {\n  AddressSelectorComponent,\n  MyBaseDashboardErrorComponent,\n  MyBaseDashboardHomeNetworkComponent,\n  MyBaseNavigationCardsComponent,\n  MyBaseServicesCardsComponent,\n  MyBaseSimpleCardComponent,\n} from '@mybase-dashboard/ui';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LoginModule } from '@telenet/ng-lib-ocapi';\nimport { Observable, map } from 'rxjs';\nimport { MyBaseDashboardInternetUsageLimitedComponent } from './mybase-dashboard-internet-usage-limited/mybase-dashboard-internet-usage-limited.component';\nimport { MyBaseDashboardInternetUsageUnlimitedComponent } from './mybase-dashboard-internet-usage-unlimited/mybase-dashboard-internet-usage-unlimited.component';\n\n@Component({\n  selector: 'tg-mybase-dashboard-internet',\n  standalone: true,\n  imports: [\n    MyBaseDashoardNgrxModule,\n    MyBaseDashboardErrorComponent,\n    CommonModule,\n    MyBaseDashboardInternetUsageLimitedComponent,\n    MyBaseDashboardInternetUsageUnlimitedComponent,\n    MyBaseServicesCardsComponent,\n    MyBaseDashboardHomeNetworkComponent,\n    MyBaseNavigationCardsComponent,\n    MyBaseSimpleCardComponent,\n    AddressSelectorComponent,\n    LoginModule,\n    TranslateModule,\n  ],\n  templateUrl: './mybase-dashboard-internet.component.html',\n  styleUrl: './mybase-dashboard-internet.component.scss',\n})\nexport class MyBaseDashboardInternetComponent {\n  @Input() internetUsageUrl!: string;\n  @Input() easySwitchUrl!: string;\n  @Input() bestTariffUrl!: string;\n  @Input() returnDeviceUrl!: string;\n  @Input() homeNetworkUrl!: string;\n  @Input() wifiPassportUrl!: string;\n  @Input() internetUsageNotificationUrl!: string;\n  @Input() productOverviewUrl!: string;\n  @Input() speedTestUrl!: string;\n  @Input() myDeviceUrl!: string;\n  @Input() devicesUsingNetworkUrl!: string;\n\n  scopes = ['customeraccount']; // TBD\n  private readonly facade: MyBaseDashboardFacade = inject(MyBaseDashboardFacade);\n  private readonly datalayerFacade: MyBaseDashboardDatalayerFacade = inject(MyBaseDashboardDatalayerFacade);\n\n  internetLines$ = this.facade.internetLines$;\n  myBaseDashboardInternetInternetUsage$ = this.facade.myBaseDashboardInternetInternetUsage$;\n  myBaseDashboardInternetGeneralCards$ = this.facade.myBaseDashboardInternetGeneralCards$.pipe(\n    map((cards) => {\n      const navCards = cards as NavigationCardType[];\n      return navCards.filter((card) => this.navigationCardTypes.includes(card));\n    })\n  ) as Observable<NavigationCardType[]>;\n  myBaseDashboardInternetServices$ = this.facade.myBaseDashboardInternetServices$.pipe(\n    map((cards) => {\n      const serviceCards = cards as ServiceType[];\n      return serviceCards.filter((card) => this.serviceTypes.includes(card));\n    })\n  ) as Observable<ServiceType[]>;\n  myBaseDashboardInternetError$ = this.facade.myBaseDashboardInternetError$;\n  myBaseDashboardInternetLoading$ = this.facade.myBaseDashboardInternetLoading$;\n  myBaseDashboardInternetShowHomeNetwork$ = this.facade.myBaseDashboardInternetShowHomeNetwork$;\n\n  topLevelNavigationCards$!: Observable<NavigationCardType[]>;\n  bottomLevelNavigationCards$!: Observable<NavigationCardType[]>;\n\n  // Sorted array, determines the order of the cards\n  private readonly navigationCardTypes = [\n    NavigationCardType.INTERNET_USAGE_NOTIFICATIONS,\n    NavigationCardType.SPEEDTEST,\n    NavigationCardType.MANAGE_YOUR_PRODUCT,\n    NavigationCardType.MY_DEVICE,\n    NavigationCardType.DEVICES_USING_YOUR_NETWORK,\n  ];\n\n  private readonly serviceTypes = [ServiceType.BEST_TARIFF, ServiceType.EASY_SWITCH, ServiceType.RETURN_DEVICE];\n\n  initAfterLoggedIn() {\n    this.facade.loadInternetLines();\n    this.seggregateCards();\n  }\n\n  selectInternetAddress(internetLine: InternetLine) {\n    this.facade.setInterLine(internetLine);\n  }\n\n  seggregateCards(): void {\n    this.topLevelNavigationCards$ = this.myBaseDashboardInternetGeneralCards$.pipe(\n      map((navigationCards) => {\n        return navigationCards.slice(0, 2);\n      })\n    );\n\n    this.bottomLevelNavigationCards$ = this.myBaseDashboardInternetGeneralCards$.pipe(\n      map((navigationCards) => {\n        return navigationCards.slice(2);\n      })\n    );\n  }\n\n  addAnalyticsEvent(event: MyBaseDashboardDatalayer) {\n    this.datalayerFacade.sendDatalayerEvent(event);\n  }\n}\n","<tg-login [scopes]=\"scopes\" (componentCanRender)=\"initAfterLoggedIn()\">\n  <div class=\"mybase-dashboard-internet\">\n    @if (myBaseDashboardInternetError$ | async) {\n      <div class=\"row\">\n        <div class=\"col-12 mt--l--md\">\n          <tg-mybase-dashboard-error [error]=\"(myBaseDashboardInternetError$ | async)!\"></tg-mybase-dashboard-error>\n        </div>\n      </div>\n    } @else {\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <tg-address-selector\n            [data]=\"(internetLines$ | async)!\"\n            (selectInternetAddress)=\"selectInternetAddress($event)\"\n            (analyticsData)=\"addAnalyticsEvent($event)\"></tg-address-selector>\n        </div>\n      </div>\n      @if ((myBaseDashboardInternetLoading$ | async) === false) {\n        <div class=\"row\">\n          @if ((myBaseDashboardInternetInternetUsage$ | async)?.showCard) {\n            <div class=\"col-12 col-md-6 col-lg-4 mb--m mt--xxxs--md\">\n              @if ((myBaseDashboardInternetInternetUsage$ | async)?.limited) {\n                <tg-mybase-dashboard-internet-usage-limited\n                  [data]=\"(myBaseDashboardInternetInternetUsage$ | async)!\"\n                  [internetUsageUrl]=\"internetUsageUrl\"\n                  (analyticsData)=\"addAnalyticsEvent($event)\"></tg-mybase-dashboard-internet-usage-limited>\n              } @else if ((myBaseDashboardInternetInternetUsage$ | async)?.unlimited) {\n                <tg-mybase-dashboard-internet-usage-unlimited\n                  [data]=\"(myBaseDashboardInternetInternetUsage$ | async)!\"\n                  [internetUsageUrl]=\"internetUsageUrl\"\n                  (analyticsData)=\"addAnalyticsEvent($event)\"></tg-mybase-dashboard-internet-usage-unlimited>\n              }\n            </div>\n          }\n          @if (myBaseDashboardInternetShowHomeNetwork$ | async) {\n            <div class=\"col-12 col-md-6 col-lg-4 mb--m mt--xxxs--md\">\n              <tg-mybase-dashboard-home-network\n                [homeNetworkUrl]=\"homeNetworkUrl\"\n                [wifiPassportUrl]=\"wifiPassportUrl\"\n                [marginTop]=\"false\"\n                [componentPrefix]=\"'ng.mybase-dashboard-internet'\"\n                [isLevel1]=\"false\"\n                (analyticsData)=\"addAnalyticsEvent($event)\"></tg-mybase-dashboard-home-network>\n            </div>\n          }\n          <div class=\"col-12 col-md-6 col-lg-4\">\n            <div>\n              @if ((topLevelNavigationCards$ | async)?.length) {\n                <tg-mybase-navigation-cards\n                  [internetUsageNotificationUrl]=\"internetUsageNotificationUrl\"\n                  [speedTestUrl]=\"speedTestUrl\"\n                  [productOverviewUrl]=\"productOverviewUrl\"\n                  [myDeviceUrl]=\"myDeviceUrl\"\n                  [type]=\"'internet'\"\n                  [devicesUsingNetworkUrl]=\"devicesUsingNetworkUrl\"\n                  [mobileTitle]=\"'ng.mybase-dashboard-internet.navigation-cards.title' | translate\"\n                  [data]=\"(topLevelNavigationCards$ | async)!\"\n                  (analyticsData)=\"addAnalyticsEvent($event)\"></tg-mybase-navigation-cards>\n              }\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            @if ((bottomLevelNavigationCards$ | async)?.length) {\n              <tg-mybase-navigation-cards\n                [internetUsageNotificationUrl]=\"internetUsageNotificationUrl\"\n                [speedTestUrl]=\"speedTestUrl\"\n                [productOverviewUrl]=\"productOverviewUrl\"\n                [myDeviceUrl]=\"myDeviceUrl\"\n                [devicesUsingNetworkUrl]=\"devicesUsingNetworkUrl\"\n                [customClassGrid]=\"'col-lg-4'\"\n                [type]=\"'internet'\"\n                [data]=\"(bottomLevelNavigationCards$ | async)!\"\n                (analyticsData)=\"addAnalyticsEvent($event)\"></tg-mybase-navigation-cards>\n            }\n          </div>\n        </div>\n        <div>\n          <div>\n            <tg-mybase-services-cards\n              [easySwitchUrl]=\"easySwitchUrl\"\n              [bestTariffUrl]=\"bestTariffUrl\"\n              [returnDeviceUrl]=\"returnDeviceUrl\"\n              [type]=\"'internet'\"\n              [data]=\"(myBaseDashboardInternetServices$ | async)!\"\n              (analyticsData)=\"addAnalyticsEvent($event)\">\n            </tg-mybase-services-cards>\n          </div>\n        </div>\n      }\n      @if (myBaseDashboardInternetLoading$ | async) {\n        <div class=\"row\">\n          <div class=\"col-12 col-md-6 col-lg-4 mb--l\">\n            <div class=\"height--full skeleton skeleton--basic skeleton--container navigation--card p--m\"></div>\n          </div>\n          <div class=\"col-12 col-md-6 col-lg-4 mb--l\">\n            <div class=\"height--full skeleton skeleton--basic skeleton--container navigation--card p--m\"></div>\n          </div>\n\n          <div class=\"col-12 col-md-6 col-lg-4\">\n            <div class=\"row\">\n              <div class=\"col-12 mb--l\">\n                <div class=\"skeleton skeleton--basic skeleton--container navigation--card p--m\"></div>\n              </div>\n              <div class=\"col-12 mb--l\">\n                <div class=\"skeleton skeleton--basic skeleton--container navigation--card p--m\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div class=\"row\">\n            <div class=\"col-12 mb--l\">\n              <div class=\"skeleton skeleton--basic skeleton--container skeleton--title p--m\"></div>\n            </div>\n            <div class=\"col-12 mb--l col-lg-4\">\n              <div class=\"skeleton skeleton--basic skeleton--container service--card p--m\"></div>\n            </div>\n            <div class=\"col-12 mb--l col-lg-4\">\n              <div class=\"skeleton skeleton--basic skeleton--container service--card p--m\"></div>\n            </div>\n          </div>\n        </div>\n      }\n    }\n  </div>\n</tg-login>\n"],"names":["CommonModule","inject","EventEmitter","MyBaseDashboardDatalayerEventName","MyBaseDashboardDatalayerEventType","MyBaseDashboardDatalayerAttributeName","ProgressBarComponent","ProgressBarStatus","TranslateModule","UrlService","i0","ɵɵelement","MyBaseDashboardInternetUsageLimitedComponent","internetUsageUrl","data","limited","total","totalBytes","remaining","remainingBytes","used","usedPct","daysUntilRenewal","progressBarStatus","WARN","ERROR","OK","analyticsData","urlService","goToInternetUsage","sendAnalyticsData","redirectTo","myBaseDashbaordAnalyticsData","eventName","CARD_CLICKED","eventType","CLICK_CARD","attributeName","INTERNET_USAGE_LIMITED","destinationUrl","emit","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","MyBaseDashboardInternetUsageLimitedComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","MyBaseDashboardInternetUsageLimitedComponent_Template_div_click_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","MyBaseDashboardInternetUsageLimitedComponent_i_25_Template","MyBaseDashboardInternetUsageLimitedComponent_i_26_Template","ɵɵattribute","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵpipeBind2","ɵɵtextInterpolate1","ɵɵproperty","ɵɵpureFunction1","_c0","i1","NgIf","DecimalPipe","i2","TranslatePipe","encapsulation","UsageStatusEnum","MyBaseDashboardInternetUsageUnlimitedComponent","unlimited","usedBytes","status","usageStatus","UsageStatus","LIMIT_ALMOST_REACHED","LIMIT_EXCEEDED","LIMIT_EXCEEDED_SLOW_SPEED","INTERNET_USAGE_UNLIMITED","MyBaseDashboardInternetUsageUnlimitedComponent_Template","MyBaseDashboardInternetUsageUnlimitedComponent_Template_div_click_1_listener","MyBaseDashboardInternetUsageUnlimitedComponent_i_13_Template","MyBaseDashboardInternetUsageUnlimitedComponent_i_14_Template","MyBaseDashboardInternetUsageUnlimitedComponent_i_15_Template","ɵɵtextInterpolate2","MyBaseDashboardDatalayerFacade","MyBaseDashboardFacade","MyBaseDashoardNgrxModule","NavigationCardType","ServiceType","AddressSelectorComponent","MyBaseDashboardErrorComponent","MyBaseDashboardHomeNetworkComponent","MyBaseNavigationCardsComponent","MyBaseServicesCardsComponent","LoginModule","map","ctx_r0","myBaseDashboardInternetError$","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_1_Conditional_1_Template_tg_mybase_dashboard_internet_usage_limited_analyticsData_0_listener","$event","ɵɵrestoreView","_r11","ctx_r10","ɵɵnextContext","ɵɵresetView","addAnalyticsEvent","ctx_r8","myBaseDashboardInternetInternetUsage$","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_1_Conditional_3_Template_tg_mybase_dashboard_internet_usage_unlimited_analyticsData_0_listener","_r13","ctx_r12","ctx_r9","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_1_Conditional_1_Template","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_1_Conditional_3_Template","ɵɵconditional","tmp_0_0","ctx_r4","tmp_1_0","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_3_Template_tg_mybase_dashboard_home_network_analyticsData_1_listener","_r15","ctx_r14","ctx_r5","homeNetworkUrl","wifiPassportUrl","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_7_Template_tg_mybase_navigation_cards_analyticsData_0_listener","_r17","ctx_r16","ctx_r6","internetUsageNotificationUrl","speedTestUrl","productOverviewUrl","myDeviceUrl","devicesUsingNetworkUrl","topLevelNavigationCards$","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_11_Template_tg_mybase_navigation_cards_analyticsData_0_listener","_r19","ctx_r18","ctx_r7","bottomLevelNavigationCards$","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_1_Template","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_3_Template","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_7_Template","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Conditional_11_Template","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Template_tg_mybase_services_cards_analyticsData_15_listener","_r21","ctx_r20","ctx_r2","showCard","myBaseDashboardInternetShowHomeNetwork$","tmp_2_0","length","tmp_3_0","easySwitchUrl","bestTariffUrl","returnDeviceUrl","myBaseDashboardInternetServices$","MyBaseDashboardInternetComponent_Conditional_4_Template_tg_address_selector_selectInternetAddress_2_listener","_r23","ctx_r22","selectInternetAddress","MyBaseDashboardInternetComponent_Conditional_4_Template_tg_address_selector_analyticsData_2_listener","ctx_r24","MyBaseDashboardInternetComponent_Conditional_4_Conditional_4_Template","MyBaseDashboardInternetComponent_Conditional_4_Conditional_6_Template","ctx_r1","internetLines$","myBaseDashboardInternetLoading$","MyBaseDashboardInternetComponent","scopes","facade","datalayerFacade","myBaseDashboardInternetGeneralCards$","pipe","cards","navCards","filter","card","navigationCardTypes","includes","serviceCards","serviceTypes","INTERNET_USAGE_NOTIFICATIONS","SPEEDTEST","MANAGE_YOUR_PRODUCT","MY_DEVICE","DEVICES_USING_YOUR_NETWORK","BEST_TARIFF","EASY_SWITCH","RETURN_DEVICE","initAfterLoggedIn","loadInternetLines","seggregateCards","internetLine","setInterLine","navigationCards","slice","event","sendDatalayerEvent","MyBaseDashboardInternetComponent_Template","MyBaseDashboardInternetComponent_Template_tg_login_componentCanRender_0_listener","MyBaseDashboardInternetComponent_Conditional_2_Template","MyBaseDashboardInternetComponent_Conditional_4_Template","AsyncPipe","LoginComponent","i3","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}