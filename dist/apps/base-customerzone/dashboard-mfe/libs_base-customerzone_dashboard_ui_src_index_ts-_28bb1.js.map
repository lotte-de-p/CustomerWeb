{"version":3,"file":"libs_base-customerzone_dashboard_ui_src_index_ts-_28bb1.js","mappings":"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","sources":["./libs/base-customerzone/dashboard/ui/src/index.ts","./libs/base-customerzone/dashboard/ui/src/lib/address-selector/address-selector.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/address-selector/address-selector.component.html","./libs/base-customerzone/dashboard/ui/src/lib/line-selector/line-selector.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/line-selector/line-selector.component.html","./libs/base-customerzone/dashboard/ui/src/lib/mybase-dashboard-error/mybase-dashboard-error.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/mybase-dashboard-error/mybase-dashboard-error.component.html","./libs/base-customerzone/dashboard/ui/src/lib/mybase-dashboard-home-network/mybase-dashboard-home-network.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/mybase-dashboard-home-network/mybase-dashboard-home-network.component.html","./libs/base-customerzone/dashboard/ui/src/lib/mybase-navigation-cards/mybase-navigation-cards.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/mybase-navigation-cards/mybase-navigation-cards.component.html","./libs/base-customerzone/dashboard/ui/src/lib/mybase-service-moments/mybase-service-moments.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/mybase-service-moments/mybase-service-moments.component.html","./libs/base-customerzone/dashboard/ui/src/lib/mybase-services-cards/mybase-services-cards.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/mybase-services-cards/mybase-services-cards.component.html","./libs/base-customerzone/dashboard/ui/src/lib/mybase-simple-card/mybase-simple-card.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/mybase-simple-card/mybase-simple-card.component.html","./libs/base-customerzone/dashboard/ui/src/lib/phone-number/phone-number-transform.service.ts","./libs/base-customerzone/dashboard/ui/src/lib/phone-number/phone-number.pipe.ts","./libs/base-customerzone/dashboard/ui/src/lib/progress-bar/progress-bar.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/progress-bar/progress-bar.component.html","./libs/base-customerzone/dashboard/ui/src/lib/slide-menu/slide-menu.component.ts","./libs/base-customerzone/dashboard/ui/src/lib/slide-menu/slide-menu.component.html"],"sourcesContent":["export * from './lib/mybase-dashboard-error/mybase-dashboard-error.component';\nexport * from './lib/phone-number/phone-number.pipe';\nexport * from './lib/mybase-simple-card/mybase-simple-card.component';\nexport * from './lib/line-selector/line-selector.component';\nexport * from './lib/progress-bar/progress-bar.component';\nexport * from './lib/mybase-dashboard-home-network/mybase-dashboard-home-network.component';\nexport * from './lib/address-selector/address-selector.component';\nexport * from './lib/mybase-navigation-cards/mybase-navigation-cards.component';\nexport * from './lib/mybase-service-moments/mybase-service-moments.component';\nexport * from './lib/mybase-services-cards/mybase-services-cards.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SlideMenuComponent } from '../slide-menu/slide-menu.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  InternetLine,\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerAttributeName,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n  Address,\n} from '@mybase-dashboard/data-access';\n\n@Component({\n  selector: 'tg-address-selector',\n  standalone: true,\n  imports: [CommonModule, SlideMenuComponent, TranslateModule],\n  templateUrl: './address-selector.component.html',\n  styleUrl: './address-selector.component.scss',\n})\nexport class AddressSelectorComponent {\n  @Output() selectInternetAddress = new EventEmitter<InternetLine>();\n  @Output() analyticsData = new EventEmitter<MyBaseDashboardDatalayer>();\n\n  @Input() set data(internetLines: InternetLine[]) {\n    if (internetLines.length !== 0) {\n      this.internetLines = internetLines.map((line) => ({\n        ...line,\n        completeAddress: this.getCompleteAddress(line.address),\n      }));\n      this.selectedInternetAddress = this.internetLines.find((line) => line.default) || this.internetLines[0];\n\n      const storedProductIdentifier = window.sessionStorage.getItem(AddressSelectorComponent.SESSION_STORAGE_KEY);\n      if (storedProductIdentifier) {\n        const matchingLine = this.internetLines.find((line) => line.productIdentifier === storedProductIdentifier);\n        if (matchingLine) {\n          this.selectedInternetAddress = matchingLine;\n        }\n      } else {\n        window.sessionStorage.setItem(\n          AddressSelectorComponent.SESSION_STORAGE_KEY,\n          this.selectedInternetAddress.productIdentifier\n        );\n        window.sessionStorage.setItem(\n          AddressSelectorComponent.ADDRESS_SESSION_STORAGE_KEY,\n          this.selectedInternetAddress.address.id\n        );\n      }\n\n      this.selectInternetAddress.emit(this.selectedInternetAddress);\n    }\n  }\n\n  selectedInternetAddress: InternetLine | undefined;\n  internetLines: InternetLine[] = [];\n  showMenu = false;\n  static readonly SESSION_STORAGE_KEY = 'internet-line-selector';\n  static readonly ADDRESS_SESSION_STORAGE_KEY = 'address-line-selector';\n\n  selectLine(line: InternetLine) {\n    if (line.productIdentifier !== this.selectedInternetAddress?.productIdentifier) {\n      this.sendAnalyticsEvent();\n      this.selectedInternetAddress = line;\n      this.selectInternetAddress.emit(line);\n      this.slideMenu(false);\n      window.sessionStorage.setItem(AddressSelectorComponent.SESSION_STORAGE_KEY, line.productIdentifier);\n      window.sessionStorage.setItem(AddressSelectorComponent.ADDRESS_SESSION_STORAGE_KEY, line.address.id);\n    }\n  }\n\n  slideMenu(open: boolean, event?: Event) {\n    event?.stopPropagation();\n    this.showMenu = open;\n    if (open) {\n      document.body?.classList.add('position--fixed');\n    } else {\n      document.body?.classList.remove('position--fixed');\n    }\n  }\n  sendAnalyticsEvent(): void {\n    const analyticsEvent: MyBaseDashboardDatalayer = {\n      eventName: MyBaseDashboardDatalayerEventName.BUTTON_CLICKED,\n      eventType: MyBaseDashboardDatalayerEventType.CLICK,\n      attributeName: MyBaseDashboardDatalayerAttributeName.CHANGE_ADDRESS,\n    };\n    this.analyticsData.emit(analyticsEvent);\n  }\n\n  getCompleteAddress(address: Address): string {\n    if (!address.street || !address.houseNumber) {\n      return '';\n    }\n\n    let completeAddress = address.street.concat(' ').concat(address.houseNumber);\n\n    if (address.subHouseNumber) {\n      completeAddress = completeAddress.concat(' ', address.subHouseNumber);\n    }\n    if (address.boxNumber) {\n      completeAddress = completeAddress.concat('/', address.boxNumber);\n    }\n    if (address.postalCode) {\n      completeAddress = completeAddress.concat(', ', address.postalCode);\n    }\n    if (address.municipality) {\n      completeAddress = completeAddress.concat(' ', address.municipality);\n    }\n    return completeAddress;\n  }\n}\n","<div class=\"mb--l mb--m--md\" data-cs-mask>\n  <div class=\"display--flex align-items--center col-12\">\n    <div class=\"address-selector--title mr--xs mt--n mb--n word-break--ellipsis\">\n      {{ selectedInternetAddress?.completeAddress }}\n    </div>\n    @if (internetLines.length > 1) {\n      <div class=\"col-4 p--n\">\n        <div\n          (click)=\"slideMenu(true, $event)\"\n          class=\"address-selector--open text-font-family--t5 cursor--pointer width--fit-content\">\n          {{ 'ng.mybase-dashboard-internet.line-selector.open-button' | translate }}\n        </div>\n      </div>\n    }\n  </div>\n\n  <tg-slide-menu\n    (closeMenu)=\"slideMenu(false)\"\n    [showMenu]=\"showMenu\"\n    [title]=\"'ng.mybase-dashboard-internet.line-selector.menu-title' | translate\">\n    @for (line of internetLines; track line.productIdentifier; let last = $last) {\n      <div\n        (click)=\"selectLine(line)\"\n        class=\"display--flex align-items--center justify-content--between px--m address--line cursor--pointer\">\n        <div\n          class=\"display--flex align-items--center col-12 py--l\"\n          [ngClass]=\"{\n            'border--b--r border-width--b--r border-style--b--solid border-color--b--light-grey': !last\n          }\">\n          <i class=\"icon icon-md icon-no-size-override icon-house col-1\"></i>\n          <div class=\"col-11 p--n\">\n            <div class=\"heading--6 m--n display--flex justify-content--between\">\n              <div class=\"ml--xxs word-break--ellipsis\">\n                {{ line.completeAddress }}\n              </div>\n              @if (line.productIdentifier === selectedInternetAddress?.productIdentifier) {\n                <div class=\"ml--s\">\n                  <i class=\"icon icon-md icon-no-size-override icon-check-shape-filled color-brand-primary\"></i>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    }\n  </tg-slide-menu>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  MobileLine,\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerAttributeName,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n} from '@mybase-dashboard/data-access';\nimport { SlideMenuComponent } from '../slide-menu/slide-menu.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PhoneNumberPipe } from '../phone-number/phone-number.pipe';\n\n@Component({\n  selector: 'tg-line-selector',\n  standalone: true,\n  imports: [CommonModule, SlideMenuComponent, TranslateModule, PhoneNumberPipe],\n  templateUrl: './line-selector.component.html',\n  styleUrl: './line-selector.component.scss',\n})\nexport class LineSelectorComponent {\n  @Output() selectMsisdn = new EventEmitter<MobileLine>();\n  @Output() analyticsData = new EventEmitter<MyBaseDashboardDatalayer>();\n\n  @Input() set data(mobileLines: MobileLine[]) {\n    if (mobileLines.length !== 0) {\n      this.mobileLines = mobileLines;\n      this.selectedMsisdn = mobileLines.find((line) => line.default) || mobileLines[0];\n\n      const storedMsisdn = window.sessionStorage.getItem(LineSelectorComponent.SESSION_STORAGE_KEY);\n      if (storedMsisdn) {\n        const matchingLine = mobileLines.find((line) => line.msisdn === storedMsisdn);\n        if (matchingLine) {\n          this.selectedMsisdn = matchingLine;\n        }\n      } else {\n        window.sessionStorage.setItem(LineSelectorComponent.SESSION_STORAGE_KEY, this.selectedMsisdn.msisdn);\n        window.sessionStorage.setItem(LineSelectorComponent.ADDRESS_SESSION_STORAGE_KEY, this.selectedMsisdn.addressId);\n      }\n\n      this.selectMsisdn.emit(this.selectedMsisdn);\n    }\n  }\n\n  selectedMsisdn: MobileLine | undefined;\n  mobileLines: MobileLine[] = [];\n  showMenu = false;\n  static readonly SESSION_STORAGE_KEY = 'mobile-line-selector';\n  static readonly ADDRESS_SESSION_STORAGE_KEY = 'address-line-selector';\n\n  selectLine(line: MobileLine) {\n    if (line.msisdn !== this.selectedMsisdn?.msisdn) {\n      this.sendAnalyticsEvent();\n      this.selectedMsisdn = line;\n      this.selectMsisdn.emit(line);\n      this.slideMenu(false);\n      window.sessionStorage.setItem(LineSelectorComponent.SESSION_STORAGE_KEY, line.msisdn);\n      window.sessionStorage.setItem(LineSelectorComponent.ADDRESS_SESSION_STORAGE_KEY, line.addressId);\n    }\n  }\n\n  slideMenu(open: boolean, event?: Event) {\n    event?.stopPropagation();\n    this.showMenu = open;\n    if (open) {\n      document.body?.classList.add('position--fixed');\n    } else {\n      document.body?.classList.remove('position--fixed');\n    }\n  }\n\n  sendAnalyticsEvent(): void {\n    const analyticsEvent: MyBaseDashboardDatalayer = {\n      eventName: MyBaseDashboardDatalayerEventName.BUTTON_CLICKED,\n      eventType: MyBaseDashboardDatalayerEventType.CLICK,\n      attributeName: MyBaseDashboardDatalayerAttributeName.CHANGE_LINE,\n    };\n    this.analyticsData.emit(analyticsEvent);\n  }\n}\n","<div class=\"mb--l mb--m--md\" data-cs-mask>\n  <div class=\"display--flex align-items--center\">\n    <div class=\"line-selector--title mr--m mt--n mb--n word-break--ellipsis\">\n      @if (selectedMsisdn?.simAlias) {\n        {{ selectedMsisdn?.simAlias }} &bull;\n      }\n      {{ selectedMsisdn?.msisdn | phoneNumber }}\n    </div>\n    @if (mobileLines.length > 1) {\n      <div class=\"col-4 p--n\">\n        <div\n          (click)=\"slideMenu(true, $event)\"\n          class=\"line-selector--open text-font-family--t5 cursor--pointer width--fit-content\">\n          {{ 'ng.mybase-dashboard-mobile.line-selector.open-button' | translate }}\n        </div>\n      </div>\n    }\n  </div>\n\n  <tg-slide-menu\n    (closeMenu)=\"slideMenu(false)\"\n    [showMenu]=\"showMenu\"\n    [title]=\"'ng.mybase-dashboard-mobile.line-selector.menu-title' | translate\">\n    @for (line of mobileLines; track line.msisdn; let last = $last) {\n      <div\n        (click)=\"selectLine(line)\"\n        class=\"display--flex align-items--center justify-content--between px--m mobile--line cursor--pointer\">\n        <div\n          class=\"display--flex align-items--center col-12 py--l\"\n          [ngClass]=\"{\n            'border--b--r border-width--b--r border-style--b--solid border-color--b--light-grey': !last\n          }\">\n          <i\n            class=\"icon icon-md icon-no-size-override col-1\"\n            [ngClass]=\"{ 'icon-sim-card': line.dataOnly, 'icon-mobile': !line.dataOnly }\"></i>\n          <div class=\"col-11 p--n\">\n            <div class=\"heading--6 m--n display--flex justify-content--between align-items--center\">\n              <div class=\"ml--xxs\">\n                @if (line.simAlias) {\n                  {{ line.simAlias }}\n                  <div class=\"text-flow text-flow--detail color-shade_72 m--n\">{{ line.msisdn | phoneNumber }}</div>\n                } @else {\n                  {{ line.msisdn | phoneNumber }}\n                }\n              </div>\n              @if (line.msisdn === selectedMsisdn?.msisdn) {\n                <i class=\"icon icon-md icon-no-size-override icon-check-shape-filled color-brand-primary\"></i>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    }\n  </tg-slide-menu>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'tg-mybase-dashboard-error',\n  standalone: true,\n  imports: [CommonModule, TranslateModule],\n  templateUrl: './mybase-dashboard-error.component.html',\n})\nexport class MyBaseDashboardErrorComponent {\n  @Input() error!: string | undefined;\n}\n","<div class=\"notification notification--errorfield notification--errorfield--flow\">\n  <span class=\"icon-error\"></span>\n  @if (error) {\n    <span>{{ (error | translate) || error }}</span>\n  }\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UrlService } from '@telenet/ng-lib-page';\nimport {\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n  MyBaseDashboardDatalayerAttributeName,\n  MyBaseDashboardDatalayerAttributeData,\n} from '@mybase-dashboard/data-access';\n\n@Component({\n  selector: 'tg-mybase-dashboard-home-network',\n  standalone: true,\n  imports: [CommonModule, TranslateModule],\n  templateUrl: './mybase-dashboard-home-network.component.html',\n  styleUrl: './mybase-dashboard-home-network.component.scss',\n})\nexport class MyBaseDashboardHomeNetworkComponent implements OnInit {\n  @Input() homeNetworkUrl!: string;\n  @Input() wifiPassportUrl!: string;\n  @Input() componentPrefix!: string;\n  @Input() marginTop = true;\n  @Input() isLevel1 = true;\n\n  @Output() analyticsData = new EventEmitter<MyBaseDashboardDatalayer>();\n\n  private readonly urlService: UrlService = inject(UrlService);\n\n  ngOnInit(): void {\n    if (this.isLevel1) {\n      this.sendAnalyticsData(false);\n    }\n  }\n\n  goToHomeNetwork(): void {\n    this.sendAnalyticsData(true, this.homeNetworkUrl);\n    this.urlService.redirectTo(this.homeNetworkUrl);\n  }\n\n  goToWifiPassport(): void {\n    this.sendAnalyticsData(true, this.wifiPassportUrl, true);\n    this.urlService.redirectTo(this.wifiPassportUrl);\n  }\n\n  sendAnalyticsData(isClick: boolean, destinationUrl?: string, isShareButtonClicked?: boolean) {\n    const myBaseDashbaordAnalyticsData: MyBaseDashboardDatalayer = {\n      eventName: this.getEventName(isClick, isShareButtonClicked),\n      eventType: this.getEventType(isClick, isShareButtonClicked),\n      attributeName: !isShareButtonClicked\n        ? MyBaseDashboardDatalayerAttributeName.HOME_NETWORK\n        : MyBaseDashboardDatalayerAttributeName.SHARE_HOME_NETWORK,\n      attributeData: !isClick ? MyBaseDashboardDatalayerAttributeData.ALL_GOOD : '',\n      destinationUrl: isClick ? destinationUrl : undefined,\n    };\n    this.analyticsData.emit(myBaseDashbaordAnalyticsData);\n  }\n\n  private getEventName(isClick: boolean, isShareButtonClicked?: boolean): string {\n    if (isShareButtonClicked) {\n      return MyBaseDashboardDatalayerEventName.BUTTON_CLICKED;\n    } else if (isClick) {\n      return this.isLevel1\n        ? MyBaseDashboardDatalayerEventName.STATUS_CARD_CLICKED\n        : MyBaseDashboardDatalayerEventName.CARD_CLICKED;\n    }\n    return MyBaseDashboardDatalayerEventName.STATUS_CARD_VIEWED;\n  }\n\n  private getEventType(isClick: boolean, isShareButtonClicked?: boolean): string {\n    if (isClick) {\n      return this.isLevel1 || isShareButtonClicked\n        ? MyBaseDashboardDatalayerEventType.CLICK\n        : MyBaseDashboardDatalayerEventType.CLICK_CARD;\n    }\n    return MyBaseDashboardDatalayerEventType.IMPRESSION;\n  }\n}\n","<div\n  class=\"mybase-dashboard--card p--l--lg p--m background-white\"\n  [ngClass]=\"{ 'mt--l--md': marginTop }\"\n  [attr.data-cy]=\"'mybase-dashboard-home-network-card'\">\n  <div\n    (click)=\"goToHomeNetwork()\"\n    class=\"display--flex cursor--pointer justify-content--between border--b--r border-color--all--light-grey border-width--b--r border-style--b--solid pb--m mb--m\">\n    <div class=\"mybase-dashboard--card--title display--flex\">\n      <span class=\"text-flow text-flow--h5\">\n        {{ componentPrefix + '.home-network.title' | translate }}\n      </span>\n    </div>\n    <i class=\"icon icon-md icon-chevron-right color-shade_48 icon-no-size-override\"></i>\n  </div>\n  <div class=\"mybase-dashboard--card--content display--flex flex-direction--column justify-content--between flex-grow\">\n    <div class=\"\">\n      <button\n        (click)=\"goToWifiPassport()\"\n        class=\"button button--secondary button--alternate button--fullwidth cursor--pointer\">\n        <i class=\"icon icon-qr-code-scan icon-md mr--s icon-no-size-override font--caption-small\"></i>\n        <span>{{ componentPrefix + '.home-network.lbl.share' | translate }}</span>\n      </button>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, inject } from '@angular/core';\nimport {\n  MyBaseDashboardDatalayer,\n  NavigationCardType,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n} from '@mybase-dashboard/data-access';\nimport { MyBaseSimpleCardComponent } from '../mybase-simple-card/mybase-simple-card.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UrlService } from '@telenet/ng-lib-page';\n\n@Component({\n  selector: 'tg-mybase-navigation-cards',\n  standalone: true,\n  imports: [CommonModule, TranslateModule, MyBaseSimpleCardComponent],\n  templateUrl: './mybase-navigation-cards.component.html',\n})\nexport class MyBaseNavigationCardsComponent implements OnChanges {\n  @Input()\n  mobileUsageNotificationUrl!: string;\n\n  @Input()\n  voicemailUrl!: string;\n\n  @Input()\n  simManagementUrl!: string;\n\n  @Input()\n  productOverviewUrl!: string;\n\n  @Input()\n  topopUrl!: string;\n\n  @Input()\n  topupHistoryUrl!: string;\n\n  @Input()\n  internetUsageNotificationUrl!: string;\n\n  @Input()\n  speedTestUrl!: string;\n\n  @Input()\n  myDeviceUrl!: string;\n\n  @Input()\n  devicesUsingNetworkUrl!: string;\n\n  @Input()\n  manageContentPacksUrl!: string;\n\n  @Input()\n  watchTvOnlineUrl!: string;\n\n  @Input()\n  manageYourDeviceUrl!: string;\n\n  @Input()\n  addTvBoxUrl!: string;\n\n  @Input()\n  productIdentifier!: string;\n\n  @Input()\n  mobileTitle!: string;\n\n  @Input()\n  customClassGrid!: string;\n\n  @Input()\n  mobileUsageDetailsUrl!: string;\n\n  @Input()\n  mobileUsageLimitsUrl!: string;\n\n  @Input()\n  barringsUrl!: string;\n\n  @Input()\n  showControlUsageTitle = false;\n\n  @Input({ required: true })\n  data!: NavigationCardType[];\n\n  @Input({ required: true })\n  type!: 'mobile' | 'internet' | 'dtv';\n\n  @Output() analyticsData = new EventEmitter<MyBaseDashboardDatalayer>();\n\n  cards: NavigationCardType[] = [];\n  readonly iconMap: Record<NavigationCardType, string> = {\n    [NavigationCardType.MOBILE_USAGE_NOTIFICATIONS]: 'icon-bell',\n    [NavigationCardType.VOICEMAIL]: 'icon-voicemail',\n    [NavigationCardType.SIM_MANAGEMENT]: 'icon-sim-management',\n    [NavigationCardType.PRODUCT_OVERVIEW]: 'icon-overview',\n    [NavigationCardType.TOPUP]: 'icon-mobile-arrow-up',\n    [NavigationCardType.TOPUP_HISTORY]: 'icon-euro-arrow-counterclockwise',\n    [NavigationCardType.INTERNET_USAGE_NOTIFICATIONS]: 'icon-bell',\n    [NavigationCardType.SPEEDTEST]: 'icon-gauge',\n    [NavigationCardType.MANAGE_YOUR_PRODUCT]: 'icon-stack',\n    [NavigationCardType.MY_DEVICE]: '',\n    [NavigationCardType.DEVICES_USING_YOUR_NETWORK]: '',\n    [NavigationCardType.MANAGE_YOUR_DEVICE]: '',\n    [NavigationCardType.WATCH_TV_ONLINE]: 'icon icon-play',\n    [NavigationCardType.MANAGE_CONTENT_PACKS]: 'icon-grid-lg',\n    [NavigationCardType.ADD_TV_BOX]: 'icon-tv-box',\n    [NavigationCardType.USAGE_DETAILS]: 'icon-list-blocks',\n    [NavigationCardType.USAGE_LIMITS]: 'icon-mobile-euro',\n    [NavigationCardType.BARRINGS]: 'icon-settings-lines',\n  };\n\n  private readonly urlService: UrlService = inject(UrlService);\n\n  ngOnChanges(): void {\n    if (this.data) {\n      this.updateData();\n    }\n  }\n\n  redirectTo(card: NavigationCardType) {\n    const url = this.getUrl(card);\n    const event: MyBaseDashboardDatalayer = {\n      eventName: MyBaseDashboardDatalayerEventName.CARD_CLICKED,\n      eventType: MyBaseDashboardDatalayerEventType.CLICK_CARD,\n      attributeData: '',\n      attributeName: card,\n      destinationUrl: url,\n    };\n    this.analyticsData.emit(event);\n    this.urlService.redirectTo(url);\n  }\n\n  getUrl(card: NavigationCardType): string {\n    switch (card) {\n      case NavigationCardType.MOBILE_USAGE_NOTIFICATIONS:\n        return this.mobileUsageNotificationUrl;\n      case NavigationCardType.VOICEMAIL:\n        return this.voicemailUrl;\n      case NavigationCardType.SIM_MANAGEMENT:\n        return this.simManagementUrl;\n      case NavigationCardType.PRODUCT_OVERVIEW:\n        return this.productOverviewUrl;\n      case NavigationCardType.TOPUP:\n        return this.topopUrl;\n      case NavigationCardType.TOPUP_HISTORY:\n        return this.topupHistoryUrl;\n      case NavigationCardType.INTERNET_USAGE_NOTIFICATIONS:\n        return this.internetUsageNotificationUrl;\n      case NavigationCardType.SPEEDTEST:\n        return this.speedTestUrl;\n      case NavigationCardType.MANAGE_YOUR_PRODUCT:\n        return this.productOverviewUrl;\n      case NavigationCardType.MY_DEVICE:\n        return this.myDeviceUrl;\n      case NavigationCardType.DEVICES_USING_YOUR_NETWORK:\n        return this.devicesUsingNetworkUrl;\n      case NavigationCardType.MANAGE_CONTENT_PACKS:\n        return this.getManageContentPacksUrl();\n      case NavigationCardType.WATCH_TV_ONLINE:\n        return this.watchTvOnlineUrl;\n      case NavigationCardType.MANAGE_YOUR_DEVICE:\n        return this.manageYourDeviceUrl;\n      case NavigationCardType.ADD_TV_BOX:\n        return this.addTvBoxUrl;\n      case NavigationCardType.USAGE_DETAILS:\n        return this.mobileUsageDetailsUrl;\n      case NavigationCardType.USAGE_LIMITS:\n        return this.mobileUsageLimitsUrl;\n      case NavigationCardType.BARRINGS:\n        return this.barringsUrl;\n    }\n  }\n\n  private updateData(): void {\n    // Only show cards that have a configured URL\n    this.cards = this.data.filter((card) => {\n      switch (card) {\n        case NavigationCardType.MOBILE_USAGE_NOTIFICATIONS:\n          return !!this.mobileUsageNotificationUrl;\n        case NavigationCardType.VOICEMAIL:\n          return !!this.voicemailUrl;\n        case NavigationCardType.SIM_MANAGEMENT:\n          return !!this.simManagementUrl;\n        case NavigationCardType.PRODUCT_OVERVIEW:\n          return !!this.productOverviewUrl;\n        case NavigationCardType.TOPUP:\n          return !!this.topopUrl;\n        case NavigationCardType.TOPUP_HISTORY:\n          return !!this.topupHistoryUrl;\n        case NavigationCardType.INTERNET_USAGE_NOTIFICATIONS:\n          return !!this.internetUsageNotificationUrl;\n        case NavigationCardType.SPEEDTEST:\n          return !!this.speedTestUrl;\n        case NavigationCardType.MANAGE_YOUR_PRODUCT:\n          return !!this.productOverviewUrl;\n        case NavigationCardType.MY_DEVICE:\n          return !!this.myDeviceUrl;\n        case NavigationCardType.DEVICES_USING_YOUR_NETWORK:\n          return !!this.devicesUsingNetworkUrl;\n        case NavigationCardType.MANAGE_CONTENT_PACKS:\n          return !!this.manageContentPacksUrl;\n        case NavigationCardType.WATCH_TV_ONLINE:\n          return !!this.watchTvOnlineUrl;\n        case NavigationCardType.MANAGE_YOUR_DEVICE:\n          return !!this.manageYourDeviceUrl;\n        case NavigationCardType.ADD_TV_BOX:\n          return !!this.addTvBoxUrl;\n        case NavigationCardType.USAGE_DETAILS:\n          return !!this.mobileUsageDetailsUrl;\n        case NavigationCardType.USAGE_LIMITS:\n          return !!this.mobileUsageLimitsUrl;\n        case NavigationCardType.BARRINGS:\n          return !!this.barringsUrl;\n        default:\n          return false;\n      }\n    });\n  }\n\n  private getManageContentPacksUrl(): string {\n    return `${this.manageContentPacksUrl}?item=${this.productIdentifier}&flow=product-options&producttype=dtv`;\n  }\n}\n","@if (cards.length > 0) {\n  <div class=\"row\">\n    @if (mobileTitle) {\n      <div class=\"col-12 display--flex display--none--md\">\n        <span class=\"heading--4 mb--xs mb--m--md mt--m\">{{ mobileTitle }}</span>\n      </div>\n    }\n\n    @if (showControlUsageTitle) {\n      <div class=\"col-12 mb--s mt--xxl--md mt--m\">\n        <span class=\"heading--4\">{{ 'ng.mybase-dashboard-mobile.take-control-usage.title' | translate }}</span>\n      </div>\n    }\n\n    @for (card of cards; track $index; let last = $last) {\n      <div class=\"col-12 mb--m mt--xxxs--md\" [ngClass]=\"customClassGrid\">\n        <tg-mybase-simple-card\n          [title]=\"'ng.mybase-dashboard-' + type + '.navigation-cards.title-' + card | translate\"\n          [subtitle]=\"'ng.mybase-dashboard-' + type + '.navigation-cards.subtitle-' + card | translate\"\n          [cypressTag]=\"'mybase-dashboard-' + type + '.navigation-cards.card-' + card\"\n          [iconName]=\"iconMap[card]\"\n          [fullHeight]=\"true\"\n          class=\"height--full display--block mb--m\"\n          (cardClicked)=\"redirectTo(card)\"></tg-mybase-simple-card>\n      </div>\n    }\n  </div>\n}\n","import { Component, EventEmitter, Input, Output, inject } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  MappedServiceMoments,\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerAttributeData,\n  MyBaseDashboardDatalayerAttributeGroup,\n  MyBaseDashboardDatalayerAttributeName,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n  ServiceMoments,\n  ServiceMomentsType,\n  SubType,\n} from '@mybase-dashboard/data-access';\nimport { UrlService } from '@telenet/ng-lib-page';\n\n@Component({\n  selector: 'tg-mybase-service-moments',\n  standalone: true,\n  imports: [CommonModule, TranslateModule],\n  templateUrl: './mybase-service-moments.component.html',\n  styleUrl: './mybase-service-moments.component.scss',\n})\nexport class MyBaseServiceMomentsComponent {\n  private readonly translateService = inject(TranslateService);\n  private readonly urlService: UrlService = inject(UrlService);\n  private readonly datePipe = inject(DatePipe);\n\n  @Input({ required: true }) set data(sm: ServiceMoments[]) {\n    if (sm.length) {\n      sm.forEach((moment) => {\n        switch (moment.type) {\n          case ServiceMomentsType.SIM_ACTIVATION:\n            this.attributeData.push(MyBaseDashboardDatalayerAttributeData.ACTIVATE_SIM);\n            this.mappedServiceMoments.push({\n              title: this.translateService.instant('ng.mybase-dashboard.service-moments.sim-activation.title'),\n              subTitle: this.translateService.instant('ng.mybase-dashboard.service-moments.sim-activation.subtitle'),\n              buttonText: this.translateService.instant('ng.mybase-dashboard.service-moments.sim-activation.button'),\n              icon: 'icon-sim-card',\n              type: moment.type,\n              url: this.simActivationUrl,\n              msisdn: moment.msisdn,\n              attributeData: MyBaseDashboardDatalayerAttributeData.ACTIVATE_SIM,\n              attributeGroup: MyBaseDashboardDatalayerAttributeGroup.ACTIVATE,\n              subType: SubType.SIM_ACTIVATION,\n            });\n            break;\n          case ServiceMomentsType.ESIM_ACTIVATION:\n            this.attributeData.push(MyBaseDashboardDatalayerAttributeData.ACTIVATE_SIM);\n            this.mappedServiceMoments.push({\n              title: this.translateService.instant('ng.mybase-dashboard.service-moments.esim-activation.title'),\n              subTitle: this.translateService.instant('ng.mybase-dashboard.service-moments.esim-activation.subtitle'),\n              buttonText: this.translateService.instant('ng.mybase-dashboard.service-moments.esim-activation.button'),\n              icon: 'icon-sim-card',\n              type: moment.type,\n              url: this.eSimActivationUrl,\n              msisdn: moment.msisdn,\n              attributeData: MyBaseDashboardDatalayerAttributeData.ACTIVATE_SIM,\n              attributeGroup: MyBaseDashboardDatalayerAttributeGroup.ACTIVATE,\n              subType: SubType.ESIM_ACTIVATION,\n            });\n            break;\n          case ServiceMomentsType.APPOINTMENT: {\n            this.attributeData.push(MyBaseDashboardDatalayerAttributeData.INSTALLATION_APPOINTMENT);\n            let subTitle = this.translateService.instant(\n              'ng.mybase-dashboard.service-moments.unplannend-appointment.subtitle'\n            );\n            let subType = SubType.UNPLANNED_APPOINTMENT;\n\n            if (moment.timeslot) {\n              subTitle = this.translateService.instant(\n                'ng.mybase-dashboard.service-moments.plannend-appointment.subtitle',\n                {\n                  start: this.datePipe.transform(moment?.timeslot?.start, 'dd MMMM yyyy HH:mm'),\n                  end: this.datePipe.transform(moment?.timeslot?.end, 'dd MMMM yyyy HH:mm'),\n                }\n              );\n              subType = SubType.PLANNED_APPOINTMENT;\n            }\n            this.mappedServiceMoments.push({\n              title: this.translateService.instant('ng.mybase-dashboard.service-moments.appointment.title'),\n              subTitle: subTitle,\n              buttonText: this.translateService.instant('ng.mybase-dashboard.service-moments.appointment.button'),\n              icon: 'icon-calendar',\n              type: moment.type,\n              url: this.appointmentUrl,\n              attributeData: MyBaseDashboardDatalayerAttributeData.INSTALLATION_APPOINTMENT,\n              attributeGroup: MyBaseDashboardDatalayerAttributeGroup.VIEW_DETAILS,\n              subType: subType,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n      });\n      // This is done in case we have to show multiple service moments. For now we only show one\n      this.attributeData.forEach((data) => this.sendAnalytics(data, false));\n    }\n  }\n  @Input() simActivationUrl!: string;\n  @Input() eSimActivationUrl!: string;\n  @Input() appointmentUrl!: string;\n\n  @Output() analyticsData = new EventEmitter<MyBaseDashboardDatalayer>();\n\n  mappedServiceMoments: MappedServiceMoments[] = [];\n  attributeData: string[] = [];\n\n  redirectTo(url: string, attData: string, attGrp: string, msisdn?: string) {\n    const finalUrl = msisdn ? `${url}?msisdn=${msisdn}` : url;\n    this.sendAnalytics(attData, true, attGrp, finalUrl);\n    this.urlService.redirectTo(finalUrl);\n  }\n\n  sendAnalytics(attributeData: string, isClick: boolean, attributeGroup?: string, destinationUrl?: string) {\n    const event: MyBaseDashboardDatalayer = {\n      eventName: isClick\n        ? MyBaseDashboardDatalayerEventName.STATUS_CARD_CLICKED\n        : MyBaseDashboardDatalayerEventName.STATUS_CARD_VIEWED,\n      eventType: isClick ? MyBaseDashboardDatalayerEventType.CLICK : MyBaseDashboardDatalayerEventType.IMPRESSION,\n      attributeData: attributeData,\n      attributeName: MyBaseDashboardDatalayerAttributeName.SERVICE_MOMENT,\n      attributeGroup: isClick ? attributeGroup : undefined,\n      destinationUrl: destinationUrl,\n    };\n    this.analyticsData.emit(event);\n  }\n}\n","@for (moment of mappedServiceMoments; track $index; let last = $last) {\n  <div\n    class=\"display--none display--flex--md align-items--center p--l background-white cursor--pointer--hover\"\n    [ngClass]=\"{ 'mb--m': !last }\"\n    [attr.data-cy]=\"'mybase-service-moments-card-' + moment.type\">\n    <div class=\"display--flex justify-content--center align-items--center mr--s product-icon\">\n      <i class=\"icon icon-md icon-sim-card icon-no-size-override\" [ngClass]=\"moment.icon\"></i>\n    </div>\n    <div class=\"display--flex flex-grow flex-direction--column\">\n      <div class=\"heading--6 heading--nomargin\">\n        {{ moment.title }}\n      </div>\n\n      <div\n        class=\"font--body-regular color-shade_72\"\n        [attr.data-cy]=\"'mybase-service-moments-card-subtitle-' + moment.subType\">\n        {{ moment.subTitle }}\n      </div>\n    </div>\n    <div\n      [attr.data-cy]=\"'mybase-service-moments-card-button-' + moment.type\"\n      (click)=\"redirectTo(moment.url, moment.attributeData, moment.attributeGroup, moment.msisdn)\"\n      class=\"button button--primary button--alternate button--paynow\">\n      {{ moment.buttonText }}\n    </div>\n  </div>\n\n  <!-- Mobile view -->\n  <div\n    class=\"display--none--md mybase-dashboard--card p--l--lg p--m background-white mt--l--md mb--m\"\n    [attr.data-cy]=\"'mybase-service-moments-card-' + moment.type + '-mobile'\">\n    <div\n      (click)=\"redirectTo(moment.url, moment.attributeData, moment.attributeGroup, moment.msisdn)\"\n      class=\"display--flex cursor--pointer justify-content--between border--b--r border-color--all--light-grey border-width--b--r border-style--b--solid pb--m mb--m\">\n      <div class=\"mybase-dashboard--card--title display--flex\">\n        <span class=\"text-flow text-flow--h5\">\n          {{ moment.title }}\n        </span>\n      </div>\n      <i\n        class=\"icon icon-md icon-chevron-right color-shade_48 icon-no-size-override display--flex align-items--center\"></i>\n    </div>\n    <div\n      class=\"font--body-small color-shade_72\"\n      [attr.data-cy]=\"'mybase-service-moments-card-subtitle-' + moment.subType\">\n      {{ moment.subTitle }}\n    </div>\n  </div>\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, inject } from '@angular/core';\nimport {\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n  ServiceType,\n} from '@mybase-dashboard/data-access';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UrlService } from '@telenet/ng-lib-page';\nimport { MyBaseSimpleCardComponent } from '../mybase-simple-card/mybase-simple-card.component';\n\n@Component({\n  selector: 'tg-mybase-services-cards',\n  standalone: true,\n  imports: [CommonModule, TranslateModule, MyBaseSimpleCardComponent],\n  templateUrl: './mybase-services-cards.component.html',\n})\nexport class MyBaseServicesCardsComponent implements OnChanges {\n  @Input()\n  payByMobileUrl!: string;\n\n  @Input()\n  buyHardwareDiscountUrl!: string;\n\n  @Input()\n  easySwitchUrl!: string;\n\n  @Input()\n  bestTariffUrl!: string;\n\n  @Input()\n  returnDeviceUrl!: string;\n\n  @Input({ required: true })\n  type!: 'mobile' | 'internet' | 'dtv';\n\n  @Input({ required: true })\n  data!: ServiceType[];\n\n  @Output() analyticsData = new EventEmitter<MyBaseDashboardDatalayer>();\n\n  cards: ServiceType[] = [];\n\n  private readonly urlService: UrlService = inject(UrlService);\n\n  ngOnChanges(): void {\n    this.updateData();\n  }\n\n  redirectTo(card: ServiceType) {\n    const url = this.getUrl(card);\n    const event: MyBaseDashboardDatalayer = {\n      eventName: MyBaseDashboardDatalayerEventName.CARD_CLICKED,\n      eventType: MyBaseDashboardDatalayerEventType.CLICK_CARD,\n      attributeData: '',\n      attributeName: card,\n      destinationUrl: url,\n    };\n    this.analyticsData.emit(event);\n    this.urlService.redirectTo(url);\n  }\n\n  getUrl(card: ServiceType): string {\n    switch (card) {\n      case ServiceType.PAYBYMOBILE:\n        return this.payByMobileUrl;\n      case ServiceType.BUY_HARDWARE_DISCOUNT:\n        return this.buyHardwareDiscountUrl;\n      case ServiceType.EASY_SWITCH:\n        return this.easySwitchUrl;\n      case ServiceType.BEST_TARIFF:\n        return this.bestTariffUrl;\n      case ServiceType.RETURN_DEVICE:\n        return this.returnDeviceUrl;\n    }\n  }\n\n  private updateData(): void {\n    // Only show cards that have a configured URL\n    this.cards = this.data.filter((card) => {\n      switch (card) {\n        case ServiceType.PAYBYMOBILE:\n          return !!this.payByMobileUrl;\n        case ServiceType.BUY_HARDWARE_DISCOUNT:\n          return !!this.buyHardwareDiscountUrl;\n        case ServiceType.EASY_SWITCH:\n          return !!this.easySwitchUrl;\n        case ServiceType.BEST_TARIFF:\n          return !!this.bestTariffUrl;\n        case ServiceType.RETURN_DEVICE:\n          return !!this.returnDeviceUrl;\n        default:\n          return false;\n      }\n    });\n  }\n}\n","@if (cards.length > 0) {\n  <div class=\"row\">\n    <div class=\"col-12 mb--xs mb--m--md mt--xxl--md mt--l\">\n      <span class=\"heading--4\">\n        {{ 'ng.mybase-dashboard-' + type + '.services.title' | translate }}\n      </span>\n    </div>\n\n    @for (card of cards; track $index; let last = $last) {\n      <div class=\"col-12 col-md-6 col-lg-4 mb--m\">\n        <tg-mybase-simple-card\n          [title]=\"'ng.mybase-dashboard-' + type + '.services.title-' + card | translate\"\n          [cypressTag]=\"'mybase-dashboard-' + type + '.services.card-' + card\"\n          [ngClass]=\"{ 'display--block': !last }\"\n          (cardClicked)=\"redirectTo(card)\"></tg-mybase-simple-card>\n      </div>\n    }\n  </div>\n}\n","import { NgClass } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'tg-mybase-simple-card',\n  standalone: true,\n  imports: [NgClass],\n  templateUrl: './mybase-simple-card.component.html',\n  styleUrl: './mybase-simple-card.component.scss',\n})\nexport class MyBaseSimpleCardComponent {\n  @Input({ required: true }) title!: string;\n  @Input() subtitle = '';\n  @Input() iconName = '';\n  @Input() cypressTag = '';\n  @Input() fullHeight = false;\n  @Input() isExternalLink = false;\n  @Output() cardClicked = new EventEmitter<void>();\n}\n","<div\n  class=\"mybase-simple-card display--flex align-items--center p--m p--l--lg background-white cursor--pointer--hover\"\n  [ngClass]=\"{ 'height--full': fullHeight }\"\n  (click)=\"cardClicked.emit()\"\n  [attr.data-cy]=\"cypressTag\">\n  @if (iconName) {\n    <div class=\"display--flex justify-content--center align-items--center mr--s\">\n      <i class=\"icon icon-md {{ iconName }} icon-no-size-override\"></i>\n    </div>\n  }\n  <div class=\"display--flex flex-grow flex-direction--column\">\n    <div class=\"heading--6 heading--nomargin\">\n      {{ title }}\n    </div>\n    @if (subtitle) {\n      <div class=\"font--body-small color-shade_72\">\n        {{ subtitle }}\n      </div>\n    }\n  </div>\n  <i\n    class=\"icon icon-md icon-no-size-override color-shade_48\"\n    [ngClass]=\"{ 'icon-chevron-right': !isExternalLink, 'icon-external-link': isExternalLink }\"></i>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PhoneNumberTransformService {\n  private static readonly NATIONAL_MOBILE_NUMBER = /^((0|0032|32|\\+32)4\\d{8})$/;\n  private static readonly INTERNATIONAL_NUMBER = /^(\\+|00|0)(?:\\d ?){6,14}\\d$/;\n  private static readonly NATIONAL_PHONE_NUMBER = /^((0|0032|\\+32)\\d{8})$/;\n  private static readonly BASE_PHONE_NUMBER = /^(((0|0032|\\+32|032|32)4\\d{8})|((00|\\+)(?!32)4\\d{8})|(4\\d{8}))$/;\n\n  transform(phoneNumber: string): string {\n    if (PhoneNumberTransformService.NATIONAL_PHONE_NUMBER.test(phoneNumber)) {\n      return this.filterNationalPhoneNumber(phoneNumber);\n    }\n    if (PhoneNumberTransformService.NATIONAL_MOBILE_NUMBER.test(phoneNumber)) {\n      return this.filterNationalMobileNumber(phoneNumber);\n    }\n    if (PhoneNumberTransformService.BASE_PHONE_NUMBER.test(phoneNumber)) {\n      return this.filterBasePhoneNumber(phoneNumber);\n    }\n    return this.filterInternationalNumber(phoneNumber);\n  }\n\n  doNormaliseMsisdn(phoneNumber: string): string {\n    let transFormedNumber = this.transform(phoneNumber);\n    transFormedNumber = transFormedNumber.indexOf('0') !== 0 ? '0' + transFormedNumber : transFormedNumber;\n    return transFormedNumber && transFormedNumber.replace(/ /g, '');\n  }\n\n  autoFormatPhoneNumber(msisdn: string): string {\n    const formattedPhoneNumber = this.doNormaliseMsisdn(msisdn);\n    if (!msisdn || !formattedPhoneNumber) {\n      return msisdn;\n    } else {\n      if (this.isValidNationalMobileNumber(formattedPhoneNumber)) {\n        return 0 + formattedPhoneNumber.substring(1);\n      } else if (this.isValidInternationalNumber(msisdn)) {\n        return msisdn;\n      }\n      return formattedPhoneNumber;\n    }\n  }\n\n  private filterNationalPhoneNumber(phoneNumber: string): string {\n    const numberLength = phoneNumber.length;\n    let numberStart = phoneNumber.slice(0, numberLength - 6);\n    let zoneCode = '0';\n    if (this.contains(numberStart, '0032')) {\n      numberStart = numberStart.slice(4, numberStart.length);\n    }\n    if (this.contains(numberStart, '+32')) {\n      numberStart = numberStart.slice(3, numberStart.length);\n    }\n    if (numberStart[0] === '2' || numberStart[0] === '3') {\n      zoneCode += numberStart[0] + ' ';\n      numberStart = numberStart.slice(1, numberStart.length);\n    }\n    return (\n      zoneCode +\n      numberStart +\n      phoneNumber.slice(numberLength - 6, numberLength - 4) +\n      ' ' +\n      phoneNumber.slice(numberLength - 4, numberLength - 2) +\n      ' ' +\n      phoneNumber.slice(numberLength - 2, numberLength)\n    );\n  }\n\n  private filterNationalMobileNumber(phoneNumber: string): string {\n    const numberLength = phoneNumber.length;\n    let numberStart = phoneNumber.slice(0, numberLength - 6);\n    if (numberStart.indexOf('0032') === 0) {\n      numberStart = '0' + numberStart.slice(4, numberStart.length);\n    }\n    if (numberStart.indexOf('+32') === 0) {\n      numberStart = '0' + numberStart.slice(3, numberStart.length);\n    }\n    if (numberStart.indexOf('32') === 0) {\n      numberStart = '0' + numberStart.slice(2, numberStart.length);\n    }\n    return (\n      numberStart +\n      ' ' +\n      phoneNumber.slice(numberLength - 6, numberLength - 4) +\n      ' ' +\n      phoneNumber.slice(numberLength - 4, numberLength - 2) +\n      ' ' +\n      phoneNumber.slice(numberLength - 2, numberLength)\n    );\n  }\n\n  private filterBasePhoneNumber(phoneNumber: string): string {\n    const numberLength = phoneNumber.length;\n    let numberStart = phoneNumber.slice(0, numberLength - 6);\n    if (this.contains(numberStart, '032')) {\n      numberStart = '0' + numberStart.slice(3, numberStart.length);\n    }\n    if (this.contains(numberStart, '00')) {\n      numberStart = '0' + numberStart.slice(2, numberStart.length);\n    }\n\n    return (\n      numberStart +\n      ' ' +\n      phoneNumber.slice(numberLength - 6, numberLength - 4) +\n      ' ' +\n      phoneNumber.slice(numberLength - 4, numberLength - 2) +\n      ' ' +\n      phoneNumber.slice(numberLength - 2, numberLength)\n    );\n  }\n\n  private filterInternationalNumber(phoneNumber: string): string {\n    const numberStart = phoneNumber.slice(0, 2);\n    if (this.contains(numberStart, '00')) {\n      return '+' + phoneNumber.slice(2, phoneNumber.length);\n    }\n    return phoneNumber;\n  }\n\n  private contains(master: string, test: string) {\n    return master.indexOf(test) > -1;\n  }\n\n  private isValidNationalMobileNumber(value: string): boolean {\n    return PhoneNumberTransformService.NATIONAL_MOBILE_NUMBER.test(value);\n  }\n\n  private isValidInternationalNumber(number: string): boolean {\n    const value = number.replace(/[-/\\\\,\\s.]/g, '');\n    return PhoneNumberTransformService.INTERNATIONAL_NUMBER.test(value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PhoneNumberTransformService } from './phone-number-transform.service';\n\n@Pipe({ name: 'phoneNumber', standalone: true })\nexport class PhoneNumberPipe implements PipeTransform {\n  constructor(private readonly phoneNumberTransformService: PhoneNumberTransformService) {}\n\n  transform(phoneNumber?: string) {\n    return this.transFormPhoneNumber(phoneNumber);\n  }\n\n  private transFormPhoneNumber(phoneNumber?: string): string {\n    if (!phoneNumber) {\n      return '';\n    }\n    phoneNumber = phoneNumber.trim();\n    return this.phoneNumberTransformService.transform(phoneNumber);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport enum ProgressBarStatus {\n  OK = 'ok',\n  WARN = 'warn',\n  ERROR = 'error',\n}\n\n@Component({\n  selector: 'tg-progress-bar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './progress-bar.component.html',\n  styleUrl: './progress-bar.component.scss',\n})\nexport class ProgressBarComponent {\n  @Input({ required: true }) progress = 0;\n  @Input() barColor: ProgressBarStatus = ProgressBarStatus.OK;\n\n  ProgressBarStatus = ProgressBarStatus;\n}\n","<div class=\"mybase-progress-bar mb--xxs\">\n  <div\n    [ngStyle]=\"{ width: progress + '%' }\"\n    [ngClass]=\"{\n      'background-cyan-green': barColor === ProgressBarStatus.OK,\n      'background-notification--warning--light': barColor === ProgressBarStatus.WARN,\n      'background-notification--error--light': barColor === ProgressBarStatus.ERROR\n    }\"\n    class=\"inner\"\n    [attr.data-cy]=\"'mybase-dashboard-progress-bar-status-' + barColor\"></div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickOutsideDirective } from '@telenet/ng-lib-page';\n\n@Component({\n  selector: 'tg-slide-menu',\n  standalone: true,\n  imports: [CommonModule, ClickOutsideDirective],\n  templateUrl: './slide-menu.component.html',\n  styleUrl: './slide-menu.component.scss',\n})\nexport class SlideMenuComponent {\n  @Input({ required: true }) showMenu!: boolean;\n  @Input({ required: true }) title!: string;\n  @Output() closeMenu = new EventEmitter();\n\n  close() {\n    this.closeMenu.emit();\n  }\n}\n","<aside class=\"sidebar\" (appClickOutside)=\"close()\" [ngClass]=\"{ slide: showMenu }\">\n  <div class=\"sidebar__menu\">\n    <div class=\"p--l position--top position--sticky width--full background-white\">\n      <div class=\"sidebar__heading display--flex align-items--center justify-content--end\">\n        <div for=\"menu-control\" class=\"sidebar__close cursor--pointer\" (click)=\"close()\">\n          <i class=\"icon icon-cross icon-md icon-no-size-override\"></i>\n        </div>\n      </div>\n    </div>\n    <div class=\"sidebar__content px--xxs pb--l\">\n      <div class=\"heading--5 mt--n px--m\">\n        {{ title }}\n      </div>\n      <ng-content></ng-content>\n    </div>\n  </div>\n</aside>\n<div class=\"mybase-overlay\"></div>\n"],"names":["EventEmitter","CommonModule","SlideMenuComponent","TranslateModule","MyBaseDashboardDatalayerAttributeName","MyBaseDashboardDatalayerEventName","MyBaseDashboardDatalayerEventType","i0","ɵɵelementStart","ɵɵlistener","AddressSelectorComponent_Conditional_4_Template_div_click_1_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","slideMenu","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵelement","AddressSelectorComponent_For_8_Template_div_click_0_listener","restoredCtx","_r11","line_r4","$implicit","ctx_r10","selectLine","ɵɵtemplate","AddressSelectorComponent_For_8_Conditional_7_Template","ɵɵproperty","ɵɵpureFunction1","_c1","$index_r5","$count_r7","completeAddress","ɵɵconditional","productIdentifier","ctx_r1","selectedInternetAddress","AddressSelectorComponent","selectInternetAddress","analyticsData","data","internetLines","length","map","line","getCompleteAddress","address","find","default","storedProductIdentifier","window","sessionStorage","getItem","SESSION_STORAGE_KEY","matchingLine","setItem","ADDRESS_SESSION_STORAGE_KEY","id","emit","showMenu","sendAnalyticsEvent","open","event","stopPropagation","document","body","classList","add","remove","analyticsEvent","eventName","BUTTON_CLICKED","eventType","CLICK","attributeName","CHANGE_ADDRESS","street","houseNumber","concat","subHouseNumber","boxNumber","postalCode","municipality","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AddressSelectorComponent_Template","rf","ctx","AddressSelectorComponent_Conditional_4_Template","AddressSelectorComponent_Template_tg_slide_menu_closeMenu_5_listener","ɵɵrepeaterCreate","AddressSelectorComponent_For_8_Template","_forTrack0","ɵɵrepeater","i1","NgClass","i2","TranslatePipe","styles","PhoneNumberPipe","ctx_r0","selectedMsisdn","simAlias","LineSelectorComponent_Conditional_6_Template_div_click_1_listener","_r4","ctx_r3","line_r5","ɵɵtextInterpolate","msisdn","LineSelectorComponent_For_10_Template_div_click_0_listener","_r16","ctx_r15","LineSelectorComponent_For_10_Conditional_6_Template","LineSelectorComponent_For_10_Conditional_7_Template","LineSelectorComponent_For_10_Conditional_8_Template","$index_r6","$count_r8","ɵɵpureFunction2","_c2","dataOnly","LineSelectorComponent","selectMsisdn","mobileLines","storedMsisdn","addressId","CHANGE_LINE","LineSelectorComponent_Template","LineSelectorComponent_Conditional_3_Template","LineSelectorComponent_Conditional_6_Template","LineSelectorComponent_Template_tg_slide_menu_closeMenu_7_listener","LineSelectorComponent_For_10_Template","error","MyBaseDashboardErrorComponent","MyBaseDashboardErrorComponent_Template","MyBaseDashboardErrorComponent_Conditional_2_Template","encapsulation","inject","UrlService","MyBaseDashboardDatalayerAttributeData","MyBaseDashboardHomeNetworkComponent","homeNetworkUrl","wifiPassportUrl","componentPrefix","marginTop","isLevel1","urlService","ngOnInit","sendAnalyticsData","goToHomeNetwork","redirectTo","goToWifiPassport","isClick","destinationUrl","isShareButtonClicked","myBaseDashbaordAnalyticsData","getEventName","getEventType","HOME_NETWORK","SHARE_HOME_NETWORK","attributeData","ALL_GOOD","undefined","STATUS_CARD_CLICKED","CARD_CLICKED","STATUS_CARD_VIEWED","CLICK_CARD","IMPRESSION","MyBaseDashboardHomeNetworkComponent_Template","MyBaseDashboardHomeNetworkComponent_Template_div_click_1_listener","MyBaseDashboardHomeNetworkComponent_Template_button_click_9_listener","_c0","ɵɵattribute","NavigationCardType","MyBaseSimpleCardComponent","mobileTitle","MyBaseNavigationCardsComponent_Conditional_0_For_4_Template_tg_mybase_simple_card_cardClicked_1_listener","_r10","card_r4","ctx_r9","customClassGrid","type","iconMap","MyBaseNavigationCardsComponent_Conditional_0_Conditional_1_Template","MyBaseNavigationCardsComponent_Conditional_0_Conditional_2_Template","MyBaseNavigationCardsComponent_Conditional_0_For_4_Template","ɵɵrepeaterTrackByIndex","showControlUsageTitle","cards","MyBaseNavigationCardsComponent","mobileUsageNotificationUrl","voicemailUrl","simManagementUrl","productOverviewUrl","topopUrl","topupHistoryUrl","internetUsageNotificationUrl","speedTestUrl","myDeviceUrl","devicesUsingNetworkUrl","manageContentPacksUrl","watchTvOnlineUrl","manageYourDeviceUrl","addTvBoxUrl","mobileUsageDetailsUrl","mobileUsageLimitsUrl","barringsUrl","MOBILE_USAGE_NOTIFICATIONS","VOICEMAIL","SIM_MANAGEMENT","PRODUCT_OVERVIEW","TOPUP","TOPUP_HISTORY","INTERNET_USAGE_NOTIFICATIONS","SPEEDTEST","MANAGE_YOUR_PRODUCT","MY_DEVICE","DEVICES_USING_YOUR_NETWORK","MANAGE_YOUR_DEVICE","WATCH_TV_ONLINE","MANAGE_CONTENT_PACKS","ADD_TV_BOX","USAGE_DETAILS","USAGE_LIMITS","BARRINGS","ngOnChanges","updateData","card","url","getUrl","getManageContentPacksUrl","filter","ɵɵNgOnChangesFeature","MyBaseNavigationCardsComponent_Template","MyBaseNavigationCardsComponent_Conditional_0_Template","DatePipe","TranslateService","MyBaseDashboardDatalayerAttributeGroup","ServiceMomentsType","SubType","MyBaseServiceMomentsComponent_For_1_Template_div_click_8_listener","_r7","moment_r1","ctx_r6","attributeGroup","MyBaseServiceMomentsComponent_For_1_Template_div_click_11_listener","ctx_r8","$index_r2","$count_r4","icon","title","subType","subTitle","buttonText","MyBaseServiceMomentsComponent","translateService","datePipe","sm","forEach","moment","SIM_ACTIVATION","push","ACTIVATE_SIM","mappedServiceMoments","instant","simActivationUrl","ACTIVATE","ESIM_ACTIVATION","eSimActivationUrl","APPOINTMENT","INSTALLATION_APPOINTMENT","UNPLANNED_APPOINTMENT","timeslot","start","transform","end","PLANNED_APPOINTMENT","appointmentUrl","VIEW_DETAILS","sendAnalytics","attData","attGrp","finalUrl","SERVICE_MOMENT","MyBaseServiceMomentsComponent_Template","MyBaseServiceMomentsComponent_For_1_Template","ServiceType","MyBaseServicesCardsComponent_Conditional_0_For_6_Template_tg_mybase_simple_card_cardClicked_1_listener","_r8","card_r2","ctx_r7","$index_r3","$count_r5","MyBaseServicesCardsComponent_Conditional_0_For_6_Template","MyBaseServicesCardsComponent","payByMobileUrl","buyHardwareDiscountUrl","easySwitchUrl","bestTariffUrl","returnDeviceUrl","PAYBYMOBILE","BUY_HARDWARE_DISCOUNT","EASY_SWITCH","BEST_TARIFF","RETURN_DEVICE","MyBaseServicesCardsComponent_Template","MyBaseServicesCardsComponent_Conditional_0_Template","ɵɵclassMapInterpolate1","iconName","subtitle","cypressTag","fullHeight","isExternalLink","cardClicked","MyBaseSimpleCardComponent_Template","MyBaseSimpleCardComponent_Template_div_click_0_listener","MyBaseSimpleCardComponent_Conditional_1_Template","MyBaseSimpleCardComponent_Conditional_5_Template","PhoneNumberTransformService","NATIONAL_MOBILE_NUMBER","INTERNATIONAL_NUMBER","NATIONAL_PHONE_NUMBER","BASE_PHONE_NUMBER","phoneNumber","test","filterNationalPhoneNumber","filterNationalMobileNumber","filterBasePhoneNumber","filterInternationalNumber","doNormaliseMsisdn","transFormedNumber","indexOf","replace","autoFormatPhoneNumber","formattedPhoneNumber","isValidNationalMobileNumber","substring","isValidInternationalNumber","numberLength","numberStart","slice","zoneCode","contains","master","value","number","factory","ɵfac","providedIn","phoneNumberTransformService","constructor","transFormPhoneNumber","trim","ɵɵdirectiveInject","pure","ProgressBarStatus","ProgressBarComponent","progress","barColor","OK","ProgressBarComponent_Template","ɵɵpureFunction3","WARN","ERROR","NgStyle","ClickOutsideDirective","closeMenu","close","ngContentSelectors","SlideMenuComponent_Template","SlideMenuComponent_Template_aside_appClickOutside_0_listener","SlideMenuComponent_Template_div_click_4_listener","ɵɵprojection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}