{"version":3,"file":"libs_base-customerzone_dashboard_data-access_src_index_ts-_33051.js","mappings":"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","sources":["./libs/base-customerzone/dashboard/data-access/src/index.ts","./libs/base-customerzone/dashboard/data-access/src/lib/+state/mybase-dashboard-datalayer.facade.ts","./libs/base-customerzone/dashboard/data-access/src/lib/+state/mybase-dashboard-ngrx.module.ts","./libs/base-customerzone/dashboard/data-access/src/lib/+state/mybase-dashboard.actions.ts","./libs/base-customerzone/dashboard/data-access/src/lib/+state/mybase-dashboard.effects.ts","./libs/base-customerzone/dashboard/data-access/src/lib/+state/mybase-dashboard.facade.ts","./libs/base-customerzone/dashboard/data-access/src/lib/+state/mybase-dashboard.reducer.ts","./libs/base-customerzone/dashboard/data-access/src/lib/+state/mybase-dashboard.selectors.ts","./libs/base-customerzone/dashboard/data-access/src/lib/entities/mybase-dashboard-datalayer.interface.ts","./libs/base-customerzone/dashboard/data-access/src/lib/entities/mybase-dashboard.interface.ts","./libs/base-customerzone/dashboard/data-access/src/lib/services/mybase-dashboard-datalayer.service.ts","./libs/base-customerzone/dashboard/data-access/src/lib/services/mybase-dashboard.service.ts","./libs/base-customerzone/dashboard/data-access/src/lib/util/directories/image-src-interceptor.directive.ts"],"sourcesContent":["export { MyBaseDashoardNgrxModule } from './lib/+state/mybase-dashboard-ngrx.module';\nexport { MyBaseDashboardFacade } from './lib/+state/mybase-dashboard.facade';\nexport { MyBaseDashboardDatalayerFacade } from './lib/+state/mybase-dashboard-datalayer.facade';\nexport {\n  MyBaseDashboardBilling,\n  MyBaseDashboardOpenBills,\n  MyBaseDashboardBillingAccount,\n  BillingPaymentMethod,\n  MyBaseDashboardRefunds,\n  ProductsResponse,\n  Product,\n  MyBaseDashboardUsageStatus,\n  MyBaseDashboardProductUsage,\n  MyBaseDashboardAddress,\n  UsageStatusEnum,\n  SupportAssistanceType,\n  NavigationCardType,\n  ServiceType,\n  MobileLine,\n  MobileUsage,\n  InternetLine,\n  DtvLine,\n  InternetUsage,\n  ServiceMomentsType,\n  ServiceMoments,\n  MappedServiceMoments,\n  PostPaidData,\n  LegacyPostPaidData,\n  Address,\n  SubType,\n  UpdatedProductsResponse,\n} from './lib/entities/mybase-dashboard.interface';\nexport { ImageSrcInterceptorDirective } from './lib/util/directories/image-src-interceptor.directive';\nexport { MyBaseDashboardDatalayerService } from './lib/services/mybase-dashboard-datalayer.service';\nexport {\n  MyBaseDashboardDatalayer,\n  MyBaseDashboardDatalayerAttributeData,\n  MyBaseDashboardDatalayerAttributeGroup,\n  MyBaseDashboardDatalayerAttributeName,\n  MyBaseDashboardDatalayerEventName,\n  MyBaseDashboardDatalayerEventType,\n  MyBaseAnalyticsEventMobileUsage,\n} from './lib/entities/mybase-dashboard-datalayer.interface';\n","import { inject, Injectable } from '@angular/core';\nimport { MyBaseDashboardDatalayerService } from '../services/mybase-dashboard-datalayer.service';\nimport { MyBaseDashboardDatalayer } from '../entities/mybase-dashboard-datalayer.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class MyBaseDashboardDatalayerFacade {\n  private readonly myBaseDashboardDatalayerService = inject(MyBaseDashboardDatalayerService);\n\n  initDataLayer(): void {\n    this.myBaseDashboardDatalayerService.initDataLayer();\n  }\n\n  sendDatalayerEvent(event: MyBaseDashboardDatalayer) {\n    this.myBaseDashboardDatalayerService.sendDataLayerEventWithAttributes(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { MyBaseDashboardEffects } from './mybase-dashboard.effects';\nimport { myBaseDashboardFeature } from './mybase-dashboard.reducer';\n\n@NgModule({\n  imports: [EffectsModule.forFeature([MyBaseDashboardEffects]), StoreModule.forFeature(myBaseDashboardFeature)],\n})\nexport class MyBaseDashoardNgrxModule {}\n","import { createAction, emptyProps, props } from '@ngrx/store';\nimport {\n  InternetLine,\n  MobileLine,\n  MyBaseDashboard,\n  MyBaseDashboardInternet,\n  MyBaseDashboardMobile,\n  MyBaseDashboardDtv,\n  ServiceMoments,\n} from '../entities/mybase-dashboard.interface';\n\n// Dashboard\nexport const loadMyBaseDashboard = createAction('[mybase-dashboard] loadMyBaseDashboard', emptyProps);\n\nexport const loadMyBaseDashboardSuccess = createAction(\n  '[mybase-dashboard] loadMyBaseDashboardSuccess',\n  props<{\n    myBaseDashboardObject: MyBaseDashboard;\n  }>()\n);\n\nexport const loadMyBaseDashboardFailure = createAction(\n  '[mybase-dashboard] loadMyBaseDashboardFailure',\n  props<{\n    error: string;\n  }>()\n);\n\n// Mobile\nexport const loadMyBaseDashboardMobileSuccess = createAction(\n  '[mybase-dashboard-mobile] loadMyBaseDashboardMobileSuccess',\n  props<{\n    myBaseDashboardObject: MyBaseDashboardMobile;\n  }>()\n);\n\nexport const setMobileMsisdn = createAction(\n  '[mybase-dashboard-mobile] setMobileMsisdn',\n  props<{\n    selectedMsisdn: MobileLine;\n  }>()\n);\n\nexport const loadMyBaseDashboardMobileFailure = createAction(\n  '[mybase-dashboard-mobile] loadMyBaseDashboardMobileFailure',\n  props<{\n    error: string;\n  }>()\n);\n\n// Line selector\nexport const loadMobileLines = createAction('[mybase-dashboard-mobile-lines] loadMobileLines', emptyProps);\n\nexport const loadMobileLinesSuccess = createAction(\n  '[mybase-dashboard-mobile-lines] loadMobileLinesSuccess',\n  props<{\n    mobileLines: MobileLine[];\n  }>()\n);\n\nexport const loadMobileLinesFailure = createAction(\n  '[mybase-dashboard-mobile-lines] loadMobileLinesFailure',\n  props<{\n    error: string;\n  }>()\n);\n\n// Address selector\nexport const loadInternetLines = createAction('[mybase-dashboard-internet-lines] loadInternetLines', emptyProps);\n\nexport const loadInternetLinesSuccess = createAction(\n  '[mybase-dashboard-internet-lines] loadInternetLinesSuccess',\n  props<{\n    internetLines: InternetLine[];\n  }>()\n);\n\nexport const loadInternetLinesFailure = createAction(\n  '[mybase-dashboard-internet-lines] loadInternetLinesFailure',\n  props<{\n    error: string;\n  }>()\n);\n\n// Internet\n\nexport const setInternetLine = createAction(\n  '[mybase-dashboard-internet] setInternetLine',\n  props<{\n    selectedInternetLine: InternetLine;\n  }>()\n);\n\nexport const loadMyBaseDashboardInternetSuccess = createAction(\n  '[mybase-dashboard-internet] loadMyBaseDashboardInternetSuccess',\n  props<{\n    myBaseDashboardObject: MyBaseDashboardInternet;\n  }>()\n);\n\nexport const loadMyBaseDashboardInternetFailure = createAction(\n  '[mybase-dashboard-internet] loadMyBaseDashboardInternetFailure',\n  props<{\n    error: string;\n  }>()\n);\n\n// DTV lines\nexport const loadDtvLines = createAction('[mybase-dashboard-dtv-lines] loadDtvLines', emptyProps);\n\nexport const loadDtvLinesSuccess = createAction(\n  '[mybase-dashboard-dtv-lines] loadDtvLinesSuccess',\n  props<{\n    myBaseDashboardObject: MyBaseDashboardDtv;\n  }>()\n);\n\nexport const loadDtvLinesFailure = createAction(\n  '[mybase-dashboard-dtv-lines] loadDtvLinesFailure',\n  props<{\n    error: string;\n  }>()\n);\n\n// Service moments\nexport const loadServiceMomentsSuccess = createAction(\n  '[mybase-dashboard] loadServiceMomentsSuccess',\n  props<{\n    serviceMoments: ServiceMoments[];\n  }>()\n);\nexport const loadServiceMomentsFailure = createAction(\n  '[mybase-dashboard] loadServiceMomentsFailure',\n  props<{\n    error: string;\n  }>()\n);\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, concatMap, map, startWith, switchMap } from 'rxjs/operators';\nimport { MyBaseDashboardService } from '../services/mybase-dashboard.service';\nimport {\n  loadDtvLines,\n  loadDtvLinesFailure,\n  loadDtvLinesSuccess,\n  loadInternetLines,\n  loadInternetLinesFailure,\n  loadInternetLinesSuccess,\n  loadServiceMomentsSuccess,\n  loadMobileLines,\n  loadMobileLinesFailure,\n  loadMobileLinesSuccess,\n  loadMyBaseDashboard,\n  loadMyBaseDashboardFailure,\n  loadMyBaseDashboardInternetFailure,\n  loadMyBaseDashboardInternetSuccess,\n  loadMyBaseDashboardMobileFailure,\n  loadMyBaseDashboardMobileSuccess,\n  loadMyBaseDashboardSuccess,\n  loadServiceMomentsFailure,\n  setInternetLine,\n  setMobileMsisdn,\n} from './mybase-dashboard.actions';\nimport { MyBaseDashboardFacade } from './mybase-dashboard.facade';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyBaseDashboardEffects {\n  loadMyBaseDashboard$;\n  loadMyBaseDashboardMobile$;\n  loadMyBaseDashboardInternet$;\n  loadMobileLines$;\n  loadInternetLines$;\n  loadDtvLines$;\n  loadServiceMoments$;\n\n  constructor(\n    private readonly actions$: Actions,\n    private readonly facade: MyBaseDashboardFacade,\n    private readonly myBaseDashboardService: MyBaseDashboardService\n  ) {\n    // Dashboard\n    this.loadMyBaseDashboard$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(loadMyBaseDashboard),\n        switchMap(() => this.myBaseDashboardService.loadMyBaseDashboard()),\n        map((myBaseDashboardObject) => loadMyBaseDashboardSuccess({ myBaseDashboardObject })),\n        catchError((error, source) => source.pipe(startWith(loadMyBaseDashboardFailure({ error }))))\n      )\n    );\n    // Mobile\n    this.loadMyBaseDashboardMobile$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(setMobileMsisdn),\n        concatMap(() => this.facade.myBaseDashboardMobileSelectedMsisdn$),\n        concatMap((selectedMsisdn) => this.myBaseDashboardService.loadMyBaseDashboardMobile(selectedMsisdn?.msisdn)),\n        map((myBaseDashboardObject) => loadMyBaseDashboardMobileSuccess({ myBaseDashboardObject })),\n        catchError((error, source) => source.pipe(startWith(loadMyBaseDashboardMobileFailure({ error }))))\n      )\n    );\n    // Mobile lines\n    this.loadMobileLines$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(loadMobileLines),\n        switchMap(() => this.myBaseDashboardService.loadMobileLines()),\n        map((mobileLines) => loadMobileLinesSuccess({ mobileLines })),\n        catchError((error, source) => source.pipe(startWith(loadMobileLinesFailure({ error }))))\n      )\n    );\n    // Internet lines\n    this.loadInternetLines$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(loadInternetLines),\n        switchMap(() => this.myBaseDashboardService.loadInternetLines()),\n        map((internetLines) => loadInternetLinesSuccess({ internetLines })),\n        catchError((error, source) => source.pipe(startWith(loadInternetLinesFailure({ error }))))\n      )\n    );\n    // Internet\n    this.loadMyBaseDashboardInternet$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(setInternetLine),\n        concatMap(() => this.facade.myBaseDashboardInternetSelectedLine$),\n        concatMap((selectedInternetLine) =>\n          this.myBaseDashboardService.loadMyBaseDashboardInternet(selectedInternetLine?.productIdentifier)\n        ),\n        map((myBaseDashboardObject) => loadMyBaseDashboardInternetSuccess({ myBaseDashboardObject })),\n        catchError((error, source) => source.pipe(startWith(loadMyBaseDashboardInternetFailure({ error }))))\n      )\n    );\n    // DTV lines\n    this.loadDtvLines$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(loadDtvLines),\n        switchMap(() => this.myBaseDashboardService.loadDtvLines()),\n        map((myBaseDashboardObject) => loadDtvLinesSuccess({ myBaseDashboardObject })),\n        catchError((error, source) => source.pipe(startWith(loadDtvLinesFailure({ error }))))\n      )\n    );\n\n    // Service Moments\n    this.loadServiceMoments$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(loadMyBaseDashboard),\n        switchMap(() => this.myBaseDashboardService.loadServiceMoments()),\n        map((serviceMoments) => loadServiceMomentsSuccess({ serviceMoments })),\n        catchError((error, source) => source.pipe(startWith(loadServiceMomentsFailure({ error }))))\n      )\n    );\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  loadDtvLines,\n  loadInternetLines,\n  loadMobileLines,\n  loadMyBaseDashboard,\n  setInternetLine,\n  setMobileMsisdn,\n} from './mybase-dashboard.actions';\nimport { MyBaseState } from './mybase-dashboard.reducer';\nimport {\n  selectInternetLines,\n  selectMobileLines,\n  selectMyBaseDashboardBillingAccounts,\n  selectMyBaseDashboardError,\n  selectMyBaseDashboardInternetError,\n  selectMyBaseDashboardInternetInternetUsage,\n  selectMyBaseDashboardInternetLine,\n  selectMyBaseDashboardInternetLoading,\n  selectMyBaseDashboardInternetUsage,\n  selectMyBaseDashboardLoading,\n  selectMyBaseDashboardMobileError,\n  selectMyBaseDashboardMobileLoading,\n  selectMyBaseDashboardMobileMobileUsage,\n  selectMyBaseDashboardMobileMsisdn,\n  selectMyBaseDashboardMobileNavigationCards,\n  selectMyBaseDashboardMobileServices,\n  selectMyBaseDashboardMobileUsage,\n  selectMyBaseDashboardProducts,\n  selectMyBaseDashboardShowBilling,\n  selectMyBaseDashboardShowHomeNetwork,\n  selectMyBaseDashboardShowInternetUsage,\n  selectMyBaseDashboardShowMobileUsage,\n  selectMyBaseDashboardSupportAssistance,\n  selectMyBaseDashboardInternetGeneralCards,\n  selectMyBaseDashboardInternetServices,\n  selectDtvLines,\n  selectMyBaseDashboardDtvError,\n  selectMyBaseDashboardDtvLoading,\n  selectMyBaseDashboardDtvIdentifier,\n  selectMyBaseDashboardDtvSimpleCards,\n  selectMyBaseDashboardDtvServices,\n  selectMyBaseDashboardInternetShowHomeNetwork,\n  selectServiceMoments,\n  selectMyBaseDashboardBillingPending,\n  selectMyBaseDashboardMobileUsagePending,\n  selectMyBaseDashboardInternetUsagePending,\n  selectMyBaseDashboardHomeNetworkPending,\n} from './mybase-dashboard.selectors';\nimport { InternetLine, MobileLine } from '../entities/mybase-dashboard.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class MyBaseDashboardFacade {\n  private readonly store = inject(Store<MyBaseState>);\n\n  // Dashboard Observables\n  myBaseDashboardShowBilling$ = this.store.select(selectMyBaseDashboardShowBilling);\n  myBaseDashboardBillingAccounts$ = this.store.select(selectMyBaseDashboardBillingAccounts);\n  products$ = this.store.select(selectMyBaseDashboardProducts);\n  supportAssistance$ = this.store.select(selectMyBaseDashboardSupportAssistance);\n  myBaseDashboardLoading$ = this.store.select(selectMyBaseDashboardLoading);\n  myBaseDashboardShowMobileUsage$ = this.store.select(selectMyBaseDashboardShowMobileUsage);\n  myBaseDashboardMobileUsage$ = this.store.select(selectMyBaseDashboardMobileUsage);\n  myBaseDashboardShowInternetUsage$ = this.store.select(selectMyBaseDashboardShowInternetUsage);\n  myBaseDashboardInternetUsage$ = this.store.select(selectMyBaseDashboardInternetUsage);\n  myBaseDashboardShowHomeNetwork$ = this.store.select(selectMyBaseDashboardShowHomeNetwork);\n  myBaseDashboardBillingPending$ = this.store.select(selectMyBaseDashboardBillingPending);\n  myBaseDashboardMobileUsagePending$ = this.store.select(selectMyBaseDashboardMobileUsagePending);\n  myBaseDashboardInternetUsagePending$ = this.store.select(selectMyBaseDashboardInternetUsagePending);\n  myBaseDashboardHomeNetworkPending$ = this.store.select(selectMyBaseDashboardHomeNetworkPending);\n\n  myBaseDashboardError$ = this.store.select(selectMyBaseDashboardError);\n\n  // Mobile Observables\n  myBaseDashboardMobileMobileUsage$ = this.store.select(selectMyBaseDashboardMobileMobileUsage);\n  myBaseDashboardMobileNavigationCards$ = this.store.select(selectMyBaseDashboardMobileNavigationCards);\n  myBaseDashboardMobileServices$ = this.store.select(selectMyBaseDashboardMobileServices);\n  myBaseDashboardMobileSelectedMsisdn$ = this.store.select(selectMyBaseDashboardMobileMsisdn);\n  myBaseDashboardMobileError$ = this.store.select(selectMyBaseDashboardMobileError);\n  myBaseDashboardMobileLoading$ = this.store.select(selectMyBaseDashboardMobileLoading);\n  mobileLines$ = this.store.select(selectMobileLines);\n\n  // Internet Observables\n  myBaseDashboardInternetInternetUsage$ = this.store.select(selectMyBaseDashboardInternetInternetUsage);\n  myBaseDashboardInternetError$ = this.store.select(selectMyBaseDashboardInternetError);\n  myBaseDashboardInternetLoading$ = this.store.select(selectMyBaseDashboardInternetLoading);\n  myBaseDashboardInternetSelectedLine$ = this.store.select(selectMyBaseDashboardInternetLine);\n  myBaseDashboardInternetGeneralCards$ = this.store.select(selectMyBaseDashboardInternetGeneralCards);\n  myBaseDashboardInternetShowHomeNetwork$ = this.store.select(selectMyBaseDashboardInternetShowHomeNetwork);\n  myBaseDashboardInternetServices$ = this.store.select(selectMyBaseDashboardInternetServices);\n  internetLines$ = this.store.select(selectInternetLines);\n\n  // DTV observables\n  myBaseDashboardDtvError$ = this.store.select(selectMyBaseDashboardDtvError);\n  myBaseDashboardDtvLoading$ = this.store.select(selectMyBaseDashboardDtvLoading);\n  myBaseDashboardDtvIdentifier$ = this.store.select(selectMyBaseDashboardDtvIdentifier);\n  myBaseDashboardDtvSimpleCards$ = this.store.select(selectMyBaseDashboardDtvSimpleCards);\n  myBaseDashboardDtvServices$ = this.store.select(selectMyBaseDashboardDtvServices);\n  dtvLines$ = this.store.select(selectDtvLines);\n\n  // Service moments\n  myBaseServiceMoments$ = this.store.select(selectServiceMoments);\n\n  loadMyBaseDashboard(): void {\n    this.store.dispatch(loadMyBaseDashboard());\n  }\n\n  setMobileMsisdn(selectedMsisdn: MobileLine) {\n    this.store.dispatch(setMobileMsisdn({ selectedMsisdn }));\n  }\n\n  loadMobileLines() {\n    this.store.dispatch(loadMobileLines());\n  }\n\n  loadInternetLines() {\n    this.store.dispatch(loadInternetLines());\n  }\n\n  setInterLine(selectedInternetLine: InternetLine) {\n    this.store.dispatch(setInternetLine({ selectedInternetLine }));\n  }\n\n  loadDtvLines() {\n    this.store.dispatch(loadDtvLines());\n  }\n}\n","import { createFeature, createReducer, on } from '@ngrx/store';\nimport {\n  DtvLine,\n  InternetLine,\n  InternetUsage,\n  MobileLine,\n  MobileUsage,\n  MyBaseDashboardBilling,\n  MyBaseDashboardHomeNetwork,\n  MyBaseDashboardUsageStatus,\n  NavigationCardType,\n  ProductsResponse,\n  ServiceMoments,\n  ServiceType,\n  SupportAssistanceType,\n  UsageStatusEnum,\n} from '../entities/mybase-dashboard.interface';\nimport {\n  loadDtvLines,\n  loadDtvLinesFailure,\n  loadDtvLinesSuccess,\n  loadInternetLines,\n  loadInternetLinesFailure,\n  loadInternetLinesSuccess,\n  loadMobileLines,\n  loadMobileLinesFailure,\n  loadMobileLinesSuccess,\n  loadMyBaseDashboard,\n  loadMyBaseDashboardFailure,\n  loadMyBaseDashboardInternetFailure,\n  loadMyBaseDashboardInternetSuccess,\n  loadMyBaseDashboardMobileFailure,\n  loadMyBaseDashboardMobileSuccess,\n  loadMyBaseDashboardSuccess,\n  loadServiceMomentsFailure,\n  loadServiceMomentsSuccess,\n  setInternetLine,\n  setMobileMsisdn,\n} from './mybase-dashboard.actions';\n\nexport const MYBASE_FEATURE_KEY = 'mybase';\n\nexport interface MyBaseState {\n  dashboard: Dashboard;\n  mobile: Mobile;\n  internet: Internet;\n  dtv: Dtv;\n  serviceMoments: ServiceMoment;\n}\n\nexport interface Dashboard {\n  billing: MyBaseDashboardBilling;\n  mobileUsage: MyBaseDashboardUsageStatus;\n  internetUsage: MyBaseDashboardUsageStatus;\n  products: ProductsResponse;\n  actions: SupportAssistanceType[];\n  homeNetwork: MyBaseDashboardHomeNetwork;\n  loading: boolean;\n  loadError: string | undefined;\n}\n\nexport interface Mobile {\n  actions: (NavigationCardType | ServiceType)[];\n  mobileUsage: MobileUsage;\n  selectedMsisdn: MobileLine | undefined;\n  lines: MobileLine[];\n  loading: boolean;\n  loadError: string | undefined;\n}\n\nexport interface Internet {\n  lines: InternetLine[];\n  usage: InternetUsage;\n  actions: (NavigationCardType | ServiceType)[];\n  homeNetwork: MyBaseDashboardHomeNetwork;\n  selectedInternetLine: InternetLine | undefined;\n  loading: boolean;\n  loadError: string | undefined;\n}\n\nexport interface Dtv {\n  productIdentifier: string | undefined;\n  actions: (NavigationCardType | ServiceType)[];\n  lines: DtvLine[];\n  loading: boolean;\n  loadError: string | undefined;\n}\n\nexport interface ServiceMoment {\n  events: ServiceMoments[];\n  loading: boolean;\n  loadError: string | undefined;\n}\n\nexport const initialState: MyBaseState = {\n  dashboard: {\n    billing: {\n      showCard: false,\n      pending: false,\n      billingAccounts: [],\n    },\n    mobileUsage: {\n      showCard: false,\n      pending: false,\n      products: [],\n    },\n    internetUsage: {\n      showCard: false,\n      pending: false,\n      products: [],\n    },\n    products: {\n      showCard: false,\n      mobile: {\n        pending: false,\n        products: [],\n      },\n      internet: {\n        pending: false,\n        products: [],\n      },\n      dtv: {\n        pending: false,\n        products: [],\n      },\n    },\n    actions: [],\n    homeNetwork: {\n      showCard: false,\n      pending: false,\n    },\n    loading: false,\n    loadError: undefined,\n  },\n  mobile: {\n    actions: [],\n    mobileUsage: {\n      showCard: false,\n      postpaid: {\n        daysUntilRenewal: 0,\n        data: {\n          remaining: 0,\n          total: 0,\n          carryOver: 0,\n        },\n        outOfBundleLimit: 0,\n        status: UsageStatusEnum.OK,\n      },\n    },\n    loading: false,\n    lines: [],\n    selectedMsisdn: undefined,\n    loadError: undefined,\n  },\n  internet: {\n    lines: [],\n    usage: {\n      showCard: false,\n    },\n    actions: [],\n    homeNetwork: {\n      showCard: false,\n      pending: false,\n    },\n    selectedInternetLine: undefined,\n    loading: false,\n    loadError: undefined,\n  },\n  dtv: {\n    loading: false,\n    loadError: undefined,\n    productIdentifier: undefined,\n    actions: [],\n    lines: [],\n  },\n  serviceMoments: {\n    loadError: undefined,\n    loading: false,\n    events: [],\n  },\n};\n\nexport const myBaseDashboardReducer = createReducer(\n  initialState,\n  // Dashboard\n  on(loadMyBaseDashboard, (state: MyBaseState) => ({\n    ...state,\n    dashboard: { ...state.dashboard, loading: true },\n  })),\n  on(loadMyBaseDashboardSuccess, (state: MyBaseState, action) => ({\n    ...state,\n    dashboard: { ...state.dashboard, ...action.myBaseDashboardObject, loading: false, loadError: undefined },\n  })),\n  on(loadMyBaseDashboardFailure, (state: MyBaseState, action) => ({\n    ...state,\n    dashboard: { ...state.dashboard, loading: false, loadError: action.error },\n  })),\n  // Mobile\n  on(loadMyBaseDashboardMobileSuccess, (state: MyBaseState, action) => ({\n    ...state,\n    mobile: { ...state.mobile, ...action.myBaseDashboardObject, loading: false, loadError: undefined },\n  })),\n  on(loadMyBaseDashboardMobileFailure, (state: MyBaseState, action) => ({\n    ...state,\n    mobile: { ...state.mobile, loading: false, loadError: action.error },\n  })),\n  on(setMobileMsisdn, (state: MyBaseState, action) => ({\n    ...state,\n    mobile: {\n      ...state.mobile,\n      selectedMsisdn: { ...action.selectedMsisdn },\n      loading: true,\n    },\n  })),\n  // Mobile lines\n  on(loadMobileLines, (state: MyBaseState) => ({\n    ...state,\n    mobile: { ...state.mobile, loading: true },\n  })),\n  on(loadMobileLinesSuccess, (state: MyBaseState, action) => ({\n    ...state,\n    mobile: { ...state.mobile, lines: action.mobileLines, loading: false, loadError: undefined },\n  })),\n  on(loadMobileLinesFailure, (state: MyBaseState, action) => ({\n    ...state,\n    mobile: { ...state.mobile, loading: false, loadError: action.error },\n  })),\n  // Internet lines\n  on(loadInternetLines, (state: MyBaseState) => ({\n    ...state,\n    internet: { ...state.internet, loading: true },\n  })),\n  on(loadInternetLinesSuccess, (state: MyBaseState, action) => ({\n    ...state,\n    internet: { ...state.internet, lines: action.internetLines, loading: false, loadError: undefined },\n  })),\n  on(loadInternetLinesFailure, (state: MyBaseState, action) => ({\n    ...state,\n    internet: { ...state.internet, loading: false, loadError: action.error },\n  })),\n  // Internet\n  on(loadMyBaseDashboardInternetSuccess, (state: MyBaseState, action) => ({\n    ...state,\n    internet: { ...state.internet, ...action.myBaseDashboardObject, loading: false, loadError: undefined },\n  })),\n  on(loadMyBaseDashboardInternetFailure, (state: MyBaseState, action) => ({\n    ...state,\n    internet: { ...state.internet, loading: false, loadError: action.error },\n  })),\n  on(setInternetLine, (state: MyBaseState, action) => ({\n    ...state,\n    internet: {\n      ...state.internet,\n      selectedInternetLine: { ...action.selectedInternetLine },\n      loading: true,\n    },\n  })),\n  // DTV lines\n  on(loadDtvLines, (state: MyBaseState) => ({\n    ...state,\n    dtv: { ...state.dtv, loading: true },\n  })),\n  on(loadDtvLinesSuccess, (state: MyBaseState, action) => ({\n    ...state,\n    dtv: { ...state.dtv, ...action.myBaseDashboardObject, loading: false, loadError: undefined },\n  })),\n  on(loadDtvLinesFailure, (state: MyBaseState, action) => ({\n    ...state,\n    dtv: { ...state.dtv, loading: false, loadError: action.error },\n  })),\n  // Service Moments\n  on(loadServiceMomentsSuccess, (state: MyBaseState, action) => ({\n    ...state,\n    serviceMoments: { ...state.serviceMoments, events: action.serviceMoments, loading: false, loadError: undefined },\n  })),\n  on(loadServiceMomentsFailure, (state: MyBaseState, action) => ({\n    ...state,\n    serviceMoments: { ...state.serviceMoments, loading: false, loadError: action.error },\n  }))\n);\n\nexport const myBaseDashboardFeature = createFeature({\n  name: MYBASE_FEATURE_KEY,\n  reducer: myBaseDashboardReducer,\n});\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { MYBASE_FEATURE_KEY, MyBaseState } from './mybase-dashboard.reducer';\n\nexport const selectMyBaseDashboardFeature = createFeatureSelector<MyBaseState>(MYBASE_FEATURE_KEY);\n\n// Dashboard (level 1)\nexport const selectMyBaseDashboardShowBilling = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.billing.showCard\n);\nexport const selectMyBaseDashboardBillingPending = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.billing.pending\n);\nexport const selectMyBaseDashboardBillingAccounts = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.billing.billingAccounts\n);\nexport const selectMyBaseDashboardProducts = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.products\n);\nexport const selectMyBaseDashboardSupportAssistance = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.actions\n);\nexport const selectMyBaseDashboardShowMobileUsage = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.mobileUsage.showCard\n);\nexport const selectMyBaseDashboardMobileUsagePending = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.mobileUsage.pending\n);\nexport const selectMyBaseDashboardMobileUsage = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.mobileUsage.products\n);\nexport const selectMyBaseDashboardShowInternetUsage = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.internetUsage.showCard\n);\nexport const selectMyBaseDashboardInternetUsagePending = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.internetUsage.pending\n);\nexport const selectMyBaseDashboardInternetUsage = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.internetUsage.products\n);\nexport const selectMyBaseDashboardLoading = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.loading\n);\nexport const selectMyBaseDashboardError = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.loadError\n);\nexport const selectMyBaseDashboardShowHomeNetwork = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.homeNetwork.showCard\n);\nexport const selectMyBaseDashboardHomeNetworkPending = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dashboard.homeNetwork.pending\n);\n\n// Mobile (level 2)\nexport const selectMyBaseDashboardMobileMobileUsage = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.mobile.mobileUsage\n);\nexport const selectMyBaseDashboardMobileNavigationCards = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.mobile.actions\n);\nexport const selectMyBaseDashboardMobileServices = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.mobile.actions\n);\nexport const selectMyBaseDashboardMobileLoading = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.mobile.loading\n);\nexport const selectMyBaseDashboardMobileError = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.mobile.loadError\n);\nexport const selectMyBaseDashboardMobileMsisdn = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.mobile.selectedMsisdn\n);\nexport const selectMobileLines = createSelector(selectMyBaseDashboardFeature, (state) => state.mobile.lines);\n\n// Internet (level 2)\nexport const selectMyBaseDashboardInternetInternetUsage = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.internet.usage\n);\nexport const selectMyBaseDashboardInternetLoading = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.internet.loading\n);\nexport const selectMyBaseDashboardInternetError = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.internet.loadError\n);\nexport const selectMyBaseDashboardInternetLine = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.internet.selectedInternetLine\n);\nexport const selectMyBaseDashboardInternetGeneralCards = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.internet.actions\n);\nexport const selectMyBaseDashboardInternetServices = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.internet.actions\n);\nexport const selectMyBaseDashboardInternetShowHomeNetwork = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.internet.homeNetwork.showCard\n);\nexport const selectInternetLines = createSelector(selectMyBaseDashboardFeature, (state) => state.internet.lines);\n\n// DTV (level 2)\nexport const selectMyBaseDashboardDtvLoading = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dtv.loading\n);\nexport const selectMyBaseDashboardDtvError = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dtv.loadError\n);\nexport const selectMyBaseDashboardDtvIdentifier = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dtv.productIdentifier\n);\nexport const selectMyBaseDashboardDtvSimpleCards = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dtv.actions\n);\nexport const selectMyBaseDashboardDtvServices = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.dtv.actions\n);\nexport const selectDtvLines = createSelector(selectMyBaseDashboardFeature, (state) => state.dtv);\n\n// Service Moments\nexport const selectServiceMoments = createSelector(\n  selectMyBaseDashboardFeature,\n  (state) => state.serviceMoments.events\n);\n","export interface MyBaseDashboardDatalayer {\n  eventName: string;\n  eventType: string;\n  attributeName: string;\n  attributeData?: string;\n  attributeGroup?: string;\n  destinationUrl?: string;\n}\n\nexport enum MyBaseAnalyticsEventMobileUsage {\n  BASED_ON_YOU = 'mobile usage based on you',\n  BASE_ZERO = 'mobile usage base zero',\n  UNLIMITED = 'mobile usage unlimited',\n  PREPAID = 'mobile usage prepaid',\n  POSTPAID = 'mobile usage postpaid',\n}\n\nexport enum MyBaseDashboardDatalayerEventName {\n  STATUS_CARD_VIEWED = 'status card viewed',\n  STATUS_CARD_CLICKED = 'status card clicked',\n  BUTTON_CLICKED = 'button clicked',\n  CARD_CLICKED = 'card clicked',\n}\n\nexport enum MyBaseDashboardDatalayerEventType {\n  IMPRESSION = 'impression',\n  CLICK = 'click',\n  CLICK_CARD = 'click-card',\n}\n\nexport enum MyBaseDashboardDatalayerAttributeName {\n  BILLING = 'billing',\n  MOBILE_USAGE = 'mobile usage',\n  INTERNET_USAGE = 'internet usage',\n  INTERNET_USAGE_LIMITED = 'internet usage limited',\n  INTERNET_USAGE_UNLIMITED = 'internet usage unlimited',\n  HOME_NETWORK = 'home network',\n  SERVICE_MOMENT = 'service moment',\n  SHARE_HOME_NETWORK = 'share home network',\n  MANAGE_INTERNET = 'manage internet',\n  MANAGE_MOBILE = 'manage mobile',\n  MANAGE_DTV = 'manage tv',\n  SUPPORT = 'support',\n  CHANGE_LINE = 'change line',\n  CHANGE_ADDRESS = 'change address',\n}\n\nexport enum MyBaseDashboardDatalayerAttributeData {\n  ALL_GOOD = 'all good',\n  OUTSTANDING_BILL = 'outstanding bill',\n  PAYMENT_OVERDUE = 'payment overdue',\n  REFUND_ISSUED = 'refund issued',\n  USAGE_LIMIT_WARNING = 'usage limit warning',\n  USAGE_LIMIT_REACHED = 'usage limit reached',\n  ACTIVATE_SIM = 'activate your SIM card',\n  PRODUCTS_ACTIVATION = 'products waiting activation',\n  PLANNED_WORKS = 'planned works',\n  INSTALLATION_APPOINTMENT = 'installation appointment',\n  EASY_SWITCH = 'easy switch',\n  BEST_TARIFF = 'best tariff',\n  SUPPORT = 'support',\n  WATCH_TV = 'watch tv',\n}\n\nexport enum MyBaseDashboardDatalayerAttributeGroup {\n  PAY_NOW_BUTTON = 'pay now button',\n  VIEW_BILLS_BUTTON = 'view bills button',\n  VIEW_DETAILS_LINK = 'link to view details',\n  USAGE_DETAILS_LINK = 'link to usage details',\n  USAGE_LIMIT_REACHED = 'usage limit reached',\n  ACTIVATE = 'activate',\n  VIEW_DETAILS = 'view details',\n}\n","export interface MyBaseDashboard {\n  billing: MyBaseDashboardBilling;\n  mobileUsage: MyBaseDashboardUsageStatus;\n  internetUsage: MyBaseDashboardUsageStatus;\n  homeNetwork: MyBaseDashboardHomeNetwork;\n  products: ProductsResponse;\n  actions: SupportAssistanceType[];\n}\n\nexport interface MyBaseDashboardBilling {\n  showCard: boolean;\n  pending: boolean;\n  billingAccounts: MyBaseDashboardBillingAccount[];\n}\n\nexport interface MyBaseDashboardBillingAccount {\n  accountNumber: string;\n  openBills: MyBaseDashboardOpenBills[];\n  refunds: MyBaseDashboardRefunds[];\n}\n\nexport interface MyBaseDashboardOpenBills {\n  openAmount: number;\n  dueInDays: number;\n  showPayNowButton: boolean;\n  paymentMethod: BillingPaymentMethod;\n}\n\nexport interface MyBaseDashboardRefunds {\n  amount: number;\n}\n\nexport enum BillingPaymentMethod {\n  DIRECT_DEBIT = 'DIRECT_DEBIT',\n  MANUAL = 'MANUAL',\n}\n\nexport interface UpdatedProductsResponse {\n  showCard: boolean;\n  mobile: { productName: string }[];\n  internet: { productName: string }[];\n  dtv: { productName: string }[];\n}\n\nexport interface ProductsResponse {\n  showCard: boolean;\n  mobile?: Product;\n  internet?: Product;\n  dtv?: Product;\n}\n\nexport interface Product {\n  pending: boolean;\n  products: { productName: string }[];\n}\n\nexport interface MyBaseDashboardUsageStatus {\n  showCard: boolean;\n  pending: boolean;\n  products: MyBaseDashboardProductUsage[];\n}\n\nexport interface MyBaseDashboardProductUsage {\n  productName: string;\n  msisdn?: string;\n  productIdentifier?: string;\n  address?: MyBaseDashboardAddress;\n  usageStatus: UsageStatusEnum;\n}\n\nexport interface MyBaseDashboardAddress {\n  street: string;\n  houseNumber: string;\n  subHouseNumber: string;\n  boxNumber: string;\n  floor: string;\n  municipality: string;\n  country: string;\n  postalCode: string;\n}\n\nexport interface MyBaseDashboardHomeNetwork {\n  showCard: boolean;\n  pending: boolean;\n}\n\nexport enum UsageStatusEnum {\n  OK = 'OK',\n  LIMIT_ALMOST_REACHED = 'LIMIT_ALMOST_REACHED',\n  LIMIT_EXCEEDED_SLOW_SPEED = 'LIMIT_EXCEEDED_SLOW_SPEED',\n  LIMIT_EXCEEDED = 'LIMIT_EXCEEDED',\n}\n\nexport interface MyBaseDashboardMobile {\n  mobileUsage: MobileUsage;\n  msisdn: string;\n  productName: string;\n  actions: (NavigationCardType | ServiceType)[];\n}\n\nexport enum SupportAssistanceType {\n  WATCH_TV = 'watch-tv',\n  BEST_TARIFF = 'best-tariff',\n  EASY_SWITCH = 'easy-switch',\n  SUPPORT = 'support',\n}\n\nexport enum NavigationCardType {\n  MOBILE_USAGE_NOTIFICATIONS = 'mobile-usage-notifications',\n  VOICEMAIL = 'voicemail',\n  SIM_MANAGEMENT = 'sim-management',\n  PRODUCT_OVERVIEW = 'product-overview',\n  TOPUP = 'topup',\n  TOPUP_HISTORY = 'topup-history',\n  USAGE_DETAILS = 'usage-details',\n  USAGE_LIMITS = 'usage-limits',\n  BARRINGS = 'barrings',\n  INTERNET_USAGE_NOTIFICATIONS = 'internet-notifications',\n  SPEEDTEST = 'speedtest',\n  MANAGE_YOUR_PRODUCT = 'manage-your-product',\n  MY_DEVICE = 'my-device',\n  DEVICES_USING_YOUR_NETWORK = 'devices-using-your-network',\n  MANAGE_YOUR_DEVICE = 'manage-your-device',\n  WATCH_TV_ONLINE = 'watch-tv-online',\n  MANAGE_CONTENT_PACKS = 'manage-content-packs',\n  ADD_TV_BOX = 'add-remove-tv-box',\n}\n\nexport enum ServiceType {\n  PAYBYMOBILE = 'paybymobile',\n  BUY_HARDWARE_DISCOUNT = 'buy-hardware-discount',\n  EASY_SWITCH = 'easy-switch',\n  BEST_TARIFF = 'best-tariff',\n  RETURN_DEVICE = 'return-device',\n}\n\nexport interface MobileLine {\n  msisdn: string;\n  productName: string;\n  default: boolean;\n  addressId: string;\n  dataOnly: boolean;\n  simAlias?: string;\n}\n\nexport interface MobileUsage {\n  showCard: boolean;\n  postpaid?: PostPaidData;\n  legacy?: LegacyPostPaidData;\n  prepaid?: {\n    balance: number;\n    expiryDate: string;\n  };\n  unlimited?: {\n    daysUntilRenewal: number;\n    used: number;\n    status: UsageStatusEnum;\n  };\n  baseZero?: {\n    daysUntilRenewal: number;\n    used: number;\n    status: UsageStatusEnum;\n  };\n  basedOnYou?: {\n    daysUntilRenewal: number;\n    remaining: number;\n    total: number;\n    status: UsageStatusEnum;\n  };\n}\n\nexport interface LegacyPostPaidData {\n  daysUntilRenewal: number;\n  data: {\n    remaining: number;\n    total: number;\n    carryOver: number;\n  };\n  status: UsageStatusEnum;\n  outOfBundleLimit: number;\n}\n\nexport interface PostPaidData extends LegacyPostPaidData {\n  outOfBundleLimit: number;\n}\n\nexport interface InternetLine {\n  productIdentifier: string;\n  productName: string;\n  completeAddress?: string;\n  address: Address;\n  default: boolean;\n}\n\nexport interface Address {\n  id: string;\n  street: string;\n  houseNumber: string;\n  subHouseNumber?: string;\n  boxNumber?: string;\n  municipality: string;\n  postalCode: string;\n  country: string;\n}\n\nexport interface InternetUsage {\n  showCard: boolean;\n  limited?: {\n    remainingBytes: number;\n    totalBytes: number;\n    daysUntilRenewal: number;\n  };\n  unlimited?: {\n    usedBytes: number;\n    daysUntilRenewal: number;\n    status: UsageStatusEnum;\n  };\n}\n\nexport interface MyBaseDashboardInternet {\n  usage: InternetUsage;\n  homeNetwork: MyBaseDashboardHomeNetwork;\n  actions: (NavigationCardType | ServiceType)[];\n}\n\nexport interface DtvLine {\n  msisdn: string;\n  productName: string;\n  default: boolean;\n}\n\nexport interface MyBaseDashboardDtv {\n  productIdentifier: string;\n  actions: (NavigationCardType | ServiceType)[];\n}\n\nexport enum ServiceMomentsType {\n  SIM_ACTIVATION = 'SIM_ACTIVATION',\n  ESIM_ACTIVATION = 'ESIM_ACTIVATION',\n  APPOINTMENT = 'APPOINTMENT',\n}\nexport interface ServiceMoments {\n  type: ServiceMomentsType;\n  msisdn: string;\n  timeslot?: {\n    start: string;\n    end: string;\n  };\n}\n\nexport interface MappedServiceMoments {\n  title: string;\n  subTitle: string;\n  buttonText: string;\n  icon: string;\n  type: string;\n  url: string;\n  msisdn?: string;\n  attributeData: string;\n  attributeGroup: string;\n  subType: SubType;\n}\n\nexport enum SubType {\n  SIM_ACTIVATION = 'sim-activation',\n  ESIM_ACTIVATION = 'esim-activation',\n  PLANNED_APPOINTMENT = 'planned-appointment',\n  UNPLANNED_APPOINTMENT = 'unplanned-appointment',\n}\n","import { Injectable } from '@angular/core';\nimport { DataLayerService } from '@telenet/ng-lib-datalayer';\nimport { MyBaseDashboardDatalayer } from '../entities/mybase-dashboard-datalayer.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyBaseDashboardDatalayerService {\n  private static readonly MESSAGE_GROUP = 'mybase-dashboard';\n  public static readonly CATEGORY_GENERAL = 'general';\n\n  public static readonly ATTRIBUTES_ITEM_NAME = 'itemName';\n  public static readonly ATTRIBUTES_ITEM_DATA = 'itemData';\n  public static readonly ATTRIBUTES_ITEM_GROUP = 'itemGroup';\n  public static readonly ATTRIBUTES_DESTINATION_URL = 'destinationURL';\n\n  constructor(private readonly dataLayerService: DataLayerService) {}\n\n  sendDataLayerEventWithAttributes(event: MyBaseDashboardDatalayer) {\n    const attributes: Record<string, unknown> = {};\n\n    attributes[MyBaseDashboardDatalayerService.ATTRIBUTES_ITEM_NAME] = event.attributeName;\n    attributes[MyBaseDashboardDatalayerService.ATTRIBUTES_ITEM_DATA] = event.attributeData;\n    attributes[MyBaseDashboardDatalayerService.ATTRIBUTES_ITEM_GROUP] = event.attributeGroup;\n    attributes[MyBaseDashboardDatalayerService.ATTRIBUTES_DESTINATION_URL] = event.destinationUrl;\n    const category = this.dataLayerService.createCategory(\n      MyBaseDashboardDatalayerService.CATEGORY_GENERAL,\n      MyBaseDashboardDatalayerService.MESSAGE_GROUP\n    );\n    const eventInfo = this.dataLayerService.createEventInfo(event.eventName, event.eventType, [\n      MyBaseDashboardDatalayerService.MESSAGE_GROUP,\n    ]);\n    this.dataLayerService.addEvent(eventInfo, attributes, category);\n  }\n\n  initDataLayer(): void {\n    this.dataLayerService.init();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OcapiCallConfig, OcapiService } from '@telenet/ng-lib-ocapi';\nimport { Observable } from 'rxjs';\nimport {\n  InternetLine,\n  MobileLine,\n  MyBaseDashboard,\n  MyBaseDashboardDtv,\n  MyBaseDashboardInternet,\n  MyBaseDashboardMobile,\n  ServiceMoments,\n} from '../entities/mybase-dashboard.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyBaseDashboardService {\n  mock_reply = {} as MyBaseDashboardInternet;\n  private static readonly MESSAGE_GROUP = 'mybase-dashboard';\n\n  constructor(private readonly ocapiService: OcapiService) {}\n\n  loadMyBaseDashboard(): Observable<MyBaseDashboard> {\n    const endpoint = '/public/api/mybase-dashboard-service/v1/dashboard';\n    return this.ocapiService.doGet(\n      new OcapiCallConfig<MyBaseDashboard, MyBaseDashboard>(MyBaseDashboardService.MESSAGE_GROUP, endpoint)\n    );\n  }\n\n  loadMyBaseDashboardMobile(msisdn: string | undefined): Observable<MyBaseDashboardMobile> {\n    const endpoint = `/public/api/mybase-dashboard-service/v1/dashboard/mobile/${msisdn}`;\n    return this.ocapiService.doGet(\n      new OcapiCallConfig<MyBaseDashboardMobile, MyBaseDashboardMobile>(MyBaseDashboardService.MESSAGE_GROUP, endpoint)\n    );\n  }\n\n  loadMobileLines(): Observable<MobileLine[]> {\n    const endpoint = `/public/api/mybase-dashboard-service/v1/dashboard/mobile/lines`;\n\n    return this.ocapiService.doGet(\n      new OcapiCallConfig<MobileLine[], MobileLine[]>(MyBaseDashboardService.MESSAGE_GROUP, endpoint)\n    );\n  }\n\n  loadInternetLines(): Observable<InternetLine[]> {\n    const endpoint = `/public/api/mybase-dashboard-service/v1/dashboard/internet/addresses`;\n    return this.ocapiService.doGet(\n      new OcapiCallConfig<InternetLine[], InternetLine[]>(MyBaseDashboardService.MESSAGE_GROUP, endpoint)\n    );\n  }\n\n  loadMyBaseDashboardInternet(productIdentifier: string | undefined): Observable<MyBaseDashboardInternet> {\n    const endpoint = `/public/api/mybase-dashboard-service/v1/dashboard/internet/${productIdentifier}`;\n    return this.ocapiService.doGet(\n      new OcapiCallConfig<MyBaseDashboardInternet, MyBaseDashboardInternet>(\n        MyBaseDashboardService.MESSAGE_GROUP,\n        endpoint\n      )\n    );\n  }\n\n  loadDtvLines(): Observable<MyBaseDashboardDtv> {\n    const endpoint = `/public/api/mybase-dashboard-service/v1/dashboard/tv`;\n    return this.ocapiService.doGet(\n      new OcapiCallConfig<MyBaseDashboardDtv, MyBaseDashboardDtv>(MyBaseDashboardService.MESSAGE_GROUP, endpoint)\n    );\n  }\n\n  loadServiceMoments(): Observable<ServiceMoments[]> {\n    const endpoint = `/public/api/mybase-dashboard-service/v1/dashboard/service-moments?limit=2`;\n    return this.ocapiService.doGet(\n      new OcapiCallConfig<ServiceMoments[], ServiceMoments[]>(MyBaseDashboardService.MESSAGE_GROUP, endpoint)\n    );\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ConfigService, RemoteHostConfig } from '@telenet/ng-lib-config';\n\n@Directive({\n  standalone: true,\n  selector: '[appMybaseDashboardImageSrcInterceptor]',\n})\nexport class ImageSrcInterceptorDirective implements OnChanges {\n  @Input() moduleId!: string;\n  @Input() src = '';\n  constructor(\n    private readonly el: ElementRef,\n    private readonly configService: ConfigService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const remoteHost: string = this.getRemoteHost();\n\n    if (remoteHost) {\n      let imagePath: string = changes['src'].currentValue;\n      const indexOfAssetsFolder = imagePath.indexOf('/assets');\n      if (indexOfAssetsFolder !== -1) {\n        imagePath = imagePath.slice(indexOfAssetsFolder);\n      }\n      this.el.nativeElement.src = `${remoteHost}${imagePath}`;\n    }\n  }\n\n  getRemoteHost(): string {\n    const remoteHostConfig: Partial<RemoteHostConfig> = this.configService.getRemoteHostConfig(this.moduleId);\n    return remoteHostConfig?.remoteHost || '';\n  }\n}\n"],"names":["MyBaseDashoardNgrxModule","MyBaseDashboardFacade","MyBaseDashboardDatalayerFacade","BillingPaymentMethod","UsageStatusEnum","SupportAssistanceType","NavigationCardType","ServiceType","ServiceMomentsType","SubType","ImageSrcInterceptorDirective","MyBaseDashboardDatalayerService","MyBaseDashboardDatalayerAttributeData","MyBaseDashboardDatalayerAttributeGroup","MyBaseDashboardDatalayerAttributeName","MyBaseDashboardDatalayerEventName","MyBaseDashboardDatalayerEventType","MyBaseAnalyticsEventMobileUsage","inject","myBaseDashboardDatalayerService","initDataLayer","sendDatalayerEvent","event","sendDataLayerEventWithAttributes","factory","ɵfac","providedIn","EffectsModule","StoreModule","MyBaseDashboardEffects","myBaseDashboardFeature","forFeature","imports","i1","EffectsFeatureModule","i2","StoreFeatureModule","createAction","emptyProps","props","loadMyBaseDashboard","loadMyBaseDashboardSuccess","loadMyBaseDashboardFailure","loadMyBaseDashboardMobileSuccess","setMobileMsisdn","loadMyBaseDashboardMobileFailure","loadMobileLines","loadMobileLinesSuccess","loadMobileLinesFailure","loadInternetLines","loadInternetLinesSuccess","loadInternetLinesFailure","setInternetLine","loadMyBaseDashboardInternetSuccess","loadMyBaseDashboardInternetFailure","loadDtvLines","loadDtvLinesSuccess","loadDtvLinesFailure","loadServiceMomentsSuccess","loadServiceMomentsFailure","Actions","createEffect","ofType","catchError","concatMap","map","startWith","switchMap","MyBaseDashboardService","actions$","facade","myBaseDashboardService","loadMyBaseDashboard$","loadMyBaseDashboardMobile$","loadMyBaseDashboardInternet$","loadMobileLines$","loadInternetLines$","loadDtvLines$","loadServiceMoments$","constructor","pipe","myBaseDashboardObject","error","source","myBaseDashboardMobileSelectedMsisdn$","selectedMsisdn","loadMyBaseDashboardMobile","msisdn","mobileLines","internetLines","myBaseDashboardInternetSelectedLine$","selectedInternetLine","loadMyBaseDashboardInternet","productIdentifier","loadServiceMoments","serviceMoments","i0","ɵɵinject","i3","Store","selectInternetLines","selectMobileLines","selectMyBaseDashboardBillingAccounts","selectMyBaseDashboardError","selectMyBaseDashboardInternetError","selectMyBaseDashboardInternetInternetUsage","selectMyBaseDashboardInternetLine","selectMyBaseDashboardInternetLoading","selectMyBaseDashboardInternetUsage","selectMyBaseDashboardLoading","selectMyBaseDashboardMobileError","selectMyBaseDashboardMobileLoading","selectMyBaseDashboardMobileMobileUsage","selectMyBaseDashboardMobileMsisdn","selectMyBaseDashboardMobileNavigationCards","selectMyBaseDashboardMobileServices","selectMyBaseDashboardMobileUsage","selectMyBaseDashboardProducts","selectMyBaseDashboardShowBilling","selectMyBaseDashboardShowHomeNetwork","selectMyBaseDashboardShowInternetUsage","selectMyBaseDashboardShowMobileUsage","selectMyBaseDashboardSupportAssistance","selectMyBaseDashboardInternetGeneralCards","selectMyBaseDashboardInternetServices","selectDtvLines","selectMyBaseDashboardDtvError","selectMyBaseDashboardDtvLoading","selectMyBaseDashboardDtvIdentifier","selectMyBaseDashboardDtvSimpleCards","selectMyBaseDashboardDtvServices","selectMyBaseDashboardInternetShowHomeNetwork","selectServiceMoments","selectMyBaseDashboardBillingPending","selectMyBaseDashboardMobileUsagePending","selectMyBaseDashboardInternetUsagePending","selectMyBaseDashboardHomeNetworkPending","store","myBaseDashboardShowBilling$","select","myBaseDashboardBillingAccounts$","products$","supportAssistance$","myBaseDashboardLoading$","myBaseDashboardShowMobileUsage$","myBaseDashboardMobileUsage$","myBaseDashboardShowInternetUsage$","myBaseDashboardInternetUsage$","myBaseDashboardShowHomeNetwork$","myBaseDashboardBillingPending$","myBaseDashboardMobileUsagePending$","myBaseDashboardInternetUsagePending$","myBaseDashboardHomeNetworkPending$","myBaseDashboardError$","myBaseDashboardMobileMobileUsage$","myBaseDashboardMobileNavigationCards$","myBaseDashboardMobileServices$","myBaseDashboardMobileError$","myBaseDashboardMobileLoading$","mobileLines$","myBaseDashboardInternetInternetUsage$","myBaseDashboardInternetError$","myBaseDashboardInternetLoading$","myBaseDashboardInternetGeneralCards$","myBaseDashboardInternetShowHomeNetwork$","myBaseDashboardInternetServices$","internetLines$","myBaseDashboardDtvError$","myBaseDashboardDtvLoading$","myBaseDashboardDtvIdentifier$","myBaseDashboardDtvSimpleCards$","myBaseDashboardDtvServices$","dtvLines$","myBaseServiceMoments$","dispatch","setInterLine","createFeature","createReducer","on","MYBASE_FEATURE_KEY","initialState","dashboard","billing","showCard","pending","billingAccounts","mobileUsage","products","internetUsage","mobile","internet","dtv","actions","homeNetwork","loading","loadError","undefined","postpaid","daysUntilRenewal","data","remaining","total","carryOver","outOfBundleLimit","status","OK","lines","usage","events","myBaseDashboardReducer","state","action","name","reducer","createFeatureSelector","createSelector","selectMyBaseDashboardFeature","DataLayerService","dataLayerService","MESSAGE_GROUP","CATEGORY_GENERAL","ATTRIBUTES_ITEM_NAME","ATTRIBUTES_ITEM_DATA","ATTRIBUTES_ITEM_GROUP","ATTRIBUTES_DESTINATION_URL","attributes","attributeName","attributeData","attributeGroup","destinationUrl","category","createCategory","eventInfo","createEventInfo","eventName","eventType","addEvent","init","OcapiCallConfig","OcapiService","ocapiService","mock_reply","endpoint","doGet","ElementRef","SimpleChanges","ConfigService","el","configService","moduleId","src","ngOnChanges","changes","remoteHost","getRemoteHost","imagePath","currentValue","indexOfAssetsFolder","indexOf","slice","nativeElement","remoteHostConfig","getRemoteHostConfig","ɵɵdirectiveInject","selectors","inputs","standalone","features","ɵɵNgOnChangesFeature"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}