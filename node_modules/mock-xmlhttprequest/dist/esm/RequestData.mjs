/**
 * mock-xmlhttprequest v8.3.0
 * (c) 2023 Bertrand Guay-Paquet
 * @license MIT
 */
import HeadersContainer from './HeadersContainer.mjs';
import { getBodyByteSize } from './Utils.mjs';

/**
 * Request parameters from MockXhr.send()
 */
class RequestData {
    constructor(_requestHeaders, _method, _url, _body = null, _credentialsMode = false) {
        this._requestHeaders = _requestHeaders;
        this._method = _method;
        this._url = _url;
        this._body = _body;
        this._credentialsMode = _credentialsMode;
    }
    /**
     * @returns Request headers container
     */
    get requestHeaders() { return new HeadersContainer(this._requestHeaders); }
    get method() { return this._method; }
    get url() { return this._url; }
    get body() { return this._body; }
    get withCredentials() { return this._credentialsMode; }
    /**
     * Note: this isn't completely accurate for a multipart/form-data encoded FormData request body.
     * MockXhr not consider headers, encoding, and other factors that influence the request body size
     * of non-mocked XMLHttpRequest. You can consider the value returned by this method as a floor
     * value for the request body size. This can still be useful to simulate upload progress events.
     *
     * @returns Request body's total byte size
     */
    getRequestBodySize() {
        return getBodyByteSize(this.body);
    }
}

export { RequestData as default };
//# sourceMappingURL=RequestData.mjs.map
