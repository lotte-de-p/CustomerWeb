{"version":3,"file":"RequestData.mjs","sources":["../../src/RequestData.ts"],"sourcesContent":["import HeadersContainer from './HeadersContainer';\nimport { getBodyByteSize } from './Utils';\n\n/**\n * Request parameters from MockXhr.send()\n */\nexport default class RequestData {\n  constructor(\n    private readonly _requestHeaders: HeadersContainer,\n    private readonly _method: string,\n    private readonly _url: string,\n    private readonly _body: any = null,\n    private readonly _credentialsMode: boolean = false\n  ) {}\n\n  /**\n   * @returns Request headers container\n   */\n  get requestHeaders() { return new HeadersContainer(this._requestHeaders); }\n\n  get method() { return this._method; }\n\n  get url() { return this._url; }\n\n  get body() { return this._body; }\n\n  get withCredentials() { return this._credentialsMode; }\n\n  /**\n   * Note: this isn't completely accurate for a multipart/form-data encoded FormData request body.\n   * MockXhr not consider headers, encoding, and other factors that influence the request body size\n   * of non-mocked XMLHttpRequest. You can consider the value returned by this method as a floor\n   * value for the request body size. This can still be useful to simulate upload progress events.\n   *\n   * @returns Request body's total byte size\n   */\n  getRequestBodySize() {\n    return getBodyByteSize(this.body);\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAGA;;AAEG;AACW,MAAO,WAAW,CAAA;IAC9B,WACmB,CAAA,eAAiC,EACjC,OAAe,EACf,IAAY,EACZ,KAAa,GAAA,IAAI,EACjB,gBAAA,GAA4B,KAAK,EAAA;QAJjC,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;QACjC,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;QACf,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QACZ,IAAK,CAAA,KAAA,GAAL,KAAK,CAAY;QACjB,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAiB;KAChD;AAEJ;;AAEG;AACH,IAAA,IAAI,cAAc,GAAA,EAAK,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE;IAE3E,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;IAErC,IAAI,GAAG,KAAK,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;IAE/B,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IAEjC,IAAI,eAAe,KAAK,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE;AAEvD;;;;;;;AAOG;IACH,kBAAkB,GAAA;AAChB,QAAA,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnC;AACF;;;;"}