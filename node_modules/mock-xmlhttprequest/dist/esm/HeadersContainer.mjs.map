{"version":3,"file":"HeadersContainer.mjs","sources":["../../src/HeadersContainer.ts"],"sourcesContent":["/**\n * HTTP header container\n */\nexport default class HeadersContainer {\n  private _headers: Map<string, string>;\n\n  /**\n   * @param headers Initial headers\n   */\n  constructor(headers?: Record<string, string> | null);\n  constructor(src: HeadersContainer);\n  constructor(headersOrSrc?: Record<string, string> | null | HeadersContainer) {\n    this._headers = new Map();\n    if (headersOrSrc) {\n      if (headersOrSrc instanceof HeadersContainer) {\n        // eslint-disable-next-line no-underscore-dangle\n        this._headers = new Map(headersOrSrc._headers);\n      } else {\n        Object.entries(headersOrSrc).forEach(([key, value]) => this.addHeader(key, value));\n      }\n    }\n  }\n\n  /**\n   * Reset the container to its empty state.\n   *\n   * @returns this\n   */\n  reset() {\n    this._headers.clear();\n    return this;\n  }\n\n  /**\n   * @param name Header name (case insensitive)\n   * @returns Header value or null\n   */\n  getHeader(name: string) {\n    return this._headers.get(name.toUpperCase()) ?? null;\n  }\n\n  /**\n   * Get all headers as a string. Each header is on its own line. All header names are lower-case.\n   *\n   * @returns Concatenated headers\n   */\n  getAll() {\n    // Sort the header names. It's not mandated by RFC 7230 but it makes assertion testing easier\n    // and, most importantly, it is required by getAllResponseHeaders() of XMLHttpRequest.\n    // See https://xhr.spec.whatwg.org/#the-getallresponseheaders()-method\n    const headerNames = [...this._headers.keys()].sort();\n\n    // Combine the header values\n    const headers = headerNames.reduce((result, name) => {\n      const headerValue = this._headers.get(name);\n      return `${result}${name.toLowerCase()}: ${headerValue}\\r\\n`;\n    }, '');\n    return headers;\n  }\n\n  /**\n   * @returns All headers as an object. The header names are in lower-case.\n   */\n  getHash() {\n    const headers: Record<string, string> = {};\n    this._headers.forEach((value, name) => {\n      headers[name.toLowerCase()] = value;\n    });\n    return headers;\n  }\n\n  /**\n   * Add a header value, combining it with any previous value for the same header name.\n   *\n   * @param name Header name\n   * @param value Header value\n   * @returns this\n   */\n  addHeader(name: string, value: string) {\n    name = name.toUpperCase();\n    value = value ?? '';\n    const currentValue = this._headers.get(name);\n    if (currentValue !== undefined) {\n      value = `${currentValue}, ${value}`;\n    }\n    this._headers.set(name, value);\n    return this;\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAEG;AACW,MAAO,gBAAgB,CAAA;AAQnC,IAAA,WAAA,CAAY,YAA+D,EAAA;AACzE,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1B,QAAA,IAAI,YAAY,EAAE;YAChB,IAAI,YAAY,YAAY,gBAAgB,EAAE;;gBAE5C,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAChD,aAAA;AAAM,iBAAA;gBACL,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AACpF,aAAA;AACF,SAAA;KACF;AAED;;;;AAIG;IACH,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACtB,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;AAGG;AACH,IAAA,SAAS,CAAC,IAAY,EAAA;AACpB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,IAAI,CAAC;KACtD;AAED;;;;AAIG;IACH,MAAM,GAAA;;;;AAIJ,QAAA,MAAM,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;;QAGrD,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,KAAI;YAClD,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC5C,OAAO,CAAA,EAAG,MAAM,CAAA,EAAG,IAAI,CAAC,WAAW,EAAE,CAAA,EAAA,EAAK,WAAW,CAAA,IAAA,CAAM,CAAC;SAC7D,EAAE,EAAE,CAAC,CAAC;AACP,QAAA,OAAO,OAAO,CAAC;KAChB;AAED;;AAEG;IACH,OAAO,GAAA;QACL,MAAM,OAAO,GAA2B,EAAE,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,KAAI;YACpC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,KAAK,CAAC;AACtC,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,OAAO,CAAC;KAChB;AAED;;;;;;AAMG;IACH,SAAS,CAAC,IAAY,EAAE,KAAa,EAAA;AACnC,QAAA,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAC1B,QAAA,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACpB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,YAAY,KAAK,SAAS,EAAE;AAC9B,YAAA,KAAK,GAAG,CAAG,EAAA,YAAY,CAAK,EAAA,EAAA,KAAK,EAAE,CAAC;AACrC,SAAA;QACD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC/B,QAAA,OAAO,IAAI,CAAC;KACb;AACF;;;;"}