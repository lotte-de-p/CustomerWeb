{"version":3,"file":"Utils.cjs","sources":["../../src/Utils.ts"],"sourcesContent":["export function getBodyByteSize(body?: string | FormData | Blob | BufferSource | null) {\n  if (!body) {\n    return 0;\n  }\n\n  if (typeof body === 'string') {\n    return getStringByteLength(body);\n  } else if ((typeof FormData !== 'undefined' && body instanceof FormData)\n    || (body.constructor && body.constructor.name === 'FormData')) {\n    // A FormData has field-value pairs. This testing code only sums the individual sizes of the\n    // values. The full multipart/form-data encoding also adds headers, encoding, etc. which we\n    // don't reproduce here.\n    return [...(body as FormData).values()].reduce((sum, value) => {\n      const valueSize = (value as File).size ?? getStringByteLength(String(value.toString()));\n      return sum + valueSize;\n    }, 0);\n  }\n\n  // Handles Blob and BufferSource\n  return (body as Blob).size || (body as BufferSource).byteLength || 0;\n}\n\nfunction getStringByteLength(string: string) {\n  // Compute the byte length of the string (which is not the same as string.length)\n  // Use Blob if available (i.e. in the browser) and Buffer otherwise.\n  return typeof Blob !== 'undefined' ? new Blob([string]).size : Buffer.byteLength(string);\n}\n\nconst isTokenRegEx = /^[A-Za-z0-9!#$%&'*+\\-.^_`|~]+$/;\n\n/**\n * See https://datatracker.ietf.org/doc/html/rfc7230#section-3.2.6\n * @param token Token\n * @returns Whether token is a valid token\n */\nfunction isToken(token?: string) {\n  return typeof token === 'string' && isTokenRegEx.test(token);\n}\n\n/**\n * https://datatracker.ietf.org/doc/html/rfc7230#section-3.2\n * @param headerName Header name\n * @returns Whether headerName is a valid header name\n */\nexport function isHeaderName(headerName?: string) {\n  return isToken(headerName);\n}\n\n/**\n * https://fetch.spec.whatwg.org/#header-value\n * @param headerValue Header value\n * @returns Whether headerValue is a valid header value\n */\nexport function isHeaderValue(headerValue: string) {\n  return typeof headerValue === 'string'\n    && headerValue.trim().length === headerValue.length\n    && headerValue.indexOf('\\0') === -1;\n}\n\n// Disallowed request headers for setRequestHeader()\nconst forbiddenHeaders = [\n  'Accept-Charset',\n  'Accept-Encoding',\n  'Access-Control-Request-Headers',\n  'Access-Control-Request-Method',\n  'Connection',\n  'Content-Length',\n  'Cookie',\n  'Cookie2',\n  'Date',\n  'DNT',\n  'Expect',\n  'Host',\n  'Keep-Alive',\n  'Origin',\n  'Referer',\n  'TE',\n  'Trailer',\n  'Transfer-Encoding',\n  'Upgrade',\n  'Via',\n];\nconst forbiddenHeaderRegEx = new RegExp(`^(${forbiddenHeaders.join('|')}|Proxy-.*|Sec-.*)$`, 'i');\n\n/**\n * See https://fetch.spec.whatwg.org/#forbidden-header-name\n *\n * @param name Header name\n * @returns Whether the request header name is forbidden for XMLHttpRequest\n */\nexport function isRequestHeaderForbidden(name: string) {\n  return forbiddenHeaderRegEx.test(name);\n}\n\n/**\n * See https://datatracker.ietf.org/doc/html/rfc7230#section-3.1.1\n * @param method Method name\n * @returns Whether method is a valid request method\n */\nexport function isRequestMethod(method?: string) {\n  return isToken(method);\n}\n\nconst isRequestMethodForbiddenRegEx = /^(CONNECT|TRACE|TRACK)$/i;\n\n/**\n * See https://fetch.spec.whatwg.org/#forbidden-method\n *\n * @param method Method name\n * @returns Whether the request method is forbidden for XMLHttpRequest\n */\nexport function isRequestMethodForbidden(method: string) {\n  return isRequestMethodForbiddenRegEx.test(method);\n}\n\n// Normalize method names as described in open()\n// https://xhr.spec.whatwg.org/#the-open()-method\nexport const upperCaseMethods = [\n  'DELETE',\n  'GET',\n  'HEAD',\n  'OPTIONS',\n  'POST',\n  'PUT',\n];\nconst upperCaseMethodsRegEx = new RegExp(`^(${upperCaseMethods.join('|')})$`, 'i');\n\n/**\n * See https://fetch.spec.whatwg.org/#concept-method-normalize\n *\n * @param method HTTP method name\n * @returns Normalized method name\n */\nexport function normalizeHTTPMethodName(method: string) {\n  if (upperCaseMethodsRegEx.test(method)) {\n    method = method.toUpperCase();\n  }\n  return method;\n}\n\n// Status code reason phrases from RFC 7231 ยง6.1, RFC 4918, RFC 5842, RFC 6585 and RFC 7538\nconst statusTexts: Record<number, string> = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content', // RFC 7233\n  207: 'Multi-Status', // RFC 4918\n  208: 'Already Reported', // RFC 5842\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Found',\n  303: 'See Other',\n  304: 'Not Modified', // RFC 7232\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  308: 'Permanent Redirect', // RFC 7538\n  400: 'Bad Request',\n  401: 'Unauthorized', // RFC 7235\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required', // RFC 7235\n  408: 'Request Timeout',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed', // RFC 7232\n  413: 'Payload Too Large',\n  414: 'URI Too Long',\n  415: 'Unsupported Media Type',\n  416: 'Range Not Satisfiable', // RFC 7233\n  417: 'Expectation Failed',\n  422: 'Unprocessable Entity', // RFC 4918\n  423: 'Locked', // RFC 4918\n  424: 'Failed Dependency', // RFC 4918\n  426: 'Upgrade Required',\n  428: 'Precondition Required', // RFC 6585\n  429: 'Too Many Requests', // RFC 6585\n  431: 'Request Header Fields Too Large', // RFC 6585\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Timeout',\n  505: 'HTTP Version Not Supported',\n  507: 'Insufficient Storage', // RFC 4918\n  511: 'Network Authentication Required', // RFC 6585\n};\n\n/**\n * @param status HTTP status code\n * @returns Status text\n */\nexport function getStatusText(status: number) {\n  return statusTexts[status] ?? 'Unknown Status';\n}\n"],"names":[],"mappings":";;;;;;;;;AAAM,SAAU,eAAe,CAAC,IAAqD,EAAA;IACnF,IAAI,CAAC,IAAI,EAAE;AACT,QAAA,OAAO,CAAC,CAAC;AACV,KAAA;AAED,IAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,QAAA,OAAO,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAClC,KAAA;SAAM,IAAI,CAAC,OAAO,QAAQ,KAAK,WAAW,IAAI,IAAI,YAAY,QAAQ;AAClE,YAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,UAAU,CAAC,EAAE;;;;AAI/D,QAAA,OAAO,CAAC,GAAI,IAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,KAAI;AAC5D,YAAA,MAAM,SAAS,GAAI,KAAc,CAAC,IAAI,IAAI,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACxF,OAAO,GAAG,GAAG,SAAS,CAAC;SACxB,EAAE,CAAC,CAAC,CAAC;AACP,KAAA;;IAGD,OAAQ,IAAa,CAAC,IAAI,IAAK,IAAqB,CAAC,UAAU,IAAI,CAAC,CAAC;AACvE,CAAC;AAED,SAAS,mBAAmB,CAAC,MAAc,EAAA;;;IAGzC,OAAO,OAAO,IAAI,KAAK,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC3F,CAAC;AAED,MAAM,YAAY,GAAG,gCAAgC,CAAC;AAEtD;;;;AAIG;AACH,SAAS,OAAO,CAAC,KAAc,EAAA;IAC7B,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/D,CAAC;AAED;;;;AAIG;AACG,SAAU,YAAY,CAAC,UAAmB,EAAA;AAC9C,IAAA,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC;AAC7B,CAAC;AAED;;;;AAIG;AACG,SAAU,aAAa,CAAC,WAAmB,EAAA;IAC/C,OAAO,OAAO,WAAW,KAAK,QAAQ;WACjC,WAAW,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM;WAChD,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,CAAC;AAED;AACA,MAAM,gBAAgB,GAAG;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,gCAAgC;IAChC,+BAA+B;IAC/B,YAAY;IACZ,gBAAgB;IAChB,QAAQ;IACR,SAAS;IACT,MAAM;IACN,KAAK;IACL,QAAQ;IACR,MAAM;IACN,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,IAAI;IACJ,SAAS;IACT,mBAAmB;IACnB,SAAS;IACT,KAAK;CACN,CAAC;AACF,MAAM,oBAAoB,GAAG,IAAI,MAAM,CAAC,KAAK,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,kBAAA,CAAoB,EAAE,GAAG,CAAC,CAAC;AAElG;;;;;AAKG;AACG,SAAU,wBAAwB,CAAC,IAAY,EAAA;AACnD,IAAA,OAAO,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,CAAC;AAED;;;;AAIG;AACG,SAAU,eAAe,CAAC,MAAe,EAAA;AAC7C,IAAA,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;AACzB,CAAC;AAED,MAAM,6BAA6B,GAAG,0BAA0B,CAAC;AAEjE;;;;;AAKG;AACG,SAAU,wBAAwB,CAAC,MAAc,EAAA;AACrD,IAAA,OAAO,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpD,CAAC;AAED;AACA;AACa,MAAA,gBAAgB,GAAG;IAC9B,QAAQ;IACR,KAAK;IACL,MAAM;IACN,SAAS;IACT,MAAM;IACN,KAAK;EACL;AACF,MAAM,qBAAqB,GAAG,IAAI,MAAM,CAAC,KAAK,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,EAAA,CAAI,EAAE,GAAG,CAAC,CAAC;AAEnF;;;;;AAKG;AACG,SAAU,uBAAuB,CAAC,MAAc,EAAA;AACpD,IAAA,IAAI,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACtC,QAAA,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAC/B,KAAA;AACD,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;AACA,MAAM,WAAW,GAA2B;AAC1C,IAAA,GAAG,EAAE,UAAU;AACf,IAAA,GAAG,EAAE,qBAAqB;AAC1B,IAAA,GAAG,EAAE,IAAI;AACT,IAAA,GAAG,EAAE,SAAS;AACd,IAAA,GAAG,EAAE,UAAU;AACf,IAAA,GAAG,EAAE,+BAA+B;AACpC,IAAA,GAAG,EAAE,YAAY;AACjB,IAAA,GAAG,EAAE,eAAe;AACpB,IAAA,GAAG,EAAE,iBAAiB;AACtB,IAAA,GAAG,EAAE,cAAc;AACnB,IAAA,GAAG,EAAE,kBAAkB;AACvB,IAAA,GAAG,EAAE,kBAAkB;AACvB,IAAA,GAAG,EAAE,mBAAmB;AACxB,IAAA,GAAG,EAAE,OAAO;AACZ,IAAA,GAAG,EAAE,WAAW;AAChB,IAAA,GAAG,EAAE,cAAc;AACnB,IAAA,GAAG,EAAE,WAAW;AAChB,IAAA,GAAG,EAAE,oBAAoB;AACzB,IAAA,GAAG,EAAE,oBAAoB;AACzB,IAAA,GAAG,EAAE,aAAa;AAClB,IAAA,GAAG,EAAE,cAAc;AACnB,IAAA,GAAG,EAAE,kBAAkB;AACvB,IAAA,GAAG,EAAE,WAAW;AAChB,IAAA,GAAG,EAAE,WAAW;AAChB,IAAA,GAAG,EAAE,oBAAoB;AACzB,IAAA,GAAG,EAAE,gBAAgB;AACrB,IAAA,GAAG,EAAE,+BAA+B;AACpC,IAAA,GAAG,EAAE,iBAAiB;AACtB,IAAA,GAAG,EAAE,UAAU;AACf,IAAA,GAAG,EAAE,MAAM;AACX,IAAA,GAAG,EAAE,iBAAiB;AACtB,IAAA,GAAG,EAAE,qBAAqB;AAC1B,IAAA,GAAG,EAAE,mBAAmB;AACxB,IAAA,GAAG,EAAE,cAAc;AACnB,IAAA,GAAG,EAAE,wBAAwB;AAC7B,IAAA,GAAG,EAAE,uBAAuB;AAC5B,IAAA,GAAG,EAAE,oBAAoB;AACzB,IAAA,GAAG,EAAE,sBAAsB;AAC3B,IAAA,GAAG,EAAE,QAAQ;AACb,IAAA,GAAG,EAAE,mBAAmB;AACxB,IAAA,GAAG,EAAE,kBAAkB;AACvB,IAAA,GAAG,EAAE,uBAAuB;AAC5B,IAAA,GAAG,EAAE,mBAAmB;AACxB,IAAA,GAAG,EAAE,iCAAiC;AACtC,IAAA,GAAG,EAAE,uBAAuB;AAC5B,IAAA,GAAG,EAAE,iBAAiB;AACtB,IAAA,GAAG,EAAE,aAAa;AAClB,IAAA,GAAG,EAAE,qBAAqB;AAC1B,IAAA,GAAG,EAAE,iBAAiB;AACtB,IAAA,GAAG,EAAE,4BAA4B;AACjC,IAAA,GAAG,EAAE,sBAAsB;IAC3B,GAAG,EAAE,iCAAiC;CACvC,CAAC;AAEF;;;AAGG;AACG,SAAU,aAAa,CAAC,MAAc,EAAA;AAC1C,IAAA,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,gBAAgB,CAAC;AACjD;;;;;;;;;;;;"}