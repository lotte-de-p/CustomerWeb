{"version":3,"file":"XhrEventTarget.cjs","sources":["../../src/XhrEventTarget.ts"],"sourcesContent":["/**\n * Implementation of XMLHttpRequestEventTarget. A target for dispatching events.\n *\n * See https://xhr.spec.whatwg.org/#xmlhttprequesteventtarget\n */\nexport default class XhrEventTarget implements XMLHttpRequestEventTarget {\n  private _eventContext: XMLHttpRequestEventTarget;\n\n  private _listeners: Map<string, EventListenerEntry[]>;\n\n  constructor(eventContext?: XMLHttpRequestEventTarget) {\n    this._eventContext = eventContext ?? this;\n    this._listeners = new Map();\n  }\n\n  get onabort() { return this._getEventHandlerProperty('abort'); }\n\n  set onabort(value: EventHandlerProperty | null) { this._setEventHandlerProperty('abort', value); }\n\n  get onerror() { return this._getEventHandlerProperty('error'); }\n\n  set onerror(value: EventHandlerProperty | null) { this._setEventHandlerProperty('error', value); }\n\n  get onload() { return this._getEventHandlerProperty('load'); }\n\n  set onload(value: EventHandlerProperty | null) { this._setEventHandlerProperty('load', value); }\n\n  get onloadend() { return this._getEventHandlerProperty('loadend'); }\n\n  set onloadend(value: EventHandlerProperty | null) { this._setEventHandlerProperty('loadend', value); }\n\n  get onloadstart() { return this._getEventHandlerProperty('loadstart'); }\n\n  set onloadstart(value: EventHandlerProperty | null) { this._setEventHandlerProperty('loadstart', value); }\n\n  get onprogress() { return this._getEventHandlerProperty('progress'); }\n\n  set onprogress(value: EventHandlerProperty | null) { this._setEventHandlerProperty('progress', value); }\n\n  get ontimeout() { return this._getEventHandlerProperty('timeout'); }\n\n  set ontimeout(value: EventHandlerProperty | null) { this._setEventHandlerProperty('timeout', value); }\n\n  /**\n   * @returns Whether any event listener is registered\n   */\n  hasListeners() {\n    return [...this._listeners.values()].some((listeners) => listeners.length > 0);\n  }\n\n  /**\n   * Add an event listener.\n   * See https://dom.spec.whatwg.org/#dom-eventtarget-addeventlistener\n   *\n   * @param type Event type ('load', 'abort', etc)\n   * @param listener Listener callback\n   * @param options Options object or the useCapture flag\n   */\n  addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n    type: K,\n    listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener?: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    if (listener) {\n      const listenerEntry = makeListenerEntry(listener, false, options);\n      const listeners = this._listeners.get(type) ?? [];\n\n      // If eventTarget’s event listener list does not contain an event listener whose type is\n      // listener’s type, callback is listener’s callback, and capture is listener’s capture, then\n      // append listener to eventTarget’s event listener list.\n      // See https://dom.spec.whatwg.org/#add-an-event-listener\n      if (listeners.every(({ isEventHandlerProperty, listener, useCapture }) => {\n        return isEventHandlerProperty\n         || listenerEntry.listener !== listener\n         || listenerEntry.useCapture !== useCapture;\n      })) {\n        listeners.push(listenerEntry);\n        this._listeners.set(type, listeners);\n      }\n    }\n  }\n\n  /**\n   * Remove an event listener.\n   * See https://dom.spec.whatwg.org/#dom-eventtarget-removeeventlistener\n   *\n   * @param type Event type ('load', 'abort', etc)\n   * @param listener Listener callback\n   * @param options Options object or the useCapture flag\n   */\n  removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n    type: K,\n    listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener?: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    if (listener) {\n      const listeners = this._listeners.get(type);\n      if (listeners) {\n        const listenerEntry = makeListenerEntry(listener, false, options);\n        const index = listeners.findIndex(({ isEventHandlerProperty, listener, useCapture }) => {\n          return !isEventHandlerProperty\n            && listenerEntry.listener === listener\n            && listenerEntry.useCapture === useCapture;\n        });\n        if (index >= 0) {\n          listeners[index].removed = true;\n          listeners.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  /**\n   * Calls all the listeners for the event.\n   *\n   * @param event Event\n   * @returns Always true since none of the xhr event are cancelable\n   */\n  dispatchEvent(event: Event | EventMock): boolean {\n    // Only the event listeners registered at this point should be called. Storing them here avoids\n    // problems with callbacks that add or remove listeners.\n    const listeners = this._listeners.get(event.type);\n    if (listeners) {\n      [...listeners].forEach((listenerEntry) => {\n        if (!listenerEntry.removed) {\n          if (listenerEntry.once) {\n            const index = listeners.indexOf(listenerEntry);\n            if (index >= 0) {\n              listeners.splice(index, 1);\n            }\n          }\n\n          if (typeof listenerEntry.listener === 'function') {\n            listenerEntry.listener.call(this._eventContext, event as Event);\n          } else {\n            listenerEntry.listener.handleEvent(event as Event);\n          }\n        }\n      });\n    }\n\n    return true;\n  }\n\n  protected _getEventHandlerProperty(event: string) {\n    const listeners = this._listeners.get(event);\n    if (listeners) {\n      const entry = listeners.find((entry) => entry.isEventHandlerProperty);\n      if (entry) {\n        return entry.listener as EventHandlerProperty;\n      }\n    }\n    return null;\n  }\n\n  protected _setEventHandlerProperty(\n    event: string,\n    value?: EventHandlerProperty | null\n  ) {\n    const listeners = this._listeners.get(event);\n    if (listeners) {\n      const index = listeners.findIndex((entry) => entry.isEventHandlerProperty);\n      if (index >= 0) {\n        if (listeners[index].listener === value) {\n          // no change\n          return;\n        }\n\n        listeners[index].removed = true;\n        listeners.splice(index, 1);\n      }\n    }\n\n    if (value) {\n      const listenerEntry = makeListenerEntry(value as EventListener, true);\n      if (listeners) {\n        listeners.push(listenerEntry);\n      } else {\n        this._listeners.set(event, [listenerEntry]);\n      }\n    }\n  }\n}\n\n// Used to relax the dispatchEvent() interface from XMLHttpRequestEventTarget\ninterface EventMock {\n  type: string;\n}\n\ntype EventHandlerProperty = ((this: XMLHttpRequest, ev: ProgressEvent) => any);\n\ninterface EventListenerEntry {\n  listener: EventListenerOrEventListenerObject,\n  isEventHandlerProperty: boolean,\n  useCapture: boolean,\n  once: boolean,\n  removed: boolean,\n}\n\nfunction makeListenerEntry(\n  listener: EventListenerOrEventListenerObject,\n  isEventHandlerProperty: boolean,\n  options?: boolean | AddEventListenerOptions\n): EventListenerEntry {\n  const optionsIsBoolean = typeof options === 'boolean';\n  return {\n    listener,\n    isEventHandlerProperty,\n    useCapture: optionsIsBoolean ? options : !!options?.capture,\n    once: optionsIsBoolean ? false : !!options?.once,\n    removed: false,\n  };\n}\n"],"names":[],"mappings":"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"}