import MockXhr from './MockXhr';
import MockXhrServer from './MockXhrServer';
import type { UrlMatcher, RequestHandler } from './MockXhrServer';
/**
 * Create a new "local" MockXhr subclass. Using a subclass of `MockXhr` in each test case makes it
 * easier to ensure they are self-contained. For example if you set the onSend static propertiy on
 * a subclass, this will only affect that subclass and not the others created in your other test
 * cases. You therefore don't need to add cleanup code to revert the changes made to the subclass.
 *
 * @returns New MockXhr subclass
 */
export declare function newMockXhr(): typeof MockXhr;
/**
 * @param routes Routes
 * @returns new MockXhrServerserver with its own MockXhr subclass.
 */
export declare function newServer(routes?: Record<string, [UrlMatcher, RequestHandler]>): MockXhrServer;
//# sourceMappingURL=Factories.d.ts.map