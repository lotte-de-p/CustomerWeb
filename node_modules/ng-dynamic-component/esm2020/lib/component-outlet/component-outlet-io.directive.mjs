import { Directive, Input } from '@angular/core';
import { IoService } from '../io';
import * as i0 from "@angular/core";
import * as i1 from "../io";
/**
 * @public
 */
export class ComponentOutletIoDirective {
    constructor(ioService) {
        this.ioService = ioService;
    }
    ngDoCheck() {
        this.ioService.update(this.ngComponentOutletNdcDynamicInputs, this.ngComponentOutletNdcDynamicOutputs);
    }
}
/** @nocollapse */ ComponentOutletIoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.3", ngImport: i0, type: ComponentOutletIoDirective, deps: [{ token: i1.IoService }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ ComponentOutletIoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.1.3", type: ComponentOutletIoDirective, isStandalone: true, selector: "[ngComponentOutletNdcDynamicInputs],[ngComponentOutletNdcDynamicOutputs]", inputs: { ngComponentOutletNdcDynamicInputs: "ngComponentOutletNdcDynamicInputs", ngComponentOutletNdcDynamicOutputs: "ngComponentOutletNdcDynamicOutputs" }, providers: [IoService], exportAs: ["ndcDynamicIo"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.3", ngImport: i0, type: ComponentOutletIoDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 
                    // eslint-disable-next-line @angular-eslint/directive-selector
                    '[ngComponentOutletNdcDynamicInputs],[ngComponentOutletNdcDynamicOutputs]',
                    exportAs: 'ndcDynamicIo',
                    standalone: true,
                    providers: [IoService],
                }]
        }], ctorParameters: function () { return [{ type: i1.IoService }]; }, propDecorators: { ngComponentOutletNdcDynamicInputs: [{
                type: Input
            }], ngComponentOutletNdcDynamicOutputs: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LW91dGxldC1pby5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1keW5hbWljLWNvbXBvbmVudC9zcmMvbGliL2NvbXBvbmVudC1vdXRsZXQvY29tcG9uZW50LW91dGxldC1pby5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVyxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUQsT0FBTyxFQUFjLFNBQVMsRUFBZSxNQUFNLE9BQU8sQ0FBQzs7O0FBRTNEOztHQUVHO0FBU0gsTUFBTSxPQUFPLDBCQUEwQjtJQU1yQyxZQUFvQixTQUFvQjtRQUFwQixjQUFTLEdBQVQsU0FBUyxDQUFXO0lBQUcsQ0FBQztJQUU1QyxTQUFTO1FBQ1AsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQ25CLElBQUksQ0FBQyxpQ0FBaUMsRUFDdEMsSUFBSSxDQUFDLGtDQUFrQyxDQUN4QyxDQUFDO0lBQ0osQ0FBQzs7MElBYlUsMEJBQTBCOzhIQUExQiwwQkFBMEIscVJBRjFCLENBQUMsU0FBUyxDQUFDOzJGQUVYLDBCQUEwQjtrQkFSdEMsU0FBUzttQkFBQztvQkFDVCxRQUFRO29CQUNOLDhEQUE4RDtvQkFDOUQsMEVBQTBFO29CQUM1RSxRQUFRLEVBQUUsY0FBYztvQkFDeEIsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFNBQVMsRUFBRSxDQUFDLFNBQVMsQ0FBQztpQkFDdkI7Z0dBR0MsaUNBQWlDO3NCQURoQyxLQUFLO2dCQUdOLGtDQUFrQztzQkFEakMsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRG9DaGVjaywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgSW5wdXRzVHlwZSwgSW9TZXJ2aWNlLCBPdXRwdXRzVHlwZSB9IGZyb20gJy4uL2lvJztcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjpcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2RpcmVjdGl2ZS1zZWxlY3RvclxuICAgICdbbmdDb21wb25lbnRPdXRsZXROZGNEeW5hbWljSW5wdXRzXSxbbmdDb21wb25lbnRPdXRsZXROZGNEeW5hbWljT3V0cHV0c10nLFxuICBleHBvcnRBczogJ25kY0R5bmFtaWNJbycsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIHByb3ZpZGVyczogW0lvU2VydmljZV0sXG59KVxuZXhwb3J0IGNsYXNzIENvbXBvbmVudE91dGxldElvRGlyZWN0aXZlIGltcGxlbWVudHMgRG9DaGVjayB7XG4gIEBJbnB1dCgpXG4gIG5nQ29tcG9uZW50T3V0bGV0TmRjRHluYW1pY0lucHV0cz86IElucHV0c1R5cGUgfCBudWxsO1xuICBASW5wdXQoKVxuICBuZ0NvbXBvbmVudE91dGxldE5kY0R5bmFtaWNPdXRwdXRzPzogT3V0cHV0c1R5cGUgfCBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW9TZXJ2aWNlOiBJb1NlcnZpY2UpIHt9XG5cbiAgbmdEb0NoZWNrKCkge1xuICAgIHRoaXMuaW9TZXJ2aWNlLnVwZGF0ZShcbiAgICAgIHRoaXMubmdDb21wb25lbnRPdXRsZXROZGNEeW5hbWljSW5wdXRzLFxuICAgICAgdGhpcy5uZ0NvbXBvbmVudE91dGxldE5kY0R5bmFtaWNPdXRwdXRzLFxuICAgICk7XG4gIH1cbn1cbiJdfQ==