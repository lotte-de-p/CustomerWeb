"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addSvelteSchematic = exports.addSvelteGenerator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
const eslint_1 = require("@nx/eslint");
const versions_1 = require("../../../utils/versions");
const utillities_1 = require("../../../utils/utillities");
const fileutils_1 = require("../../../utils/fileutils");
const common_1 = require("@nxext/common");
const stencil_core_utils_1 = require("../../../stencil-core-utils");
const calculate_stencil_source_options_1 = require("../lib/calculate-stencil-source-options");
function prepareSvelteLibrary(host, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const { libsDir } = (0, devkit_1.getWorkspaceLayout)(host);
        const svelteProjectName = `${options.projectName}-svelte`;
        (0, devkit_1.ensurePackage)('@nxext/svelte', versions_1.nxextSvelteVersion);
        const { libraryGenerator } = yield Promise.resolve().then(() => require('@nxext/svelte'));
        const libraryTarget = yield libraryGenerator(host, {
            name: svelteProjectName,
            publishable: options.publishable,
            importPath: options.importPath,
            unitTestRunner: 'jest',
            e2eTestRunner: 'none',
            linter: eslint_1.Linter.EsLint,
            skipFormat: true,
        });
        yield (0, devkit_1.addDependenciesToPackageJson)(host, {}, {
            '@stencil/svelte-output-target': versions_1.STENCIL_OUTPUTTARGET_VERSION['svelte'],
        });
        host.write(`${libsDir}/${svelteProjectName}/src/index.ts`, `export * from './generated/components';`);
        (0, utillities_1.addToGitignore)(host, `${libsDir}/${svelteProjectName}/**/generated`);
        return libraryTarget;
    });
}
function addSvelteOutputtarget(tree, projectName, stencilProjectConfig, stencilConfigPath, stencilConfigSource, packageName) {
    const svelteProjectConfig = (0, devkit_1.readProjectConfiguration)(tree, `${projectName}-svelte`);
    const realtivePath = (0, fileutils_1.getRelativePath)((0, fileutils_1.getDistDir)(stencilProjectConfig.root), svelteProjectConfig.root);
    const changes = (0, devkit_1.applyChangesToString)(stencilConfigSource.text, [
        ...(0, common_1.addImport)(stencilConfigSource, `import { svelteOutputTarget } from '@stencil/svelte-output-target';`),
        ...(0, stencil_core_utils_1.addOutputTarget)(stencilConfigSource, `
      svelteOutputTarget({
        componentCorePackage: '${packageName}',
        proxiesFile: '${realtivePath}/src/generated/components.ts',
        includeDefineCustomElements: true,
      })
      `),
    ]);
    tree.write(stencilConfigPath, changes);
}
function addSvelteGenerator(host, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const libraryTarget = yield prepareSvelteLibrary(host, options);
        const { stencilProjectConfig, stencilConfigPath, stencilConfigSource, packageName, } = (0, calculate_stencil_source_options_1.calculateStencilSourceOptions)(host, options.projectName);
        addSvelteOutputtarget(host, options.projectName, stencilProjectConfig, stencilConfigPath, stencilConfigSource, packageName);
        return libraryTarget;
    });
}
exports.addSvelteGenerator = addSvelteGenerator;
exports.default = addSvelteGenerator;
exports.addSvelteSchematic = (0, devkit_1.convertNxGenerator)(addSvelteGenerator);
//# sourceMappingURL=generator.js.map