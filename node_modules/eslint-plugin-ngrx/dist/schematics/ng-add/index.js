"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const strip_json_comments_1 = __importDefault(require("strip-json-comments"));
function default_1(schema) {
    return (host, context) => {
        var _a, _b;
        const eslintConfigPath = '.eslintrc.json';
        const docs = 'https://github.com/timdeschryver/eslint-plugin-ngrx/#eslint-plugin-ngrx';
        const eslint = (_a = host.read(eslintConfigPath)) === null || _a === void 0 ? void 0 : _a.toString('utf-8');
        if (!eslint) {
            context.logger.warn(`
Could not find the ESLint config at \`${eslintConfigPath}\`.
The NgRx ESLint Plugin is installed but not configured.

Please see ${docs} to configure the NgRx ESLint Plugin.
`);
            return host;
        }
        try {
            const json = JSON.parse((0, strip_json_comments_1.default)(eslint));
            if (json.overrides) {
                if (!json.overrides.some((override) => {
                    var _a;
                    return (_a = override.extends) === null || _a === void 0 ? void 0 : _a.some((extend) => extend.startsWith('plugin:ngrx'));
                })) {
                    json.overrides.push(configurePlugin(schema.config));
                }
            }
            else if (!((_b = json.extends) === null || _b === void 0 ? void 0 : _b.some((extend) => extend.startsWith('plugin:ngrx')))) {
                json.overrides = [configurePlugin(schema.config)];
            }
            host.overwrite(eslintConfigPath, JSON.stringify(json, null, 2));
            context.logger.info(`
  The NgRx ESLint Plugin is installed and configured with the '${schema.config}' config.

  If you want to change the configuration, please see ${docs}.
  `);
            return host;
        }
        catch (err) {
            const detailsContent = err instanceof Error
                ? `
Details:
${err.message}
`
                : '';
            context.logger.warn(`
Something went wrong while adding the NgRx ESLint Plugin.
The NgRx ESLint Plugin is installed but not configured.

Please see ${docs} to configure the NgRx ESLint Plugin.
${detailsContent}
`);
        }
    };
    function configurePlugin(config) {
        return {
            files: ['*.ts'],
            extends: [`plugin:ngrx/${config}`],
        };
    }
}
exports.default = default_1;
