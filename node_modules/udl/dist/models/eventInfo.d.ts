export declare class EventInfo {
    private eventName;
    private eventStatus;
    private eventStatusMessage;
    private type;
    private timeStamp;
    constructor(eventInfoJson?: any);
    setEventName: (eventName: string) => void;
    getEventName: () => string;
    setEventStatus: (eventStatus: string) => void;
    getEventStatus: () => string;
    setEventStatusMessage: (eventStatusMessage: string) => void;
    getEventStatusMessage: () => string;
    setType: (eventType: string) => void;
    getType: () => string;
    setTimestamp: (eventTimestamp: string) => void;
    getTimestamp: () => string;
}
export declare class EventInfoBuilder {
    private eventInfo;
    constructor();
    withEventName(name: string): EventInfoBuilder;
    withType(type: string): EventInfoBuilder;
    withEventStatus(status: string): EventInfoBuilder;
    withEventStatusMessage(statusMessage: string): EventInfoBuilder;
    withTimestamp(timestamp: string): EventInfoBuilder;
    build(): EventInfo;
}
