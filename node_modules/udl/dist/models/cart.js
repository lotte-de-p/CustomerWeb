"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var price_1 = require("./price");
var item_1 = require("./item");
var base_1 = require("./base");
var direct_call_label_enum_1 = require("../enums/direct-call-label.enum");
var Cart = /** @class */ (function (_super) {
    __extends(Cart, _super);
    function Cart(cartJson) {
        var _this = _super.call(this, direct_call_label_enum_1.DirectCallLabelEnum.CART_VIEWED) || this;
        _this.setCartID = function (id) {
            _this.cartID = id;
        };
        _this.getCartID = function () {
            return _this.cartID;
        };
        _this.setPrice = function (price) {
            _this.price = price;
        };
        _this.getPrice = function () {
            return _this.price;
        };
        _this.addItem = function (item) {
            if (!_this.item) {
                _this.item = [];
            }
            _this.item.push(item);
        };
        _this.getItems = function () {
            return _this.item;
        };
        _this.setItems = function (items) {
            _this.item = items;
        };
        _this.filter = function (productID) {
            return _this.item ? _this.item.filter(function (item) {
                return item.getProductInfo().getProductID() === productID;
            }) : '';
        };
        if (cartJson) {
            Object.assign(_this, cartJson);
            _this.price = cartJson.price ? new price_1.Price(cartJson.price) : undefined;
            if (cartJson.item) {
                _this.setItems([]);
                cartJson.item.forEach(function (itemJson) {
                    var item = new item_1.Item(itemJson);
                    _this.addItem(item);
                });
            }
        }
        return _this;
    }
    return Cart;
}(base_1.Base));
exports.Cart = Cart;
var CartBuilder = /** @class */ (function () {
    function CartBuilder() {
        this.cart = new Cart();
    }
    CartBuilder.prototype.withCartId = function (cartid) {
        this.cart.setCartID(cartid);
        return this;
    };
    CartBuilder.prototype.withPrice = function (price) {
        this.cart.setPrice(price);
        return this;
    };
    CartBuilder.prototype.withItem = function (item) {
        this.cart.addItem(item);
        return this;
    };
    CartBuilder.prototype.withIdentifier = function (identifier) {
        this.cart.setIdentifier(identifier);
        return this;
    };
    CartBuilder.prototype.withAttribute = function (key, value) {
        this.cart.addAttribute(key, value);
        return this;
    };
    CartBuilder.prototype.withDirectCallLabel = function (directCallLabel) {
        this.cart.setDirectCallLabel(directCallLabel);
        return this;
    };
    CartBuilder.prototype.build = function () {
        return this.cart;
    };
    return CartBuilder;
}());
exports.CartBuilder = CartBuilder;
//# sourceMappingURL=cart.js.map