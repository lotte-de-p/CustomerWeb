import { Price } from './price';
import { Item } from './item';
import { Base } from './base';
import { DirectCallLabelEnum } from '../enums/direct-call-label.enum';
export declare class Cart extends Base {
    private cartID;
    private price;
    private item;
    constructor(cartJson?: any);
    setCartID: (id: string) => void;
    getCartID: () => string;
    setPrice: (price: Price) => void;
    getPrice: () => Price;
    addItem: (item: Item) => void;
    getItems: () => Item[];
    setItems: (items: any) => void;
    filter: (productID: string) => "" | Item[];
}
export declare class CartBuilder {
    private cart;
    constructor();
    withCartId(cartid: string): CartBuilder;
    withPrice(price: Price): CartBuilder;
    withItem(item: Item): CartBuilder;
    withIdentifier(identifier: string): CartBuilder;
    withAttribute(key: string, value: string | number | boolean): CartBuilder;
    withDirectCallLabel(directCallLabel: DirectCallLabelEnum): CartBuilder;
    build(): Cart;
}
