export declare class Price {
    private onetime;
    private recurring;
    private summaryPrice;
    private basePrice;
    private total;
    private discounted;
    private discountRecurring;
    constructor(priceJson?: any);
    setOnetimePrice: (onetime: number) => void;
    getOnetimePrice: () => number;
    setRecurringPrice: (recurring: number) => void;
    getRecurringPrice: () => number;
    setBasePrice: (basePrice: Price) => void;
    getBasePrice: () => Price;
    setTotalPrice: (totalPrice: Price) => void;
    getTotalPrice: () => Price;
    setDiscountedPrice: (discountedPrice: Price) => void;
    getDiscountedPrice: () => Price;
    setTotalDiscountRecurring: (discountRecurring: Price) => void;
    getTotalDiscountRecurring: () => Price;
    setSummaryPrice: (summary: number) => void;
    getSummaryPrice: () => number;
}
export declare class PriceBuilder {
    private price;
    constructor();
    withOneTimePrice(oneTimePrice: number): PriceBuilder;
    withRecurringPrice(recurringPrice: number): PriceBuilder;
    withBasePrice(basePrice: Price): PriceBuilder;
    withTotalPrice(totalPrice: Price): PriceBuilder;
    withDiscountedPrice(discountedPrice: Price): PriceBuilder;
    withTotalDiscountRecurring(discountRecurring: Price): PriceBuilder;
    withSummaryPrice(summaryPrice: number): PriceBuilder;
    build(): Price;
}
