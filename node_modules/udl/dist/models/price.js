"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Price = /** @class */ (function () {
    function Price(priceJson) {
        var _this = this;
        this.setOnetimePrice = function (onetime) {
            _this.onetime = onetime;
        };
        this.getOnetimePrice = function () {
            return _this.onetime;
        };
        this.setRecurringPrice = function (recurring) {
            _this.recurring = recurring;
        };
        this.getRecurringPrice = function () {
            return _this.recurring;
        };
        this.setBasePrice = function (basePrice) {
            _this.basePrice = basePrice;
        };
        this.getBasePrice = function () {
            return _this.basePrice;
        };
        this.setTotalPrice = function (totalPrice) {
            _this.total = totalPrice;
        };
        this.getTotalPrice = function () {
            return _this.total;
        };
        this.setDiscountedPrice = function (discountedPrice) {
            _this.discounted = discountedPrice;
        };
        this.getDiscountedPrice = function () {
            return _this.discounted;
        };
        this.setTotalDiscountRecurring = function (discountRecurring) {
            _this.discountRecurring = discountRecurring;
        };
        this.getTotalDiscountRecurring = function () {
            return _this.discountRecurring;
        };
        this.setSummaryPrice = function (summary) {
            _this.summaryPrice = summary;
        };
        this.getSummaryPrice = function () {
            return _this.summaryPrice;
        };
        if (priceJson) {
            Object.assign(this, priceJson);
            this.basePrice = priceJson.basePrice ? new Price(priceJson.basePrice) : undefined;
            this.total = priceJson.total ? new Price(priceJson.total) : undefined;
            this.discounted = priceJson.discounted ? new Price(priceJson.discounted) : undefined;
            this.discountRecurring = priceJson.discountRecurring ? new Price(priceJson.discountRecurring) : undefined;
        }
    }
    return Price;
}());
exports.Price = Price;
var PriceBuilder = /** @class */ (function () {
    function PriceBuilder() {
        this.price = new Price();
    }
    PriceBuilder.prototype.withOneTimePrice = function (oneTimePrice) {
        this.price.setOnetimePrice(oneTimePrice);
        return this;
    };
    PriceBuilder.prototype.withRecurringPrice = function (recurringPrice) {
        this.price.setRecurringPrice(recurringPrice);
        return this;
    };
    PriceBuilder.prototype.withBasePrice = function (basePrice) {
        this.price.setBasePrice(basePrice);
        return this;
    };
    PriceBuilder.prototype.withTotalPrice = function (totalPrice) {
        this.price.setTotalPrice(totalPrice);
        return this;
    };
    PriceBuilder.prototype.withDiscountedPrice = function (discountedPrice) {
        this.price.setDiscountedPrice(discountedPrice);
        return this;
    };
    PriceBuilder.prototype.withTotalDiscountRecurring = function (discountRecurring) {
        this.price.setTotalDiscountRecurring(discountRecurring);
        return this;
    };
    PriceBuilder.prototype.withSummaryPrice = function (summaryPrice) {
        this.price.setSummaryPrice(summaryPrice);
        return this;
    };
    PriceBuilder.prototype.build = function () {
        return this.price;
    };
    return PriceBuilder;
}());
exports.PriceBuilder = PriceBuilder;
//# sourceMappingURL=price.js.map