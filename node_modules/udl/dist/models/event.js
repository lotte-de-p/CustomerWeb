"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var eventInfo_1 = require("./eventInfo");
var category_1 = require("./category");
var base_1 = require("./base");
var direct_call_label_enum_1 = require("../enums/direct-call-label.enum");
var cart_1 = require("./cart");
var Event = /** @class */ (function (_super) {
    __extends(Event, _super);
    function Event(eventJson) {
        var _this = _super.call(this, direct_call_label_enum_1.DirectCallLabelEnum.EVENT_OCCURRED) || this;
        _this.setEventInfo = function (eventInfo) {
            _this.eventInfo = eventInfo;
        };
        _this.getEventInfo = function () {
            return _this.eventInfo;
        };
        _this.setCategory = function (category) {
            if (category)
                _this.category = category;
        };
        _this.getCategory = function () {
            return _this.category;
        };
        if (eventJson) {
            Object.assign(_this, eventJson);
            _this.eventInfo = eventJson.eventInfo ? new eventInfo_1.EventInfo(eventJson.eventInfo) : undefined;
            _this.category = eventJson.category ? new category_1.Category(eventJson.category) : undefined;
            Object.keys(eventJson.attributes || {}).forEach(function (attributeKey) {
                if (typeof eventJson.attributes[attributeKey] === 'object') {
                    if (eventJson.attributes[attributeKey].directCallLabel === direct_call_label_enum_1.DirectCallLabelEnum.CART_VIEWED) {
                        var enrichedCart = new cart_1.Cart(eventJson.attributes[attributeKey]);
                        _this.addAttribute(attributeKey, enrichedCart);
                    }
                }
            });
        }
        return _this;
    }
    return Event;
}(base_1.Base));
exports.Event = Event;
var EventBuilder = /** @class */ (function () {
    function EventBuilder() {
        this.event = new Event();
    }
    EventBuilder.prototype.withEventInfo = function (eventInfo) {
        this.event.setEventInfo(eventInfo);
        return this;
    };
    EventBuilder.prototype.withCategory = function (category) {
        this.event.setCategory(category);
        return this;
    };
    EventBuilder.prototype.withAttributes = function (attributes) {
        this.event.setAttributes(attributes);
        return this;
    };
    EventBuilder.prototype.withStrategy = function (strategy) {
        this.event.setStrategy(strategy);
        return this;
    };
    EventBuilder.prototype.build = function () {
        return this.event;
    };
    return EventBuilder;
}());
exports.EventBuilder = EventBuilder;
//# sourceMappingURL=event.js.map