import { User } from "./user";
import { Component } from "./component";
import { Page } from "./page";
import { Cart } from "./cart";
import { Transaction } from "./transaction";
import { Category } from "./category";
import { Event } from './event';
export declare class DataLayer {
    static instance: DataLayer;
    private version;
    private dateTimeLocal;
    private environment;
    private user;
    private component;
    private brand;
    private applicationID;
    private page;
    private cart;
    private transaction;
    private event;
    private analyticsService;
    private doNotFirePageBeacon;
    private constructor();
    static create(): DataLayer;
    static destroy(): void;
    setVersion: (version: string) => void;
    getVersion: () => string;
    setDateTimeLocal: (dateTime: string) => void;
    getDateTimeLocal: () => string;
    setEnvironment: (env: string) => void;
    getEnvironment: () => string;
    setDoNotFirePageBeacon: (doNotFirePageBeacon: boolean) => void;
    getDoNotFirePageBeacon: () => boolean;
    getPage: () => Page;
    setPage: (page: Page) => Promise<boolean>;
    getComponents: () => Component[];
    setComponents: (component: Component[]) => void;
    getEvents: () => Event[];
    getEventById: (id: string) => Event;
    addUser: (user: User) => Promise<boolean>;
    getUsers: () => User[];
    getUserById: (id: string) => User;
    getCart: () => Cart;
    setCart: (cart: Cart) => Promise<boolean>;
    getTransaction: () => Transaction;
    setTransaction: (transaction: Transaction) => Promise<boolean>;
    setBrand: (brand: string) => void;
    getBrand: () => string;
    setApplicationID: (appId: string) => void;
    getApplicationID: () => string;
    getCategory: (componentInstanceID: string) => Category;
    getComponentById: (componentInstanceId: string) => Component;
    addEvent: (event: Event) => Promise<boolean>;
    private appendEvent;
    addStepViewEvent: (event: Event) => Promise<boolean>;
    getAnalyticsPromises: () => Promise<boolean>[];
    reportParkedObjects: () => void;
    private reportParkedObject;
}
