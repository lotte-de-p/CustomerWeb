"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoggingService = /** @class */ (function () {
    function LoggingService() {
        var _this = this;
        this.perfLogEvents = [];
        this.log = function (logEvent) {
            if (_this.isLoggingEnabled) {
                var d = new Date();
                var at = d.getMinutes() + 'min:' + d.getSeconds() + 'sec:' + d.getMilliseconds() + 'ms';
                console.log(at, JSON.stringify(logEvent));
            }
        };
        this.startPerflog = function (identifier) {
            if (_this.isLoggingEnabled) {
                var perfLogEvent = _this.perfLogEvents.find(function (item) {
                    return item.identifier === identifier;
                }) || new PerfLogEvent();
                perfLogEvent.identifier = identifier;
                perfLogEvent.startTime = _this.getLoggingTime();
                _this.perfLogEvents.push(perfLogEvent);
            }
        };
        this.stopPerflog = function (identifier) {
            if (_this.isLoggingEnabled) {
                var perfLogEvent = _this.perfLogEvents.find(function (item) {
                    return item.identifier === identifier;
                });
                if (perfLogEvent) {
                    perfLogEvent.stopTime = _this.getLoggingTime();
                    var timeTake = perfLogEvent.stopTime - perfLogEvent.startTime;
                    _this.log({ msg: 'execution time taken by identifier: ' + identifier, time: timeTake + 'ms' });
                }
                else {
                    _this.log({ msg: 'execution time taken by identifier: ' + identifier, time: 'Start event not logged' });
                }
            }
        };
        this.getLoggingTime = function () {
            return Date.now();
        };
        this.isLoggingEnabled = window.sessionStorage.getItem('udl.logging') === 'enable';
    }
    return LoggingService;
}());
exports.LoggingService = LoggingService;
var PerfLogEvent = /** @class */ (function () {
    function PerfLogEvent() {
        this.startTime = 0;
    }
    return PerfLogEvent;
}());
//# sourceMappingURL=loggingService.js.map