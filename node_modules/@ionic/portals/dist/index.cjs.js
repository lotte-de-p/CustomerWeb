/*! Ionic Portals: https://ionic.io/portals - Commercial License */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@capacitor/core');

const Portals = core.registerPlugin('Portals', {
    web: () => Promise.resolve().then(function () { return web; }).then(m => new m.PortalsWeb()),
});
/**
 * Provides access to any initial state provided by the native application.
 * If the web application is running in a Portal, this will always be defined
 * with the name property.
 * */
function getInitialContext() {
    if (core.Capacitor.getPlatform() === "android") {
        //@ts-ignore
        return JSON.parse(AndroidInitialContext.initialContext());
    }
    else {
        return window.portalInitialContext;
    }
}
function subscribe(topic, callback) {
    return Portals.addListener(topic, callback);
}
function publish(message) {
    return Portals.publishNative(message);
}

class PortalsWeb extends core.WebPlugin {
    // eslint-disable-next-line
    async publishNative(_message) { }
}

var web = /*#__PURE__*/Object.freeze({
    __proto__: null,
    PortalsWeb: PortalsWeb
});

exports.getInitialContext = getInitialContext;
exports.publish = publish;
exports.subscribe = subscribe;
//# sourceMappingURL=index.cjs.js.map
