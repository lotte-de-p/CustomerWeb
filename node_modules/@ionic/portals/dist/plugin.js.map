{"version":3,"file":"plugin.js","sources":["../build/index.js","../build/web.js"],"sourcesContent":["import { Capacitor, registerPlugin } from '@capacitor/core';\nconst Portals = registerPlugin('Portals', {\n    web: () => import('./web').then(m => new m.PortalsWeb()),\n});\n/**\n * Provides access to any initial state provided by the native application.\n * If the web application is running in a Portal, this will always be defined\n * with the name property.\n * */\nexport function getInitialContext() {\n    if (Capacitor.getPlatform() === \"android\") {\n        //@ts-ignore\n        return JSON.parse(AndroidInitialContext.initialContext());\n    }\n    else {\n        return window.portalInitialContext;\n    }\n}\nexport function subscribe(topic, callback) {\n    return Portals.addListener(topic, callback);\n}\nexport function publish(message) {\n    return Portals.publishNative(message);\n}\nexport * from './definitions';\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nexport class PortalsWeb extends WebPlugin {\n    // eslint-disable-next-line\n    async publishNative(_message) { }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","Capacitor","WebPlugin"],"mappings":";;;;IACA,MAAM,OAAO,GAAGA,mBAAc,CAAC,SAAS,EAAE;IAC1C,IAAI,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;IAC5D,CAAC,CAAC,CAAC;IACH;IACA;IACA;IACA;IACA;IACO,SAAS,iBAAiB,GAAG;IACpC,IAAI,IAAIC,cAAS,CAAC,WAAW,EAAE,KAAK,SAAS,EAAE;IAC/C;IACA,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC,CAAC;IAClE,KAAK;IACL,SAAS;IACT,QAAQ,OAAO,MAAM,CAAC,oBAAoB,CAAC;IAC3C,KAAK;IACL,CAAC;IACM,SAAS,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE;IAC3C,IAAI,OAAO,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAChD,CAAC;IACM,SAAS,OAAO,CAAC,OAAO,EAAE;IACjC,IAAI,OAAO,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC1C;;ICtBO,MAAM,UAAU,SAASC,cAAS,CAAC;IAC1C;IACA,IAAI,MAAM,aAAa,CAAC,QAAQ,EAAE,GAAG;IACrC;;;;;;;;;;;;;;;;;;;"}