import type { PluginListenerHandle } from '@capacitor/core';
import type { InitialContext, PortalMessage, SubscriptionCallback } from './definitions';
/**
 * Provides access to any initial state provided by the native application.
 * If the web application is running in a Portal, this will always be defined
 * with the name property.
 * */
export declare function getInitialContext<T = unknown>(): InitialContext<T> | undefined;
export declare function subscribe<T = unknown>(topic: string, callback: SubscriptionCallback<T>): Promise<PluginListenerHandle>;
export declare function publish<TMessage extends PortalMessage>(message: TMessage): Promise<void>;
export * from './definitions';
